-{%- from "systemd/networkd/map.jinja" import networkd with context -%}
-{% from "systemd/macros.jinja" import files_switch with context -%}
BREAKS HERE
-    - backup: {{ postgres.config_backup }}
-postgresql-pg_hba-backup:
-  file.copy:
-    - name: {{ pg_hba_path ~ postgres.config_backup }}
-    - source: {{ pg_hba_path }}
-    - force: True
-    - user: {{ postgres.user }}
-    - group: {{ postgres.group }}
-    - mode: 600
-    - onlyif: test -f {{ pg_hba_path }}
-    - prereq:
-      - file: postgresql-pg_hba
-
BREAKS HERE
-  - clean_file: {{ repo.clean|default(True) }}
-  - clean_file: {{ repo.get('clean_file', False) }}
-  - refresh_db: {{ repo.get('refresh_db', True) }}
-    # FIXME remove this usless part
-    - pkg: linux_repo_prereq_pkgs
-            {%- if repo.get('proxy', {}).get('enabled', False) %}
-            {%- endif %}
-            {%- if system.proxy.get('pkg', {}).get('enabled', False) %}
-            {%- endif %}
-            {%- if system.purge_repos|default(False) %}
-      {%- endif %} {# 1 #}
-
-  - require:
-    - pkg: linux_repo_prereq_pkgs
-      {%- endif %}
-
-
-
-    - require:
-      - pkg: linux_repo_prereq_pkgs
-refresh_default_repo:
-  module.wait:
-    - name: pkg.refresh_db
-    - watch:
-      - file: default_repo_list
BREAKS HERE
-{%- if host.enabled %}
BREAKS HERE
-    - name: /usr/local/bin/lego -a --email="infrastructure-staff@python.org" --domains="{{ grains['fqdn'] }}" {%- for domain in pillar['bugs']['subject_alternative_names']  %} --domains {{ domain }}{%- endfor %} --webroot /etc/lego --path /etc/lego --key-type ec256  renew --days 30 && /usr/sbin/service nginx reload
BREAKS HERE
-/tmp/{{ graphite.host }}:
-  file.touch
-
BREAKS HERE
-    - password: {{ user['password'] }}
BREAKS HERE
-{%- if grains['os'].endswith('SUSE') and grains['osrelease'].startswith('15') %}
BREAKS HERE
-{# key_url fetch by curl when salt <2017.7, higher version of salt has fixed bug for using a proxy_host/port specified at minion.conf #}
-{#
-   NOTE: curl/cmd.run usage to fetch gpg key has limited functionality behind proxy. Environments with salt >= 2017.7 shoul use
-         key_url specified at pkgrepo.manage state (which uses properly configured http_host at minion.conf). Older versions of
-         salt require to have proxy set at ENV and curl way to fetch gpg key here can have a sense for backward compatibility.
-#}
-{%- if grains['saltversioninfo'] < [2017, 7] %}
-{%- elif repo.key_url|default(False) and not repo.key_url.startswith('salt://') %}
-{%- endif %} {# key_url fetch by curl when salt <2017.7 #}
-  {%- if repo.key_url is defined and grains['saltversioninfo'] >= [2017, 7] %}
-  - key_url: {{ repo.key_url }}
-  {%- endif %}
BREAKS HERE
-      - pkg: postgresql_packages
BREAKS HERE
-
-compile_assets_for_edx:
-  cmd.run:
-    - name: /edx/bin/edxapp-update-assets
-    - onchanges:
-        - git: install_edxapp_theme
-    - require:
-        - cmd: run_ansible
BREAKS HERE
-    - source: salt://edx/files/nginx_satic_assets.j2
-  file.absent:
-    - name: /edx/var/edxapp/course_static/
-    - group: edxapp
BREAKS HERE
-
-      - pkg: {{ pillar['pkgs']['nrpe'] }}
-
BREAKS HERE
-{% set test_transport =  pillar.get('test_transport', 'zeromq') %}
BREAKS HERE
-{% if salt_settings.install_packages %}
-{% endif %}
BREAKS HERE
-  
-    - key_url: http://www.rabbitmq.com/rabbitmq-signing-key-public.asc
BREAKS HERE
-      - pkg: python-headers
BREAKS HERE
-    - requirements: /edx/app/xqwatcher/data/{{ course.QUEUE_CONFIG.HANDLERS[0].name }}-requirements.txt
-    - bin_env: /edx/app/xqwatcher/venvs/{{ course.QUEUE_CONFIG.HANDLERS[0].name }}
BREAKS HERE
-linux_sysfs_write_{{ name }}_{{ key }}:
BREAKS HERE
-    - name: {{ map.nagios_config_dir }}/nagios.cfg
-    - name: {{ map.nagios_config_dir }}/cgi.cfg
BREAKS HERE
-    - name: {{ map.nagios_server_log }}
BREAKS HERE
-    - dir_mode: 775
BREAKS HERE
-{% from "nginx/map.jinja" import nginx as nginx_map with context %}
-  - nginx.common
-{% if salt['pillar.get']('nginx:use_upstart', nginx_map['use_upstart']) %}
-  - nginx.upstart
-{% elif salt['pillar.get']('nginx:use_sysvinit', nginx_map['use_sysvinit']) %}
-  - nginx.sysvinit
-{% endif %}
-{% if pillar.get('nginx', {}).get('user_auth_enabled', true) %}
-  - nginx.users
-{% endif %}
-{% if pillar.get('nginx', {}).get('install_from_source', false) %}
-  - nginx.source
-{% else %}
-  - nginx.package
-{% endif -%}
BREAKS HERE
-jenkins_responding:
-  cmd.wait:
-    - name: "until {{ jenkins_cli('who-am-i') }}; do sleep 1; done"
-    - timeout: {{ timeout }}
-    - watch:
-      - cmd: jenkins_cli_jar
-
-      - cmd: jenkins_responding
-      - cmd: jenkins_responding
BREAKS HERE
-  - python.setuptools
BREAKS HERE
-  {% if grains['cpuarch'].lower() == 'x86' %}
BREAKS HERE
-      dir: {{'/Applications/' ~ data.app ~ '.app' if "isapp" in data and data.isapp else dl.prefix ~ '/' ~ archivename ~ '/bin'}}
BREAKS HERE
-    - name: /etc/salt/minion.d/_defaults.conf
BREAKS HERE
-    - require:
BREAKS HERE
-  - k8s-worker/cri/{{ criProvider }}
-  - k8s-worker/cni
-    - source: salt://k8s-worker/kubeconfig
-    - source: salt://k8s-worker/kubelet.service
-    - source: salt://k8s-worker/kube-proxy.service
BREAKS HERE
-debug_repo_name:
-    cmd.run:
-        - name: "echo 'major_version {{ elasticsearch.major_version }} - repo_url: {{ repo_url }}'"
-
BREAKS HERE
-    - unless: 'test ! -e /home/{{gitlab.runner.username}}/config.yml'
-    - group: "wheel" 
BREAKS HERE
-{% if 'devstack' not in salt.grains.get('roles') %}
BREAKS HERE
-# See https://github.com/git-lfs/git-lfs/wiki/Installation, this fails to install the key
-#  pkgrepo.managed:
-#    - name: deb https://packagecloud.io/github/git-lfs/ubuntu/ xenial main
BREAKS HERE
-{% if salt['pillar.get']('network:interfaces') is defined %}
BREAKS HERE
-    - name: sshpas
BREAKS HERE
-{% from "salt/package-map.jinja" import pkgs with context %}
BREAKS HERE
-    - python-novaclient
-    - python-novaclient
BREAKS HERE
-  {%- if grains['os'] == 'openSUSE' %}
-      {%- if grains['os'] == 'openSUSE' %}
-      {%- if grains['os'] == 'openSUSE' %}
-      {%- if (grains['os'] not in ['Debian', 'Ubuntu', 'openSUSE'] and not grains['osrelease'].startswith('5.')) or (grains['os'] == 'Ubuntu' and grains['osrelease'].startswith('14.')) %}
BREAKS HERE
-    - name: zypper --non-interactive addrepo --refresh http://download.opensuse.org/repositories/devel:/languages:/nodejs/openSUSE_13.1/devel:languages:nodejs.repo
BREAKS HERE
-    - source: {{ files_switch('systemd/networkd', ['/network']) }}
BREAKS HERE
-  service:
-    - running
-      - service: {{ salt_settings.syndic_service }}
-      - file: {{ salt_settings.config_path }}/master
BREAKS HERE
-      - file: salt-minion-conf
BREAKS HERE
-    - mode: 600
BREAKS HERE
-    - owner: root
BREAKS HERE
-    - defaults:
-        smtpd_banner: {{ salt['pillar.get']('postfix:smtpd_banner', '$myhostname ESMTP $mail_name' )}}
-        biff: {{ salt['pillar.get']('postfix:biff', "'no'" )}}
-
-        append_dot_mydomain: {{ salt['pillar.get']('postfix:append_dot_mydomain', "'no'" )}}
-
-        readme_directory: {{ salt['pillar.get']('postfix:readme_directory', "'no'" )}}
-
-        smtpd_tls_cert_file: {{ salt['pillar.get']('postfix:smtpd_tls_cert_file', '/etc/ssl/certs/ssl-cert-snakeoil.pem' )}}
-        smtpd_tls_key_file: {{ salt['pillar.get']('postfix:smtpd_tls_key_file', '/etc/ssl/private/ssl-cert-snakeoil.key' )}}
-        smtpd_use_tls: {{ salt['pillar.get']('postfix:smtpd_use_tls', "'yes'" )}}
-        smtpd_tls_session_cache_database: {{ salt['pillar.get']('postfix:smtpd_tls_session_cache_database', 'btree:${data_directory}/smtpd_scache' )}}
-        smtp_tls_session_cache_database: {{ salt['pillar.get']('postfix:smtp_tls_session_cache_database', 'btree:${data_directory}/smtp_scache' )}}
-
-        myhostname: {{ salt['pillar.get']('postfix:myhostname', grains['fqdn'] )}}
-        alias_maps: {{ salt['pillar.get']('postfix:alias_maps', 'hash:/etc/aliases' )}}
-        alias_database: {{ salt['pillar.get']('postfix:alias_database', 'hash:/etc/aliases' )}}
-        mydestination: {{ salt['pillar.get']('postfix:mydestination', grains['fqdn'] + ', localhost.localdomain, ' + grains['domain'] )}}
-        relayhost: {{ salt['pillar.get']('postfix:relayhost', '' )}}
-        mynetworks: {{ salt['pillar.get']('postfix:mynetworks', '127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128' )}}
-        mailbox_size_limit: {{ salt['pillar.get']('postfix:mailbox_size_limit', '0' )}}
-        recipient_delimiter: {{ salt['pillar.get']('postfix:recipient_delimiter', '+' )}}
-        inet_interfaces: {{ salt['pillar.get']('postfix:inet_interfaces', 'all' )}}
BREAKS HERE
-    - name: wget 'https://bootstrap.pypa.io/get-pip.py' && {{ python }} get-pip.py
-    - name: curl -L 'https://bootstrap.pypa.io/get-pip.py' | {{ python }}
BREAKS HERE
-  {%- if grains['os'] == 'openSUSE' %}
-      {%- if grains['os'] == 'openSUSE' %}
-      {%- if grains['os'] == 'openSUSE' %}
-      {%- if (grains['os'] not in ['Debian', 'Ubuntu', 'openSUSE'] and not grains['osrelease'].startswith('5.')) or (grains['os'] == 'Ubuntu' and grains['osrelease'].startswith('14.')) %}
BREAKS HERE
-{%- from "systemd/map.jinja" import systemd with context -%}
-  {% if resolved.pkg %}
-  {% endif %}
BREAKS HERE
-    - mode: 600
BREAKS HERE
-{%- endif %}
BREAKS HERE
-{% endif %-}
BREAKS HERE
-      - pkg: mysqld
-mysqld:
-      - pkg: mysqld
BREAKS HERE
-    - require: rpm-forge
-    - require: rpm-key
BREAKS HERE
-    - source: salt://nfs/files/exports
BREAKS HERE
-  {%- for key, value in sysfs.items() %}
BREAKS HERE
-    - onchange:
BREAKS HERE
-    domain: local
-    hostname: system.pillar.local
BREAKS HERE
-{% set otp = salt['random.get_str'](20) %}
-{%- endif %}
-
-{%- if client.get('enabled', False) %}
-freeipa_client_pkgs:
-  pkg.installed:
-    - names: {{ client.pkgs }}
BREAKS HERE
-{% for nfsservid, args in salt['pillar.get']('nfs', {}).items() %}
-{% if salt['grains.get']('host') == nfsservid %}
-
-nfs_utils:
-  pkg.installed:
-    - name: {{ pillar['pkgs']['nfs_utils'] }}
-    - require:
-      - sls: repository.client
-
-/etc/exports:
-  file:
-    - managed
-    - source: salt://nfs/exports.jinja
-    - template: jinja
-
-rpcbind:
-  service:
-    - name: {{ pillar['services']['rpcbind'] }}
-    - running
-    - enable: True
-    - require:
-      - pkg: {{ pillar['pkgs']['nfs_utils'] }}
-
-nfs_server:
-  service:
-    - name: {{ pillar['services']['nfs_server'] }}
-    - running
-    - enable: True
-    - watch:
-      - file: /etc/exports
-    - require:
-      - pkg: {{ pillar['pkgs']['nfs_utils'] }}
-      - file: /etc/exports
-      - service: rpcbind
-
-{% endif %}
-{% endfor %}
-
BREAKS HERE
-      - rpm-forge
-      - rpm-key
BREAKS HERE
-# Set mailname for xxx.paderborn.freifunk.net (FIXME)
-    - contents: "{{ grains.nodename }}.paderborn.freifunk.net"
BREAKS HERE
-    - keyid: 2A194991
BREAKS HERE
-{% if suse %} 
BREAKS HERE
-    - creates: /var/lib/mysql/mysql
BREAKS HERE
-    - source: salt://{{ tpldir }}/templates/limit.maxfiles.plist
BREAKS HERE
-  pkgrepo.managed:
-    - name: deb https://packagecloud.io/github/git-lfs/ubuntu/ zesty main
BREAKS HERE
-  - postgresql
BREAKS HERE
-{% set node_config = salt['pillar.get']('nodes:' ~ grains['id'], {}) %}
-{% set sites_config = salt['pillar.get']('sites', {}) %}
-{% set ifaces = salt['ffho_net.get_interface_config'](node_config, sites_config) %}
-{% if 'vrf_external' in ifaces %}
-
-/usr/local/sbin/ff_fix_default_route:
-  file.absent
-
-/etc/cron.d/ff_fix_default_route:
BREAKS HERE
-  pkg.removed:
BREAKS HERE
-      - cmd: chown-hadoop-home
BREAKS HERE
-   - name: /etc/apt/sources.list.d/           
-{%- if repo.get('default', False) %}
-
-{%- do default_repos.update({name: repo}) %}
-
-{%- if repo.get('key') %}
-  cmd.wait:
-    - name: "echo -e '{{ repo.key|replace('\n', '\\n') }}' | apt-key add -"
-    - watch:
-      - file: default_repo_list
-  cmd.wait:
-    - watch:
-      - file: default_repo_list
-{%- endif %}
-{%- else %}
-{%- if repo.get('key') %}
-
-linux_repo_{{ name }}_key:
-  cmd.run:
-    - name: "echo -e '{{ repo.key|replace('\n', '\\n') }}' | apt-key add -"
-    - unless: "apt-key finger --with-colons | grep -qF $(echo -e '{{ repo.key|replace('\n', '\\n') }}' | gpg --with-fingerprint --with-colons | grep -E '^fpr')"
-    - require_in:
-      - pkgrepo: linux_repo_{{ name }}
-
-{%- elif repo.key_url|default(False) %}
-
-linux_repo_{{ name }}_key:
-  cmd.run:
-    - name: "curl -sL {{ repo.key_url }} | apt-key add -"
-    - unless: "apt-key finger --with-colons | grep -qF $(curl -sL {{ repo.key_url }} | gpg --with-fingerprint --with-colons | grep -E '^fpr')"
-    - require_in:
-      - pkgrepo: linux_repo_{{ name }}
-
-{%- endif %}
-
-{%- endif %}
BREAKS HERE
-python-pip:
-  pkg.installed
-
BREAKS HERE
-{% set used_polkit = False %}
-{%- set used_polkit = True %}
BREAKS HERE
-    {% if pkg %}
-    {% if pkg.version -%}- name: lxc-docker-{{ pkg.version }}{% endif %}
-    - sig: pkg.process_signature
BREAKS HERE
-    - source: rpmforge.repo
BREAKS HERE
-{% set config = pillar["pycon-secrets"] %}
BREAKS HERE
-                              lookup='networkd'
BREAKS HERE
-      - cmd.run: unpack-hadoop-dist
-      - cmd.run: unpack-hadoop-dist
-      - file.directory: {{ hadoop['real_home'] }}
-      - file.directory: /etc/hadoop
-      - file.directory: {{ hadoop['real_config'] }}
-      - alternatives.install: hadoop-conf-link
BREAKS HERE
-    - name: curl -L 'https://bootstrap.pypa.io/get-pip.py' -o get-pip.py && python2 get-pip.py }} -U pip
BREAKS HERE
-    - unless: |
-            apt-key finger --with-colons | grep -qF $(echo "{{ repo.key| indent(12) }}" | gpg --with-fingerprint --with-colons | grep -E '^fpr')
-{%- elif repo.key_url|default(False) %}
-    - unless: "apt-key finger --with-colons | grep -qF $(curl -sL {{ repo.key_url }} | gpg --with-fingerprint --with-colons | grep -E '^fpr')"
BREAKS HERE
-{%- set major_version = salt['pillar.get']('elasticsearch:major_version', 2) %}
-
-{% from "elasticsearch/map.jinja" import elasticsearch with context %}
-    - name: {{ elasticsearch.pkg }}
-    - version: {{ major_version }}.*
BREAKS HERE
-    - bin_env: {{ salt['config.get']('virtualenv_path', '') }}
-    - cwd: {{ salt['config.get']('pip_cwd', '') }}
BREAKS HERE
-  {%- if ':' in file_path %}
BREAKS HERE
-    - name: 'curl -X PURGE https://bootstrap.pypa.io/3.2/get-pip.py'
-    - name: 'curl -X PURGE https://bootstrap.pypa.io/3.2/get-pip.py'
BREAKS HERE
-    - name: /etc/systemd/network
-    - name: systemd-networkd
BREAKS HERE
-              'edx-{}'.format(VPC_RESOURCE_SUFFIX), vpc_name=VPC_NAME) }}
-              'salt_master-{}'.format(VPC_RESOURCE_SUFFIX), vpc_name=VPC_NAME) }}
-              'consul-agent-{}'.format(VPC_RESOURCE_SUFFIX), vpc_name=VPC_NAME) }}
-              'edx-worker-{}'.format(VPC_RESOURCE_SUFFIX), vpc_name=VPC_NAME) }}
-              'salt_master-{}'.format(VPC_RESOURCE_SUFFIX), vpc_name=VPC_NAME) }}
-              'consul-agent-{}'.format(VPC_RESOURCE_SUFFIX), vpc_name=VPC_NAME) }}
BREAKS HERE
-{% set git = pillar.get('git', {}) -%}
-{% set version = git.get('version', '1.8.4.2') -%}
-{% set checksum = git.get('checksum', 'sha1=f2e9317703553b4215700605c15d0f3a30623a9d') -%}
-{% set source = git.get('source_root', '/usr/local/src') -%}
-
-{% set git_package = source + '/git-' + version + '.tar.gz' -%}
-      - names:
-        - libcurl4-openssl-dev 
-        - libexpat1-dev 
-        - gettext 
-        - libz-dev 
-        - libssl-dev
-        - build-essential
-    - source: https://git-core.googlecode.com/files/git-{{ version }}.tar.gz
-    - source_hash: {{ checksum }}
-    - cwd: {{ source }}
-    - name: git
-    - cwd: {{ source + '/git-' + version }}
-    - name: make prefix=/usr/local all && make prefix=/usr/local install
BREAKS HERE
-{{ name }}_{{ group }}_group:
-{{ name }}_user:
-user_keydir_{{ name }}:
-user_{{ name }}_private_key:
-      - user: {{ name }}_user
-      - group: {{ name }}_{{ group }}_group
-user_{{ name }}_public_key:
-      - user: {{ name }}_user
-      - group: {{ name }}_{{ group }}_group
-{{ home }}/.ssh/authorized_keys:
-ssh_auth_{{ name }}_{{ loop.index0 }}:
-        - file: {{ name }}_user
-        - user: {{ name }}_user
-ssh_keys_files_{{ name }}_{{ key_name }}_pub:
-ssh_keys_files_{{ name }}_{{ key_name }}_priv:
-ssh_auth_source_{{ name }}_{{ loop.index0 }}:
-        - file: {{ name }}_user
-        - user: {{ name }}_user
-ssh_auth_delete_{{ name }}_{{ loop.index0 }}:
-        - file: {{ name }}_user
-        - user: {{ name }}_user
-sudoer-{{ name }}:
-      - file: {{ users.sudoers_dir }}/{{ name }}
-      - file: {{ users.sudoers_dir }}/{{ name }}
-{{ users.sudoers_dir }}/{{ name }}:
-      - file: sudoer-defaults
-      - file: sudoer-{{ name }}
-{{ users.sudoers_dir }}/{{ name }}:
-googleauth-{{ svc }}-{{ name }}:
-      - pkg: googleauth-package
-{{ name }}:
-  user.absent
-{{ users.sudoers_dir }}/{{ name }}:
-{{ user }}:
-{{ users.sudoers_dir }}/{{ user }}:
-{{ group }}:
-  group.absent
BREAKS HERE
-    - epel
-    - mysql
-    pkg:
-        - installed
-        - repo: epel-testing
-    service
-        - running
-        - enable: True
-        - names:
-            - mysqld
-            - qpidd
-            - libvirtd
-            - messagebus
-    cmd:
-        - run
-        - name: openstack-db --init --service nova --rootpw ''
-        - unless: echo '' | mysql nova
-        - require:
-            - pkg: openstack-nova
-            - service: mysqld
-    service:
-        - running
-        - enable: True
-        - names:
-            - openstack-nova-api
-            - openstack-nova-objectstore
-            - openstack-nova-compute
-            - openstack-nova-network
-            - openstack-nova-volume
-            - openstack-nova-scheduler
-            - openstack-nova-cert
-        - watch:
-            - cmd: nova-db-init
-            - cmd: keystone-db-init
-            - service: openstack-glance-api
-    file:
-        - recurse
-        - source: salt://openstack/nova
-        - require:
-            - pkg.installed: openstack-nova
-        - watch_in:
-            - service: nova-services
BREAKS HERE
-    - name: "deb [arch=amd64] deb https://deb.nodesource.com/iojs_3.x {{ grains['oscodename'] }} main"
-    - file: /etc/apt/sources.list.d/nodesource.list.list
BREAKS HERE
-                        'systemd:tofs:files:networkd',
BREAKS HERE
-- linux.system.package
-    - pkg: linux_packages
BREAKS HERE
-    - name: /etc/default/docker
BREAKS HERE
-{{ zip_file }}:
-    - require_in:
-      - download-jce-archive
-      - archive: unpack-jdk-archive
BREAKS HERE
-  rabbitmq_vhost.absent:
-    - name: /
-      - pkg: rabbitmq-server
BREAKS HERE
-      pkg: node
BREAKS HERE
-     - pkg: python-requests
BREAKS HERE
-/usr/local/bin/start-conference.sh:
-    - source: salt://service/freeswitch/verto-communicator/start-conference.sh.jinja
-/usr/local/bin/rebuild-conference.sh:
-    - source: salt://service/freeswitch/verto-communicator/rebuild-conference.sh.jinja
BREAKS HERE
-{% elif os_family == 'RedHat' or 'Suse' %}
-{% endif %}
BREAKS HERE
-    - pkgs:
BREAKS HERE
-{% from tpldir + "/map.jinja" import postgres with context %}
BREAKS HERE
-  {%- if grains['os'] == 'MacOS' %}
-  {%- endif %}
BREAKS HERE
-    - creates: /etc/ssl/dhparam
-  file.absent
BREAKS HERE
-graphite_supervisord_conf:
-graphite_supervisor_init:
-{%- if grains['os_family'] == 'Debian' %}
-    - name: supervisor
-{%- elif grains['os_family'] == 'RedHat' %}
-    - name: supervisord
-{%- endif %}
BREAKS HERE
-  - repos
-
-ses5_pool_repo:
-  file.managed:
-    - name: /etc/zypp/repos.d/SES-5-x86_64-pool.repo
-    - source: salt://repos/repos.d/SES-5-x86_64-pool.repo
-  
-
-ses5_update_repo:
-  file.managed:
-    - name: /etc/zypp/repos.d/SES-5-x86_64-Update.repo
-    - source: salt://repos/repos.d/SES-5-x86_64-Update.repo
-
BREAKS HERE
-      {%- if grains['os'] != 'MacOS' %}
BREAKS HERE
-  {%- if os_grain not in ('Windows','MacOS') %}
BREAKS HERE
-    - source: salt://docs/config/pydotorg.logrotate
BREAKS HERE
-  {%- if grains.get('kernel') == 'Linux %}
BREAKS HERE
-  pkg:
-    - uptodate
BREAKS HERE
-  pkg.install:
BREAKS HERE
-    - name: /srv/pillar/ceph/deepsea_minions.sls,
BREAKS HERE
-      - pkg: patch
-      {#-
-      {%- if grains['os_family'] not in ('FreeBSD',) %}
-      - pkg: subversion
-      {%- endif %}
-      #}
BREAKS HERE
-    - name: /Library/LaunchAgents/{{ postgres.service }}.plist
-    - source: /usr/local/opt/postgres/{{ postgres.service }}.plist
-    - name: {{ postgres.service }}
-    - m_name: {{ postgres.service }}
BREAKS HERE
-    - source: salt://postfix/aliases
BREAKS HERE
-{% if os_family == 'RedHat' or 'Suse' and mysql.version >= 5.7 %}
-{% if os_family == 'RedHat' or 'Suse' and mysql.version >= 5.7 %}
BREAKS HERE
-    {% if grains['os_family'] in ['RedHat', 'Debian'] %}
-    - name: salt-master
-    {% else %}
-    - name: salt
-    {% endif %}
BREAKS HERE
-        - humanname: "Elastic repository for " ~ {{ version }} ~ ".x packages"
BREAKS HERE
-  - text:
-    {% for rule in user.get('sudo_rules', []) %}
-    - {{ rule }}
-    {% endfor %}
-  - require:
-    - file: sudoer-defaults
-    - file: sudoer-{{ name }}
BREAKS HERE
-    {%- if salt['config.get']('virtualenv_path', None)  %}
-    - bin_env: {{ salt['config.get']('virtualenv_path') }}
-    {%- endif %}
BREAKS HERE
-  {%- set policy_jar = salt['file.join'](java.jre_lib_sec, 'US_export_policy.jar') %}
-  {%- set policy_jar_bak = salt['file.join'](java.jre_lib_sec, 'US_export_policy.jar.nonjce') %}
-        test ! -f {{ policy_jar }} ||
-        test ! -f {{ policy_jar_bak }}
-    - name: mv US_export_policy.jar US_export_policy.jar.nonjce; mv local_policy.jar local_policy.jar.nonjce;
-    - cwd: {{ java.jre_lib_sec }}
-    - creates: {{ policy_jar_bak }}
-    - onlyif: test -d {{ java.jre_lib_sec }}
-    - creates: {{ policy_jar }}
BREAKS HERE
-# Create systemd start link
-  service.running:
-    - reload: False
BREAKS HERE
-{%- set criProvider = pillar['kubernetes']['runtime']['provider'] -%}
BREAKS HERE
-{%- macro postmap_file(filename, mode=644) %}
-{%- set file_path = '/etc/postfix/' ~ filename %}
-postmap_{{ filename }}:
-  file.managed:
-    - name: {{ file_path }}
-    - source: salt://postfix/{{ filename }}
-    - user: root
-    - group: root
-    - mode: {{ mode }}
-    - template: jinja
-    - require:
-      - pkg: postfix
-  cmd.wait:
-    - name: /usr/sbin/postmap {{ file_path }}
-    - cwd: /
-    - watch:
-      - file: {{ file_path }}
-{%- endmacro %}
-
-# manage /etc/postfix/virtual if data found in pillar
-{% if 'virtual' in pillar.get('postfix', '') %}
-{{ postmap_file('virtual') }}
-{% endif %}
-
-# manage /etc/postfix/relay_domains if data found in pillar
-{% if 'relay_domains' in pillar.get('postfix', '') %}
-{{ postmap_file('relay_domains') }}
-{% endif %}
-
-# manage /etc/postfix/sasl_passwd if data found in pillar
-{% if 'sasl_passwd' in pillar.get('postfix', '') %}
-{{ postmap_file('sasl_passwd', 600) }}
-{% endif %}
-
-# manage /etc/postfix/sender_canonical if data found in pillar
-{% if 'sender_canonical' in pillar.get('postfix', '') %}
-{{ postmap_file('sender_canonical') }}
-{% endif %}
BREAKS HERE
-    - name: '{{ salt_settings.config_path }}\salt-call.bat --local service.restart {{ salt_settings.minion_service }}'
-    - bg: True
BREAKS HERE
-{% from 'nginx/map.jinja' import nginx, sls_block with context %}
-  {% if nginx.snippets is defined %}
-  {% endif %}
-        {% if nginx.install_from_source %}
-        {% else %}
-        {% endif %}
BREAKS HERE
-{%- if used_sudo or used_googleauth or used_user_files %}
-{%- endif %}
BREAKS HERE
-  {% set epel_release = salt['pillar.get']('epel:release', false) %}
-# A lookup table for EPEL GPG keys & RPM URLs for various RedHat releases
-{% if ( grains['saltversion'] >= '2017.7.0' and grains['osmajorrelease'] == 5 ) or ( grains['saltversion'] < '2017.7.0' and grains['osmajorrelease'][0] == '5' ) %}
-  {% set pkg = {
-    'key': 'https://fedoraproject.org/static/A4D647E9.txt',
-    'key_hash': 'md5=a1d12cd9628338ddb12e9561f9ac1d6a',
-    'rpm': 'http://download.fedoraproject.org/pub/archive/epel/5/i386/epel-release-' ~ epel_release|default('5-4', true) ~ '.noarch.rpm',
-  } %}
-{% elif ( grains['saltversion'] >= '2017.7.0' and grains['osmajorrelease'] == 6 ) or ( grains['saltversion'] < '2017.7.0' and grains['osmajorrelease'][0] == '6' ) %}
-  {% set pkg = {
-    'key': 'https://fedoraproject.org/static/0608B895.txt',
-    'key_hash': 'md5=eb8749ea67992fd622176442c986b788',
-    'rpm': 'http://download.fedoraproject.org/pub/epel/6/i386/epel-release-' ~ epel_release|default('6-8', true) ~ '.noarch.rpm',
-  } %}
-{% elif ( grains['saltversion'] >= '2017.7.0' and grains['osmajorrelease'] == 7 ) or ( grains['saltversion'] < '2017.7.0' and grains['osmajorrelease'][0] == '7' ) %}
-  {% set pkg = {
-    'key': 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7',
-    'key_hash': 'md5=58fa8ae27c89f37b08429f04fd4a88cc',
-    'rpm': 'http://download.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-' ~ epel_release|default('7-11', true) ~ '.noarch.rpm',
-  } %}
-{% elif grains['os'] == 'Amazon' and ( ( grains['saltversion'] >= '2017.7.0' and grains['osmajorrelease'] == 2014 ) or ( grains['saltversion'] < '2017.7.0' and grains['osmajorrelease'] == '2014' ) ) %}
-  {% set pkg = {
-    'key': 'https://fedoraproject.org/static/0608B895.txt',
-    'key_hash': 'md5=eb8749ea67992fd622176442c986b788',
-    'rpm': 'http://download.fedoraproject.org/pub/epel/6/i386/epel-release-' ~ epel_release|default('6-8', true) ~ '.noarch.rpm',
-  } %}
-{% elif grains['os'] == 'Amazon' and ( ( grains['saltversion'] >= '2017.7.0' and grains['osmajorrelease'] == 2015 ) or ( grains['saltversion'] < '2017.7.0' and grains['osmajorrelease'] == '2015' ) ) %}
-  {% set pkg = {
-    'key': 'https://fedoraproject.org/static/0608B895.txt',
-    'key_hash': 'md5=eb8749ea67992fd622176442c986b788',
-    'rpm': 'http://download.fedoraproject.org/pub/epel/6/i386/epel-release-' ~ epel_release|default('6-8', true) ~ '.noarch.rpm',
-  } %}
-{% endif %}
-    - name: /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL
-    - source: {{ salt['pillar.get']('epel:pubkey', pkg.key) }}
-    - source_hash:  {{ salt['pillar.get']('epel:pubkey_hash', pkg.key_hash) }}
-      - epel-release: {{ salt['pillar.get']('epel:rpm', pkg.rpm) }}
-    - pattern: '^gpgkey=.*'
-    - repl: 'gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL'
-    - pattern: 'gpgcheck=.*'
-{% if salt['pillar.get']('epel:disabled', False) %}
-    - pattern: '^enabled=[0,1]'
-    - pattern: '^enabled=[0,1]'
-
-{% if salt['pillar.get']('epel:testing', False) %}
-enable_epel_testing:
-  file.replace:
-    - name: /etc/yum.repos.d/epel-testing.repo
-    - pattern: '^enabled=[0,1]'
-    - repl: 'enabled=1'
-{% else %}
-disable_epel_testing:
-  file.replace:
-    - name: /etc/yum.repos.d/epel-testing.repo
-    - pattern: '^enabled=[0,1]'
-    - repl: 'enabled=0'
-{% endif %}
BREAKS HERE
-    - name: pip uninstall urllib3 -y  > /dev/null 2>&1
-    - name: pip install -U urllib3 -y > /dev/null 2>&1
BREAKS HERE
-  file.managed:
-    - source:
-      - "/opt/gitlab-runner/doc/install/upstart/gitlab-runner.conf"
BREAKS HERE
-    - reuqire:
BREAKS HERE
-  file.symlink:
-    - target: "/opt/gitlab-runner/doc/install/upstart/gitlab-runner.conf"
BREAKS HERE
-{% elif os_family == 'RedHat' or os_family == 'Suse' or os_family == 'Arch' %}
-{% endif %}
BREAKS HERE
-  {%- if grains['os'] not in ('MacOS',) %}
-        Users:
-          perms: full_control
-
BREAKS HERE
-{%- from "systemd/macros.jinja" import files_switch with context -%}
BREAKS HERE
-{% if os_family == 'Debian' %}
BREAKS HERE
-    - name: /etc/docker/certs.d/goodrain.me/
BREAKS HERE
-git_packages:
-## Get Node
-get-node:
-      - pkg: git_packages
-  cmd.wait:
-    - names:
-      - tar -zxvf node-v{{ version }}.tar.gz
-    - watch:
-      - file: /usr/src/node-v{{ version }}.tar.gz
-    #- unless: which node
BREAKS HERE
-    - bin_env: {{ salt['config.get']('virtualenv_path', '') }}
-    - cwd: {{ salt['config.get']('pip_cwd', '') }}
BREAKS HERE
-  {%- set npm = 'nodejs4' %}
-    - name: {{ npm }}
-
BREAKS HERE
-    {%- endif %}
BREAKS HERE
-
-update_max_upload_size_for_lms:
-  file.replace:
-    - name: /etc/nginx/sites-enabled/lms
-    - pattern: 'client_max_body_size\s+\d+M;'
-    - repl: 'client_max_body_size {{ salt.pillar.get("edx:edxapp:max_upload_size", "20") }}M;'
-    - backup: False
-  service.running:
-    - name: nginx
-    - reload: True
-    - watch:
-        - file: update_max_upload_size_for_lms
-
-configure_nginx_status_module_for_edx:
-  file.managed:
-    - name: /etc/nginx/sites-enabled/status_monitor
-    - contents: |
-        server {
-            listen 127.0.0.1:80;
-            location /nginx_status {
-                stub_status on;
-                access_log off;
-                allow 127.0.0.1;
-                deny all;
-            }
-        }
-    - group: www-data
-  service.running:
-    - name: nginx
-    - reload: True
-    - watch:
-        - file: configure_nginx_status_module_for_edx
BREAKS HERE
-      {%- if grains['os'] == 'Fedora' and (grains['os'] == 'CentOS' and grains['osmajorrelease'] == '5' %}
BREAKS HERE
-    - group: root
-    - mode: 0600
BREAKS HERE
-      collector:
-        enabled: True
-        urls: "http://localhost:9000/_server-status?auto"
BREAKS HERE
-/etc/exports:
BREAKS HERE
-# Send root mail to ops@ffho.net
BREAKS HERE
-  - name: {{ interface.get('name', interface_name) }}
BREAKS HERE
-    - unless: "ovs-vsctl show | grep {{ interface_name }}"
-    - unless: "ovs-vsctl show | grep {{ interface_name }}"
BREAKS HERE
-    - name: {{ name }}
BREAKS HERE
-{%- else %}
-
-linux_kernel_package:
-  pkg.latest:
-  - names:
-    - linux-image-{{ system.kernel.type|default('generic') }}{% if system.kernel.get('lts', False) %}-lts-{{ system.kernel.lts }}{% endif %}
-    {%- if system.kernel.get('headers', False) %}
-    - linux-headers-{{ system.kernel.type|default('generic') }}{% if system.kernel.get('lts', False) %}-lts-{{ system.kernel.lts }}{% endif %}
-    {%- endif %}
-    {%- if system.kernel.get('extra', False) %}
-    - linux-image-extra-{{ system.kernel.type|default('generic') }}{% if system.kernel.get('lts', False) %}-lts-{{ system.kernel.lts }}{% endif %}
-    {%- endif %}
-  - refresh: true
-
-{%- for sysclt_name, sysctl_value in sytem.kernel.get('sysctl', {}).iteritems() %}
-linux_kernel_{{ sysclt_name }}
BREAKS HERE
-{% from "nagios/server/map.jinja" import map with context %}
-nagios:
-    - pkgs: {{ map.pkgs|json }}
-    - name: {{ map.service }}
-    - name: {{ map.group }}
-    - name: {{ map.user }}
-    - home: {{ map.home }}
-    - groups:
-      - {{ map.group }}
-
-{% if grains['os'] == 'Arch' %}
-extend:
-  nagios:
-    group:
-      - gid: {{ map.gid }}
-    user:
-      - uid: {{ map.uid }}
-      - guid: {{ map.guid }}
-      - service: {{ map.service }}
BREAKS HERE
-    - kwarg:
-        use_vt: True
-        timeout: 900
BREAKS HERE
-    - user: root
-    - shell: True
BREAKS HERE
-linux_apt_conf_{{ key }}
-  - name: /etc/apt/apt.conf.d/99{{ key }}-salt:
BREAKS HERE
-{% set base_reqs = ['Jinja2', 'msgpack-python>0.3', 'PyYAML', 'MarkupSafe', 'requests>=1.0.0', 'tornado>=4.2.1,<5.0'] %}
BREAKS HERE
-      - pkg: mysqld
BREAKS HERE
-    - name: {{ map.nagios_server_pkg }}
BREAKS HERE
-  {%- if grains['os'] == 'openSUSE' %}
-  {%- if grains['os'] == 'openSUSE' %}
-  {%- if (grains['os'] not in ['Debian', 'Ubuntu', 'openSUSE', 'Windows'] and not grains['osrelease'].startswith('5.')) or (grains['os'] == 'Ubuntu' and grains['osrelease'].startswith('14.')) %}
-      {%- if grains['os'] == 'openSUSE' %}
-      {%- if grains['os'] == 'openSUSE' %}
-      {%- if (grains['os'] not in ['Debian', 'Ubuntu', 'openSUSE'] and not grains['osrelease'].startswith('5.')) or (grains['os'] == 'Ubuntu' and grains['osrelease'].startswith('14.')) %}
BREAKS HERE
-{% if "manage" in grains['id'] %}
-/usr/local/bin/grcert:
-    - source: salt://install/files/misc/bin/grcert
-/usr/local/bin/grctl:
-    - source: salt://install/files/misc/bin/grctl
-{% if grains['id'] == "manage01"  %}
-/usr/local/bin/domain-cli:
-    - source: salt://install/files/misc/bin/domain-cli
-{% endif %}
-{% endif %}
-/usr/local/bin/kubectl:
-    - source: salt://install/files/misc/bin/kubectl
-/usr/local/bin/etcdctl:
-    - source: salt://install/files/misc/bin/etcdctl
-/usr/local/bin/kubelet:
-    - source: salt://install/files/misc/bin/kubelet
-/usr/local/bin/node:
-    - source: salt://install/files/misc/bin/node
-/usr/local/bin/ctop:
-    - source: salt://install/files/misc/bin/ctop
-/usr/local/bin/yq:
-    - source: salt://install/files/misc/bin/yq
-    - group: root
BREAKS HERE
-      - git: /srv/pydotorg/pythondotorg/
BREAKS HERE
-  pkgrepo.managed:
-    - name: deb http://repo.steampowered.com/steam precise steam
BREAKS HERE
-    - enable: True
BREAKS HERE
-    - requires:
BREAKS HERE
-      - pip: setuptools
BREAKS HERE
-{% from "mysql/map.jinja" import mysql with context %}
BREAKS HERE
-      - bitmap-fonts
BREAKS HERE
-    - name: easy_install --script-dir=/opt/local/bin -U distribute pip virtualenv
-    - name: easy_install --script-dir=/usr/bin -U pip distribute virtualenv
BREAKS HERE
-      - file: /etc/init/irker.conf
BREAKS HERE
-      - file: aptly
BREAKS HERE
-  {%- set testing_dir = 'C:\testing' %}
BREAKS HERE
-    - pkgs: {{ pkgs }}
BREAKS HERE
-    - name: salt://default/set_ip_in_etc_hosts.py.jinja
BREAKS HERE
-{% from "systemd/map.jinja" import systemd with context -%}
-{% from "systemd/libtofs.jinja" import files_switch with context -%}
-{%- set virtual = salt['grains.get']('virtual') | default('physical', True) -%}
-{%- set virtual_subtype = salt['grains.get']('virtual_subtype') | default('', True) -%}
-  {% if timesyncd.pkg %}
-  {% endif %}
-{% endif %}
BREAKS HERE
-    - target: /srv/pycon/pythondotorg/
BREAKS HERE
-  pkg.latest:
-    - refresh: True
BREAKS HERE
-{% set resolvconf = salt['pkg.version']('resolvconf') %}
-    {% if resolvconf %}
-{% if resolvconf %}
BREAKS HERE
-{% if os_family == 'Debian' %}
BREAKS HERE
-    - target: {{ freeswitch_git_checkout }}/html5/verto_communicator/dist
BREAKS HERE
-    - mode: 750
-    - mode: 750
-    - mode: 750
BREAKS HERE
-{%- if interface.get('ipflush_onchange', False) %}
-
-linux_interface_ipflush_onchange_{{ interface_name }}:
-  cmd.run:
-  - name: "/sbin/ip address flush dev {{ interface_name }}"
-  - onchanges:
-    - network: linux_interface_{{ interface_name }}
-
-{%- if interface.get('restart_on_ipflush', False) %}
-
-linux_interface_restart_on_ipflush_{{ interface_name }}:
-  cmd.run:
-  - name: "ifdown {{ interface_name }}; ifup {{ interface_name }};"
-  - onchanges:
-    - cmd: linux_interface_ipflush_onchange_{{ interface_name }}
-
-{%- endif %}
-
-{%- endif %}
BREAKS HERE
-  - name: "/sbin/ip address flush dev {{ interface_name }}; ifdown {{ interface_name }} ;ifup {{ interface_name }};"
BREAKS HERE
-{%- if system.kernel.isolcpu is defined %}
-include:
-  - linux.system.grub
-
BREAKS HERE
-/etc/init/pycon-progcom.conf:
-      - file: /etc/init/pycon-progcom.conf
-      - file: /etc/init/pycon-progcom.conf
BREAKS HERE
-      java_home: {{ salt['pillar.get']('java_home', '/usr/lib/java') }}
-      hadoop_home: {{ hadoop['alt_home'] }}
-      hadoop_config: {{ hadoop['alt_config'] }}
-      java_home: {{ salt['pillar.get']('java_home', '/usr/lib/java') }}
-      hadoop_home: {{ hadoop['alt_home'] }}
-      hadoop_config: {{ hadoop['alt_config'] }}
BREAKS HERE
-{%- if elasticsearch.major_version == 5 or elasticsearch.major_version == 6 %}
BREAKS HERE
-  {%- endif %} {%- endif %}
-  - python.setuptools
BREAKS HERE
-    - contents_pillar: {{ pillar_name }}:{{ key_name }}:pubkey
BREAKS HERE
-  {% if grains['os'] != 'MacOS' %}
-      {% if grains['os'] != 'MacOS' %}
BREAKS HERE
-  - name: update-ca-certificates
BREAKS HERE
-  - cmd.run:
BREAKS HERE
-create_disk_label:
-    - module: create_disk_label
BREAKS HERE
-    - source: /var/tmp/iso/centos/7/initrd.img
-    - source: /var/tmp/iso/centos/7/vmlinuz
-
-/var/lib/tftpboot/centos/6:
-  file.directory:
-    - name: /var/ftp/tftpboot/centos/6
-    - makedirs: True
-
-/var/lib/tftpboot/centos/6/initrd.img:
-  file.managed:
-    - name: /var/ftp/tftpboot/centos/6/initrd.img
-    - source: /var/tmp/iso/centos/6/initrd.img
-
-/var/lib/tftpboot/centos/6/vmlinuz:
-  file.managed:
-    - name: /var/ftp/tftpboot/centos/6/vmlinuz
-    - source: /var/tmp/iso/centos/6/vmlinuz
-/var/ftp/pub/centos/6:
-  file.directory:
-    - name: /var/ftp/pub/centos/6
-    - makedirs: True
-  mount.mounted:
-    - device: /var/tmp/iso/centos/6/CentOS-6.7-x86_64-bin-DVD1.iso
-    - opts: loop,ro
-    - mkmnt: True
-    - persist: True
-    - fstype: iso9660
BREAKS HERE
-{% if fedora23 or fedora24 %}
BREAKS HERE
-  - text: 'source /etc/network/interfaces.d/*'
-  - name: /etc/network/interfaces.d/ifcfg-{{ interface_name }}
-  - text: 'source /etc/network/interfaces.d/*'
BREAKS HERE
-  - skip_verify: {{ true if package.verify else false }}
BREAKS HERE
-{%- from "freeipa/map.jinja" import client, ipa_host with context %}
BREAKS HERE
-{% set edx_codename = purposes.[PURPOSE_PREFIX +'-live'].versions.codename %}
BREAKS HERE
-include:
-- .containers
-
BREAKS HERE
-       - pkg: git
-      - pkg: python-virtualenv
-      - pkg: build-essential
-      - pkg: python-dev
BREAKS HERE
-  {%- elif interface.type == 'dpdk_ovs_port' and (interface.n_rxq is defined or interface.mtu is defined or interface.pmd_rxq_affinity is defined) %}
BREAKS HERE
-  - mysql.service
BREAKS HERE
-  {% if grains['os'] != 'MacOS' %}
-      {% if grains['os'] != 'MacOS' %}
-      {% if grains['os'] == 'Windows' %}
-      - pip: mysqldb
-      {% else %}
-      {%- endif %}
BREAKS HERE
-    - source: salt://{{ tpldir }}/../templates/limit.maxfiles.plist
-    - source: salt://{{ tpldir }}/templates/mac_shortcut.sh
BREAKS HERE
-linux_apt_conf_{{ key }}
-  - name: /etc/apt/apt.conf.d/99{{ key }}-salt:
BREAKS HERE
-#config local repo
BREAKS HERE
-    - name: /usr/local/bin/lego -a --email="infrastructure-staff@python.org" --domains="{{ grains['fqdn'] }}" {%- for domain in pillar['bugs']['subject_alternative_names']  %} --domains {{ domain }}{%- endfor %} --webroot /etc/lego --path /etc/lego --key-type ec256  renew --days 30 && /sbin/service nginx reload
BREAKS HERE
-  user.absent
BREAKS HERE
-{% if virtual == 'VirtualBox' %}
-      - ubuntu
-{% elif virtual in ('qemu', 'kvm') %}
-      - vagrant
-{% endif %}
BREAKS HERE
-{%- if grains['os'] == 'Ubuntu' or grains['os'] == 'Debian' and salt['pillar.get']('node:install_from_ppa') %}
BREAKS HERE
-        - python
-        - python-dev
-      - cmd: run_ansible
BREAKS HERE
-    - source: salt://salt/elasticsearch/config/elasticsearch.logrotate
BREAKS HERE
-{% for name, vhost in salt["pillar.get"]("rabbitmq:vhost", {}).items() %}
-rabbitmq_vhost_{{ name }}:
-  rabbitmq_vhost.present:
-    - name: {{ vhost }}
-    - require:
-      - service: rabbitmq-server
-{% endfor %}
-
BREAKS HERE
-{%- set mysql = salt['grains.filter_by'](rawmap, grain='os', merge=salt['pillar.get']('mysql:server:lookup')) %}
BREAKS HERE
-      - file: salt-minion-conf
BREAKS HERE
-    - mode: 0644
BREAKS HERE
-      - python-flup
BREAKS HERE
-      - pkg:consul
BREAKS HERE
-{% if salt.grains.get('osfinger'} == 'Ubuntu-12.04' %}
BREAKS HERE
-    - bin_env: {{ salt['config.get']('virtualenv_path', '') }}
-    - cwd: {{ salt['config.get']('pip_cwd', '') }}
BREAKS HERE
-{% else %}
BREAKS HERE
-/srv/hg/web:
-  file.directory:
-    - user: hg
-    - group: hg
-    - mode: 755
-
BREAKS HERE
-    - encoding: UTF-8
BREAKS HERE
-  {%- if grains['os'] == 'Arch' or (grains['os'] == 'Ubuntu' and grains['osrelease'].startswith('14.')) %}
BREAKS HERE
-    - cmd: repos.refresh_repos
BREAKS HERE
-    - clean: True
BREAKS HERE
-    - dist: zesty
BREAKS HERE
-#docker-repo:
-#  pkgrepo.managed:
-#  {% if grains['os_family']|lower == 'redhat' %}
-#    {% if pillar['install-type']=="offline" %}
-#      {% if grains['id']!= "manage01" %}
-#    - humanname: local_repo
-#    - baseurl: http://repo.goodrain.me/
-#    - enabled: 1
-#    - gpgcheck: 0
-#      {% endif %}
-#    #online
-#    {% else %}
-#    - humanname: Goodrain CentOS-$releasever - for x86_64
-#    - baseurl: http://repo.goodrain.com/centos/$releasever/3.6/$basearch
-#    - enabled: 1
-#    - gpgcheck: 0
-#    - gpgkey: http://repo.goodrain.com/gpg/RPM-GPG-KEY-CentOS-goodrain
-#    {% endif %}
-  # debain or ubuntu
-#  {% else %}
-#    - name: deb http://repo.goodrain.com/debian/9 3.6 main
-#    - file: /etc/apt/sources.list.d/docker.list
-#    - key_url: http://repo.goodrain.com/gpg/goodrain-C4CDA0B7
-#  {% endif %}  
-#    - require_in:
-#      - pkg: gr-docker-engine
BREAKS HERE
-    - name: {{ repo.source }}
BREAKS HERE
-  {% if grains['cpuarch'].lower() == 'x86' %}
BREAKS HERE
-      - pkg: python-requests
BREAKS HERE
-{% if ('batman_gw' in roles and grains.id.startswith('gw')) or "l3_access" in roles %}
BREAKS HERE
-tracker-{{ tracker }}-nginx-config:
-    - name: /etc/nginx/sites.d/tracker-{{ tracker }}.conf
-    - source: salt://bugs/config/nginx.conf.jinja
-    - user: nginx
-    - mode: 600
-      server_name: {{ config.get('server_name') }}
-{% endfor %}
-/etc/systemd/system/roundup.service:
-    - source: salt://bugs/config/roundup.service
-      trackers: {{ pillar["bugs"]["trackers"].keys() }}
-      - file: /etc/systemd/system/roundup.service
-roundup:
-      - cmd: /etc/systemd/system/roundup.service
-      - file: /etc/systemd/system/roundup.service
-      {% for tracker in pillar["bugs"]["trackers"].keys() %}
-      {% endfor %}
BREAKS HERE
-      - pkg: fail2ban
BREAKS HERE
-      - alternatives: hadoop-home-link
-      - alternatives: hadoop-bin-link
-      - alternatives: hdfs-bin-link
-      - alternatives: mapred-bin-link
-      - alternatives: yarn-bin-link
-  alternatives.install:
-    - link: {{ hadoop['alt_home'] }}
-    - path: {{ hadoop['real_home'] }}
-    - priority: 30
-    - onlyif: test -d {{ hadoop['real_home'] }} && test ! -L {{ hadoop['alt_home'] }}
-    - require:
-      - alternatives: hadoop-home-link
-      
-  alternatives.install:
-    - link: /usr/bin/hadoop
-    - path: {{ hadoop['alt_home'] }}/bin/hadoop
-    - priority: 30
-    - onlyif: test -f {{ hadoop['alt_home'] }}/bin/hadoop && test ! -L /usr/bin/hadoop
-    - require:
-      - alternatives: hadoop-bin-link
-  alternatives.install:
-    - link: /usr/bin/hdfs
-    - path: {{ hadoop['alt_home'] }}/bin/hdfs
-    - priority: 30
-    - onlyif: test -f {{ hadoop['alt_home'] }}/bin/hdfs && test ! -L /usr/bin/hdfs
-    - require:
-      - alternatives: hdfs-bin-link
-  alternatives.install:
-    - link: /usr/bin/mapred
-    - path: {{ hadoop['alt_home'] }}/bin/mapred
-    - priority: 30
-    - onlyif: test -f {{ hadoop['alt_home'] }}/bin/mapred && test ! -L /usr/bin/mapred
-    - require:
-      - alternatives: mapred-bin-link
-  alternatives.install:
-    - link: /usr/bin/yarn
-    - path: {{ hadoop['alt_home'] }}/bin/yarn
-    - priority: 30
-    - onlyif: test -f {{ hadoop['alt_home'] }}/bin/yarn && test ! -L /usr/bin/yarn
-    - require:
-      - alternatives: yarn-bin-link
-  alternatives.install:
-    - link: {{ hadoop['alt_config'] }}
-    - path: {{ hadoop['real_config'] }}
-    - priority: 30
-    - onlyif: test -d {{ hadoop['real_config'] }} && test ! -L {{ hadoop['alt_config'] }}
-    - require:
-      - file: {{ hadoop['real_config'] }}
-      - alternatives: hadoop-conf-link
-      - alternatives: hadoop-conf-link
BREAKS HERE
-      - zlib1g-dbg
-{% elif virtual == 'qemu' %}
BREAKS HERE
-        myhostname: {{ salt['pillar.get']('postfix:myhostname', 'localhost' )}}
-        mydestination: {{ salt['pillar.get']('postfix:mydestination', 'localhost, localhost.localdomain, , localhost' )}}
BREAKS HERE
-  - k8s-worker/cri/{{ criProvider }}
BREAKS HERE
-    - device: /var/tmp/iso/CentOS-7-x86_64-Everything-1511.iso
-    - device: /var/tmp/iso/CentOS-6.7-x86_64-bin-DVD1.iso
BREAKS HERE
-{% set ubuntu14 = grains.os == 'Ubuntu' and grains.osmajorrelease|int == 14 %}
BREAKS HERE
-  {% if grains['cpuarch'].lower() == 'x86' %}
BREAKS HERE
-    - makedirs: Ture
-    - makedirs: Ture
-    - makedirs: Ture
-    - makedirs: Ture
-    - makedirs: Ture
BREAKS HERE
-{% elif grains['os_family'] in ['Arch', 'Debian' %}
BREAKS HERE
-      - pip: python.setuptools
BREAKS HERE
-      {% elif version in docker %}
-      {% if docker.pkg.hold }}
BREAKS HERE
-  - rabbitmq.config
BREAKS HERE
-    - name: "dpkg -i /tmp/dropbox_2015.10.28_amd64.deb && apt-get -y -f install"
-    - name: "cd ~ && wget -O - \"https://www.dropbox.com/download?plat=lnx.x86_64\" | tar xzf -"
BREAKS HERE
-{% endif %-}
BREAKS HERE
-  {% if networkd.pkg %}
-  {% endif %}
BREAKS HERE
-  {% set dnsutils = 'dns/bind-tools' %}
BREAKS HERE
-{% set node = pillar.get('node', {}) -%}
-{% set version = node.get('version', '0.8.20') -%}
-{% set checksum = node.get('checksum', 'b780f58f0e3bc43d2380d4a935f2b45350783b37') -%}
-{% set make_jobs = node.get('make_jobs', '1') -%}
-git_packages:
-  pkg.installed:
-    - names:
-      - libssl-dev
-      - git
-      - pkg-config
-      - build-essential
-      - curl
-      - gcc
-      - g++
-      - checkinstall
-
-## Get Node
-get-node:
-  file.managed:
-    - name: /usr/src/node-v{{ version }}.tar.gz
-    - source: http://nodejs.org/dist/v{{ version }}/node-v{{ version }}.tar.gz
-    - source_hash: sha1={{ checksum }}
-    - require:
-      - pkg: git_packages
-  cmd.wait:
-    - cwd: /usr/src
-    - names:
-      - tar -zxvf node-v{{ version }}.tar.gz
-    - watch:
-      - file: /usr/src/node-v{{ version }}.tar.gz
-
-make-node:
-  cmd.wait:
-    - cwd: /usr/src/node-v{{ version }}
-    - names:
-      - ./configure
-      - make --jobs={{ make_jobs }}
-      - checkinstall --install=yes --pkgname=nodejs --pkgversion "{{ version }}" --default
-    - watch:
-      - cmd: get-node
-
BREAKS HERE
-      - libgnutls30-dbgsym
BREAKS HERE
-
-update-dev-fixtures-cron:
-  cron.present:
-    - identifier: update-dev-fixtures
-    - name: /srv/pydotorg/env/bin/python /srv/pydotorg/pythondotorg/manage.py generate_dev_fixtures --file=/srv/pydotorg/media/fixtures/dev-fixtures.json.gz --settings=pydotorg.settings.server
-    - user: pydotorg
-    - hour: 1
-    - minute: 0
-    - require:
-      - user: pydotorg-user
BREAKS HERE
-  - unless: ovs-vsctl show | grep -A 2 'Interface floating-to-prv' | grep {{ interface.peer }}
BREAKS HERE
-    {%- set file_path = file_path.split(':')[1] %}
-    {%- set need_postmap = True %}
BREAKS HERE
-      - pip: tornado
BREAKS HERE
-gnupg:
BREAKS HERE
-{%- from "linux/map.jinja" import system, at with context %}
-{%- if at.get('enabled', false) %}
-    - names: {{ at.pkgs }}
-    - names: {{ at.services }}
-  {%- for user_name, user_params in at.get('user', {}).items() %}
BREAKS HERE
-  {% if postfix.packages is defined %}
-    - names:
-  {% for name in postfix.packages %}
-        - {{ name }}
-  {% endfor %}
-  {% endif %}
BREAKS HERE
-    - bin_env: {{salt.config.get('virtualenv_path', None)}}
BREAKS HERE
-login:
-    group.present:
-        - name: login
-        - system: True
-
BREAKS HERE
-      source: /usr/share/consul-template/templates/pycon-progcom.conf
-      destination: /etc/init/pycon-progcom.conf
-      command: "chown root:root /etc/init/pycon-progcom.conf && chmod 0640 /etc/init/pycon-progcom.conf && initctl reload-configuration && stop pycon-progcom && start pycon-progcom"
BREAKS HERE
-{% for group, setting in salt['pillar.get']('groups', {}).iteritems() %}
BREAKS HERE
-{%-     if conf[type] is defined %}
-{{ printconfig("apply", applyinfo["type"], apply, applyinfo["conf"], applyto) }}
BREAKS HERE
-                        tpldir ~ ':tofs:files:networkd',
BREAKS HERE
-    - name:
BREAKS HERE
-    - linux-extra-{{ system.kernel.version }}-{{ system.kernel.type|default('generic') }}
-  - name: "apt-get purge -y $(dpkg -l '*linux-image-[0-9]*' '*linux-headers-[0-9]*' '*linux-extra-[0-9]*' | grep -E '^ii' | awk '{print $2}' | grep -v '{{ system.kernel.version }}')"
-    - linux-extra-{{ system.kernel.type|default('generic') }}{% if system.kernel.get('lts', False) %}-lts-{{ system.kernel.lts }}{% endif %}
BREAKS HERE
-  
BREAKS HERE
-    - name: curl '{{ hadoop.source_url }}' | tar xz
-# file.directory has trouble changing non-root symlinks
-chown-hadoop-home:
-  cmd.run:
-    - name: chown -R root.root {{ hadoop['real_home'] }}
-
BREAKS HERE
-    - require:
-      - pkg: icinga2-web2-required-packages
-      - pkg: icinga2-ido-pgsql
-      - file: /etc/dbconfig-common/icinga-idoutils.conf
-      - file: /usr/local/bin/icinga2-disable-feature
-      - file: /usr/local/bin/icinga2-enable-feature
-      - pkg: icinga2-ido-pgsql
BREAKS HERE
-    - source: {{ files_switch(
-                    salt['config.get'](
-                        'systemd:tofs:source_files:networkd',
-                        ['network']
-                    )
-              ) }}
BREAKS HERE
-{% if grains['os_family'] == 'Debian' %}
-      {% if grains['os_family'] == 'Debian' %}
BREAKS HERE
-{%- if elasticsearch.major_version == 6 %}
-  {%- set repo_url = 'https://artifacts.elastic.co/packages/6.x' %}
-{%- elif elasticsearch.major_version == 5 %}
-  {%- set repo_url = 'https://artifacts.elastic.co/packages/5.x' %}
-{%- if elasticsearch.major_version == 5 and grains['os_family'] == 'Debian' %}
-  {%- if elasticsearch.major_version == 5 %}
BREAKS HERE
-salt_minion:
-salt_minion:
-      - pkg: salt-minion
BREAKS HERE
-    - unless: ls /grdata/services
BREAKS HERE
-  {%- set install_xfs = True %}
-    - pkg: xfs_packages
-    - pkg: xfs_packages
-{%- endif %}
BREAKS HERE
-    - onlyif: "grep root /etc/password | grep fish" 
-    - onlyif: "grep {{ user }} /etc/password | grep fish"
BREAKS HERE
-      - libssl1.0.0-dbgsym
BREAKS HERE
-    - source: salt://salt-irc/config/slack-irc.upstart.conf.jinja
BREAKS HERE
-{%- for name, user in pillar.get('users', {}).items() if user.absent is not defined or not user.absent %}
-{% for name, user in pillar.get('users', {}).items() if user.absent is not defined or not user.absent %}
-      - user: {{ name }}
-{% for name, user in pillar.get('users', {}).items() if user.absent is defined and user.absent %}
BREAKS HERE
-{% if os_family in ['RedHat', 'Suse'] and mysql.version is defined and mysql.version >= 5.7 %}
BREAKS HERE
-{%- if virtual != "physical" or virtual_subtype == "Docker" %}
BREAKS HERE
-  - common.node_conf
-  - common.node_conf
BREAKS HERE
-    - group: plnaet
BREAKS HERE
-{%- if networkd.wait_online is sameas true %}
BREAKS HERE
-{% set hadoop_alt_home  = '/usr/lib/hadoop' %}
BREAKS HERE
-      - pkg: postgres-client
BREAKS HERE
-{% if salt['grains.has_value']('systemd') %}
-docker-unit-drop-in:
-  file.managed:
-    - name: /etc/systemd/system/docker.service.d/docker-defaults.conf
-    - source: salt://docker/files/systemd.drop-in
-    - makedirs: True
-    - require:
-      - file: docker-config
-
-reload-systemd:
-  module.wait:
-    - name: service.systemctl_reload
-    - watch:
-      - file: docker-unit-drop-in
-{% endif %}
-
BREAKS HERE
-  {{ version }}:
BREAKS HERE
-    - group: {{ name }}
BREAKS HERE
-    - source: salt://deepsea/policy.cfg
-    - source: salt://salt-master/master.conf
BREAKS HERE
-    - parallel: True
-    - parallel: True
BREAKS HERE
-      - lxc
BREAKS HERE
-      - git: setuptools-clone
-      - git: setuptools-clone
BREAKS HERE
-    pkg:
-        - installed
-    cmd:
-        - run
-        - name: openstack-db --init --service glance --rootpw ''
-        - unless: echo '' | mysql glance
-        - require:
-            - pkg: openstack-glance
-            - service: mysqld
-    service:
-        - running
-        - enable: True
-        - names:
-            - openstack-glance-api
-            - openstack-glance-registry
-        - require:
-            - pkg: openstack-glance
-            - cmd: glance-db-init
-        - watch:
-          - file: /etc/glance
-    file:
-        - recurse
-        - source: salt://openstack/glance
-        - template: jinja
-        - require:
-            - pkg: openstack-glance
BREAKS HERE
-  file.append:
-    - text:
-      {% for rule in user['sudo_rules'] %}
-      - "{{ name }} {{ rule }}"
-      {% endfor %}
BREAKS HERE
-    {%- else %}
BREAKS HERE
-    - mode: 755
BREAKS HERE
-      - pkg: icinga2
-      - pkg: icinga2
BREAKS HERE
-{% if salt['pillar.get']('logstash:use_upstream_repo', 'True') %}
-{% set old_repo = salt['pillar.get']('logstash:repo:old_repo', 'False') %}
BREAKS HERE
-    - name: |
-            echo '{{ repo_key }}' | base64 -d | apt-key add -
BREAKS HERE
-{%- elif repo.key_url|default(False) %}
BREAKS HERE
-{% if not salt['cmd.has_exec']('git') %}
-skip_{{ name }}_gitconfig_since_git_not_installed:
-  test.fail_without_changes:
-    - name: "Git configuration for user {{ name }} has been skipped because Git is not installed."
-{% else %}
-{% endif %}
BREAKS HERE
-
BREAKS HERE
-      - python-apt
-    - name: python-pip
BREAKS HERE
-        destination: /srv/pycon/pycon/settings/local.py
-        command: "chown pycon /srv/pycon/pycon/settings/local.py"
BREAKS HERE
-{{ hadoop['real_home'] }}:
-  file.directory:
-    - user: root
-    - group: root
-    - recurse:
-      - user
-      - group
-    - require:
-      - cmd: unpack-hadoop-dist
-      - file: {{ hadoop['real_home'] }}
BREAKS HERE
-  {%- set python2 = 'c:\\Python27\\python.exe' %}
-  {%- set python3 = 'c:\\Python35\\python.exe' %}
-      {%- if not on_redhat_6 and not on_ubuntu_14 %}
-{%- if (not on_redhat_6 and not on_ubuntu_14) or (on_windows and pillar.get('py3', False)) %}
-      {%- if on_windows %}
-      - 'if (py.exe -3 -c "import sys; print(sys.executable)") { exit 0 } else { exit 1 }'
-      - 'if (get-command pip3) { exit 1 } else { exit 0 }'
-      {%- else %}
-      {%- if on_windows %}
-      - 'if (py.exe -2 -c "import sys; print(sys.executable)") { exit 0 } else { exit 1 }'
-      - 'if (get-command pip2) { exit 1 } else { exit 0 }'
-      {%- else %}
BREAKS HERE
-{% if ntp_conf_src %}
-{% endif %}
-{% if ntp.ntp_conf -%}
-ntp_running:
-  service.running:
-    - name: {{ ntp.service }}
-    - enable: True
-    - watch:
-      - file: {{ ntp.ntp_conf }}
-{% endif -%}
BREAKS HERE
-                              lookup='timesyncd',
-                              v1_path_prefix = '/timesyncd'
BREAKS HERE
-python-pip:
-  pkg.installed
-
BREAKS HERE
-    - name: /etc/nginx/conf.d/tracker-{{ tracker }}.conf
BREAKS HERE
-{% set PURPOSE_PREFIX = salt.environ.get('PURPOSE_PREFIX') %}
-{% set edx_codename = purposes[PURPOSE_PREFIX +'-live'].versions.codename %}
-        purpose: {{ PURPOSE_PREFIX }}-draft
-          purpose_prefix: {{ PURPOSE_PREFIX }}
-        purpose: {{ PURPOSE_PREFIX }}-draft
-          purpose_prefix: {{ PURPOSE_PREFIX }}
BREAKS HERE
-    - pkgs: {{ pkgs }}
BREAKS HERE
-    - name: chmod -R o+r /srv/python-testdata/
BREAKS HERE
-      - createrepo
-      - python3-PyYAML
BREAKS HERE
-{% set ubuntu14 = grains.os == 'Ubuntu' and grains.osmajorrelease|int == 14 %}
BREAKS HERE
-{% set suse = True if grains['os_family'] == 'Suse' else False %}
-    - name: glibc-locale
BREAKS HERE
-{% if 'logserver' in roles %}
BREAKS HERE
-# 'Steam License Agreement was declined'
BREAKS HERE
-      - conntrack
BREAKS HERE
-    - name: /usr/bin/rsync -av /srv/roundup/data/{{ tracker }}/ /backup/roundup/{{ tracker }}/data/
BREAKS HERE
-# Create zones directory
-/etc/bind/zones/:
-  file.directory:
-    - makedirs: true
-    - user: root
-    - group: root
-    - mode: 755
-    - require:
-      - pkg: bind9
-
-
BREAKS HERE
-upgrade-pip:
-upgrade-pip:
BREAKS HERE
-    - watch:
-      - file: timesyncd
BREAKS HERE
-    - name: dbus.socket
BREAKS HERE
-graphite:
-    - group: graphite
BREAKS HERE
-# Set SELinux to permissive mode while installing mysqld otherwise the
-# mysql user will not be created; restore enforcing when done.
-{% if (grains['os_family'] == 'RedHat'
-    and salt['cmd.run']("sestatus | awk '/Current mode/ { print $3 }'") == 'enforcing') %}
-selinux_permissive:
-  cmd.run:
-    - name: setenforce permissive
-    - prereq:
-      - pkg: mysqld
-
-selinux_enforcing:
-  cmd.wait:
-    - name: setenforce enforcing
-    - watch_in:
-      - pkg: mysqld
-{% endif %}
-
BREAKS HERE
-{% set fedora = True if grains['os'] == 'Fedora' else False %}
-{% set fedora22 = True if fedora and grains['osrelease'] == '22' else False %}
-{% set fedora23 = True if fedora and grains['osrelease'] == '23' else False %}
-{% set fedora24 = True if fedora and grains['osrelease'] == '24' else False %}
-    - name: echo "not updatig dnf due to bug https://bugzilla.redhat.com/show_bug.cgi?id=1415441"
-{% elif fedora23 or fedora24 %}
BREAKS HERE
-  {%- if test_transport in ('zeromq') %}
-  - python.pyzmq
-  - python.pycrypto
-  - python.pycrypto
-      - pip: pycrypto
BREAKS HERE
-    - require: pkg: python-pip
BREAKS HERE
-{% if grains.os != "MacOS" %}
-    - name: echo salt-call --local service.restart salt-minion | at now + 1 minute
BREAKS HERE
-          DNS: {{ config.DNS }}
-          FallbackDNS: {{ config.FallbackDNS }}
-          Domains: {{ config.Domains }}
-          LLMNR: {{ config.LLMNR }}
-          MulticastDNS: {{ config.MulticastDNS }}
-          DNSSEC: {{ config.DNSSEC }}
-          DNSOverTLS: {{ config.DNSOverTLS }}
-          Cache: {{ config.Cache }}
-          DNSStubListener: {{ config.DNSStubListener }}
-          ReadEtcHosts: {{ config.ReadEtcHosts }}
BREAKS HERE
-{% if os_family == 'RedHat' and os_major_release == '5' %}
BREAKS HERE
-    - bin_env: {{ salt['config.get']('virtualenv_path', '') }}
-    - cwd: {{ salt['config.get']('pip_cwd', '') }}
BREAKS HERE
-{% from "salt/package-map.jinja" import pkgs with context %}
BREAKS HERE
-{%- if host.get('proxy', {}).get('enabled') %}
BREAKS HERE
-      - salt://postfix/master.cf
BREAKS HERE
-{%- if path.startswith('/') %}
BREAKS HERE
-  {%- if client.network is defined %}
-  {%- if client.compose is defined %}
-  {%- if client.stack is defined %}
-  {%- if client.registry is defined %}
-  {%- if client.service is defined %}
BREAKS HERE
-    - rev: {{ pillar['git_commit'] }}
BREAKS HERE
-{% set platform = None %}
-{% if platform != None %}
BREAKS HERE
-    - mode: 600
-    - mode: 600
BREAKS HERE
-  pkg.installed
BREAKS HERE
-
-{% if virtual == 'VirtualBox' and grains['os'] == 'Ubuntu' %}
-{% set baseuser = 'ubuntu' %}
-{% else %}
-{% endif %}
BREAKS HERE
-
-{# workaround for https://github.com/npm/npm/issues/19634 #}
-{% if arch %}
-libuv:
-  pkg.installed:
-    - reinstall: True
-    - sources:
-      - libuv: https://archive.archlinux.org/packages/l/libuv/libuv-1.18.0-1-x86_64.pkg.tar.xz
-  file.replace:
-    - name: /etc/pacman.conf
-    - pattern: '^#IgnorePkg   =$'
-    - repl: 'IgnorePkg = libuv'
-{% endif %}
BREAKS HERE
-{% if hadoop['source'] is defined %}
-{% else %}
-{{ hadoop_tgz_path }}:
-  file.managed:
BREAKS HERE
-    - name: make -C /srv/pydotorg/peps update all && /srv/pydotorg/peps/pep2rss.py /srv/pydotorg/peps/ && /srv/pydotorg/env/bin/python /srv/pydotorg/pythondotorg/manage.py generate_pep_pages --settings pydotorg.settings.server
BREAKS HERE
-      - pip: etcd
BREAKS HERE
-    "CentOS": ("6",)
-show_osmajorrelease:
-  cmd:
-    - run
-    - name: echo '...{{ grains["osmajorrelease"] }}...'
-
-    {% if grains["osmajorrelease"] in run_on[grains["os"]] %}
BREAKS HERE
-{% set playbooks = salt.pillar.get('edx:playbooks',
-                                   ['edx-east/common.yml',
-                                    'edx-east/forum.yml',
-                                    'edx-east/xqueue.yml',
-                                    'edx-east/xqwatcher.yml',
-                                    'edx-east/edxapp.yml',
-                                    'edx-east/worker.yml']) -%}
-
-clone_edx_configuration:
-  file.directory:
-    - name: {{ repo_path }}
-    - makedirs: True
-  git.latest:
-    - name: {{ salt.pillar.get('edx:config:repo', 'https://github.com/edx/configuration.git') }}
-    - rev: {{ salt.pillar.get('edx:config:branch', 'named-release/dogwood.3') }}
-    - target: {{ repo_path }}
-    - user: root
-    - force_checkout: True
-    - force_clone: True
-    - force_reset: True
-    - require:
-      - file: clone_edx_configuration
-
-mark_ansible_as_editable:
-  file.replace:
-    - name: {{ repo_path }}/requirements.txt
-    - pattern: |
-        ^git\+https://github\.com/edx/ansible.*
-    - repl: |
-        -e git+https://github.com/edx/ansible.git@stable-1.9.3-rc1-edx#egg=ansible==1.9.3-edx
-    - require:
-      - git: clone_edx_configuration
-
-replace_nginx_static_asset_template_fragment:
-  file.managed:
-    - name: {{ repo_path }}/playbooks/roles/nginx/templates/edx/app/nginx/sites-available/static-files.j2
-    - source: salt://edx/files/nginx_static_assets.j2
-    - require:
-        - git: clone_edx_configuration
-
-create_ansible_virtualenv:
-  # Note: We need to use a virtualenv over here because the Salt minion bootstrap
-  #       installs some OS `python-` packages that are also pulled in by the edX
-  #       config requirements for Ansible (e.g. python-jinja). This causes python
-  #       package metadata issues, resulting in Ansible not being able to import
-  #       dependencies at runtime.
-  virtualenv.managed:
-    - name: {{ venv_path }}
-    - requirements: {{ repo_path }}/requirements.txt
-    - require:
-      - git: clone_edx_configuration
-      - pkg: install_os_packages
-      - file: replace_nginx_static_asset_template_fragment
-
-place_ansible_environment_configuration:
-  file.managed:
-    - name: {{ conf_file }}
-    - source: salt://edx/templates/ansible_env_config.yml.j2
-    - template: jinja
-    - makedirs: True
-{# Creating the edxapp user here so that it is present for setting appropriate
-   file and directory ownership #}
-create_edxapp_user:
-  user.present:
-    - name: edxapp
-    - home: /edx/app/edxapp
-    - createhome: False
-    - shell: /bin/false
-
-remove_course_asset_symlink_before_ansible_run:
-  file.absent:
-    - name: /edx/var/edxapp/course_static
-
-run_ansible:
-  cmd.script:
-    - name: {{ data_path }}/run_ansible.sh
-    - source: salt://edx/templates/run_ansible.sh.j2
-    - template: jinja
-    - cwd: {{ repo_path }}/playbooks
-    - context:
-        data_path: {{ data_path }}
-        venv_path: {{ venv_path }}
-        repo_path: {{ repo_path }}
-        conf_file: {{ conf_file }}
-        playbooks: {{ playbooks }}
-    - require:
-      - virtualenv: create_ansible_virtualenv
-    - unless: {{ salt.pillar.get('edx:skip_ansible', False) }}
-
BREAKS HERE
-      - file.managed: /tmp/hadoop-snappy-0.0.1.tgz
-      - alternatives.install: hadoop-home-link
-      - pkg.installed: snappy-libs
BREAKS HERE
-        - mysql-client
BREAKS HERE
-      - libcurl4-dbg
BREAKS HERE
-{% from "nagios/map.jinja" import map with context %}
-    - name: {{ map.nrpe_plugin }}
BREAKS HERE
-      {%- if grains['os'] == 'Fedora' %}
-      - pkg: gnupg
BREAKS HERE
-      - pip: pyopenssl
BREAKS HERE
