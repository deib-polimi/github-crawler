-    extra_hosts:
-      - "dockerhost:${HOST_IP}"
BREAKS HERE
-    ./tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml
BREAKS HERE
-      - mongo:mogo
BREAKS HERE
-dnsdock:
-  image: tonistiigi/dnsdock
-  volumes:
-    - /var/run/docker.sock:/run/docker.sock
-  ports:
-    - 172.17.42.1:53:53/udp
-  dns:
-    - 172.17.42.1
-  dns:
-    - 172.17.42.1
-  dns:
-    - 172.17.42.1
-  dns:
-    - 172.17.42.1
-  dns:
-    - 172.17.42.1
-  dns:
-    - 172.17.42.1
-  dns:
-    - 172.17.42.1
-  dns:
-    - 172.17.42.1
-  dns:
-    - 172.17.42.1
-mongos:
-  command: mongos --configdb mongodockercompose_mongocfg1_1.mongo.docker:27017,mongodockercompose_mongocfg2_1.mongo.docker:27017,mongodockercompose_mongocfg3_1.mongo.docker:27017 --port 27017
-  dns:
-    - 172.17.42.1
-  expose:
-    - 27017
BREAKS HERE
-   image: vulhub/imagemagick:7.0.8-php
BREAKS HERE
-    # 使用固定的port 80，左邊為主機開啟的關接埠，右邊為容器的連接埠
BREAKS HERE
-    volumes:
-      - ./config/cyphon/fixtures:/usr/src/app/cyphon/fixtures:ro
BREAKS HERE
-    image: elasticsearch:${ELASTICSEARCH_VER}
BREAKS HERE
-    links:
-    - redis:redis
BREAKS HERE
-    environment:
-      DOJOT_SERVICE_MANAGEMENT: 'internal'
BREAKS HERE
-    image: expediadotcom/haystack-service-graph-node-finder
-      image: expediadotcom/haystack-service-graph-graph-builder
BREAKS HERE
-    image: rynxiao/rap2:1.0.0
-    build: .
BREAKS HERE
-  node-exporter:
-    image: prom/node-exporter
-    volumes:
-      - /proc:/host/proc:ro
-      - /sys:/host/sys:ro
-      - /:/rootfs:ro
-    command: 
-      - '--path.procfs=/host/proc' 
-      - '--path.sysfs=/host/sys'
-      - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
-      - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
-    expose:
-      - 9100
-    networks:
-      - back-tier
-    restart: always
-    deploy:
-      mode: global
BREAKS HERE
-  build: ./docker-nexus3 
-    - /opt/sonatype/nexus:/nexus-data 
-    - "5432:5432" 
-  image: sonarqube 
-    - "580:80"
-    - "5443:443"
-    - "522:22"
BREAKS HERE
-prometheus:
-  image: "vegasbrianc/prom"
-  ports:
-    - "9090:9090"
-  links:
-    - "exporter:export"
-    - "cadvisor:cadvisor"
-  labels: 
-         - "name=prometheus"
-         - "description=Core of Promethues"
-         - "version=0.16.1"
-exporter:
-  image: "prom/container-exporter"
-  volumes:
-    - /sys/fs/cgroup:/cgroup
-    - /var/run/docker.sock:/var/run/docker.sock
-  ports:
-    - "9104:9104"
-  expose:
-    - "9104"
-  labels: 
-    - "name=exporter"
-    - "description=Exports prom data"
-    - "version=latest"
-sqlite3:
-  image: "prom/promdash"
-  command:
-    - "./bin/rake db:migrate"
-  volumes:
-    - "/tmp/prom:/tmp/prom"
-  environment:
-    - "DATABASE_URL=sqlite3:/tmp/prom/file.sqlite3"
-
-promdash:
-  image: "prom/promdash"
-  ports:
-    - "3000:3000"
-  expose:
-    - "3000"
-  volumes:
-    - /tmp/prom:/tmp/prom
-  environment:
-    - "DATABASE_URL=sqlite3:/tmp/prom/file.sqlite3"
-  labels: 
-    - "name=prom dashboard"
-    - "description=Dashboards for metrics"
-    - "version=latest"
-
-cadvisor:
-  image: "google/cadvisor"
-  volumes:
-    - "/:/rootfs:ro"
-    - "/var/run:/var/run:rw"
-    - "/sys:/sys:ro"
-    - "/var/lib/docker/:/var/lib/docker:ro"
-  ports:
-    - "8080:8080"
-  expose:
-    - "8080"
-  labels: 
-    - "name=cAdvisor"
-    - "description=Google Container Advisor collects metrics from host and containers"
-    - "version=latest"
BREAKS HERE
-
-
-  unfetter-ctf-ingest:
-    build: ../unfetter-store/unfetter-ctf-ingest
-    container_name: unfetter-ctf-ingest
-    image: unfetter-ctf-ingest
-    volumes:
-     - ../unfetter-store/unfetter-ctf-ingest/test-data:/tmp/test-data
-    environment:
-      - API_PROTOCOL=https
-      - API_HOST=apihost
-      - API_PORT=3000
-      - API_CONTEXT=/
-    entrypoint: 
-     - npm
-     - run
-     - ctf-ingest
-     - --
-     - -f
-     - /tmp/test-data/ctf-sample.csv
-    depends_on:
-     - cti-stix-store-repository
-     - unfetter-discover-api
-     - unfetter-discover-processor
-    links:
-     - unfetter-discover-api:apihost
-
-
-
-    
BREAKS HERE
-  
-    volumes: 
-      - /proc:/host/proc
-      - /sys:/host/sys
-      - /:/rootfs
-    command:
-      - '-collector.procfs=/host/proc'
-      - '-collector.sysfs=/host/sysfs'
-      - '-collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
-    volumes: 
-      
-  
BREAKS HERE
-  image: kartoza/postgis
BREAKS HERE
-        environment:
-            - NODE_VERSION=latest
-        entrypoint: node /opt/app/index.js
BREAKS HERE
-    - /var/run/docker.sock:/var/run/docker.sock prom/container-exporter
BREAKS HERE
-      - POSTGRES_DB=${POSTGRES_PASSWORD}
BREAKS HERE
-      # - ./build/dashboard/build:/var/www/dashboard
-      - ./build/dashboard/app:/var/www/dashboard
BREAKS HERE
-            - /Users/brunogoossens/Projects/Drupal8-Docker/web/app:/var/www/html
BREAKS HERE
-      - nextcloud-redis-data:/data
BREAKS HERE
-  image: deviny/fpm:7.1.1
BREAKS HERE
-    - /var/run/docker.sock:/var/run/docker.sock prom/container-exporter
BREAKS HERE
-     - unfetter-discover-api-explorer
-     - unfetter-ui
-     - ./config/nginx/conf.d.angular:/etc/nginx/conf.d
-  unfetter-discover-api-explorer:
-    image: unfetter/unfetter-discover-api:0.3.4
-    container_name: unfetter-discover-api-explorer
-    depends_on:
-    - unfetter-discover-openssl
-    - cti-stix-store-repository
-    expose:
-    - "3000"
-    - "49260:3000"
-    links:
-     - cti-stix-store-repository:repository
-    volumes:
-    - ./certs/:/etc/pki/tls/certs
-    environment:
-    - STIX_API_PROTOCOL=http
-    - STIX_API_HOST=cti-stix-store
-    - STIX_API_PORT=3000
-    - STIX_API_PATH=cti-stix-store-api
-    - MONGO_REPOSITORY=repository
-    - MONGO_PORT=27017
-    - MONGO_DBNAME=stix
-    - ENV=prod
-    - npm
-    - run
-    - swagger-editor
-  unfetter-ui:
-    image: unfetter/unfetter-ui:0.3.4
-    container_name: unfetter-ui
-    depends_on:
-    - unfetter-discover-openssl
-    volumes:
-    - ./certs/:/etc/pki/tls/certs
-    environment:
-    # Options: UAC, TEST, DEMO
-    - RUN_MODE=DEMO
-    - npm
-    - run
-    - server:dev:alt
BREAKS HERE
-version: '3'
BREAKS HERE
-        environment:
-            MYSQL_DATABASE: default_database
-            MYSQL_USER: default_user
-            MYSQL_PASSWORD: secret
-            MYSQL_ROOT_PASSWORD: root
-        tty: true
BREAKS HERE
-        #       - "${TRANS_WEBUI_PORT}:9091"
-        #       - "${TRANS_CONNECTION_PORT}:51413"
-        #       - "${TRANS_CONNECTION_PORT}:51413/udp"
BREAKS HERE
-    command: $LIGHT_MODULE
BREAKS HERE
-    file: ./secrets/${DB_ROOT_PASSWORD_PATH:-db_root_password.txt}
-    file: ./config/supervisord/${SUPERVISORD_INI_PATH:-supervisord.ini}
BREAKS HERE
-   dphNet:
-   dphNet:
-   dphNet:
-   dphNet:
BREAKS HERE
-    entrypoint:
-      - dockerize
-      - -wait
-      - tcp://mongo:27017
-      - -timeout
-      - 30s
-      - exec $$@
BREAKS HERE
-  
-  auth-redis:
-    image: redis
-    restart: always
-    logging:
-      driver: json-file
-      options:
-        max-size: 100m
-
-
BREAKS HERE
-            wget -O- https://releases.hashicorp.com/consul-template/0.19.5/consul-template_0.19.5_linux_amd64.tgz | tar -xz
-          chown -R consul. /consul
-        nohup /bin/sh -c 'while true; do consul-template -template=/consul/consul-dns.tpl:/etc/dnsmasq/consul.conf:"/usr/bin/killall dnsmasq" -retry 1s; sleep 5; done' &
-        nohup consul-template -template=/tmp/consul-dns.tpl:/etc/dnsmasq/consul.conf:"/usr/bin/killall dnsmasq" &
-        until [ -f /etc/dnsmasq/consul.conf ]; do sleep 1; done
-            wget -O- https://releases.hashicorp.com/consul-template/0.19.5/consul-template_0.19.5_linux_amd64.tgz | tar -xz
-          chown -R consul. /consul
BREAKS HERE
-    image: mysql:5.7
BREAKS HERE
-     - "81:80"
BREAKS HERE
-      - ${HOST_DATABASE_DUMP:-./data/dump}:/dump
BREAKS HERE
-version: '2'
-      - postgres
BREAKS HERE
-prometheus:
-  image: "vegasbrianc/prom"
-  ports:
-    - "9090:9090"
-  links:
-    - "exporter:export"
-    - "cadvisor:cadvisor"
-  labels: 
-         - "name=prometheus"
-         - "description=Core of Promethues"
-         - "version=0.16.1"
-exporter:
-  image: "prom/container-exporter"
-  volumes:
-    - /sys/fs/cgroup:/cgroup
-    - /var/run/docker.sock:/var/run/docker.sock
-  ports:
-    - "9104:9104"
-  expose:
-    - "9104"
-  labels: 
-    - "name=exporter"
-    - "description=Exports prom data"
-    - "version=latest"
-sqlite3:
-  image: "prom/promdash"
-  command:
-    - "./bin/rake db:migrate"
-  volumes:
-    - "/tmp/prom:/tmp/prom"
-  environment:
-    - "DATABASE_URL=sqlite3:/tmp/prom/file.sqlite3"
-
-promdash:
-  image: "prom/promdash"
-  ports:
-    - "3000:3000"
-  expose:
-    - "3000"
-  volumes:
-    - /tmp/prom:/tmp/prom
-  environment:
-    - "DATABASE_URL=sqlite3:/tmp/prom/file.sqlite3"
-  labels: 
-    - "name=prom dashboard"
-    - "description=Dashboards for metrics"
-    - "version=latest"
-
-cadvisor:
-  image: "google/cadvisor"
-  volumes:
-    - "/:/rootfs:ro"
-    - "/var/run:/var/run:rw"
-    - "/sys:/sys:ro"
-    - "/var/lib/docker/:/var/lib/docker:ro"
-  ports:
-    - "8080:8080"
-  expose:
-    - "8080"
-  labels: 
-    - "name=cAdvisor"
-    - "description=Google Container Advisor collects metrics from host and containers"
-    - "version=latest"
BREAKS HERE
-version: "2"
BREAKS HERE
-  container_name: prometheus
-    - "cadvisor:cad"
-  container_name: exporter
-  container_name: promdash
-  container_name: cadvisor
BREAKS HERE
-      bash -c "createuser kong -d -h postgres -U postgres && createdb kong -U kong -h postgres"
BREAKS HERE
-    - "8080:80"
BREAKS HERE
-  
-    volumes: 
-      - /proc:/host/proc
-      - /sys:/host/sys
-      - /:/rootfs
-    command:
-      - '-collector.procfs=/host/proc'
-      - '-collector.sysfs=/host/sysfs'
-      - '-collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
-    volumes: 
-      
-  
BREAKS HERE
-   build: postgres
BREAKS HERE
-version: '2.1'
BREAKS HERE
-    build: .
-      - .:/app
BREAKS HERE
-    # uncomment below port mapping to expose and connect to the application out of local docker container network
BREAKS HERE
-          - ./db-data:/db/data
BREAKS HERE
-      DOJOT_MANAGEMENT_TENANT: 'internal'
-      DOJOT_MANAGEMENT_TENANT: 'internal'
-      DOJOT_SERVICE_MANAGEMENT: 'internal'
-      DOJOT_SERVICE_MANAGEMENT: 'internal'
BREAKS HERE
-  image: gitlab/gitlab-ce:8.11.3-ce.1
BREAKS HERE
-      - 3100:3000
BREAKS HERE
-    image: devicehive/devicehive-frontend-rdbms:${DH_TAG:-development}
-      image: devicehive/devicehive-auth-rdbms:${DH_TAG:-development}
-    image: devicehive/devicehive-backend-rdbms:${DH_TAG:-development}
BREAKS HERE
-    - SETTINGS = settings
-    - CACHE = cache
-    - IMPORT_DONE = import_done
-    - IMPORT_QUEUE = import_queue
-    - SRID = 4326
-    - OPTIMIZE = false
-    - DBSCHEMA_PRODUCTION = public
-    - DBSCHEMA_IMPORT = import
-    - DBSCHEMA_BACKUP = backup
-    - MAX_DAYS = 100
-    - DIFF = sporadic
-    - MAX_MERGE = 7
-    - COMPRESSION_LEVEL = 1
-    - BASE_URL = http://planet.openstreetmap.org/replication/
-    - IMPORT_QUEUE = import_queue
-    - IMPORT_DONE = import_done
-    - TIME = 120
BREAKS HERE
-      - internal
-    dns: dnsmasq
-    dns: dnsmasq
-    dns: dnsmasq
-    dns: dnsmasq
-    dns: dnsmasq
BREAKS HERE
-      - ./config/php/${LNMP_PHP_XDEBUG_INI:-docker-xdebug.ini}:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini:ro,cached
BREAKS HERE
-    #build: .
-    command: jupyter notebook --ip='*' --no-browser
-    #build: .
-    command: dscheduler --host dscheduler
-    #build: .
-    command: dworker dscheduler:8786
-    driver: overlay
BREAKS HERE
-    - /usr/bin/docker:/usr/bin/docker
BREAKS HERE
-    links:
-      - redis
-    links:
-      - db
-    links:
-      - db
-      - redis
-    image: redis
-
-
BREAKS HERE
-        volumes_from:
-            - volumes
-                reverse_proxy_port: "8000"
-            - "443:443"
-            - ../:/opt/app
BREAKS HERE
-    image: vulhub/codefusion:11u3
BREAKS HERE
-        - ./work/components/php/start.sh:/home/start.sh:rw
BREAKS HERE
-      - "118:3129"
BREAKS HERE
-version: '3.3'
-  2_apps:
BREAKS HERE
-    - rsyncd.conf:/etc/rsyncd.conf
BREAKS HERE
-          until apk add curl; do sleep 3; done
-            rm consul_1.2.3_linux_amd64.zip
-
-
-
-
-
-          dnsmasq --no-daemon --server=/consul/consul-worker/172.16.238.3#8600
-            rm consul_1.2.3_linux_amd64.zip
BREAKS HERE
-    image: influxdb 
-      - "/data/influxdb/:/var/lib/influxdb"
BREAKS HERE
-  build: "/prom/"
-  image: "prom/prom_container-exporter"
BREAKS HERE
-version: '2'
-    - back1
BREAKS HERE
-  # registrator:
-  #   image: gliderlabs/registrator:latest
-  #   command: ['-internal', "consul://${CONSUL_SERVER}:8500"]
-  #   hostname: registrator
-  #   networks:
-  #   - widget_overlay_net
-  #   volumes:
-  #   - /var/run/docker.sock:/tmp/docker.sock
-  #   deploy:
-  #     mode: global
-  #     placement:
-  #       constraints:
-  #       - node.role == worker
-  #   environment:
-  #     SERVICE_IGNORE: 'true'
-  #     SERVICE_NAME: registrator
-  #     SERVICE_TAGS: monitoring
-
-      # SERVICE_IGNORE: 'true'
-      # SERVICE_IGNORE: 'true'
-    # volumes:
-    # - /Users/gstaffo/Documents/projects/widget-docker-demo/widget-service/scripts/fluent.conf:/fluentd/etc/fluent.conf
-      # SERVICE_IGNORE: 'true'
BREAKS HERE
-      GF_SMTP_HOST: "${TTN_DASHBOARD_MAIL_HOST_NAME:-postfix}:25"
BREAKS HERE
-      - /docker/nginx/www:/usr/share/nginx/html
-      - /docker/nginx/nginx.conf:/etc/nginx/nginx.conf
-      - /docker/nginx/log/error.log:/var/log/nginx/error.log
BREAKS HERE
-      - VIRTUAL_HOST=officecdn.microsoft.com,*.windowsupdate.com,windowsupdate.com,*.dl.delivery.mp.microsoft.com
BREAKS HERE
-  application:
-    image: gitlab/gitlab-ce
-        external_url 'http://${VIRTUAL_HOST}'
-        gitlab_rails['smtp_user_name'] = "${SMTP_USER}"
-        gitlab_rails['smtp_password'] = "${SMTP_PASSWORD}"
-      - ${PROXYPORTSSH}:22
BREAKS HERE
-        image: mariadb
BREAKS HERE
-  docker-ui
-    image: uifd/ui-for-docker
BREAKS HERE
-     - /tmp/examples/unfetter-stix/ntctf-attack-patterns.stix.json
BREAKS HERE
-    command: nodemon --debug server.js
BREAKS HERE
-    - back
BREAKS HERE
-        links:
-            - node
BREAKS HERE
-  expose:
-    - "9090"
-  volumes:
-    - "$PWD/prometheus.yml:/etc/prometheus/prometheus.yml"
BREAKS HERE
-    - "3306:3306"
BREAKS HERE
-    command: --max-timeout {{ max_timeout }} --disable-proxy --slots 10 --maxrss {{ maxrss }} --verbosity {{ verbosity }}
BREAKS HERE
-  node-exporter:
-    image: prom/node-exporter
-    volumes:
-      - /proc:/host/proc:ro
-      - /sys:/host/sys:ro
-      - /:/rootfs:ro
-    command: 
-      - '--path.procfs=/host/proc' 
-      - '--path.sysfs=/host/sys'
-      - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
-      - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
-    expose:
-      - 9100
-    networks:
-      - back-tier
-    restart: always
-    deploy:
-      mode: global
BREAKS HERE
-        - DECISIONSERVERCONSOLE_NAME=localhost
BREAKS HERE
-    php:
-        build:
-            context: config/php-fpm
-            args:
-                PHP_TIMEZONE: ${PHP_TIMEZONE}
-                PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT}
-        volumes:
-            - ${PROJECT_PATH}:/var/www/project:cached
-            - ./var/logs/project:/var/www/project/var/logs:cached
-        env_file:
-          - .env
-    nginx:
-        build:
-            context: config/nginx
-            args:
-                PROJECT_DOMAIN: ${PROJECT_DOMAIN}
-        ports:
-            - ${PORT_NGINX}:80
-        volumes_from:
-            - php
-        volumes:
-            - ./var/logs/nginx/:/var/log/nginx
-    mysql:
-        build: config/mysql
-        ports:
-            - ${PORT_MYSQL}:3306
-        volumes:
-            - ./var/data/mysql:/var/lib/mysql:cached
-        environment:
-            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
-            MYSQL_DATABASE: ${MYSQL_DATABASE}
-            MYSQL_USER: ${MYSQL_USER}
-            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
-    elasticsearch:
-        build: config/elk/elasticsearch
-        volumes:
-            - ./var/data/elasticsearch:/usr/share/elasticsearch/data:cached
-        environment:
-            ES_JAVA_OPTS: "-Xmx256m -Xms256m"
-    logstash:
-        build: config/elk/logstash
-        depends_on:
-            - elasticsearch
-        volumes:
-            - ./var/logs:/var/log/other:cached
-    kibana:
-        build: config/elk/kibana
-        ports:
-            - ${PORT_KIBANA}:5601
-        depends_on:
-            - elasticsearch
-            - logstash
BREAKS HERE
-      - ./config/php/:/etc/php7/conf.d/
-      - "8181:8181"
-      - ./build/dashboard/src:/var/www/html
BREAKS HERE
-       DNS1: 127.0.0.1
-       DNS2: 1.1.1.1
BREAKS HERE
-    build: .
BREAKS HERE
-web:
-    build: web
-    volumes:
-        - ./data/www:/var/www/html/
-        - ./data/archives:/root/drush-backups
-    ports:
-        - "80:80"
-    links:
-        - mysql
-mysql:
-    build: mysql
-    environment:
-        MYSQL_ROOT_PASSWORD: root
-        MYSQL_DATABASE: drupal8
-        MYSQL_ALLOW_EMPTY_PASSWORD: no
-    ports:
-        - "3306:3306"
BREAKS HERE
-    image: "kong:0.10"
BREAKS HERE
-      io.rancher.container.start_once: true
BREAKS HERE
-      DOJOT_SERVICE_MANAGEMENT: 'internal'
-      DOJOT_SERVICE_MANAGEMENT: 'internal'
BREAKS HERE
-      - "php"
-php:
-    build: ./build/php
-      - "9000:9000"
-      - "mongo"
BREAKS HERE
-    - ./app.py:/usr/src
BREAKS HERE
-    command: '--path.procfs=/host/proc --path.sysfs=/host/sys --collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)" --collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
-      - back-tier
BREAKS HERE
-        - ./www:/var/www/html/
-        MYSQL_USER: root
-        MYSQL_PASSWORD: root
BREAKS HERE
-       ServerIP: {SERVERIP}
BREAKS HERE
-    build: ./voting-app/.
-    links:
-      - redis
-    networks:
-      - front-tier
-      - back-tier
-
-  result-app:
-    build: ./result-app/.
-    volumes:
-      - ./result-app:/app
-    ports:
-      - "5001:80"
-    links:
-      - db
-    networks:
-      - front-tier
-      - back-tier
-
-  worker:
-    build: ./worker
-    links:
-      - db
-      - redis
-    networks:
-      - back-tier
-    networks:
-      - back-tier
-    volumes:
-      - "db-data:/var/lib/postgresql/data"
-    networks:
-      - back-tier
-volumes:
-  db-data:
-
-networks:
-  front-tier:
-  back-tier:
BREAKS HERE
-  image: deviny/fpm:7.2.1
-  #image: deviny/fpm:7.1.13
BREAKS HERE
-    - /usr/local/bin/docker:/usr/bin/docker
BREAKS HERE
-  # mysql:
-  #   image: mysql
-  #   environment:
-  #     MYSQL_ROOT_PASSWORD: not_safe
-  #   networks:
-  #     default:
-  #       aliases:
-  #         - mysql
-  #
-  # cygnus:
-  #   image: fiware/cygnus-ngsi
-  #   volumes:
-  #     - ./cygnus/agent.conf:/opt/apache-flume/conf/agent.conf
-  #   networks:
-  #     default:
-  #       aliases:
-  #         - cygnus
-
-  # cassandra:
-  #   image: "cassandra:2.2"
-  #   networks:
-  #     default:
-  #       aliases:
-  #         - cassandra
-  #         - kong-db
-
-    #image: "iotmid-docker.cpqd.com.br:5000/jenkins/pep-kong:1ff2171"
-
-  # mysql:
-  #   image: mysql
-  #   environment:
-  #     MYSQL_ROOT_PASSWORD: keypass
-  #     MYSQL_DATABASE: keypass
-  #     MYSQL_USER: keypass
-  #     MYSQL_PASSWORD: keypass
-  #
-  # keypass:
-  #   image: telefonicaiot/fiware-keypass
-  #   depends_on:
-  #     - mysql
-  #   restart: always
-  #   ports:
-  #     - "127.0.0.1:7070:7070"
-  #     - "127.0.0.1:7071:7071"
-  #   command: -dbhost mysql
BREAKS HERE
-
BREAKS HERE
-      - ~/docker-lnmp/work/php71/sources.list:/etc/apt/sources.list
BREAKS HERE
-    image: "iotmid-docker:5000/jenkins/iotagent-json:7f188b8"
BREAKS HERE
-    image: kirin:latest
-    image: kirin:latest
-    image: kirin_configurator:latest
BREAKS HERE
-      GF_SMTP_HOST: ${TTN_DASHBOARD_GRAFANA_SMTP_HOST:-localhost}:25
BREAKS HERE
-    image: expediadotcom/haystack-service-graph-node-finder
-      image: expediadotcom/haystack-service-graph-graph-builder
BREAKS HERE
-    ports:
-      - "80:80"
BREAKS HERE
-    - ./certs/dev.desec.io:/etc/ssl/private:ro
-        ipv6_address: 2a01:4f8:a0:12eb:deec:0642:ac10:0080
-    - ./certs/dev.desec.io:/etc/ssl/private:ro
BREAKS HERE
-      - -upstream=http://tautulli:8181
BREAKS HERE
-   - ./desec-certs/nils.dedyn.io:/etc/ssl/private
BREAKS HERE
-    image: wurstmeister/kafka:0.10.0.0
BREAKS HERE
-    command: 'vault server -config=/vault/config'
-    networks:
-      internal:
-        ipv4_address: 172.16.238.20
-      VAULT_API_ADDR: "http://172.16.238.20:8200"
-      VAULT_CLUSTER_ADDR: "https://172.16.238.20:8201"
BREAKS HERE
-    image:
-    restart: always
BREAKS HERE
-    image: wikibase/wikibase:1.30
BREAKS HERE
-  # agent
-  agent:
-    command: bash agent.sh
-      - MIX_ENV=agent
BREAKS HERE
-            - ./logs/symfony:/var/www/symfony/var/logs:cached
-            - ./logs/symfony:/var/www/symfony/var/logs:cached
BREAKS HERE
-### Nginx 容器 #########################################
-
-nginx:
-    build: ./build/nginx
-    privileged: true
-    ports:
-      - "80:80"
-      - "443:443"
-    links:
-      - "php71"
-    volumes:
-      - ${APP_PATH}work/wwwroot:/etc/nginx/html/
-      - ${APP_PATH}work/components/nginx/config/conf.d:/etc/nginx/conf.d
-      - ${APP_PATH}work/components/nginx/log:/var/log/nginx
-    environment:
-      TIME_ZONE: ${GLOBAL_TIME_ZONE}
-
-### PHP 容器 #########################################
-
-php71:
-    build: ./build/php71
-    privileged: true
-    ports:
-      - "9071:9000"
-    links:
-      - "mysql"
-      - "redis"
-    volumes:
-      - ${APP_PATH}work/wwwroot:/etc/nginx/html
-      - ${APP_PATH}work/components/php71/config/php.ini:/usr/local/etc/php/php.ini
-      - ${APP_PATH}work/components/php71/log:/var/log
-    environment:
-      TIME_ZONE: ${GLOBAL_TIME_ZONE}
-
-### Mysql 容器 #########################################
-
-mysql:
-    build: ./build/mysql
-    privileged: true
-    ports:
-      - "3366:3306"
-    volumes:
-      - ${APP_PATH}work/components/mysql/data:/var/lib/mysql
-      - ${APP_PATH}work/components/mysql/config/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
-      - ${APP_PATH}work/components/mysql/log/error.log:/var/log/mysql/error.log
-    environment:
-      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
-      TIME_ZONE: ${GLOBAL_TIME_ZONE}
-
-### Redis 容器 #########################################
-
-redis:
-    build: ./build/redis
-    privileged: true
-    ports:
-      - "6399:6379"
-    volumes:
-      - ${APP_PATH}work/components/redis/config/redis.conf:/usr/local/etc/redis/redis.conf
-      - ${APP_PATH}work/components/redis/log/redis.log:/var/log/redis/redis.log
-    environment:
-      TIME_ZONE: ${GLOBAL_TIME_ZONE}
BREAKS HERE
-   build: vulhub/elasticsearch:1.4.4
BREAKS HERE
-    image: duiying/php7.2
-    image: duiying/nginx
BREAKS HERE
-    labels:
-      io.rancher.container.pull_image: always
-    labels:
-      io.rancher.container.pull_image: always
-    labels:
-      io.rancher.container.pull_image: always
-    labels:
-      io.rancher.container.pull_image: always
-    labels:
-      io.rancher.container.pull_image: always
-    labels:
-      io.rancher.container.pull_image: always
-    labels:
-      io.rancher.container.pull_image: always
-    labels:
-      io.rancher.container.pull_image: always
-    labels:
-      io.rancher.container.pull_image: always
BREAKS HERE
-           - "443:443" #Proxy port
BREAKS HERE
-    - GITLAB_TIMEZONE=Shanghai
BREAKS HERE
-dh:
-  build: .
-  links:
-    - "postgres"
-    - "kafka"
-    - "zookeeper"
-  ports:
-    - "8080:8080"
-  environment:
-    DH_POSTGRES_USERNAME: "postgres"
-    DH_POSTGRES_PASSWORD: "mysecretpassword"
-    DH_POSTGRES_DB: "postgres"
-zookeeper:
-  image: jplock/zookeeper:3.4.6
-  ports:
-    - "2181:2181"
-kafka:
-  image: ches/kafka:0.8.2.1
-  links:
-    - "zookeeper"
-  expose:
-    - "9092"
-postgres:
-  image: postgres:9.4.4
-  ports:
-    - "5432:5432"
BREAKS HERE
-       mountpoint: ${CONTAINERVOLUME}/var/www/html/cusom_apps
BREAKS HERE
-    hostname: iri
-              "-Dlogback.configurationFile=/iri/conf/logback.xml",
-    hostname: nelson.cli
-    hostname: nelson.gui
-    command: "--apiHostname nelson.cli"
-    hostname: field.cli
BREAKS HERE
-  zammad:
-    depends_on:
-      - zammad-elasticsearch
-      - zammad-postgresql
-    image: zammad/zammad-docker-compose:zammad
-    labels:
-      io.rancher.container.pull_image: always
-      io.rancher.container.start_once: 'true'
-    restart: on-failure
-    volumes:
-      - data-zammad:/home/zammad
-
-      - zammad
-      - zammad
-      - zammad
-    image: zammad/zammad-docker-compose:zammad-railsserver
-    depends_on:
-      - zammad
-      - zammad
-    image: zammad/zammad-docker-compose:zammad-scheduler
-      - zammad
-    image: zammad/zammad-docker-compose:zammad-websocket
BREAKS HERE
-    image: telefonicaiot/perseo-fe
BREAKS HERE
-    MYSQL_ROOT_PASSWORD
BREAKS HERE
-     - ./devadmin/html:/var/www/html
-     - ./devadmin/config.inc.php:/var/www/html/poweradmin/inc/config.inc.php
BREAKS HERE
-      # - pgsql
-    image: mogtofu33/mariadb:latest
-      - ${HOST_LOGS_ROOT:-./data/logs}:/var/log/mysql
-#  pgsql:
-#    image: mogtofu33/postgres:latest
-#    expose:
-#      - "5432"
-#    ## Comment these two lines on Windows system, permissions issue.
-#    volumes:
-#      - ${HOST_DATABASE_POSTGRES:-./data/database/pgsql}:/var/lib/postgresql/data
-#    env_file: .env
-#    environment:
-#      - CONTAINER_NAME=pgsql
-#    ## Remove to avoid starting on system reboot.
-#    restart: always
-    image: diyan/mailhog:latest
-      - "${MAILHOG_HOST_PORT:-8025}:8025"
-    env_file: .env
-    image: bpressure/alpine-memcached:latest
-    ## Remove to avoid starting on system reboot.
-    restart: always
-    image: mogtofu33/solr:latest
-      - "${SOLR_HOST_PORT:-8983}:8983"
-    volumes:
-      - ${HOST_LOGS_ROOT:-./data/logs}:/var/log/solr
-  #     - "${LDAP_HOST_PORT:-389}:389"
-  #   env_file: .env
-  #     - "${PHPLDAPADMIN_HOST_PORT:-8443}:8443"
-  #   env_file: .env
-  # docker-ui:
-  #   image: uifd/ui-for-docker:latest
-  #   ports:
-  #     - "9001:9000"
-  #   volumes:
-  #     - /var/run/docker.sock:/var/run/docker.sock
-  #   privileged: true
-  #   ## Remove to avoid starting on system reboot.
-  #   restart: always
BREAKS HERE
-# Docker Compose Drupal full dev stack.
-      # Web root access, optional but can help with multi sites.
-      # Any .sql file will be imported from here on start.
-      ## Comment on Windows system, permissions issue.
-    ## Comment these two lines on Windows system, permissions issue.
-      # A dump.pg_dump file will be imported from here on start.
-  #   image: wodby/varnish:4.1-3.0.7
BREAKS HERE
-      CYPHON_SUPERUSER: "YES"
-      - "elasticsearch:9200:9200"
BREAKS HERE
-      - ENGINE_PLAN_HOSTNAME=engine-plan
-    image: opentosca/engine-plan
-      - '9443:9443' # https
-      # - DOCKER_DAEMON_ARGS=--dns 129.69.211.1 --dns 129.69.215.5 -D
BREAKS HERE
-      - ./config/php/:/etc/php7/
BREAKS HERE
-version: '2'
-      - zammad
-      - zammad
-    depends_on:
-      - zammad-railsserver
-    depends_on:
-      - zammad-railsserver
BREAKS HERE
-    image: mogtofu33/php
-      - ./config/php/php.ini:/etc/php7/php.ini
-      - ./config/php/php-fpm.conf:/etc/php7/php-fpm.conf
-      - ./config/php/conf.d/:/etc/php7/conf.d/
-      - ./config/php/php-fpm.d/:/etc/php7/php-fpm.d/
BREAKS HERE
-    # links:
-      ## Choose database, uncomment service concerned below.
-      # - mysql
-      # - pgsql
-      ## Choose optionnal services.
-      # - memcache
-      # - redis
-      # - solr
-      # - mailhog
-    volumes:
-      - ${HOST_WEB_ROOT:-./data/www}:/www
-      - ${HOST_LOGS_ROOT:-./data/logs}:/var/log/apache2
-      - ./config/php/:/etc/php7/
-      - ./config/apache/httpd.conf:/etc/apache2/httpd.conf
-      - ./config/apache/vhost.conf:/etc/apache2/vhost/vhost.conf
-      - ./config/apache/conf.d/:/etc/apache2/conf.d/
-      ## Optional Drush alias file (or any other config)
-      - ./config/drush/aliases.drushrc.php:/etc/drush/aliases.drushrc.php
-      ## If you have composer set locally, share cache to speed up.
-      # - $HOME/.composer/cache:/var/www/.composer/cache
-    # env_file: .env
-    container_name: ddd-apache2
-    ## Remove to avoid starting on system reboot.
-    restart: always
-  mysql:
-    image: mariadb:latest
-    expose:
-      - "3306"
-    volumes:
-      - ${HOST_LOGS_ROOT:-./data/logs}:/var/log/mysql
-      ## Comment these two lines on Windows system, permissions issue.
-      - ${HOST_DATABASE_MYSQL:-./data/database/mysql}:/var/lib/mysql
-      - ./config/mysql:/etc/mysql
-    env_file: .env
-    ## Remove to avoid starting on system reboot.
-    restart: always
-  pgsql:
-    image: postgres:alpine
-    expose:
-      - "5432"
-    ## Comment these two lines on Windows system, permissions issue.
-    volumes:
-      - ${HOST_DATABASE_POSTGRES:-./data/database/pgsql}:/var/lib/postgresql/data
-    env_file: .env
-    ## Remove to avoid starting on system reboot.
-    restart: always
-  mailhog:
-    image: mailhog/mailhog
-    expose:
-      - "1025"
-    ports:
-      - "8025:8025"
-    ## Remove to avoid starting on system reboot.
-    restart: always
-  memcache:
-    image: memcached:alpine
-    expose:
-      - "11211"
-    ## Remove to avoid starting on system reboot.
-    restart: always
-  redis:
-    image: redis:alpine
-    expose:
-      - "6379"
-    ## Remove to avoid starting on system reboot.
-    restart: always
-  solr:
-    build: ./build/solr-${SOLR_VERSION:-6}
-    ports:
-      - "8983:8983"
-    environment:
-      - EXTRA_ACCESS="/solr/drupal"
-    ## Remove to avoid starting on system reboot.
-    restart: always
-  # varnish:
-  #   build: ./build/varnish
-  #   ports:
-  #     - "${VARNISH_HOST_PORT:-8080}:80"
-  #     - "6082:6082"
-  #   links:
-  #     - apache
-  #   volumes:
-  #     - ${HOST_LOGS_ROOT:-./data/logs}:/var/log/varnish
-  #   env_file: .env
-  #   ## Remove to avoid starting on system reboot.
-  #   restart: always
-  # ldap:
-  #   image: osixia/openldap:latest
-  #   ports:
-  #     - "389:389"
-  #   ## Remove to avoid starting on system reboot.
-  #   restart: always
-  # ldapadmin:
-  #   image: osixia/phpldapadmin:latest
-  #   links:
-  #     - ldap
-  #   ports:
-  #     - "8443:8443"
-  #   ## Remove to avoid starting on system reboot.
-  #   restart: always
-  dashboard:
-    build: ./build/dashboard
-    ports:
-      - "8181:8181"
-    volumes:
-      - ./build/dashboard/src:/var/www/html
-      - ${HOST_WEB_ROOT:-./data/www}:/www
-      - /var/run/docker.sock:/var/run/docker.sock
-    env_file: .env
-################################################################################
-# Docker compose Drupal full dev stack.
-#
-# A single Docker compose file that try to simply and quickly setup a full
-# Drupal development environment.
-#
-# Project page:
-#   https://github.com/Mogtofu33/docker-compose-drupal
-#
-# Quick set-up:
-#  Copy this file, rename to docker-compose.yml, comment or remove services
-#  definition based on your needs.
-#  Copy and rename default.env to .env
-#  Launch:
-#    docker-compose up
-#
-# You can check your config after editing this file with:
-#   docker-compose config
-#
-# Services settings are in config folder, check and adapt to your needs.
-#
-# For more information on docker compose file structure:
-# @see https://docs.docker.com/compose/
-#
-################################################################################
-version: '3'
-services:
-  apache:
-    image: mogtofu33/apache-php:1.${PHP_VERSION:-7.0}
-    ports:
-      - "${APACHE_HOST_HTTP_PORT:-80}:80"
-      - "${APACHE_HOST_HTTPS_PORT:-443}:443"
-  dashboard:
-    build: ./build/dashboard
-    ports:
-      - "8181:80"
-    volumes:
-      - ./build/dashboard/app:/var/www/html
-      - ${HOST_WEB_ROOT:-./data/www}:/www
-      - /var/run/docker.sock:/var/run/docker.sock
-    env_file: .env
BREAKS HERE
-nginx:
-    image: nginx:alpine
-    hostname: nginx
-    ports:
-    links:
-    volumes:
-letsencrypt:
-    restart: always
-    image: kvaps/letsencrypt-webroot
-    volumes:
-    links:
-    env_file: env/letsencrypt
-redis:
-    image: redis:alpine
-    hostname: redis
-    ports:
-        - "6379:6379"
-    volumes:
-memcached:
-    image: memcached:alpine
-    hostname: memcached
-    ports:
-        - "11211:11211"
-postgres:
-    image: postgres:alpine
-    hostname: postgres
-    ports:
-        - "5432:5432"
-    volumes:
-sentry-web:
-    image: sentry:8.16
-    hostname: sentry
-    ports:
-        - "9000:9000"
-        - "9001:9001"
-    env_file: env/sentry
-    links:
-    volumes:
-sentry-cron:
-    image: sentry:8.16
-    hostname: sentry
-    command: "sentry run cron"
-    env_file: env/sentry 
-    links:
-sentry-worker:
-    image: sentry:8.16
-    hostname: sentry
-    command: "sentry run worker"
-    env_file: env/sentry 
-    links:
BREAKS HERE
-      GF_SMTP_HOST: "${TTN_DASHBOARD_MAIL_HOST_NAME:-localhost}:25"
BREAKS HERE
-      - "influxdb:influxdb"
-    image: grafana/grafana:4.3.2
-      GF_SMTP_HOST: ${TTN_DASHBOARD_GRAFANA_SMTP_HOST_FQDN:-localhost}:25
-      GF_SMTP_FROM_ADDRESS: "grafana@${TTN_DASHBOARD_GRAFANA_SMTP_HOST_FQDN:-localhost}"
-
-    # grafana opens ports on influxdb, so it needs to be able to talk to it.
BREAKS HERE
-  build: ./nexus
-    - /usr/local/bin/docker:/usr/bin/docker
-  build: ./sonar
-   - "19000:9000"
-   - "5432:5432"
- sonardb:
-  networks:
-    - prodnetwork
-  image: postgres
-  environment:
-   - POSTGRES_USER=sonar
-   - POSTGRES_PASSWORD=sonar
-  volumes:
-    - /opt/postgres/data:/var/lib/postgresql/data
-  image: gitlab/gitlab-ce:8.14.4-ce.0
-    - "80:80"
-    - "443:443"
-    - "2222:22"
BREAKS HERE
-    image: mogtofu33/apache-php:1.${PHP_VERSION:-7}
-      - ./config/php${PHP_VERSION:-7}/conf.d:/etc/php/conf.d
-      - ./config/apache:/etc/apache2
-      - ./config/drush:/etc/drush
-      # - ${HOST_LOGS_ROOT:-./data/logs}:/var/log/mysql
-    # Optional persistent data for Redis.
-    # volumes:
-    #   - ${HOST_DATA_REDIS:-./data/redis}:/data
-  ## Optionnal Docker ui, uncomment to enable.
-  # docker-ui:
-  #   image: uifd/ui-for-docker:latest
-  #   ports:
-  #     - "9001:9000"
-  #   volumes:
-  #     - /var/run/docker.sock:/var/run/docker.sock
-  #   privileged: true
-  #   ## Remove to avoid starting on system reboot.
-  #   restart: always
BREAKS HERE
-  net-redis:
BREAKS HERE
-	version: '3'
-#    ports:
-#      - "9000:9000"
-
-# ssl
-# Test of TLS certificate
-#      TLSVERIFY: 
-#      TLSCACERT: ${PORTAINER_SSL_CA_CERTIFICATE}
-#      TLSCERT: ${PORTAINER_SSL_CERTIFICATE}
-#      TLSKEY: ${PORTAINER_SSL_KEY}
-
-
BREAKS HERE
-    image: unfetter/unfetter-discover-gateway:0.3.8
-    image: unfetter/unfetter-discover-processor:0.3.8
-    image: unfetter/unfetter-ctf-ingest:0.3.8
-    image: unfetter/unfetter-api-explorer:0.3.8
-    image: unfetter/unfetter-discover-api:0.3.8
-    image: unfetter/unfetter-pattern-handler:0.3.8
-    - app:app
BREAKS HERE
-    build: ./instances_configurator
-      - tyr_worker
-    volumes:
-      # TODO this is not necessary, it's just by convenience, remove this to import it directly in instances_configurator
-      - ed_migration:/usr/share/navitia/ed
-  ed_migration:
BREAKS HERE
-    image: $REPOSITORY/$PREFIXIMAGE-dbserver:$ODMVERSION
BREAKS HERE
-    build: config/mysql
BREAKS HERE
-              npm run server:prod:container"
-              npm run server:prod:container"
-              npm run server:prod:container"
BREAKS HERE
-      - ${APP_PATH}work/components/mysql/log:/var/log/mysql
BREAKS HERE
-      - ~/docker-lnmp/work/php/php.ini:/usr/local/etc/php/php.ini
-      - ~/docker-lnmp/work/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
-      - /Art/docker-lnmp/work/wwwroot/:/etc/nginx/html/
-      - /Art/docker-lnmp/work/php/php.ini:/usr/local/etc/php/php.ini
-      - /Art/docker-lnmp/work/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
BREAKS HERE
-mongo3:
-  image: mongo:3.0
-  hostname: mongo3
-  expose:
-    - "27017"
-    - "28017"
-  restart: always
-  entrypoint: [ "/usr/bin/mongod", "--replSet", "rs", "--rest", "--httpinterface" ]
-mongo2:
-  image: mongo:3.0
-  hostname: mongo2
-  expose:
-    - "27017"
-    - "28017"
-  restart: always
-  entrypoint: [ "/usr/bin/mongod", "--replSet", "rs", "--rest", "--httpinterface" ]
-mongo1:
-  image: mongo:3.0
-  hostname: mongo1
-  expose:
-    - "27017"
-    - "28017"
-  links:
-    - mongo2:mongo2
-    - mongo3:mongo3
-  restart: always
-  entrypoint: [ "/usr/bin/mongod", "--replSet", "rs", "--rest", "--httpinterface" ]
-
-mongosetup:
-  image: mongo:3.0
-  links:
-    - mongo1:mongo1
-    - mongo2:mongo2
-    - mongo3:mongo3
-  volumes:
-    - ./scripts:/scripts
-  restart: always
-  entrypoint: [ "bash", "/scripts/mongosetup.sh" ]
BREAKS HERE
-  container_name: prometheus
-    - "cadvisor:cad"
-  container_name: exporter
-  container_name: promdash
-  container_name: cadvisor
BREAKS HERE
-    image: desec-io/dedyn/www:latest
-    image: desec-io/dedyn/static:latest
-    image: desec-io/dedyn/dbapi:latest
-    image: desec-io/dedyn/dblord:latest
-    image: desec-io/dedyn/dbmaster:latest
-    image: desec-io/dedyn/api:latest
-    image: desec-io/dedyn/nslord:latest
-    image: desec-io/dedyn/nsmaster:latest
BREAKS HERE
-    - DATABASE_URL="postgres://postgres:postgres@db:5432/postgres"
BREAKS HERE
-    command: '--path.procfs=/host/proc --path.sysfs=/host/sys --collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)" --collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
-      - back-tier
BREAKS HERE
-version: '2'
-  php:
-    build:
-      context: config/php-fpm
-    volumes:
-      - ${PROJECT_PATH}:/var/www/project:cached
-      - ./var/logs/project:/var/www/project/var/logs:cached
-      - ${COMPOSER_PATH}/cache:/var/www/.composer/cache:cached
-      - ${SSH_KEY_PATH}/id_rsa:/var/www/.ssh/id_rsa
-      - ${SSH_KEY_PATH}/id_rsa.pub:/var/www/.ssh/id_rsa.pub
-      - ${SSH_KEY_PATH}/known_hosts:/var/www/.ssh/known_hosts
-    env_file:
-      - .env
-  blackfire:
-    image: blackfire/blackfire
-    env_file:
-      - .env
-    volumes_from:
-      - php
-    environment:
-      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
-      MYSQL_DATABASE: ${MYSQL_DATABASE}
-      MYSQL_USER: ${MYSQL_USER}
-      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
-    build: config/elk/elasticsearch
-    build: config/elk/logstash
-    build: config/elk/kibana
BREAKS HERE
-  postgresql:
-    image: monotek/zammad-docker-compose:postgresql
-    volumes:
-      - data-postgresql:/var/lib/psql
-  nginx:
-    image: monotek/zammad-docker-compose:nginx
-    ports:
-      - "80:80"
-    links:
-      - zammad
-    depends_on:
-      - zammad
-    volumes:
-      - data-zammad:/home/zammad
BREAKS HERE
-      MYSQL_DATABASE: example
-      MYSQL_USER: example
-      MYSQL_PASSWORD: example
-    links:
-      - db
-    depends_on:
-      - db
-      MYSQL_DATABASE: example
-      MYSQL_USER: example
-      MYSQL_PASSWORD: example
-      NOW_HOST_DB: host.docker.internal
-      NOW_PORT_DB: '3306'
-  db:
-    build: ../db
-    image: cluster-db
-    ports:
-      - '3306:3306'
-    restart: on-failure
-    volumes:
-      - 'mysql-data:/var/lib/mysql'
-    environment:
-      MYSQL_DATABASE: example
-      MYSQL_USER: example
-      MYSQL_PASSWORD: example
-      MYSQL_ROOT_PASSWORD: example
-      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
-      MYSQL_ROOT_HOST: '%'
-volumes:
-  mysql-data: null
BREAKS HERE
-      - db:eminem
BREAKS HERE
-      NODE_ENV: development
BREAKS HERE
-    - POSTGRES_PASSWORD: vulhub_secret
BREAKS HERE
-    image: unfetter/unfetter-discover-processor:0.3.2
-    image: unfetter/unfetter-ctf-ingest:0.3.2
-    image: unfetter/unfetter-discover-api:0.3.2
-    image: unfetter/unfetter-discover-api:0.3.2
-    image: unfetter/unfetter-ui:0.3.2
BREAKS HERE
-      - db:eminem.com
BREAKS HERE
-    image: registry.cn-beijing.aliyuncs.com/duiying/php7.2
-    image: registry.cn-beijing.aliyuncs.com/duiying/nginx
BREAKS HERE
-      - zammad
BREAKS HERE
-    image: nginx:1.13.5-alpine
-     - ./uifiles:/etc/nginx/html
-    image: unfetter/unfetter-discover-processor:0.3.4
-    image: unfetter/unfetter-ctf-ingest:0.3.4
-    image: unfetter/unfetter-api-explorer:0.3.4
-    image: unfetter/unfetter-discover-api:0.3.4
-    image: unfetter/unfetter-pattern-handler:0.3.4
BREAKS HERE
-        - DRIVER_URL=$DRIVER_URL_POSTGRES
-        - DRIVER_URL=$DRIVER_URL_POSTGRES
-        - DRIVER_URL=$DRIVER_URL_POSTGRES
-        - DRIVER_URL=$DRIVER_URL_POSTGRES
BREAKS HERE
-      ## Used by dashboard.
BREAKS HERE
-version: '3'
BREAKS HERE
-    image: "dojot/ejbca"
BREAKS HERE
-  # 自行构建镜像请使用此 compose 文件
BREAKS HERE
-      - 3010:3000
BREAKS HERE
-version: '2'
-    environment:
-      JAVA_OPTS: "-Djava.awt.headless=true"
BREAKS HERE
-    ports:
-      - "8088:8088"
BREAKS HERE
-    image: shesek/lightning-charge
BREAKS HERE
-      DH_AUTH_URL: ${DH_AUTH_URL:-http://dh_auth:8090}
BREAKS HERE
-    - ENV=prod
-    # If deployed in a proxy, add the proxy's URL here
-    - HTTPS_PROXY_URL=
BREAKS HERE
-        image: campbellsoftwaresolutions/osticket
BREAKS HERE
-version: '3'
-
-services:
-    lnmp-nginx:
-        depends_on:
-            - lnmp-php
-        image: nginx:1.14.2-alpine
-        ports:
-            - 8088:80
-            - 8081:81
-            - 443:443
-        volumes:
-          - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro # 修改默认配置文件
-          - ./conf/conf.d:/etc/nginx/conf.d:ro
-          - ./log:/var/log/nginx:rw
-          - ./www:/var/www:rw
-          - ./etc/letsencrypt:/etc/letsencrypt
-        restart: always  
-        container_name: lnmp-nginx-v8 # 容器名称
-        networks:
-            - frontend
-    lnmp-php:
-        depends_on:
-            - lnmp-mysql
-            - lnmp-redis
-        image: tinywan/lnmp:php7.2.13-v3
-        volumes:
-            - ./www:/var/www:rw
-            - ./etc/php.ini:/usr/local/php/etc/php.ini
-            - ./etc/php-fpm.conf:/usr/local/php/etc/php-fpm.conf
-            - ./etc/php-fpm.d/www.conf:/usr/local/php/etc/php-fpm.d/www.conf
-        networks:
-            - frontend
-            - backend    
-        container_name: lnmp-php7.2-v8 # 容器名称   
-    lnmp-mysql:
-        image: mysql:5.7
-        restart: always
-        command: --default-authentication-plugin=mysql_native_password # 这行代码解决无法访问的问题
-        hostname: lnmp-mysql-v8
-        ports:
-            - "3308:3306"
-        volumes:
-            - ./etc/mysql/data:/var/lib/mysql
-            - ./etc/mysql/my.cnf:/etc/mysql/my.cnf
-        environment:
-            MYSQL_ROOT_PASSWORD: 123456  
-        networks:
-            - backend
-        restart: always
-        container_name: lnmp-mysql-v8
-    lnmp-redis:
-        image: redis:5.0-alpine
-        hostname: lnmp-redis-v8
-        ports:
-            - "63789:63789"
-        command: redis-server /usr/local/etc/redis/redis.conf:ro    
-        networks:
-            - backend      
-        volumes:
-            - ./etc/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
-            - ./etc/redis/data:/data
-        restart: always
-        container_name: lnmp-redis-v8
-    phpmyadmin:
-        image: phpmyadmin/phpmyadmin:latest
-        ports:
-            - "8082:80"
-        networks:
-            - frontend
-            - backend
-        environment:
-            - PMA_HOST=lnmp-mysql
-            - PMA_PORT=3306
-        container_name: lnmp-phpmyadmin
-networks:
-  frontend:
-    driver: bridge
-  backend:
BREAKS HERE
-    command: nodemon --debug server.js
BREAKS HERE
-  web:
BREAKS HERE
-  expose:
-    - "9090"
-  volumes:
-    - "$PWD/prometheus.yml:/etc/prometheus/prometheus.yml"
BREAKS HERE
-    - "53:53/TCP"
-    - "53:53/UDP"
BREAKS HERE
-      PUID: '1001'
-      PGID: '1000'
BREAKS HERE
-    build: desec-www
-    - ./desec-certs/dev.desec.io:/etc/ssl/private
-    build: desec-static
-    - ./desec-certs/dev.desec.io:/etc/ssl/private
BREAKS HERE
-  build: "/prom/"
-  image: "prom/prom_container-exporter"
BREAKS HERE
-      HAYSTACK_PROP_HEALTH_STATUS_PATH: "/app/isHealthy"
-      HAYSTACK_PROP_HEALTH_STATUS_PATH: "/app/isHealthy"
BREAKS HERE
-  crowi_data_!:
BREAKS HERE
-    network_mode: 'host' # required because OpenTOSCA has  localhost endpoints hard-coded
BREAKS HERE
-    image: mogtofu33/php:${PHP_VERSION:-7.2}
-      - ./config/php/${PHP_VERSION:-7.2}/php.ini:/etc/php${PHP_MAJOR_VERSION:-7}/php.ini
-      - ./config/php/${PHP_VERSION:-7.2}/php-fpm.conf:/etc/php${PHP_MAJOR_VERSION:-7}/php-fpm.conf
-      - ./config/php/${PHP_VERSION:-7.2}/conf.d/:/etc/php${PHP_MAJOR_VERSION:-7}/conf.d/
-      - ./config/php/${PHP_VERSION:-7.2}/php-fpm.d/:/etc/php${PHP_MAJOR_VERSION:-7}/php-fpm.d/
-      - /home/jeanv/.composer/cache:/composer/cache
-  varnish:
-    build: ./build/varnish
-    ports:
-      - "${VARNISH_HOST_PORT:-8080}:80"
-      - "6082:6082"
-    links:
-      - apache
-    env_file: .env
-    ## Remove to avoid starting on system reboot.
-    restart: always
BREAKS HERE
-    build: postgres/
-    image: redis:3.2.6
-    image: rabbitmq:3.6.6
-    entrypoint: ['/scripts/entrypoint.sh']
-    command: ["nginx", "-g", "daemon off;"]
-    entrypoint: ['/scripts/entrypoint.sh']
-    command: ['coffee', 'index.coffee']
BREAKS HERE
-    - agent
BREAKS HERE
-    - smb.conf:/usr/local/samba/etc/smb.conf
BREAKS HERE
-   - 8080:8080
-
- nginx:
-  build: ./nginx
-  networks:
-   dphNet:
-    aliases:
-      - nginx
-  ports: 
-   - 80:80
-   - 443:443
-  ports:
-   - 8100:8100
BREAKS HERE
-      - POSTGRESQL_DATABASE=my_app_development
-      - DATABASE_URL=postgres://postgres@postgresql/my_app_development
BREAKS HERE
-nslord:
-  # extending from main .yml
-  ports:
-    - "5300:53"
-    - "5300:53/udp"
-    - "8081:8081"
-devadmin:
-  build: devadmin
-  links:
-   - db
-  ports:
-   - "81:80"
-  volumes:
-   - ./devadmin/html:/var/www/html
-   - ./devadmin/config.inc.php:/var/www/html/poweradmin/inc/config.inc.php
BREAKS HERE
-    image: kartoza/postgis:9.6-2.4
-      - 'osm-postgis-data:/var/lib/postgresql'
-      # Use clip in the database
-      - CLIP=no
BREAKS HERE
-     env_file: $DIR/.env  
-       ServerIP: {SERVERIP}
BREAKS HERE
-      - chromenode
-      - firefoxnode
BREAKS HERE
-        image: jess/privoxy
-        expose:
-            - 8118
-        links:
-            - tordaemon
-        restart: always
-
-    tordaemon:
-          driver: "none"
BREAKS HERE
-      - ENGINE_PLAN_HOSTNAME=engine-plan
-    image: opentosca/engine-plan
-      - '9443:9443' # https
-      # - DOCKER_DAEMON_ARGS=--dns 129.69.211.1 --dns 129.69.215.5 -D
BREAKS HERE
-      - CMD_DB_URL=sqlite://dummyhost/hackmd/sqlite/codimd.db
-      - CMD_CSP_ENABLE=false
BREAKS HERE
-     - "5300:53"
-     - "5300:53/udp"
BREAKS HERE
-    image: tutum/influxdb
BREAKS HERE
-      VAULT_LOCAL_CONFIG: '{"backend": {"consul": {"address": "consul:8500", "api_addr": "172.16.238.20", "path":"vault", "scheme": "http"}}, "listener": {"tcp":{"address": "0.0.0.0:8200","tls_disable":"1"}}, "default_lease_ttl": "168h", "max_lease_ttl": "720h", "disable_mlock": "true"}'
BREAKS HERE
-        AMTP_AUTH:
BREAKS HERE
-  docker-ui:
-    image: uifd/ui-for-docker:latest
-    ports:
-      - "9001:9000"
-    volumes:
-      - /var/run/docker.sock:/var/run/docker.sock
-    privileged: true
-    ## Remove to avoid starting on system reboot.
-    restart: always
BREAKS HERE
-      #
-      # php-fpm config set in zz-docker.conf one file
-      #
-      - ./config/php/${LNMP_PHP_FPM_CONF:-zz-docker-log.conf}:/usr/local/etc/php-fpm.d/zz-docker-log.conf:ro,cached
-      - ./config/php/${LNMP_PHP_FPM_CONF:-zz-docker-slow-log.conf}:/usr/local/etc/php-fpm.d/zz-docker-slow-log.conf:ro,cached
-      - ./config/php/${LNMP_PHP_FPM_CONF:-zz-docker-pm.conf}:/usr/local/etc/php-fpm.d/zz-docker-pm.conf:ro,cached
-      - ./config/php/${LNMP_PHP_XDEBUG_INI:-docker-xdebug.ini}:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.temp:ro,cached
-      - ./dockerfile/php-fpm/docker-php-entrypoint:/usr/local/bin/docker-php-entrypoint:ro,cached
-      - XDEBUG_REMOTE_HOST=${XDEBUG_REMOTE_HOST:-192.168.199.100}
-
BREAKS HERE
-    image: mongo:3.4
BREAKS HERE
-      - "5000/udp"
BREAKS HERE
-  backend:
BREAKS HERE
-      - "80:80"
-      - "443:443"
BREAKS HERE
-  # we will backup this conatiners /home directory
BREAKS HERE
-    image: solr:6.5-alpine
-    # Optional persistent data for Solr.
-    # volumes:
-      # - /data/solr:/opt/solr/server/solr/mycores/drupal
-    entrypoint:
-      - docker-entrypoint.sh
-      - solr-precreate
-      - drupal
-    env_file: .env
BREAKS HERE
-#
-# docker-compose build --force-rm [--no-cache [<SERVICE_NAME>...]]
-# docker-compose up -d --remove-orphans
-# docker-compose logs -f [--tail=1 <SERVICE_NAME>...]
-# docker-compose down -v --remove-orphans
-#
-  tomcat:
-    build: ./tomcat
-      - '1337:1337' # container (http)
-      - '8080:8080' # tomcat (http)
-      - '9443:9443' # bps (https)
-      - '9763:9763' # bps (http)
-      - '9975:2375' # dind (tcp)
-      - '9990-9999:9990-9999' # dind
-    volumes:
-      # - '/var/run/docker.sock:/var/run/docker.sock'
-      - '/usr/local/tomcat/webapps'
-      - '/opt/'
-    environment:
-      - TOMCAT_USERNAME=tcManager
-      - TOMCAT_PASSWORD=4Syq5MQeedIDzzP6BG7b
-      - mynet
-  opentosca-container:
-      context: ./opentosca-container
-      - mynet
-    # volumes:
-    #   - './opentosca-container/config.ini:/opt/opentosca-container/org.opentosca.container.product/target/products/org.opentosca.container.product/linux/gtk/x86_64/configuration/config.ini'
-  bps:
-    build: ./bps
-      - mynet
-    networks:
-      - mynet
-  opentosca-ui:
-    build:
-      context: ./opentosca-ui
-      args:
-        - GIT_BRANCH=master
-    ports:
-      - '8088:8088'
-    networks:
-      - mynet
-  containerrepository:
-    build:
-      context: ./winery
-      args:
-        - GIT_BRANCH=master
-        - NAME=containerrepository
-      - '8082:8080' # tomcat (http)
-    environment:
-        - NAME=containerrepository
-      - mynet
-      - '8081:8080' # tomcat (http)
-    environment:
-      - NAME=winery
-      - mynet
-  mynet:
-  
BREAKS HERE
-version: '3'
-  links:
-   - db
-   - share
-   - solr6
-   - libreoffice
-  links:
-   - alfresco:alfresco
-   - share:share
-   - 8983:8983
-  image: xcgd/libreoffice
BREAKS HERE
-    - 3000:3000
-    - 20022:22
BREAKS HERE
-    image: wonderfall/nextcloud
-      - ./data/nextcloud:/data:rw
BREAKS HERE
-      CHANGE_SOURCE: ${GLOBAL_CHANGE_SOURCE}
BREAKS HERE
-      KONG_CASSANDRA_CONTACT_POINTS: "cassandra"
-
-
-###
-# If mutual authentication is needed, please uncomment these two components below
-###
-
-
BREAKS HERE
-            - volumes_source
-        depends_on:
-            - volumes_source
-        command: bash -c 'export NVM_DIR="/root/.nvm"; [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"; node -e "console.log(11111);"'
-
-    workspace:
-      build:
-          context: ./workspace
-      volumes_from:
-          - volumes_source
-      extra_hosts:
-          - "dockerhost:10.0.75.1"
-      ports:
-         - "22:22"
-      tty: true
-            - volumes_source
-            - volumes_source
-    volumes_source:
BREAKS HERE
-    image: dojot/context-manager:latest
BREAKS HERE
-version: '2'
-    image: unfetter/unfetter-discover-gateway:0.3.5
-     - ./config/nginx/conf.d:/etc/nginx/conf.d
-    image: unfetter/unfetter-discover-processor:0.3.5
-     - --add-mitre-data
-    image: unfetter/unfetter-ctf-ingest:0.3.5
-    ports:
-    - "3001:10010"
-
-
-    ports:
-    - "27018:27017"
-    image: unfetter/unfetter-api-explorer:0.3.5
-    ports:
-    - "3200:3200"
-    image: unfetter/unfetter-discover-api:0.3.5
-    ports:
-    - "49360:3000"
-    image: unfetter/unfetter-pattern-handler:0.3.5
-    ports:
-    - "5000:5000"
BREAKS HERE
