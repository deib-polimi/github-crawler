-        exec { 'update initramfs':
-          command => 'update-initramfs -u'
BREAKS HERE
-    ensure => file
BREAKS HERE
-    command   => any2array($command),
BREAKS HERE
-      course             => 'VirtualFundamentals',
BREAKS HERE
-  $node_cluster_roles = {},
-  validate_hash($node_cluster_roles, $node_cluster_alarms)
-                                          $node_cluster_roles,
-                                          $node_cluster_alarms)
-  if empty($node_cluster_roles) and empty($node_cluster_alarms) {
BREAKS HERE
-        # lint:ignore:puppet_url_without_modules
-        # lint:endignore
BREAKS HERE
-      $php_module = "php${puphpet::php::params::version_match}-mysql"
BREAKS HERE
-  tempest_clone_path  => '/tmp/tempest',
-  tempest_config_file => '/tmp/tempest/etc/tempest.conf',
BREAKS HERE
-  Array                               $import            = ['plugin-check-command'],
BREAKS HERE
-  file { "${server_puppetserver_dir}/conf.d/web-routes.conf":
-    ensure  => file,
-    content => template('puppet/server/puppetserver/conf.d/web-routes.conf.erb'),
-  }
-
BREAKS HERE
-      virtual_ips  => [join([$internal_api_virtual_ip, ' dev ', $internal_api_virtual_interface])],
-      virtual_ips  => [join([$storage_virtual_ip, ' dev ', $storage_virtual_interface])],
-      virtual_ips  => [join([$storage_mgmt_virtual_ip, ' dev ', $storage_mgmt_virtual_interface])],
-      virtual_ips  => [join([$redis_virtual_ip, ' dev ', $redis_virtual_interface])],
BREAKS HERE
-            content => template('service/logrotate.erb'),
BREAKS HERE
-  $real_non_torified_users = uniq_flatten($tor_user, $non_torified_users)
BREAKS HERE
-	file {
-		"/etc/munin/":
-		"/etc/munin/munin-node.conf":
BREAKS HERE
-            require => [ Yumrepo["atrpms-drbd"], file["/etc/yum.repos.d/atrpms-drbd.repo"] ],
-    
-    
-      package { "drbd8-utils": 
BREAKS HERE
-    package { $::puppetboard::params::virtualenv:
-      ensure => installed,
BREAKS HERE
-    content => template('lma_logging_analytics/es_template.json.erb'),
BREAKS HERE
-    class { 'mediawiki::maintenance::readinglists': ensure => $ensure }
BREAKS HERE
-        ensure  => 'directory',
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0755',
-        ensure  => 'directory',
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0755',
BREAKS HERE
-        content => inline_template("UserParameter=${scriptname},${sudo_cmd}/opt/bin/zabbix/${scriptname}.sh ${mesh_code}"),
BREAKS HERE
-
BREAKS HERE
-  include ::mrepo
BREAKS HERE
-define phabricator::redirector($mysql_user, $mysql_pass, $mysql_host, $rootdir='/') {
-        source  => 'puppet:///modules/phabricator/preamble.php',
BREAKS HERE
-        notify => Exec['apt-key add for wikimedia stretch'],
BREAKS HERE
-        mode => "0644",
-        source => "puppet:///modules/ffnord/etc/apt/preferences.d/bird";
-  ffnord::firewall::service { "bird":
-    "INCLUDE_BIRD4": value => $include_bird4;
-    "INCLUDE_BIRD6": value => $include_bird6;
BREAKS HERE
-
BREAKS HERE
-    $env = {"${proxy_type}_proxy" => $proxy_server}
-    $env = undef
BREAKS HERE
-        ensure   => present,
-        user     => 'puppetdb',
-        password => $puppetdb_pass,
-        cidr     => $::main_ipaddress,
-        database => 'puppetdb',
BREAKS HERE
-        directory => $common_source_path,
BREAKS HERE
-  include prometheus::node_exporter
BREAKS HERE
-    if $certmonger_ca == 'local' {
-      $ca_fragment = $ca_pem
-    } else {
-      $ca_fragment = ''
-    }
-
-    $concat_pem = "cat ${service_certificate} ${ca_fragment} ${service_key} > ${service_pem}"
-    if $postsave_cmd {
-      $postsave_cmd_real = "${concat_pem} && ${postsave_cmd}"
-    } else {
-      $reload_haproxy_cmd = 'if systemctl -q is-active haproxy; then systemctl reload haproxy; else true; fi'
-      $postsave_cmd_real = "${concat_pem} && ${reload_haproxy_cmd}"
-    }
-
-      postsave_cmd => $postsave_cmd_real,
BREAKS HERE
-# == Definition: network::rhel_route
BREAKS HERE
-  package{[
-      $galera::params::galera_package_name,
-      ] :
-    ensure  => $galera_package_ensure,
-    before  => Class['mysql::server::install'],
BREAKS HERE
-
BREAKS HERE
-#   Defaults to 'heat.openstack.common.rpc.impl_kombu'
-  $rpc_backend                 = 'manila.openstack.common.rpc.impl_kombu',
-  if $rpc_backend == 'manila.openstack.common.rpc.impl_kombu' {
-  if $rpc_backend == 'manila.openstack.common.rpc.impl_qpid' {
BREAKS HERE
-  $image_name = "centos:7"
-  docker::image { $image_name:}
-  exec { "docker tag ${image_name} localhost:5000/${image_name}":
-    require => [Docker::Image[$image_name],Docker::Image['registry']],
-  exec { "docker push localhost:5000/${image_name}":
-    require => Exec["docker tag ${image_name} localhost:5000/${image_name}"]
BREAKS HERE
-      value   => $puppet::master::ca,
BREAKS HERE
-    $wikistats_v2_link             = "${wikistats_web_directory}/v2"
BREAKS HERE
-  Database[$dbname] ~> Exec<| title == 'heat-manage db_sync' |>
-  if $allowed_hosts {
-    heat::db::mysql::host_access { $allowed_hosts:
BREAKS HERE
-    content => regsubst(epp("oradb/dbora_${::kernel}.epp", { 'oracle_home' => $oracle_home,
-                                                             'user' => $user,
-                                                             'service_name' => $service_name } ), '\r\n', "\n", 'EMG'),
-        content => epp('oradb/oradb_smf.xml.epp', { 'dboraLocation' => $dboraLocation , 'service_name' => $service_name }),
BREAKS HERE
-  $servername     = pick($::puppet::server::servername, $::clientcert)
BREAKS HERE
-  @ufw::allow { 'allow-https-8443-from-draft-api-internal-lb':
-    from => '10.7.2.2',
BREAKS HERE
-    # The following is from the primary cluster and will only be enabled if required
-    # sysctl::parameters { 'cloudstore base':
-    #     values   => {
-    #         # Increase TCP max buffer size
-    #         'net.core.rmem_max' => 67108864,
-    #         'net.core.wmem_max' => 67108864,
-
-    #         # Increase Linux auto-tuning TCP buffer limits
-    #         # Values represent min, default, & max num. of bytes to use.
-    #         'net.ipv4.tcp_rmem' => [ 4096, 87380, 33554432 ],
-    #         'net.ipv4.tcp_wmem' => [ 4096, 65536, 33554432 ],
-    #     },
-    #     priority => 70,
-    # }
-
-
-    class { 'labstore::monitoring::secondary':
-        cluster_iface => 'eno1',
-        cluster_ip    => $cluster_ip,
BREAKS HERE
-    $refinery_path = $role::analytics_cluster::refinery::path
BREAKS HERE
-  include jeepyb
-    ensure      => $ensure,
-    user        => $user,
-    minute      => $minute,
-    command     => "sleep $((RANDOM\%60+90)) && /usr/local/bin/manage-projects -v >> ${logfile} 2>&1",
-  include logrotate
BREAKS HERE
-    if ! empty(intersection(split($::controller_ips, ','), $node_ips))    
-      notify {"Mdm server installation": } ->
-      class {'scaleio::mdm_server':
BREAKS HERE
-  # Temporary workaround due to https://bugs.launchpad.net/fuel/+bug/1435892
-  if $::osfamily == 'Debian' {
-    package { 'tzdata':
-      ensure => '2015d-0ubuntu0.14.04',
-      before => Package[$java],
-    }
-  }
-
BREAKS HERE
-openstack::ha::haproxy_service { 'kibana':
-  order                  => '921',
-  listen_port            => $kibana_frontend_port,
-  balancermember_port    => $kibana_backend_port,
-  balancermember_options => 'check inter 10s fastinter 2s downinter 3s rise 3 fall 3',
-  haproxy_config_options => {
-    'option'  => ['httplog', 'http-keep-alive', 'prefer-last-server', 'dontlog-normal'],
-    'balance' => 'roundrobin',
-    'mode'    => 'http',
BREAKS HERE
-  class { '::system::mailaliases':
-    config => $config['mailaliases'],
BREAKS HERE
-  if $enabled {
-    govuk::app { 'email-alert-api':
-      app_type                 => 'rack',
-      port                     => $port,
-      sentry_dsn               => $sentry_dsn,
-      log_format_is_json       => true,
-      health_check_path        => '/healthcheck',
-      json_health_check        => true,
-      unicorn_worker_processes => $unicorn_worker_processes,
-    }
-    include govuk_postgresql::client #installs libpq-dev package needed for pg gem
-    govuk::procfile::worker {'email-alert-api':
-      enable_service => $enable_procfile_worker,
-    }
-    Govuk::App::Envvar {
-      app => 'email-alert-api',
-    }
-    if $::govuk_node_class !~ /^development$/ {
-      govuk::app::envvar::database_url { 'email-alert-api':
-        type     => 'postgresql',
-        username => $db_username,
-        password => $db_password,
-        host     => $db_hostname,
-        database => $db_name,
-      }
-    }
-    govuk::app::envvar::redis { 'email-alert-api':
-      host => $redis_host,
-      port => $redis_port,
-    govuk::app::envvar {
-      "${title}-SIDEKIQ_RETRY_CRITICAL_THRESHOLD":
-          varname => 'SIDEKIQ_RETRY_SIZE_CRITICAL',
-          value   => $sidekiq_retry_critical;
-      "${title}-SIDEKIQ_RETRY_WARNING_THRESHOLD":
-          varname => 'SIDEKIQ_RETRY_SIZE_WARNING',
-          value   => $sidekiq_retry_warning;
-      "${title}-SIDEKIQ_QUEUE_SIZE_CRITICAL_THRESHOLD":
-          varname => 'SIDEKIQ_QUEUE_SIZE_CRITICAL',
-          value   => $sidekiq_queue_size_critical;
-      "${title}-SIDEKIQ_QUEUE_SIZE_WARNING_THRESHOLD":
-          varname => 'SIDEKIQ_QUEUE_SIZE_WARNING',
-          value   => $sidekiq_queue_size_warning;
-      "${title}-SIDEKIQ_QUEUE_LATENCY_CRITICAL_THRESHOLD":
-          varname => 'SIDEKIQ_QUEUE_LATENCY_CRITICAL',
-          value   => $sidekiq_queue_latency_critical;
-      "${title}-SIDEKIQ_QUEUE_LATENCY_WARNING_THRESHOLD":
-          varname => 'SIDEKIQ_QUEUE_LATENCY_WARNING',
-          value   => $sidekiq_queue_latency_warning;
-      "${title}-GOVUK_NOTIFY_API_KEY":
-          varname => 'GOVUK_NOTIFY_API_KEY',
-          value   => $govuk_notify_api_key;
-      "${title}-GOVUK_NOTIFY_TEMPLATE_ID":
-          varname => 'GOVUK_NOTIFY_TEMPLATE_ID',
-          value   => $govuk_notify_template_id;
-      "${title}-GOVUK_NOTIFY_BASE_URL":
-          ensure  => 'absent',
-          varname => 'GOVUK_NOTIFY_BASE_URL',
-          value   => $govuk_notify_base_url;
-      "${title}-SECRET_KEY_BASE":
-          varname => 'SECRET_KEY_BASE',
-          value   => $secret_key_base;
-      "${title}-OAUTH_ID":
-          varname => 'OAUTH_ID',
-          value   => $oauth_id;
-      "${title}-OAUTH_SECRET":
-          varname => 'OAUTH_SECRET',
-          value   => $oauth_secret;
-      "${title}-EMAIL_ALERT_AUTH_TOKEN":
-          varname => 'EMAIL_ALERT_AUTH_TOKEN',
-          value   => $email_alert_auth_token;
-      "${title}-EMAIL_SERVICE_PROVIDER":
-          varname => 'EMAIL_SERVICE_PROVIDER',
-          value   => $email_service_provider;
-      "${title}-EMAIL_ADDRESS_OVERRIDE":
-          varname => 'EMAIL_ADDRESS_OVERRIDE',
-          value   => $email_address_override;
-    }
-    if $email_address_override_whitelist {
-      govuk::app::envvar { "${title}-EMAIL_ADDRESS_OVERRIDE_WHITELIST":
-        varname => 'EMAIL_ADDRESS_OVERRIDE_WHITELIST',
-        value   => join($email_address_override_whitelist, ',');
-      }
-    }
-    if $email_address_override_whitelist_only {
-      govuk::app::envvar { "${title}-EMAIL_ADDRESS_OVERRIDE_WHITELIST_ONLY":
-        varname => 'EMAIL_ADDRESS_OVERRIDE_WHITELIST_ONLY',
-        value   => 'yes';
-      }
-    if $delivery_request_threshold {
-      govuk::app::envvar { "${title}-DELIVERY_REQUEST_THRESHOLD":
-        varname => 'DELIVERY_REQUEST_THRESHOLD',
-        value   => $delivery_request_threshold;
-      }
-    $app_domain = hiera('app_domain')
-
-    if $enable_public_proxy {
-      nginx::conf { 'email-alert-api-public-rate-limiting':
-        content => '
-          limit_req_zone $binary_remote_addr zone=email_alert_api_public:1m rate=50r/s;
-          limit_req_status 429;
-        ',
-      }
-      if $::aws_migration {
-        $vhost_ = 'email-alert-api-public'
-      } else {
-        $vhost_ = "email-alert-api-public.${app_domain}"
-      }
-      nginx::config::vhost::proxy { $vhost_:
-        to               => ["localhost:${port}"],
-        ssl_only         => true,
-        protected        => false,
-        extra_app_config => "
-          return 404;
-        ",
-        extra_config     => template('govuk/email_alert_api_public_nginx_extra_config.conf.erb'),
-      }
-  }
-  else {
-    govuk::app { 'email-alert-api':
-      ensure   => 'absent',
-      app_type => 'rack',
-      port     => $port,
-    govuk::procfile::worker {'email-alert-api':
-      ensure         => 'absent',
-      enable_service => false,
BREAKS HERE
-# [*metric_prefix*]
-    $metric_prefix = "varnish.${::site}.${name}.request",
BREAKS HERE
-  vcsrepo { '/srv/askbot-site/themes':
-    ensure   => latest,
-    provider => git,
-    revision => 'master',
-    source   => 'https://git.openstack.org/openstack-infra/askbot-theme',
-    require  => [
-    before   => Exec['askbot-syncdb'],
-    notify   => [
-    require => Vcsrepo['/srv/askbot-site/themes'],
BREAKS HERE
-#   Defaults to $::os_service_default
-#   Defaults to $::os_service_default
-  $user_domain_name               = $::os_service_default,
-  $project_domain_name            = $::os_service_default,
BREAKS HERE
-  if ($ansible::ensure == 'master' and is_bool($ansible::master) and $ansible::master == false) {
BREAKS HERE
-
BREAKS HERE
-                File[$startup_script],
-                Package['install-thresh']],
-    ensure => file,
-    source => $startup_script_src,
-    mode   => '0755',
-    owner  => 'root',
-    group  => 'root',
BREAKS HERE
-                    onlyif  => "find '${directory}' ! -group '${group}'",
-                    onlyif  => "find '${directory}' ! -perm -g=wX,o=",
-                    onlyif  => "find '${directory}' -mindepth 1 -type d -and ! -perm -g+s",
BREAKS HERE
-      backup => false,
BREAKS HERE
-  ad_domainname             => 'CLASSROOM.local',
-  ad_netbiosdomainname      => 'CLASSROOM',
-  ad_dsrmpassword           => 'Puppetlabs1',
BREAKS HERE
-      $agent_package  = 'OSSEC HIDS 2.8'
BREAKS HERE
-# Installs extended security maintenance repo and credentials
-  package { 'ubuntu-advantage-tools':
-    ensure  => '10ubuntu0.14.04.3',
-    require => Package['apt-transport-https'],
-
-
-  exec {'create esm repo':
-    command => "sudo ubuntu-advantage enable-esm ${esm_user}:${esm_password}",
-    require => Package['ubuntu-advantage-tools'],
-  }
BREAKS HERE
-        'g++',
BREAKS HERE
-  class { 'openstack_project::nodepool':
BREAKS HERE
-        pgversion => $pgversion,
BREAKS HERE
-    ::monitoring::host { $::hostname: }
BREAKS HERE
-    # Tune kernel settings
-    # TODO: Should be moved to a role class.
-    include base::mysterious_sysctl
-
BREAKS HERE
-    include k8s::users
BREAKS HERE
-    owner   => 'odl',
-    group   => 'odl',
-    owner   => 'odl',
-    group   => 'odl',
BREAKS HERE
-            before    => Db_opatch[$patchId],
-            before    => Db_opatch[$patchId],
-        db_opatch{ $patchId:
-        db_opatch{ $patchId:
BREAKS HERE
-    warning             => 0.3,
BREAKS HERE
-    ensure  => running,
BREAKS HERE
-    $yaml_template                    = "${::module}/cassandra.yaml.erb",
-    $env_template                     = "${::module}/cassandra-env.sh.erb",
-    $rackdc_template                  = "${::module}/cassandra-rackdc.properties.erb",
BREAKS HERE
-    ## Packages
-
-    package { [ 'hhvm', 'hhvm-dbg' ]:
-        ensure => present,
-        before => Service['hhvm'],
-    }
-
-    package { [ 'hhvm-fss', 'hhvm-luasandbox', 'hhvm-wikidiff2' ]:
-        ensure => present,
-        before => Service['hhvm'],
-    }
-
-
BREAKS HERE
-    # These variables are manually set in the draft stack (e.g. s_draft_cache),
-    # make sure they're separated out in those locations otherwise puppet
-    # won't run cleanly.
-      'PLEK_SERVICE_LICENSIFY_URI': value       => "https://licensify.${licensify_app_domain}";
-      'PLEK_SERVICE_PUBLISHING_API_URI': value  => "https://publishing-api.${app_domain_internal}";
-      'PLEK_SERVICE_CONTENT_STORE_URI': value   => "https://content-store.${app_domain_internal}";
-      'PLEK_SERVICE_EMAIL_ALERT_API_URI': value => "https://email-alert-api.${app_domain_internal}";
BREAKS HERE
-        mysql_health_name     => '-:"SELECT SUM(date_length + index_length) / 1024 / 1024 AS 'db size' FROM information_schema.tables WHERE table_schema = '\" + db_name + \"';"',
BREAKS HERE
-          $client_services            = { 'rpcbind.service' => {
-                                            ensure => 'running',
-                                            enable => false,
-                                          },
-                                          'rpcbind.socket' => {
-                                            ensure => 'running',
-                                            enable => true,
-                                          },
-                                        }
-          $client_nfsv4_services      = { 'rpcbind.service' => {
-                                            ensure => 'running',
-                                            enable => false,
-                                          },
-                                          'rpcbind.socket' => {
-                                            ensure => 'running',
-                                            enable => true,
-                                          },
-                                        }
BREAKS HERE
-    /(RedHat|CentOS|Fedora)/ : {
-      $local_gen_cmd = undef
-    /(SuSE|SLES)/ : {
-      $local_gen_cmd = undef
BREAKS HERE
-    owner => root, group => 0, mode => 0644;
BREAKS HERE
-    # FIXME: Remove this when Whitehall is using Rack 1.7
-    govuk::app::envvar {
-      "${title}-RACK_MULTIPART_PART_LIMIT":
-          app     =>  $app_name,
-          varname => 'RACK_MULTIPART_PART_LIMIT',
-          value   => '0';
-    }
-
BREAKS HERE
-        source => 'puppet:///modules/varnish/reload-vcl',
BREAKS HERE
-      before => Package['carbon']
BREAKS HERE
-        command => '/usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki testwikidatawiki --max-time 900 --batch-size 200 --dispatch-interval 30 >/dev/null 2>&1',
-        command => '/usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/pruneChanges.php --wiki wikidatawiki --number-of-days=3 >> /var/log/wikidata/prune2.log 2>&1',
-        command => '/usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/pruneChanges.php --wiki testwikidatawiki --number-of-days=3 >> /var/log/wikidata/prune-testwikidata.log 2>&1',
BREAKS HERE
-    'google-cloud-sdk-trusty':
-      location => 'https://packages.cloud.google.com/apt',
-      repos    => ['main'],
-      release  => 'cloud-sdk-trusty',
-      key      => 'A7317B0F';
BREAKS HERE
-        command => '/usr/bin/timeout 3500s /usr/local/bin/mwscript deleteAutoPatrolLogs.php --wiki wikidatawiki --from-id 317360152 --before 20180223210426 >> /var/log/wikidata/deleteAutoPatrolLogs.log 2>&1',
BREAKS HERE
-  $nick = '',
-  $password = '',
-  $server = '',
-  $user = '',
-  $vhost_name = '',
-  $channel_file = '',
BREAKS HERE
-  
BREAKS HERE
-  $user                 = $::barman::settings::user,
-  $group                = $::barman::settings::group,
-  $ensure               = 'present',
-  $conf_template        = 'barman/barman.conf.erb',
-  $logrotate_template   = 'barman/logrotate.conf.erb',
-  $home                 = $::barman::settings::home,
-  $logfile              = '/var/log/barman/barman.log',
-  $compression          = 'gzip',
-  $immediate_checkpoint = false,
-  $pre_backup_script    = false,
-  $post_backup_script   = false,
-  $pre_archive_script   = false,
-  $post_archive_scirpt  = false,
-  $custom_lines         = undef,
-  $barman_fqdn          = $::fqdn,
-  $autoconfigure        = $::barman::settings::autoconfigure,
-  $manage_package_repo  = $::barman::settings::manage_package_repo,
BREAKS HERE
-  $swift_username = '',
-  $swift_password = '',
-  $swift_auth_url = '',
-  $auth_version = '',
-  $feed = '',
-  $json_url = '',
BREAKS HERE
-    class {'::sonofgridengine::submit_host': }
-
BREAKS HERE
-		hasstatus => $lsb_release { sarge => false, default => true }
BREAKS HERE
-        content => "  location /_healthcheck_${title} {\n    proxy_pass http://${title}-proxy${health_check_path};\n  }\n",
BREAKS HERE
-      } ->
-      file {
-      } ->
-      exec { 'icinga2 pki get trusted-cert':
-      } ->
-      file { $trusted_cert: } ->
-      exec { 'icinga2 pki request':
-      } ->
-      file { $_ssl_cacert_path: }
BREAKS HERE
-  } ->
-  file { '/etc/ssh/ssh_config':
BREAKS HERE
-    sysadmins                  => hiera('sysadmins', []),
-    ssl_cert_file_contents     => hiera('wiki_ssl_cert_file_contents'),
-    ssl_key_file_contents      => hiera('wiki_ssl_key_file_contents'),
-    ssl_chain_file_contents    => hiera('wiki_ssl_chain_file_contents'),
-    wg_dbserver                => hiera('wiki_wg_dbserver'),
-    wg_dbname                  => 'openstack_wiki',
-    wg_dbuser                  => 'wikiuser',
-    wg_dbpassword              => hiera('wiki_wg_dbpassword'),
-    wg_secretkey               => hiera('wiki_wg_secretkey'),
-    wg_upgradekey              => hiera('wiki_wg_upgradekey'),
-    wg_recaptchasitekey        => hiera('wiki_wg_recaptchasitekey'),
-    wg_recaptchasecretkey      => hiera('wiki_wg_recaptchasecretkey'),
-    wg_googleanalyticsaccount  => hiera('wiki_wg_googleanalyticsaccount'),
BREAKS HERE
-			notify => Service["munin"],
BREAKS HERE
-  if $icinga2::confd {
-    if is_bool($icinga2::confd) {
-      $_confd = "conf.d"
-    } elsif is_string($icinga2::confd) {
-      $_confd = $icinga2::confd
-    } else {
-      fail('confd has to be a boolean or string')
-    }
BREAKS HERE
-  Optional[Hash]                             $vars              = undef,
-  Optional[Variant[Array, String]]           $users             = undef,
-  Optional[Variant[Array, String]]           $user_groups       = undef,
BREAKS HERE
-                alias => 'munin-node',
BREAKS HERE
-class { '::bandersnatch::mirror':
BREAKS HERE
-# [*replica_maxlag_warning*]
-#   Max messages a replica can lag before a warning alert is generated.
-#   Hiera: profile::kafka::broker::replica_maxlag_warning
-#
-# [*replica_maxlag_critical*]
-#   Mac messages a replica can lag before a critical alert is generated.
-#   Hiera: profile::kafka::broker::replica_maxlag_critical
-#
-# [*prometheus_monitoring_enabled*]
-#   Enable the Prometheus jmx exporter.
-    $replica_maxlag_warning            = hiera('profile::kafka::broker::replica_maxlag_warning'),
-    $replica_maxlag_critical           = hiera('profile::kafka::broker::replica_maxlag_critical'),
-    $prometheus_monitoring_enabled     = hiera('profile::kafka::broker::prometheus_monitoring_enabled'),
-    $prometheus_nodes                  = hiera('prometheus_nodes'),
-    if $prometheus_monitoring_enabled {
-        # Allow automatic generation of config on the
-        # Prometheus master
-        prometheus::jmx_exporter_instance { $::hostname:
-            address => $::ipaddress,
-            port    => 7800,
-        }
-
-        $prometheus_nodes_ferm = join($prometheus_nodes, ' ')
-        ferm::service { 'kafka-broker-jmx_exporter':
-            proto  => 'tcp',
-            port   => '7800',
-            srange => "@resolve((${prometheus_nodes_ferm}))",
-        }
-
-        require_package('prometheus-jmx-exporter')
-
-        $jmx_exporter_config_file = '/etc/kafka/broker_prometheus_jmx_exporter.yaml'
-        $java_opts = "-javaagent:/usr/share/java/prometheus/jmx_prometheus_javaagent.jar=${::ipaddress}:7800:${jmx_exporter_config_file}"
-
-        # Create the Prometheus JMX Exporter configuration
-        file { $jmx_exporter_config_file:
-            ensure  => present,
-            source  => 'puppet:///modules/profile/kafka/broker_prometheus_jmx_exporter.yaml',
-            owner   => 'kafka',
-            group   => 'kafka',
-            mode    => '0400',
-            require => Class['::confluent::kafka::broker'],
-        }
-    } else {
BREAKS HERE
-        $ircbot_ensure = 'running'
-        $ircbot_ensure = 'stopped'
-        ensure  => 'present',
-    service { 'librenms-ircbot':
-        ensure  => $ircbot_ensure,
-        enable  => true,
-        require => Systemd::Service['librenms-ircbot'],
-    }
-
-
BREAKS HERE
-  $java_args = '-Xms12g -Xmx12g -XX:MaxPermSize=1g'
BREAKS HERE
-  if $galera::params::additional_packages {
BREAKS HERE
-  $gearman_workers = [
-    'ze01.openstack.org',
-    'ze02.openstack.org',
-    'ze03.openstack.org',
-    'ze04.openstack.org',
-    'ze05.openstack.org',
-    'ze06.openstack.org',
-    'ze07.openstack.org',
-    'ze08.openstack.org',
-    'ze09.openstack.org',
-    'ze10.openstack.org',
-    'zm01.openstack.org',
-    'zm02.openstack.org',
-    'zm03.openstack.org',
-    'zm04.openstack.org',
-    'zm05.openstack.org',
-    'zm06.openstack.org',
-    'zm07.openstack.org',
-    'zm08.openstack.org',
-  ]
-  $iptables_rules = regsubst ($gearman_workers, '^(.*)$', '-m state --state NEW -m tcp -p tcp --dport 4730 -s \1 -j ACCEPT')
-
-    iptables_rules6           => $iptables_rules,
-    iptables_rules4           => $iptables_rules,
BREAKS HERE
-    command     => 'heat-keystone-setup-domain &>/dev/null',
BREAKS HERE
-			content => template("munin/munin-node.conf.$operatingsystem.$lsbdistrelease"),
BREAKS HERE
-  $bgpvpn_enabled  = true
-  bgp_dragent_enabled => true,
-  dr          => true,
BREAKS HERE
-    command     => 'yui-compressor -o /var/lib/zuul/www/jquery-visibility.min.js /opt/jquery-visibility/jquery-visibility.js',
BREAKS HERE
-# In this class all default parameters are stored.
BREAKS HERE
-#   Should be an hash.
-      proto => 'all',
-      jump  => 'LOG',
-      tag   => 'tripleo-firewall-postrule',
BREAKS HERE
-        ensure  => present,
-        source  => 'puppet:///modules/aptly/aptly.conf',
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
BREAKS HERE
-        command => '/usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki --max-time 540 --batch-size 275 --dispatch-interval 25 --lock-grace-interval 200 >/dev/null 2>&1',
BREAKS HERE
-            before          => File['/tmp/update-packages'],
-            before          => File['/tmp/update-packages'],
-          before     => File['/tmp/update-packages'],
-          before   => File['/tmp/update-packages'],
-        before            => File['/tmp/update-packages'],
-          before  => File['/tmp/update-packages'],
-    before      => File['/tmp/update-packages'],
-  # We want to upgrade packages after repos is added but only once
-  # to not break idempotency. Must be done in here so it applies to
-  # both integration and beaker tests.
-    if $::operatingsystem == 'Fedora' {
-      $yum_cmd = '/usr/bin/dnf'
-    } else {
-      $yum_cmd = '/usr/bin/yum'
-    $update_cmd = "${yum_cmd} update -y"
-  } else {
-    $update_cmd = '/usr/bin/apt upgrade -y'
-  }
-
-  file { '/tmp/update-packages':
-    ensure => 'present',
-    notify => Exec['update-packages'],
-  }
-  exec { 'update-packages':
-    command     => $update_cmd,
-    refreshonly => true,
-    tries       => 2,
-    timeout     => 900,
BREAKS HERE
-    $master = 'https://${::fqdn}:8140'
-        if $jruby_purge {
-          fail("Minimal tuning profile requires `jruby_purge => true`.")
BREAKS HERE
-    mysql_root_password        => hiera('wiki_db_password'),
BREAKS HERE
-    notice("Classification result for ${trusted[certname]}: ${classification}")
-    notice("Classes derived from classification: for ${trusted[certname]}: ${classification_classes}")
-  include($classes)
BREAKS HERE
-# [*sync_db*]
-#   (Optional) Whether to run Neutron DB sync operations
-#   Defaults to undef
-#
-  $sync_db          = true,
-  if $step >= 3 and $sync_db {
-  if $step >= 4 or ($step >=3 and $sync_db) {
-
-    class { '::neutron::server':
-      sync_db        => $sync_db,
-    }
BREAKS HERE
-    include ::hhvm::packages
-    file { '/usr/local/sbin/hhvm-dump-debug':
-        source => 'puppet:///modules/hhvm/hhvm-dump-debug',
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0555',
-        before => Service['hhvm'],
-    }
-
-    # Install HHVM's source files to /usr/local/src/hhvm.
-
-    file { '/usr/local/sbin/install-pkg-src':
-        source => 'puppet:///modules/hhvm/install-pkg-src',
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0555',
-    }
-
-    exec { '/usr/local/sbin/install-pkg-src hhvm':
-        unless  => '/usr/local/sbin/install-pkg-src --dry-run hhvm | grep -q up-to-date',
-        require => Package['dpkg-dev', 'hhvm'],
-    }
-
BREAKS HERE
-  include private::users
-  package {['mercurial', 'vim', 'emacs', 'postfix']: ensure => present}
BREAKS HERE
-          Anchor<| title == 'swift::service::end' |> ~> Class['Gnocchi::db::sync']
BREAKS HERE
-        command => "echo \"\$\$: Starting dispatcher\" >> ${dispatch_log_file}; /usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki --max-time 540 --batch-size 420 --dispatch-interval 25 --lock-grace-interval 200 >> ${dispatch_log_file} 2>&1; echo \"\$\$: Dispatcher exited with $?\" >> ${dispatch_log_file}",
BREAKS HERE
-  include gds-resolver
BREAKS HERE
-	service { "munin":
-			notify => Service["munin"],
BREAKS HERE
-  file { $pki_dir:
-    ensure => directory,
-    require => Package[$package],
-  }
-
-  file { "${conf_dir}/features-enabled": 
BREAKS HERE
-    debug     => true,
BREAKS HERE
-        prefix     => '/',
-        prefix    => '/',
BREAKS HERE
-            devices   => 'PhysicalDrive[0-9]+$|md[0-9]+$|sd[a-z]+$|x?vd[a-z]+$|disk[0-9]+$|dm-[0-9]+$',
BREAKS HERE
-    ensure    => running,
-    require   => [
BREAKS HERE
-        RedHat: {
BREAKS HERE
-      fail("Don't know how to interpret processor0: ${::processor3}")
BREAKS HERE
-  if !defined(Mod['proxy_wstunnel']) {
BREAKS HERE
-    $network_compat_interface_vlan = hiera('profile::openstack::eqiad1::neutron::network_compat_interface_vlan'),
-        network_compat_interface_vlan        => $network_compat_interface_vlan,
BREAKS HERE
-        before      => Service['apache'],
BREAKS HERE
-    ensure_packages(["${php::globals::package_prefix}xml"], {
BREAKS HERE
-        before   => Class['packages::golang::go'],
-    require_package('build-essential', 'golang-go')
BREAKS HERE
-      '(sqlite|mysql|posgres):\/\/(\S+:\S+@\S+\/\S+)?')
-      /^postgres:\/\//: {
BREAKS HERE
-  #$afd_service_defaults = {'notifications_enabled' => 0}
-  create_resources(lma_infra_alerting::nagios::services, $afd_nodes, {})
-  $afd_service_defaults = {'notifications_enabled' => 0}
-  create_resources(lma_infra_alerting::nagios::services, $afd_services, $afd_service_defaults)
BREAKS HERE
-  if $package_ensure != 'absent' {
-    Package['heat-common'] -> User['heat']
-    Package['heat-common'] -> Group['heat']
-    Package['heat-common'] -> File['/etc/heat/']
-  }
-
-  group { 'heat':
-    ensure => 'present',
-    name   => 'heat',
-    before => Anchor['heat::install::end'],
-  }
-
-  user { 'heat':
-    ensure => 'present',
-    name   => 'heat',
-    gid    => 'heat',
-    groups => ['heat'],
-    system => true,
-    before => Anchor['heat::install::end'],
-  }
-
-  file { '/etc/heat/':
-    ensure => directory,
-    owner  => 'heat',
-    group  => 'heat',
-    mode   => '0750',
-  }
-
BREAKS HERE
-define sudo::user( $privileges ) {
-    $user = $title
-    file { "/etc/sudoers.d/${user}":
-        owner   => root,
-        group   => root,
-        content => template('sudo/sudoers.erb');
-
BREAKS HERE
-    munin::plugin::deploy { "apache_accesses": }
-    munin::plugin::deploy { "apache_processes": }
-    munin::plugin::deploy { "apache_volume": }
BREAKS HERE
-  $policy_file         = $::os_service_default,
-  create_resources($name, {'oslo_policy/policy_file' => { value => $policy_file }})
BREAKS HERE
-    value   => $disable_anonymous_stats,
BREAKS HERE
-    true    => st2_latest_stable(),
-    true    => st2_latest_stable_revision(),
BREAKS HERE
-    ensure => "latest",
-    ensure => latest,
-    ensure => latest,
-    # user, group, and mode have to be set this way to avoid retriggering gerrit-init on every run
-    group => 'gerrit2',
BREAKS HERE
-    extra_vcl{ $extra_vcl_variable_to_make_puppet_parser_happy:
-        before => Service["varnish${instancesuffix}"],
-        template_path => "${module_name}/vcl/wikimedia-common.inc.vcl.erb",
-        require       => File["/etc/varnish/${vcl}.inc.vcl"],
-        template_path => "${module_name}/vcl/wikimedia-${layer}.vcl.erb",
-        template_path => "varnish/${vcl}.inc.vcl.erb",
-        notify        => Exec["load-new-vcl-file${instancesuffix}"],
BREAKS HERE
-    $set_xff=false
BREAKS HERE
-    # Nodepool spawn non ephemeral slaves which causes config-history plugin to
-    # fill up entries until it reaches the limit of 32k inodes. T126552
-    tidy { 'history of nodepool slaves config':
-        path    => '/var/lib/jenkins/config-history/nodes',
-        age     => '1d',
-        recurse => true,
-        matches => 'ci-*_deleted_*',
-    }
-
BREAKS HERE
-      Monitoring::Checks::Rds_config <<| |>>
BREAKS HERE
-      'http://tarballs.openstack.org/ci/gerrit-2.4.2-17-g19507d3.war',
BREAKS HERE
-    munin::plugin::deploy { "apache_accesses": }
-    munin::plugin::deploy { "apache_processes": }
-    munin::plugin::deploy { "apache_volume": }
BREAKS HERE
-  ::php::config { 'fpm':
-    file   => $inifile,
-    config => $settings,
BREAKS HERE
-#   <https://github.com/grafana/grafana/blob/master/src/config.sample.js>
BREAKS HERE
-    package { 'geoip-database':
-        ensure => absent,
-    }
-
BREAKS HERE
-#    MySQL database host address. Defaults to '127.0.0.1'.
-#    MySQL database port. Defaults to '3306'.
-  Stdlib::Host                                $host                   = '127.0.0.1',
-  Stdlib::Port::Unprivileged                  $port                   = 3306,
-  if $enable_ssl {
-    $_ssl_options = join(any2array(delete_undef_values({
-      '--ssl-ca'     => $_ssl_cacert_path,
-      '--ssl-cert'   => $_ssl_cert_path,
-      '--ssl-key'    => $_ssl_key_path,
-      '--ssl-capath' => $ssl_capath,
-      '--ssl-cipher' => $ssl_cipher,
-    })), ' ')
-
-    # set cli options for mysql connection via tls
-    $_mysql_command = "mysql -h ${host} -P ${port} -u ${user} -p'${password}' ${_ssl_options} ${database}"
-    $_mysql_command = "mysql -h ${host} -P ${port} -u ${user} -p'${password}' ${database}"
BREAKS HERE
-    'display_name' => $display_name ,
-    'host_name' => $host_name ,
-    'name' => $name ,
-    'groups' => $groups ,
-    'vars' => $vars ,
-    'check_command' => $check_command ,
-    'max_check_attempts' => $max_check_attempts ,
-    'check_period' => $check_period ,
-    'check_timeout' => $check_timeout ,
-    'check_interval' => $check_interval ,
-    'retry_interval' => $retry_interval ,
-    'enable_notifications' => $enable_notifications ,
-    'enable_active_checks' => $enable_active_checks ,
-    'enable_event_handler' => $enable_event_handler ,
-    'enable_flapping' => $enable_flapping ,
-    'enable_perfdata' => $enable_perfdata ,
-    'event_command' => $event_command ,
-    'flapping_threshold' => $flapping_threshold ,
-    'volatile' => $volatile ,
-    'zone' => $zone ,
-    'command_endpoint' => $command_endpoint ,
-    'notes' => $notes ,
-    'notes_url' => $notes_url ,
-    'action_url' => $action_url ,
-    'icon_image' => $icon_image ,
-    'icon_image_alt' => $icon_image_alt ,
-    object_name  => $name,
BREAKS HERE
-    priority => 15,
BREAKS HERE
-
-    ip             => $ip_bouncer,
-    legacy_aliases => ["bouncer.${app_domain}"],
BREAKS HERE
-    monitor_host { $::hostname: group => $::nagios_group, contact_group => $contact_group }
BREAKS HERE
-        content => inline_template("command[check_tinc_icvpn]=/usr/lib/nagios/plugins/check_procs -c 1:1 -w 1:1 -C tinc -a \"-n icvpn\"\n"),
BREAKS HERE
-    ensure   => present,
-    content  => template('reviewday/ssh_config.erb'),
-    owner    => 'reviewday',
-    group    => 'reviewday',
-    mode     => '0644',
BREAKS HERE
-    if str2bool(hiera('mongodb::server::ipv6', false)) {
-      $mongo_node_ips_with_port_prefixed = prefix(hiera('mongodb_node_ips'), '[')
-      $mongo_node_ips_with_port = suffix($mongo_node_ips_with_port_prefixed, ']:27017')
-    } else {
-      $mongo_node_ips_with_port = suffix(hiera('mongodb_node_ips'), ':27017')
-    $mongodb_replset = hiera('mongodb::server::replset')
-    $mongo_node_string = join($mongo_node_ips_with_port, ',')
-    $database_connection = "mongodb://${mongo_node_string}/zaqar?replicaSet=${mongodb_replset}"
-    class { '::zaqar::management::mongodb':
-      uri => $database_connection,
-    class {'::zaqar::messaging::mongodb':
-      uri => $database_connection,
BREAKS HERE
-        ensure => 'directory',
-        ensure => 'directory',
-        ensure => 'link',
-        target => '/srv/deployment/cassandra/metrics-collector/lib/cassandra-metrics-collector-2.0.0-20151001.182133-1-jar-with-dependencies.jar',
BREAKS HERE
-Integer $transmission_rpc_port = 9091
-Integer $tracker_port          = 6969
BREAKS HERE
-    key => $key['id'], key_source => $key['source'],
BREAKS HERE
-        require    => Class['httpd'],
BREAKS HERE
-rabbitmq_user { 'neutron':
-  admin    => true,
-  password => 'an_even_bigger_secret',
-  provider => 'rabbitmqctl',
-  require  => Class['rabbitmq'],
-}
-rabbitmq_user_permissions { 'neutron@/':
-  configure_permission => '.*',
-  write_permission     => '.*',
-  read_permission      => '.*',
-  provider             => 'rabbitmqctl',
-  require              => Class['rabbitmq'],
-}
BREAKS HERE
-    health_check_path     => '/oil-and-gas',
BREAKS HERE
-    include grub
BREAKS HERE
-#   Valid values are 'apache', 'nginx', 'wsgionly' and 'none'. 'nginx' is only
-#   supported on Debian-like systems.
-# [*gr_apache_port*]
-#   The port to run graphite web server on.
-#   Default is 80.
-# [*gr_apache_port_https*]
-#   The port to run SSL web server on if you have an existing web server on
-#   the default port 443.
-#   Default is 443.
-#   Default: 0.9.12
-#   Default: 0.9.12
-#   Default: 0.9.12
-  $gr_web_group                           = $graphite::params::web_group,
-  $gr_web_user                            = $graphite::params::web_user,
-  $gr_apache_port                         = 80,
-  $gr_apache_port_https                   = 443,
-  $gr_prefetch_cache                      = undef
-  validate_integer($gr_apache_port)
-  validate_integer($gr_apache_port_https)
BREAKS HERE
-    $proxy_enabled              = hiera('profile::hue::proxy_enabled', true),
-    ferm::service{ 'hue_server':
-        proto  => 'tcp',
-        port   => '8888',
-        srange => '$PRODUCTION_NETWORKS',
-    }
-
-    if $proxy_enabled {
-        # Ignore wmf styleguide; Need to include here as well as in yarn_proxy.pp
-        # lint:ignore:wmf_styleguide
-        include ::apache::mod::proxy_http
-        include ::apache::mod::proxy
-        # lint:endignore
-        $server_name = $::realm ? {
-            'production' => 'hue.wikimedia.org',
-            'labs'       => "hue-${::labsproject}.${::site}.wmflabs",
-        }
-        $hue_port = $::cdh::hue::http_port
-        # Set up the VirtualHost
-        apache::site { $server_name:
-            content => template('profile/hue/hue.vhost.erb'),
-        }
-        ferm::service { 'hue-http':
-            proto  => 'tcp',
-            port   => '80',
-            srange => '$CACHES',
-        }
BREAKS HERE
-            }
BREAKS HERE
-        source => 'puppet:///modules/rabbitmq/util/drain_queue',
BREAKS HERE
-  # Dans ces paquets, on trouve de quoi flasher et extraires des infos des
-  # bios & firmwares.
-
-  case $::osfamily {
-    'Debian': {
-      package { $::dell::params::smbios_pkg:
-        ensure => latest,
-      }
-    'RedHat': {
-      package{['libsmbios', 'smbios-utils', 'firmware-tools']:
-        ensure => latest,
-      }
-
-      $module_path = get_module_path($module_name)
-      file {'/etc/pki/rpm-gpg/RPM-GPG-KEY-dell':
-        ensure  => file,
-        content => file("${module_path}/files/etc/pki/rpm-gpg/RPM-GPG-KEY-dell"),
-        mode    => '0644',
-      }
-
-      file {'/etc/pki/rpm-gpg/RPM-GPG-KEY-libsmbios':
-        ensure  => file,
-        content => file("${module_path}/files/etc/pki/rpm-gpg/RPM-GPG-KEY-libsmbios"),
-        mode    => '0644',
-      }
-
-      if $dell_repo {
-        # http://linux.dell.com/wiki/index.php/Repository/software
-        yumrepo {'dell-omsa-indep':
-          descr      => 'Dell OMSA repository - Hardware independent',
-          mirrorlist => "${dell::omsa_url_base}${dell::omsa_version}/mirrors.cgi?${dell::omsa_url_args_indep}",
-          enabled    => 1,
-          gpgcheck   => 1,
-          gpgkey     => "file:///etc/pki/rpm-gpg/RPM-GPG-KEY-dell\n\tfile:///etc/pki/rpm-gpg/RPM-GPG-KEY-libsmbios",
-          require    => [
-            File['/etc/pki/rpm-gpg/RPM-GPG-KEY-dell'],
-            File['/etc/pki/rpm-gpg/RPM-GPG-KEY-libsmbios'],
-          ],
-        }
-      }
-
-      # ensure file is managed in case we want to purge /etc/yum.repos.d/
-      # http://projects.puppetlabs.com/issues/3152
-      file { '/etc/yum.repos.d/dell-omsa-indep.repo':
-        ensure  => file,
-        mode    => '0644',
-        owner   => 'root',
-        require => Yumrepo['dell-omsa-indep'],
-      }
-
-      file { '/etc/yum.repos.d/dell-software-repo.repo':
-        ensure => absent,
-      }
-    }
-    default: {
-      fail "Unsupported OS family ${::osfamily}"
-
BREAKS HERE
-  # push script
-  file { '/usr/local/bin/mongodb-backup-s3':
-    ensure  => present,
-    content => template('mongodb/mongodb-backup-s3.erb'),
-    owner   => $user,
-    group   => $user,
-    mode    => '0755',
-    require => User[$user],
-  }
-
-
BREAKS HERE
-        require => File["/etc/netmapper/zerofetcher.auth"],
-        require => File["/etc/netmapper/zerofetcher.auth"],
BREAKS HERE
-    $targets_file = '/srv/prometheus/tools/targets/node_project.yml'
-        command => "/usr/local/bin/prometheus-labs-targets > ${targets_file}.$$ && mv ${targets_file}.$$ ${targets_file}",
BREAKS HERE
-    sysctl { 'net.ipv4.conf.eth0.arp_ignore': value => '1' }
-    sysctl { 'net.ipv4.conf.eth0.arp_ignore': value => '0' }
-    sysctl { 'net.ipv4.conf.eth0.arp_announce': value => '2' }
-    sysctl { 'net.ipv4.conf.eth0.arp_announce': value => '0' }
-    sysctl { 'kernel.sysrq': value => limited_sysrq }
BREAKS HERE
-        source => 'puppet:///modules/postgres/check_postgres_replication_lag.py',
BREAKS HERE
-    require ::profile::openstack::eqiad1::clientlib
BREAKS HERE
-  db_password     => hiera('lma::grafana::mysql::password'),
BREAKS HERE
-        ensure      => $run_tests,
BREAKS HERE
-class oradb {
-  notify {"oradb init.pp":}
BREAKS HERE
-    subscribe => File['/etc/munin/munin.conf.header'],
BREAKS HERE
-        source => 'puppet:///modules/ldap/scripts/add-ldap-group',
-        source => 'puppet:///modules/ldap/scripts/ldaplist',
BREAKS HERE
-  $drushdsdtar     = 'https://github.com/mkissam/drush-dsd/archive/v0.8.tar.gz',
-  $basedrushdsdtar = 'drush-dsd-0.8.tar.gz',
BREAKS HERE
-    ensure   => '2.7.18',
BREAKS HERE
-        host_fqdn => 'foobar.wmflabs.org',
BREAKS HERE
-#                       sslcert::std_cert will be called, and the certificate file will be
-            sslcert::std_cert{ $certificate_name:
BREAKS HERE
-        ensure => present,
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0444',
-        source => 'puppet:///modules/aptrepo/incoming',
BREAKS HERE
-    include ::role::mariadb::ferm
BREAKS HERE
-    bundler_version => '1.6.5',
BREAKS HERE
-        query          => "scalar(avg_over_time(kafka_server_replicamanager_underreplicatedpartitions{${prometheus_labels}}[30m]))",
-        query          => "scalar(avg_over_time(kafka_server_replicafetchermanager_maxlag{${prometheus_labels}}[30m]))",
BREAKS HERE
-# [*apps*]
-#   An array of GOV.UK applications that should be included on this machine.
-  $apps = [],
-  validate_array($apps)
-  $app_classes = regsubst($apps, '^', 'govuk::apps::')
-  include $app_classes
BREAKS HERE
-    $version = '3.9.0-1',
BREAKS HERE
-    if $socket == '/run/haproxy/haproxy.sock' or $socket == '/run/haproxy/haproxy.pid' {
BREAKS HERE
-    # Update git checkout.  This is done via a cron
-    #  rather than via puppet_merge to increase isolation
-    #  between these puppetmasters and the production ones.
-    class { 'puppetmaster::gitsync':
-        run_every_minutes => '1',
-    }
-
BREAKS HERE
-    $arguments = undef,
-    if defined($arguments) {
-            content => "ARGS='${arguments}'",
BREAKS HERE
-  $install_options = $keep ? {
-    true    => ' --keep',
-    default => '',
-  }
-    command     => "rbenv install ${title}${install_options}",
-  # Install Bundler
BREAKS HERE
-        $dir = "/var/lib/puppet/modules/shorewall/${name}.d"
BREAKS HERE
-        true  => '127.0.0.1 localhost',
BREAKS HERE
-    owner   => 'root',
-    group   => 'root',
-    mode    => '0444',
-    source  => 'puppet:///modules/openstack_project/puppetmaster/static-inventory',
BREAKS HERE
-    # TODO(aschultz): sahara is currently missing from xenial pike
-    $sahara_enabled  = false
-    $sahara_enabled  = true
-if $sahara_enabled {
-  include ::openstack_integration::sahara
-}
BREAKS HERE
-    require => Class['::system::users'],
BREAKS HERE
-      $oraInventory = "${oracleBase}/oraInventory"
-
-      case $::kernel {
-        Linux: {
-          $oraInstPath  = "/etc"
-        }
-        SunOS: {
-          $oraInstPath  = "/var/opt"
-        }
-        default: {
-          fail("Unrecognized operating system")
-        }
-      }
-
-      if ! defined(File["${oraInstPath}/oraInst.loc"]) {
-        file { "${oraInstPath}/oraInst.loc":
-          ensure        => present,
-          content       => template("oradb/oraInst.loc.erb"),
-        }
-      }
-          command     => "/bin/sh -c 'unset DISPLAY;${downloadDir}/${ggateInstallDir}/Disk1/runInstaller -silent -waitforcompletion -invPtrLoc ${oraInstPath}/oraInst.loc -responseFile ${downloadDir}/oggcore.rsp'",
-                           File["${oraInstPath}/oraInst.loc"],
BREAKS HERE
-    $ensure  = present,
-    $puppetdir = "${program_dir}/external/puppet"
-    file_line {'modify_nginx_magic_types':
-    file {'run_wrapper':
-        file{'root_dir':
-            ensure  => 'absent',
-        file{'root_dir':
-            ensure => 'directory',
-        git::install {'operations/software':
-            ensure        => 'present',
-        exec {'install_puppet_compare_requirements':
-        exec {'install_puppet_repositories':
-        class {'::puppetmaster::scripts':
-        class {'puppet_compiler::differ':
-        file {["${program_dir}/output", "${program_dir}/output/html","${program_dir}/output/diff", "${program_dir}/output/compiled",]:
-        exec {'mysql queries':
BREAKS HERE
-# FIXME: This class needs better documentation as per https://docs.puppetlabs.com/guides/style_guide.html#puppet-doc
BREAKS HERE
-      ensure => started,
BREAKS HERE
-        rule   => "saddr (@resolve(${nova_controller_standby}) @resolve(${nova_controller_standby}, AAAA)
BREAKS HERE
-  $ora_inst_path = lookup('oradb::orainst_dir')
BREAKS HERE
-        ensure   => running,
-        provider => init,
-        require  => Git::Install['phabricator/phabricator'],
BREAKS HERE
-  Stdlib::Absolutepath $config_dir = '/etc/gitlab',
-      owner  => 'root',
-      group  => 'root',
-      mode   => '0644',
-    owner  => 'root',
-    group  => 'root',
-    mode   => '0644',
BREAKS HERE
-  $asset_root = extlookup('asset_root', "https://static.${app_domain}")
BREAKS HERE
-class shorewall::rules::gitdaemon::absent inherit shorewall::rules::gitdaemon {
BREAKS HERE
-         { do=>'copyfile',   args=>[ '<dist_sharedir>/portable/portable.perl.32',    '<image_dir>/portable.perl' ] }, # take portable.perl.32 or portable.perl.64
-         { do=>'copyfile',   args=>[ '<dist_sharedir>/portable/portableshell.bat',   '<image_dir>/portableshell.bat' ] },
BREAKS HERE
-  class { '::zuul::merger':
-    manage_log_conf => true,
-  }
BREAKS HERE
-  }else{
BREAKS HERE
-    include apache::status
BREAKS HERE
-        port   => 4000,
BREAKS HERE
-            command   => "unzip -n ${mountPoint}/${patch_file} -d ${download_dir}",
BREAKS HERE
-# [*kafka_config*]
-    $kafka_config      = kafka_config('analytics'),
-        librdkafka_config => $librdkafka_config,
BREAKS HERE
-  include apache
-  apache::vhost { $vhost_name:
BREAKS HERE
-          server_name canary-backend.* canary_backend.*;
BREAKS HERE
-        provider => upstart,
BREAKS HERE
-        options           => '--user=root --log-driver=journald -e KOLLA_CONFIG_STRATEGY=COPY_ALWAYS',
BREAKS HERE
-      name       => "carbon",
-      pattern    => "^carbon\.",
-      retentions => "1m:90d"
-      name       => "default",
-      pattern    => ".*",
-      retentions => "1s:30m,1m:1d,5m:2y"
BREAKS HERE
-        provider_drivers  => 'amphora: Octavia Amphora Driver, ovn: Octavia OVN driver',
BREAKS HERE
-            nginx::config::vhost::proxy { "$name.*":
BREAKS HERE
-                      $ocmrf                   = true,
-    Linux, SunOS: {
-  # check if the opatch already is installed
-  $found = opatch_exists($oracleProductHome,$patchId)
-  if $found == undef {
-    $continue = true
-  } else {
-    if ( $found ) {
-      $continue = false
-    } else {
-      notify {"oradb::opatch ${title} ${oracleProductHome} does not exists":}
-      $continue = true
-  if ( $continue ) {
-    if $puppetDownloadMntPoint == undef {
-      $mountPoint    = "puppet:///modules/oradb/"
-    } else {
-      $mountPoint    =  $puppetDownloadMntPoint
-    }
-    if $remoteFile == true {
-      # the patch used by the opatch
-      if ! defined(File["${path}/${patchFile}"]) {
-        file { "${path}/${patchFile}":
-          source       => "${mountPoint}/${patchFile}",
-        }
-    # opatch apply -silent -oh /oracle/product/11.2/db /install/14389126
-    $oPatchCommand   = "opatch apply -silent "
-
-    case $::kernel {
-      Linux, SunOS: {
-        if $remoteFile == true {
-          exec { "extract opatch ${patchFile} ${title}":
-            command    => "unzip -n ${path}/${patchFile} -d ${path}",
-            require    => File ["${path}/${patchFile}"],
-            creates    => "${path}/${patchId}",
-          }
-        } else {
-          exec { "extract opatch ${patchFile} ${title}":
-            command    => "unzip -n ${mountPoint}/${patchFile} -d ${path}",
-            creates    => "${path}/${patchId}",
-          }
-        if $ocmrf == true {
-          exec { "exec opatch ux ocmrf ${title}":
-            command  => "${oracleProductHome}/OPatch/${oPatchCommand} -ocmrf ${oracleProductHome}/OPatch/ocm.rsp -oh ${oracleProductHome} ${path}/${patchId}",
-            require  => Exec["extract opatch ${patchFile} ${title}"],
-          }
-        } else {
-          exec { "exec opatch ux ${title}":
-            command  => "${oracleProductHome}/OPatch/${oPatchCommand} -oh ${oracleProductHome} ${path}/${patchId}",
-            require  => Exec["extract opatch ${patchFile} ${title}"],
-          }
-      default: {
-        fail("Unrecognized operating system")
BREAKS HERE
-#    PostgreSQL database host address. Defaults to '127.0.0.1'.
-#    PostgreSQL database port. Defaults to 5432.
-#    PostgreSQL database user with read/write permission to the icinga database. Defaults to "icinga".
-#    PostgreSQL database user's password. Defaults to "icinga".
-#    PostgreSQL database name. Defaults to "icinga".
-#   PostgreSQL database table prefix. Defaults to "icinga_".
-#   Unique identifier for the local Icinga 2 instance. Defaults to "default".
-#   Description for the Icinga 2 instance.
-#   Enable the high availability functionality. Only valid in a cluster setup. Defaults to "true".
-#   Set the failover timeout in a HA cluster. Must not be lower than 60s. Defaults to "60s".
-#   Whether to import the PostgreSQL schema or not. Defaults to false.
-  Enum['absent', 'present'] $ensure                 = present,
-  String                    $host                   = '127.0.0.1',
-  Integer[1,65535]          $port                   = 5432,
-  String                    $user                   = 'icinga',
-  String                    $password               = 'icinga',
-  String                    $database               = 'icinga',
-  String                    $table_prefix           = 'icinga_',
-  String                    $instance_name          = 'default',
-  Optional[String]          $instance_description   = undef,
-  Boolean                   $enable_ha              = true,
-  Pattern[/^\d+[ms]*$/]     $failover_timeout       = '60s',
-  Optional[Hash]            $cleanup                = undef,
-  Optional[Array]           $categories             = undef,
-  Boolean                   $import_schema          = false,
BREAKS HERE
-    $packages = [
-        'designate-sink',
-        'designate-common',
-        'designate',
-        'designate-api',
-        'designate-doc',
-        'designate-central',
-    ]
-
-    if os_version('debian jessie') and ($version == 'mitaka') {
-        $install_options = ['-t', 'jessie-backports']
-    } else {
-        $install_options = ''
-    }
-
-    package { $packages:
-        ensure          => 'present',
-        install_options => $install_options,
-    }
BREAKS HERE
-class ocf::apt ( $desktop = false ) {
-  package { ['aptitude', 'imvirt']: }
-        # XXX: we use a _different_ hostname from the regular archive because
-        # the puppetlabs apt module uses hostname-based apt pinning, which
-        # causes _all_ packages to be pinned at equal priority
-          location => 'http://mirrors.ocf.berkeley.edu/debian/';
-    exec {
-      'add-i386':
-        command => 'dpkg --add-architecture i386',
-        unless  => 'dpkg --print-foreign-architectures | grep i386',
-        notify => Exec['apt_update'];
BREAKS HERE
-      }
-
BREAKS HERE
-      $cgconfig_require = Package['cgroups']
-      $cgred_require = Package['cgroups']
BREAKS HERE
-        'jessie': {
-          $client_nfsv4_services      = {'rpcbind' => {}, 'nfs-common' => {}}
BREAKS HERE
-      query           => 'time() - scalar(process_start_time_seconds{job="prometheus", instance=~"127\\.0\\.0\\.1:.*")',
BREAKS HERE
-  $domain         = ''
-  $realm          = ''
-  $principal      = ''
-            $needs_sudo_config = false 
BREAKS HERE
-    ''      => "http://dev.centos.org/centos/${release}/SCL/$basearch/",
BREAKS HERE
-    baseurl        => 'http://repo.vmware.com/pub/rhel${osver[0]}/vfabric/5.2/$basearch',
-    gpgkey         => 'http://repo.vmware.com/pub/rhel${osver[0]}/vfabric/5.2/RPM-GPG-KEY-VFABRIC-5.2-EL${osver[0]}',
BREAKS HERE
-          },
BREAKS HERE
-        'abiword',
BREAKS HERE
-    $directors={},
-    $varnish_directors = $directors
-    $dynamic_directors = hiera('varnish::dynamic_directors', true)
-    # Write the dynamic directors configuration, if we need it
-    # lint:ignore:quoted_booleans lint:ignore:double_quoted_strings
-    if inline_template("<%= @directors.map{|k,v| v['dynamic'] }.include?('yes') %>") == "true" {
-        $use_dynamic_directors = true
-    } else {
-        $use_dynamic_directors = false
-    }
-    # lint:endignore
-
-    if $use_dynamic_directors {
-        varnish::common::directors { $vcl:
-            instance  => $inst,
-            directors => $directors,
-            extraopts => $extraopts,
-            before    => [
-                File["/etc/varnish/wikimedia_${vcl}.vcl"],
-                Service["varnish${instancesuffix}"]
-            ],
-        }
BREAKS HERE
-    include ::base::firewall
BREAKS HERE
-        ensure  => 'directory',
-        owner   => 'jenkins',
-        group   => 'jenkins',
-        mode    => '0755',
-        source  => 'puppet:///modules/jenkins/cli-shutdown.groovy',
-        owner   => 'jenkins',
-        group   => 'jenkins',
-        mode    => '0755',
BREAKS HERE
-  $smarthost_pass = ''
-    smarthost       => $smarthost,
-    smarthost_user  => $smarthost_user,
-    smarthost_pass  => $smarthost_pass,
-    require         => Class['postfix::package'],
-    notify          => Class['postfix::service'];
BREAKS HERE
-  $TMOUT = 300
-      content => "${condition} && export TMOUT=${TMOUT}",
-      content => "${condition} && setenv TMOUT ${TMOUT}",
BREAKS HERE
-    $configfile                 = 'config.ini'
-    $configfile                 = 'puppetdb.ini'
-  file { "/etc/puppetdb/conf.d/${configfile}":
BREAKS HERE
-    debian,ubuntu: {
BREAKS HERE
-    file { '/etc/awslogs/awslogs_dot_log.conf' :
-        ensure => 'present',
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0644',
-
BREAKS HERE
-        source  => 'puppet:///modules/phabricator/phabricator.gitconfig',
-        before    => File["${phabdir}/phabricator/scripts/"],
-        before    => File["${phabdir}/phabricator/scripts/mail/"],
-        content => template("phabricator/php.ini.erb"),
-            ensure   => directory,
-            mode     => '0755',
-            owner    => 'phd',
-            group    => 'www-data',
-            require  => Git::Install['phabricator/phabricator'],
-        content   => template('phabricator/phab_update_tag.erb'),
-        owner     => 'root',
-        group     => 'root',
-        mode      => '0500',
-            command     => "${create_index} && touch ${phabdir}/needs_es_indexed_false",
-            creates     => "${phabdir}/needs_es_indexed_false",
-            logoutput   => true,
-            require     => File["${phabdir}/phabricator/conf/local/local.json"],
BREAKS HERE
-#   The port that peons begin running on.  Default: 8100.
BREAKS HERE
-    require_package('python-yaml')
BREAKS HERE
-  include ::googleauthenticator::user::systemwide::common
BREAKS HERE
-  validate_array($import)
-  validate_string ($host_name)
-  if $service_name { validate_string ($service_name)}
-  if $users { validate_array ($users )}
-  if $user_groups { validate_array ($user_groups )}
-  if $times { validate_hash ($times )}
-  if $command { validate_string ($command )}
-  if $interval { validate_integer ($interval )}
-  if $period { validate_string ($period )}
-  if $zone { validate_string ($zone) }
-  if $types { validate_array ($types) }
-  if $states { validate_array ($states) }
-  if $assign { validate_array ($assign) }
-  if $ignore { validate_array ($ignore) }
-    'users' => $users,
-    'user_groups' => $user_groups,
-    'types' => $types,
-    'states' => $states,
BREAKS HERE
-#   Defaults to 60 seconds
-#   Defaults to 'guest'
-#   Defaults to '/'
-#   Defaults to 2
-#   Defaults to undef
-#   Defaults to undef
-#   Defaults to undef
-#   Defaults to 'TLSv1'
-#   Defaults to undef
-#   Defaults to undef
-#   Defaults to undef
-#   Defaults to undef
-  $rpc_response_timeout               = 60,
-  $rabbit_userid                      = 'guest',
-  $rabbit_virtual_host                = '/',
-  $rabbit_heartbeat_rate              = 2,
-  $kombu_ssl_ca_certs                 = undef,
-  $kombu_ssl_certfile                 = undef,
-  $kombu_ssl_keyfile                  = undef,
-  $kombu_ssl_version                  = 'TLSv1',
-  $qpid_heartbeat                     = 60,
-  $qpid_protocol                      = 'tcp',
-  $qpid_tcp_nodelay                   = true,
-  $flavor                             = undef,
-  $region_name                        = undef,
-  $enable_stack_adopt                 = undef,
-  $enable_stack_abandon               = undef,
-  if $kombu_ssl_ca_certs and !$rabbit_use_ssl {
-  if $kombu_ssl_certfile and !$rabbit_use_ssl {
-  if $kombu_ssl_keyfile and !$rabbit_use_ssl {
-  if ($kombu_ssl_certfile and !$kombu_ssl_keyfile) or ($kombu_ssl_keyfile and !$kombu_ssl_certfile) {
-    }
-
-    if $rabbit_use_ssl {
-
-      if $kombu_ssl_ca_certs {
-        heat_config { 'oslo_messaging_rabbit/kombu_ssl_ca_certs': value => $kombu_ssl_ca_certs; }
-      } else {
-        heat_config { 'oslo_messaging_rabbit/kombu_ssl_ca_certs': ensure => absent; }
-      }
-
-      if $kombu_ssl_certfile or $kombu_ssl_keyfile {
-        heat_config {
-          'oslo_messaging_rabbit/kombu_ssl_certfile': value => $kombu_ssl_certfile;
-          'oslo_messaging_rabbit/kombu_ssl_keyfile':  value => $kombu_ssl_keyfile;
-        }
-      } else {
-        heat_config {
-          'oslo_messaging_rabbit/kombu_ssl_certfile': ensure => absent;
-          'oslo_messaging_rabbit/kombu_ssl_keyfile':  ensure => absent;
-        }
-      }
-
-      if $kombu_ssl_version {
-        heat_config { 'oslo_messaging_rabbit/kombu_ssl_version':  value => $kombu_ssl_version; }
-      } else {
-        heat_config { 'oslo_messaging_rabbit/kombu_ssl_version':  ensure => absent; }
-      }
-
-    } else {
-      heat_config {
-        'oslo_messaging_rabbit/kombu_ssl_version':  ensure => absent;
-        'oslo_messaging_rabbit/kombu_ssl_ca_certs': ensure => absent;
-        'oslo_messaging_rabbit/kombu_ssl_certfile': ensure => absent;
-        'oslo_messaging_rabbit/kombu_ssl_keyfile':  ensure => absent;
-      }
-  heat_config {
-    'DEFAULT/rpc_backend'                  : value => $rpc_backend;
-    'DEFAULT/rpc_response_timeout'         : value => $rpc_response_timeout;
-    'ec2authtoken/auth_uri'                : value => $keystone_ec2_uri;
-    'keystone_authtoken/admin_tenant_name' : value => $keystone_tenant;
-    'keystone_authtoken/admin_user'        : value => $keystone_user;
-    'keystone_authtoken/admin_password'    : value => $keystone_password, secret => true;
-  if $flavor {
-    heat_config { 'paste_deploy/flavor': value => $flavor; }
-  } else {
-    heat_config { 'paste_deploy/flavor': ensure => absent; }
-  # region name
-  if $region_name {
-    heat_config { 'DEFAULT/region_name_for_services': value => $region_name; }
-  } else {
-    heat_config { 'DEFAULT/region_name_for_services': ensure => absent; }
-  if $enable_stack_adopt != undef {
-    validate_bool($enable_stack_adopt)
-    heat_config { 'DEFAULT/enable_stack_adopt': value => $enable_stack_adopt; }
-  } else {
-    heat_config { 'DEFAULT/enable_stack_adopt': ensure => absent; }
-  }
-
-  if $enable_stack_abandon != undef {
-    validate_bool($enable_stack_abandon)
-    heat_config { 'DEFAULT/enable_stack_abandon': value => $enable_stack_abandon; }
-  } else {
-    heat_config { 'DEFAULT/enable_stack_abandon': ensure => absent; }
-  }
BREAKS HERE
-  
-    source  => $dnssec ? {
-  	  /(yes|true)/ => 'puppet:///modules/powerdns/postgresql_schema.dnssec.sql',
-  	  /(no|false)/ => 'puppet:///modules/powerdns/postgresql_schema.sql',
-  	  default      => 'puppet:///modules/powerdns/postgresql_schema.sql'
-  	}
BREAKS HERE
-                  'Prometheus::Jmx_exporter_instance',
BREAKS HERE
-    $ipv6           = false
-    $sahara_enabled = false
-    $ipv6           = true
-    $sahara_enabled = true
BREAKS HERE
-  Enum['absent', 'present']                                     $ensure   = present,
-  Optional[Enum['debug', 'information', 'notice', 'warning']]   $severity = undef,
-  Optional[String]                                              $facility = undef,
BREAKS HERE
-      path    => '/usr/bin:/usr/sbin',
BREAKS HERE
-  $mysql_proxy_admin_pass,
-    admin_username     => 'admin',
-    admin_pass         => $mysql_proxy_admin_pass,
BREAKS HERE
-  $ttys = join( $root_ttys, '\n')
BREAKS HERE
-  $mongofork       = true,
BREAKS HERE
-    class {'::mysql': }
BREAKS HERE
-) {
BREAKS HERE
-#   A list of the ITL plugins to load. Default is [ 'plugins', 'plugins-contrib' ] on Linux systems and
-#   [ 'windows-plugins', 'nscp' ] on Windows.
BREAKS HERE
-    require             => Logster::Cronjob["nginx-vhost-${title}"],
BREAKS HERE
-#   $working_path   - Base path for statistics data.
-#                     Default: /srv
-    $working_path = '/srv'
BREAKS HERE
-    require_package('nodejs', 'nodejs-legacy', 'firejail')
BREAKS HERE
-  case $non_torified_users {
-    '': { $non_torified_users = [] }
-  }
-  $real_non_torified_users = uniq_flatten([ $tor_user, $non_torified_users ])
BREAKS HERE
-            srange =>  'labcontrol1004.wikimedia.org',
BREAKS HERE
-            ensure => $ensure
BREAKS HERE
-    barman_user => $::barman::settings::dbuser,
BREAKS HERE
-
BREAKS HERE
-    file {
-      '/etc/profile.d/pinerolo_profile.sh':
-        ensure => file,
-        source => 'puppet:///modules/os_hardening/profile.conf',
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0400',
BREAKS HERE
-  include ulimit::params
BREAKS HERE
-    include passwords::geoip
-    # Including geoip with data_provider => maxmind will install a
-    # cron job to download GeoIP data files from Maxmind weekly.
-    # Setting data_directory will have those files downloaded into
-    # data_directory.  By downloading these files into the
-    # volatiledir they will be available for other nodes to get via
-    # puppet by including geoip with data_provider => 'puppet'.
-    # Sigh, need to manually include ::geoip::data here, since we are
-    # changing data_directory and puppet class inheritance with parameters
-    # is funky.
-    class { '::geoip::data':
-        data_directory => "${puppetmaster::volatiledir}/GeoIP",
-    # NOTE: use brewster as http proxy, since puppetmaster probably does not
-    # have internet access
-        data_provider  => 'maxmind',
-        data_directory => "${puppetmaster::volatiledir}/GeoIP",
-        environment    => 'http_proxy=http://brewster.wikimedia.org:8080',
-        license_key    => $passwords::geoip::license_key,
-        user_id        => $passwords::geoip::user_id,
-        product_ids    => [106, 133, 115],
BREAKS HERE
-    '~/.pgpass':
-      source    => 'puppet:///private/backups/.pgpass',
-      mode      => '0600',
-      show_diff => false;
-
BREAKS HERE
-#    (optional) The state of the service
-  if $enabled {
-    $service_ensure = 'running'
-  } else {
-    $service_ensure = 'stopped'
BREAKS HERE
-      $fpm_inifile         = "${config_root_ini}/fpm/php.ini"
BREAKS HERE
-    $mkfs_opt   = ''
-        options     => "defaults",
BREAKS HERE
-        source => $::icinga2_puppet_setting_hostprivkey,
-        source => $::icinga2_puppet_setting_hostcert,
-        source => $::icinga2_puppet_setting_localcacert,
BREAKS HERE
-    statusbot_channels      => 'edeploy, fuel-dev, heat, kolla, magnetodb, murano, openstack, openstack-101, openstack-ansible, openstack-anvil, openstack-bacon, openstack-barbican, openstack-blazar, openstack-board, openstack-ceilometer, openstack-chef, openstack-cinder, openstack-cloudkeep, openstack-community, openstack-containers, openstack-defcore, openstack-dev, openstack-dns, openstack-doc, openstack-entropy, openstack-foundation, openstack-gantt, openstack-gate, openstack-glance, openstack-horizon, openstack-hyper-v, openstack-i18n, openstack-infra, openstack-infra-incident, openstack-ironic, openstack-keystone, openstack-manila, openstack-meeting, openstack-meeting-3, openstack-meeting-4, openstack-meeting-alt, openstack-meniscus, openstack-merges, openstack-metering, openstack-monasca, openstack-neutron, openstack-nova, openstack-opw, openstack-oslo, openstack-qa, openstack-raksha, openstack-rally, openstack-rating, openstack-relmgr-office, openstack-sahara, openstack-sdks, openstack-sprint, openstack-stable, openstack-state-management, openstack-swift, openstack-trove, openstack-zaqar, packstack-dev, refstack, storyboard, syscompass, tripleo',
BREAKS HERE
-    $error_template_path = '/etc/trafficserver/error_template/default'
-      ['/etc/trafficserver/error_template', $error_template_path]:
-        "${error_template_path}/.body_factory_info":
-        "${error_template_path}/default":
BREAKS HERE
-      'python-markupsafe','python-paramiko','python-pyasn1','python-six'] 
BREAKS HERE
-        mode    => '0660',
-        mode    => '0660',
BREAKS HERE
-  $relay_log_listener_connections    = $graphite::params::relay_lig_listener_connections,
-  $relay_max_queue_size              = $graphite::params::relay_max_queu_size,
BREAKS HERE
-    release         => 'liberty',
-    auth_password       => $neutron_admin_password,
-    identity_uri        => $keystone_admin_uri,
-    nova_url               => "https://${controller_public_address}:8774/v2",
-    nova_admin_auth_url    => "${keystone_admin_uri}/v2.0",
-    nova_admin_username    => 'nova',
-    nova_admin_password    => $nova_admin_password,
-    nova_admin_tenant_name => 'services',
-    database_connection => "mysql://nova:${nova_mysql_password}@127.0.0.1/nova?charset=utf8",
-    neutron_admin_auth_url => "https://${controller_public_address}:35357/v2.0",
-    neutron_admin_password => $neutron_admin_password,
-    neutron_url            => "https://${controller_public_address}:9696",
BREAKS HERE
-      repo_url_suffix => $nodejs_version,
-      before          => Anchor['nodejs-package-install'],
BREAKS HERE
-    # Used by generated /etc/hosts file
-    $active_redis_ip = ipresolve($active_redis, 4, $::nameservers[0])
-
BREAKS HERE
-  if $admin != undef {
-    $hash  = $admin[hash]
-    $fn    = $admin[fn]
-    $email = $admin[email]
-    file { "${splunk_home}/etc/passwd":
-      ensure  => present,
-      owner   => $splunk_os_user,
-      group   => $splunk_os_group,
-      mode    => $splunk_dir_mode,
-      content => ':admin:::',
-      replace => 'no',
-    -> exec { 'set admin passwd':
-      command => "sed -i -e 's#^:admin:.*$#:admin:${hash}::${fn}:admin:${email}::#g' ${splunk_home}/etc/passwd",
-      unless  => "grep -qe '^:admin:${hash}' ${splunk_home}/etc/passwd",
-      path    => ['/bin', '/sbin', '/usr/bin', '/usr/sbin'],
-    }
-    -> file { "${splunk_home}/etc/.ui_login":
-      ensure  => present,
-      owner   => $splunk_os_user,
-      group   => $splunk_os_group,
-      mode    => $splunk_file_mode,
-      content => '',
-      replace => 'no',
BREAKS HERE
-        $globalDbName = "${dbName}.${dbDomain}"
-        $globalDbName = $dbName
-      $templatename = "${path}/${template}.dbt"
-      exec { "install oracle database ${title}":
-        require     => File[$filename],
-      exec { "delete oracle database ${title}":
-        require     => File[$filename],
BREAKS HERE
-# logs directly, instead of having logs log to stdout/stderr.
BREAKS HERE
-    creates => "${jinteki::home}/target/netrunner-0.1.0-SNAPSHOT-standalone.jar",
BREAKS HERE
-  include puphpet::php::settings
-    php_version => $puphpet::php::params::version,
BREAKS HERE
-  if $lsbmajdistrelease == '6' {
BREAKS HERE
-  $_constants = concat(keys($::icinga2::_constants), $::icinga2::params::globals, $attrs_list)
BREAKS HERE
-    # Using trebuchet provider while scap service deployment is under
-    # development -- chicken and egg things
-    #
-    # This should be removed once scap3 is in a final state (i.e. packaged
-    # or deployed via another method)
-        ensure   => latest,
-        provider => 'trebuchet',
BREAKS HERE
-        ensure  => directory,
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
BREAKS HERE
-    if $instance_name {
BREAKS HERE
-        ensure => running,
BREAKS HERE
-  $master        = $ipa::params::master,
-  $replica       = $ipa::params::replica,
-  $client        = $ipa::params::client,
-  $cleanup       = $ipa::params::cleanup,
-  $domain        = downcase($ipa::params::domain),
-  $realm         = upcase($ipa::params::realm),
-  $ipaservers    = $ipa::params::ipaservers,
-  $loadbalance   = $ipa::params::loadbalance,
-  $adminpw       = $ipa::params::adminpw,
-  $dspw          = $ipa::params::dspw,
-  $otp           = $ipa::params::otp,
-  $dns           = $ipa::params::dns,
-  $forwarders    = $ipa::params::forwarders,
-  $mkhomedir     = $ipa::params::mkhomedir,
-  $ntp           = $ipa::params::ntp,
-  $kstart        = $ipa::params::kstart,
-  $desc          = $ipa::params::desc,
-  $locality      = $ipa::params::locality,
-  $location      = $ipa::params::location,
-  $sudo          = $ipa::params::sudo,
-  $sudopw        = $ipa::params::sudopw,
-  $debiansudopkg = $ipa::params::debiansudopkg,
-  $automount     = $ipa::params::automount,
-  $autofs        = $ipa::params::autofs,
-  $svrpkg        = $ipa::params::svrpkg,
-  $clntpkg       = $ipa::params::clntpkg,
-  $ldaputils     = $ipa::params::ldaputils,
-  $ldaputilspkg  = $ipa::params::ldaputilspkg,
-  $sssdtools     = $ipa::params::sssdtools,
-  $sssdtoolspkg  = $ipa::params::sssdtoolspkg,
-  $sssd          = $ipa::params::sssd
-) inherits ipa::params {
-    @package { "kstart":
-  @service { "ipa":
-    @service { "sssd":
-    service { "oddjobd":
-    @package { "autofs":
-    @service { "autofs":
-  @cron { "k5start_root":
-    minute  => "*/1",
-    require => Package["kstart"]
-    fail("Conflicting options selected. Cannot configure both master and replica at once.")
-      validate_re("$ipa::adminpw",'^.........*$',"Parameter 'adminpw' must be at least 8 characters long")
-      validate_re("$ipa::dspw",'^.........*$',"Parameter 'dspw' must be at least 8 characters long")
-      fail("Required parameter 'domain' missing")
-      fail("Required parameter 'realm' missing")
-      fail("Parameter 'domain' is not a valid domain name")
-      fail("Parameter 'realm' is not a valid domain name")
-      fail("Conflicting options selected. Cannot cleanup during an installation.")
-      ipa::cleanup { "$fqdn":
-        realize Service["sssd"]
-    class { "ipa::master":
-      domain      => $ipa::domain,
-      realm       => $ipa::realm,
-      fail("Required parameter 'adminpw' missing")
-      fail("Required parameter 'dspw' missing")
-    class { "ipa::replica":
-      domain      => $ipa::domain,
-    class { "ipa::client":
-      domain       => $ipa::domain,
-      realm        => $ipa::realm,
-      fail("Required parameter 'adminpw' missing")
-      fail("Required parameter 'dspw' missing")
-      fail("Required parameter 'otp' missing")
-    class { "ipa::client":
-      domain        => $ipa::domain,
-      realm         => $ipa::realm,
-      fail("Required parameter 'otp' missing")
BREAKS HERE
-    file {
-        '/etc/apache2/sites-enabled/puppetmaster':
-            owner   => 'root',
-            group   => 'root',
-            mode    => '0444',
-            content => template('puppetmaster/puppetmaster.erb');
-        '/etc/apache2/ports.conf':
-            owner   => 'root',
-            group   => 'root',
-            mode    => '0444',
-            content => template('puppetmaster/ports.conf.erb');
BREAKS HERE
-  class { 'salt':
-    ensure => absent,
-  }
-  class { 'salt::master':
-    ensure => absent,
-  }
-
BREAKS HERE
-  if ($::project_config_ref != undef) {
BREAKS HERE
-      password_hash => mysql_password($galera::deb_sysmaint_password),
BREAKS HERE
-  $desktop_enabled          = false,
BREAKS HERE
-  @@icinga::check { "check_boot_disk_space_${::hostname}":
-    check_command       => 'check_nrpe!check_disk_space_arg!20% 10% /boot',
-    service_description => 'low available disk space on /boot',
-    use                 => 'govuk_high_priority',
-    host_name           => $::fqdn,
-  @@icinga::check { "check_ssh_${::hostname}":
-    check_command       => 'check_ssh',
-    use                 => 'govuk_high_priority',
-    service_description => 'unable to ssh',
-    host_name           => $::fqdn,
BREAKS HERE
-    # Include offsite backups to S3
-    include govuk_postgresql::wal_e::backup
-
BREAKS HERE
-        $min_spare = ceiling($num_workers * 0.1)
-                'pm.max_spare_servers'      => $num_workers,
-                'pm.max_children'           => $max_spare,
BREAKS HERE
-#   Set the Icinga 2 name of the scheduleddowntime object. Defaults to title of the define resource.
-#     The short name of the service this comment belongs to. If omitted, this comment object is treated as host comment.
-#     A dictionary containing information which days and durations apply to this timeperiod.
-#   Dispose an apply instead an object if set to 'true'. Value is taken as statement,
-#   i.e. 'vhost => config in host.vars.vhosts'. Defaults to false.
-#   An object type on which to target the apply rule. Valid values are `Host` and `Service`. Defaults to `Host`.
BREAKS HERE
-        $datadir = "/srv/sqldata.${title}"
-        $tmpdir  = "/srv/tmp.${title}"
-        $socket  = "/run/mysqld/mysqld.${title}.sock"
-    file { $datadir:
-    file { $tmpdir:
BREAKS HERE
-  $mysql_user_password,
-  $instance                = 'dev',
-  $phab_dir                = '/phabricator',
-  $ssl_cert_file           = "/etc/ssl/certs/${::fqdn}.pem",
-  $ssl_cert_file_contents  = undef, # If left empty puppet will not create file.
-  $ssl_chain_file          = undef,
-  $ssl_chain_file_contents = undef, # If left empty puppet will not create file.
-  $ssl_key_file            = "/etc/ssl/private/${::fqdn}.key",
-  $ssl_key_file_contents   = undef,  # If left empty puppet will not create file.
-  $vhost_name              = $::fqdn,
-) {
-
-  $instances_dir = "${phab_dir}/instances"
-  $instance_dir = "${instances_dir}/${instance}"
-
-  $packages = [
-    'php5',
-    'php5-mysql',
-    'php5-gd',
-    'php5-dev',
-    'php5-curl',
-    'php-apc',
-    'php5-cli',
-    'python-pygmentize'
-  ]
-  package { $packages:
-    ensure => installed,
-  }
-  if !defined(Package['git']) {
-    package { 'git':
-      ensure => present
-    }
-  }
-  file { $phab_dir:
-    ensure => directory,
-  }
-  file { $instances_dir:
-    ensure => directory,
-  }
-  file { $instance_dir:
-    ensure => directory,
-  }
-  if $ssl_cert_file_contents != undef {
-    file { $ssl_cert_file:
-      owner   => 'root',
-      group   => 'root',
-      mode    => '0640',
-      content => $ssl_cert_file_contents,
-      before  => Httpd::Vhost[$vhost_name],
-    }
-  }
-
-  if $ssl_key_file_contents != undef {
-    file { $ssl_key_file:
-      owner   => 'root',
-      group   => 'ssl-cert',
-      mode    => '0640',
-      content => $ssl_key_file_contents,
-      before  => Httpd::Vhost[$vhost_name],
-    }
-  }
-  if $ssl_chain_file_contents != undef {
-    file { $ssl_chain_file:
-      owner   => 'root',
-      group   => 'root',
-      mode    => '0640',
-      content => $ssl_chain_file_contents,
-      before  => Httpd::Vhost[$vhost_name],
-    }
-  }
-  vcsrepo { "${instance_dir}/phabricator":
-    ensure   => latest,
-    provider => git,
-    source   => 'https://github.com/phacility/phabricator.git',
-    require  => [
-      File[$instance_dir],
-      Package['git'],
-  vcsrepo { "${instance_dir}/arcanist":
-    ensure   => latest,
-    provider => git,
-    source   => 'https://github.com/phacility/arcanist.git',
-    require  => [
-      File[$instance_dir],
-      Package['git'],
-    ]
-  }
-  vcsrepo { "${instance_dir}/libphutil":
-    ensure   => latest,
-    provider => git,
-    source   => 'https://github.com/phacility/libphutil.git',
-    require  => [
-      File[$instance_dir],
-      Package['git'],
-  file { 'initial.db':
-    ensure => present,
-    path   => "${phab_dir}/initial.db",
-    source => 'puppet:///modules/phabricator/initial.db',
-  }
-
-  file {'local.json':
-    ensure  => present,
-    path    => "${instance_dir}/phabricator/conf/local/local.json",
-    content => template('phabricator/local.json.erb'),
-  }
-
-  file { '/etc/php5/mods-available/phabricator.ini':
-    ensure  => present,
-    owner   => 'root',
-    group   => 'root',
-    content => "; configuration for phabricator\n; priority=20\npost_max_size = 32M",
-
-  }
-
-  file { '/etc/php5/apache2/conf.d/20-phabricator.ini':
-    ensure => 'link',
-    target => '/etc/php5/mods-available/phabricator.ini',
-    notify => Service['httpd'],
-  }
-
-  exec { 'load-initial-db':
-    command     => "/usr/bin/mysql < ${phab_dir}/initial.db && ${instance_dir}/phabricator/bin/storage upgrade --force",
-    unless      => "${instance_dir}/phabricator/bin/storage status",
-    subscribe   => File['initial.db'],
-    refreshonly => true,
-    require     => [
-                    Vcsrepo["${instance_dir}/phabricator"],
-                    File['initial.db'],
-                    ]
-  }
-
-  exec { 'update-database':
-    command     => "${instance_dir}/phabricator/bin/storage upgrade --force",
-    refreshonly => true,
-    subscribe   => Vcsrepo["${instance_dir}/phabricator"],
-    require     => Vcsrepo["${instance_dir}/phabricator"],
-  }
-
-  include ::httpd
-  include ::httpd::ssl
-  include ::httpd::php
-
-  httpd_mod { 'rewrite':
-    ensure => present,
-  }
-
-  ::httpd::vhost { $vhost_name:
-    port     => 443,
-    docroot  => "${instance_dir}/phabricator/webroot/",
-    priority => '50',
-    template => 'phabricator/vhost.erb',
-    ssl      => true,
-    require  => File[$instance_dir],
-
BREAKS HERE
-    package { [ 'google-perftools', 'graphviz', 'gv', 'apache2-utils', 'perf-tools' ]:
BREAKS HERE
-  	require => Package['chocolatey'],
BREAKS HERE
-        source       => "${mountPoint}/${patchFile}",
BREAKS HERE
-  ) {
-
-    "python-babel",
-    "wget",
-  service { "versions":
-    provider => upstart,
-    ensure => running,
-  }
-
-  file { '/etc/init/versions.conf':
-    owner => 'root',
-    group => 'root',
-    mode => 444,
-    ensure => 'present',
-    source => "puppet:///modules/jenkins/versions.conf",
-    replace => 'true',
-    notify => Service["versions"]
-  }
-
BREAKS HERE
-    reportupdater::job { 'edit':
-        repository => 'limn-edit-data',
-        output_dir => 'metrics',
-    }
-    reportupdater::job { 'multimedia':
-        repository => 'limn-multimedia-data',
-        output_dir => 'metrics/multimedia-health',
-    }
-    reportupdater::job { 'ee-migration':
-        repository => 'limn-ee-data',
-        output_dir => 'metrics/ee',
-    }
BREAKS HERE
-        'bgp-nexthop-ipv6' => inline_template("<%= require 'ipaddr'; (IPAddr.new(v6_ip).mask(64) | IPAddr.new(\"::\" + scope.lookupvar(\"::ipaddress\").gsub('.', ':'))).to_s() %>")
BREAKS HERE
-    if $ensure == 'present' {
-        # Ordering
-        Package['nodejs'] -> File[$aphlict_conf] ~> Service['aphlict']
-        File['/var/run/aphlict'] -> File['/var/log/aphlict'] -> Service['aphlict']
-        User[$user] -> Service['aphlict']
-        File[$node_modules] ~> Service['aphlict']
-    file { '/var/run/aphlict':
-    file { '/var/log/aphlict':
-        require => File['/var/log/aphlict'],
BREAKS HERE
-class statistics::wmde(
-    $user = 'analytics-wmde',
-    $dir = '/srv/analytics-wmde'
-) {
BREAKS HERE
-  $ca_enabled_ensure = $server_ca ? {
-    true    => present,
-    default => absent,
-
-  $ca_disabled_ensure = $server_ca ? {
-    false   => present,
-    default => absent,
-  file_line { 'ca_enabled':
-    ensure => $ca_enabled_ensure,
-    path   => "${server_puppetserver_dir}/bootstrap.cfg",
-    line   => 'puppetlabs.services.ca.certificate-authority-service/certificate-authority-service',
-  }
-  file_line { 'ca_disabled':
-    ensure => $ca_disabled_ensure,
-    path   => "${server_puppetserver_dir}/bootstrap.cfg",
-    line   => 'puppetlabs.services.ca.certificate-authority-disabled-service/certificate-authority-disabled-service',
-  if versioncmp($server_puppetserver_version, '2.3') >= 0 {
-    $versioned_code_service_ensure = present
-  } else {
-    $versioned_code_service_ensure = absent
-  }
-  file_line { 'versioned_code_service':
-    ensure => $versioned_code_service_ensure,
-    path   => "${server_puppetserver_dir}/bootstrap.cfg",
-    line   => 'puppetlabs.services.versioned-code-service.versioned-code-service/versioned-code-service',
BREAKS HERE
-	# XXX: should launch only after service file change,
-	#      but this is workaround for bug in Fedora which needs to be fixed anyway
-	exec { "systemctl-daemon-reload":
-		require => [File["sysconfig-hadoop-datanode"], File["hadoop-datanode.service"]],
-		subscribe => File["hadoop-datanode.service"],
-		require => [Exec["systemctl-daemon-reload"]],
BREAKS HERE
-  $ensure = 'present',
BREAKS HERE
-   	} elseif $::graphite::gr_enable_carbon_relay {
-   	} elseif $::graphite::gr_enable_carbon_aggregator {
-   	} else {
BREAKS HERE
-
-    if os_version('debian jessie') {
-        require_package('nfsd-ldap')
-    }
BREAKS HERE
-#   should consume. Example: 'tcp://vanadium.eqiad.wmnet:8600'.
-#    input  => 'tcp://vanadium.eqiad.wmnet:8600',
-#    output => 'mongodb://vanadium.eqiad.wmnet:27017/?w=1',
BREAKS HERE
-    from                => '20minutes',
BREAKS HERE
-  file { "/data/uploads":
-    ensure  => 'directory',
-    owner   => 'assets',
-    group   => 'assets',
-    mode    => '0755',
-    require => [User['assets'], Group['assets']],
BREAKS HERE
-        bind_address    => $bind_address,
-        verify_client   => $verify_client,
-        allow_from      => $allow_from,
-        deny_from       => $deny_from
BREAKS HERE
-    ) {
BREAKS HERE
-$extlookup_precedence = ['%{govuk_platform}', 'common']
BREAKS HERE
-# [*rpc_backend*]
-#   (Optional) Use these options to configure the RabbitMQ message system.
-#   Defaults to 'rabbit'
-#
-  $rpc_backend                        = 'rabbit',
-cinder::rabbit_port, cinder::rabbit_userid and cinder::rabbit_virtual_host are \
-deprecated. Please use cinder::default_transport_url instead.")
-  if $rpc_backend == 'cinder.openstack.common.rpc.impl_kombu' or $rpc_backend == 'rabbit' {
-
-    if is_service_default($default_transport_url) and is_service_default($rabbit_password) {
-      fail('Please specify a rabbit_password parameter.')
-    }
-
-    oslo::messaging::rabbit { 'cinder_config':
-      rabbit_userid               => $rabbit_userid,
-      rabbit_password             => $rabbit_password,
-      rabbit_virtual_host         => $rabbit_virtual_host,
-      rabbit_host                 => $rabbit_host,
-      rabbit_port                 => $rabbit_port,
-      rabbit_hosts                => $rabbit_hosts,
-      rabbit_ha_queues            => $rabbit_ha_queues,
-      heartbeat_timeout_threshold => $rabbit_heartbeat_timeout_threshold,
-      heartbeat_rate              => $rabbit_heartbeat_rate,
-      rabbit_use_ssl              => $rabbit_use_ssl,
-      kombu_reconnect_delay       => $kombu_reconnect_delay,
-      kombu_ssl_version           => $kombu_ssl_version,
-      kombu_ssl_keyfile           => $kombu_ssl_keyfile,
-      kombu_ssl_certfile          => $kombu_ssl_certfile,
-      kombu_ssl_ca_certs          => $kombu_ssl_ca_certs,
-      amqp_durable_queues         => $amqp_durable_queues,
-      kombu_compression           => $kombu_compression,
-    }
-  elsif $rpc_backend == 'amqp' {
-    oslo::messaging::amqp { 'cinder_config':
-      server_request_prefix  => $amqp_server_request_prefix,
-      broadcast_prefix       => $amqp_broadcast_prefix,
-      group_request_prefix   => $amqp_group_request_prefix,
-      container_name         => $amqp_container_name,
-      idle_timeout           => $amqp_idle_timeout,
-      trace                  => $amqp_trace,
-      ssl_ca_file            => $amqp_ssl_ca_file,
-      ssl_cert_file          => $amqp_ssl_cert_file,
-      ssl_key_file           => $amqp_ssl_key_file,
-      ssl_key_password       => $amqp_ssl_key_password,
-      allow_insecure_clients => $amqp_allow_insecure_clients,
-      sasl_mechanisms        => $amqp_sasl_mechanisms,
-      sasl_config_dir        => $amqp_sasl_config_dir,
-      sasl_config_name       => $amqp_sasl_config_name,
-      username               => $amqp_username,
-      password               => $amqp_password,
-    }
BREAKS HERE
-  if $repo_url { $_repo_url = "repo_url=${repo_url}" }
-  if $register { $_register = "register=${register}" }
-  if $subtree { $_subtree = "subtree=${subtree}" }
-
-  else { $_repo_url = '' }
BREAKS HERE
-  $ensure_service = $ensure ? {
-    'present' => 'running',
-    'absent'  => 'stopped',
-  }
-
-  package { 'pdns-server':
-  service { 'pdns':
-    ensure      => $ensure_service,
-    enable      => true,
-    hasrestart  => true,
-    hasstatus   => true,
-    require     => Package['pdns-server'],
-#  file { '/etc/powerdns/pdns.conf':
-#    ensure => $ensure,
-#    owner   => root,
-#    group   => root,
-#    mode    => '0644',
-#    content => template('powerdns/pdns.conf.erb'),
-#    notify  => Service['pdns'],
-#  }
-
BREAKS HERE
-  ssh_authorized_key { 'jenkins-master-2014-04-24':
-    ensure  => present,
-    user    => 'jenkins',
-    type    => 'ssh-rsa',
-    key     => $ssh_key,
-  ssh_authorized_key { '/home/jenkins/.ssh/authorized_keys':
-    ensure => absent,
-    user   => 'jenkins',
-  }
BREAKS HERE
-        check_command => "check_http_url!${sitename_jenkins}!/login/",
BREAKS HERE
-# [*keystone_password*]
-#   The password to use for authentication (keystone)
-#
-# [*keystone_enabled*]
-#   (optional) Use keystone for authentification
-#   Defaults to true
-#
-# [*keystone_tenant*]
-#   (optional) The tenant of the auth user
-#   Defaults to services
-#
-# [*keystone_user*]
-#   (optional) The name of the auth user
-#   Defaults to manila
-#
-# [*keystone_auth_host*]
-#   (optional) The keystone host
-#   Defaults to localhost
-#
-# [*keystone_auth_port*]
-#   (optional) The keystone auth port
-#   Defaults to 35357
-#
-# [*keystone_auth_protocol*]
-#   (optional) The protocol used to access the auth host
-#   Defaults to http.
-# [*keystone_auth_admin_prefix*]
-#   (optional) The admin_prefix used to admin endpoint of the auth host
-#   This allow admin auth URIs like http://auth_host:35357/keystone.
-#   (where '/keystone' is the admin prefix)
-#   Defaults to false for empty. If defined, should be a string with a
-#   leading '/' and no trailing '/'.
-#
-# [*keystone_auth_uri*]
-#   (Optional) Public Identity API endpoint.
-#   Defaults to false.
-#
-# [*service_port*]
-#   (optional) The manila api port
-#   Defaults to 5000
-#
-  $keystone_password,
-  $keystone_enabled                   = true,
-  $keystone_tenant                    = 'services',
-  $keystone_user                      = 'manila',
-  $keystone_auth_host                 = 'localhost',
-  $keystone_auth_port                 = '35357',
-  $keystone_auth_protocol             = 'http',
-  $keystone_auth_admin_prefix         = false,
-  $keystone_auth_uri                  = false,
-  $os_region_name                     = undef,
-  $service_port                       = '5000',
-  $package_ensure                     = 'present',
-  $bind_host                          = '0.0.0.0',
-  $enabled                            = true,
-  $sync_db                            = true,
-  $manage_service                     = true,
-  $ratelimits                         = undef,
-  $ratelimits_factory =
-    'manila.api.v1.limits:RateLimitingMiddleware.factory',
-  $enable_proxy_headers_parsing       = $::os_service_default,
-  if $keystone_auth_uri {
-    manila_api_paste_ini { 'filter:authtoken/auth_uri': value => $keystone_auth_uri; }
-    manila_api_paste_ini { 'filter:authtoken/auth_uri': value => "${keystone_auth_protocol}://${keystone_auth_host}:${service_port}/"; }
-  if $keystone_enabled {
-      'DEFAULT/auth_strategy':     value => 'keystone' ;
-    }
-    manila_api_paste_ini {
-      'filter:authtoken/service_protocol':  value => $keystone_auth_protocol;
-      'filter:authtoken/service_host':      value => $keystone_auth_host;
-      'filter:authtoken/service_port':      value => $service_port;
-      'filter:authtoken/auth_protocol':     value => $keystone_auth_protocol;
-      'filter:authtoken/auth_host':         value => $keystone_auth_host;
-      'filter:authtoken/auth_port':         value => $keystone_auth_port;
-      'filter:authtoken/admin_tenant_name': value => $keystone_tenant;
-      'filter:authtoken/admin_user':        value => $keystone_user;
-      'filter:authtoken/admin_password':    value => $keystone_password, secret => true;
-  if ($ratelimits != undef) {
-    manila_api_paste_ini {
-      'filter:ratelimit/paste.filter_factory': value => $ratelimits_factory;
-      'filter:ratelimit/limits':               value => $ratelimits;
-    }
-  }
-
-    if $keystone_auth_admin_prefix {
-      validate_re($keystone_auth_admin_prefix, '^(/.+[^/])?$')
-      manila_api_paste_ini {
-        'filter:authtoken/auth_admin_prefix': value => $keystone_auth_admin_prefix;
-      }
-    } else {
-        'filter:authtoken/auth_admin_prefix': ensure => absent;
BREAKS HERE
-        match => '([Bb]ug|[Ll][Pp])[\\s#:]*(\\d+)',
-        match => '([Bb]lue[Pp]rint|[Bb][Pp])[\\s#:]*([A-Za-z0-9\\-]+)',
BREAKS HERE
-  $ssl_enabled = false
-  $ssl_enabled = true
-include ::openstack_integration::ironic
-  ironic                  => true,
BREAKS HERE
-class classroom::master::tuning (
-  $jruby_purge         = $classroom::params::jruby_purge,
-  $jvm_tuning_profile  = $classroom::params::jvm_tuning_profile,
-) inherits classroom::params {
-  if $jruby_purge {
-    $cert   = '/etc/puppetlabs/puppet/ssl/certs/pe-internal-classifier.pem'
-    $key    = '/etc/puppetlabs/puppet/ssl/private_keys/pe-internal-classifier.pem'
-    $cacert = '/etc/puppetlabs/puppet/ssl/certs/ca.pem'
-  if $jvm_tuning_profile != false {
-    case $jvm_tuning_profile {
-        if $jurby_purge {
-    file { '/etc/puppetlabs/puppet/hieradata/tuning.yaml':
-      require => File['/etc/puppetlabs/puppet/hieradata/'],
BREAKS HERE
-  include pip
BREAKS HERE
-# [*fields_prefix*]
-#   Add the prefix to Elasticsearch queries. Depending on the version of logstasher
-#   some applications do not include the @fields prefix. Add this prefix by default,
-#   with the option to override with a blank field for apps that use a different
-#   configuration of the logstasher gem.
-#
-  $fields_prefix = '',
BREAKS HERE
-            sslcert::certificate { $certificate_name:
-                before => Nginx::Site['archiva'],
-            }
BREAKS HERE
-      nagios_warn  => 10,
-      nagios_crit  => 5,
BREAKS HERE
-            Interface::Ip['lists.wikimedia.org_v4'],
-            Interface::Ip['lists.wikimedia.org_v6'],
BREAKS HERE
-    ensure  => file,
-    group   => $gr_web_group_REAL,
-    mode    => '0644',
-    seltype => 'httpd_sys_rw_content_t',
-    owner   => $gr_web_user_REAL;
BREAKS HERE
-        command     => "${refinery_path}/bin/saltrotate -p '3 months' -b '50 days' ${refinery_config_dir}/salts/eventlogging_sanitization && hdfs dfs -rm -r /user/hdfs/salts/eventlogging_sanitization && hdfs dfs -put ${refinery_config_dir}/salts/eventlogging_sanitization /user/hdfs/salts",
BREAKS HERE
-    war => 'http://ci.openstack.org/tarballs/gerrit-2.4.1-9-g8b48c79.war',
BREAKS HERE
-    file { '/srv/org/wikimedia/static-bugzilla':
-        mode   => '0755';
BREAKS HERE
-  validate_string($ca_server)
-  validate_string($server_ca_proxy)
BREAKS HERE
-    Integer $num_proxies = hiera('profile::mediawiki::mcrouter_wancache::num_proxies', 1)
BREAKS HERE
-    /(?i:Centos|RedHat|Scientific)/ => $osver[0],
BREAKS HERE
-			content => template("munin/munin-node.conf.$operatingsystem.$lsbdistcodename"),
-    File["/etc/munin/munin-node.conf"]{
-			content => template("munin/munin-node.conf.$operatingsystem"),
-    }
BREAKS HERE
-    onlyif  => "find '${destination}' -mtime +${max_age}",
BREAKS HERE
-    ensure => '8:6.7.7.10-6ubuntu3.5',
BREAKS HERE
-        ensure  => present,
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0555',
-        source  => 'puppet:///modules/zuul/zuul-gearman.py',
BREAKS HERE
-    # Hadoop masters need Zookeeper package from CDH, pin CDH over Debian.
-    include ::profile::cdh::apt_pin
-    include ::profile::hadoop::common
-
-    # Force apt-get update to run before we try to install packages.
-    Class['::profile::cdh::apt_pin'] -> Exec['apt-get update'] -> Class['::cdh::hadoop']
BREAKS HERE
-# - $script_disable_dynamic: Disable dynamic scripting. Default true.
-                    $merge_threads = 3,
-                    $script_disable_dynamic = true) {
BREAKS HERE
-    zanata_url                  => 'https://github.com/zanata/zanata-server/releases/download/server-3.9.6/zanata-3.9.6-wildfly.zip',
-    zanata_checksum             => 'cb7a477f46a118a337b59b9f4004ef7e6c77a1a8',
BREAKS HERE
-            'baseurl'  => 'https://trunk.rdoproject.org/centos7/5b/14/5b14d1e1de78ca59521b953f7e4e345665e6cea8_563ab7b1/',
BREAKS HERE
-        $real_yum_mariadb_baseurl = "http://yum.mariadb.org/5.5/${lower}${::operatingsystemmajrelease}-amd64"
BREAKS HERE
-    target    => "stats.${::fqdn_underscore}.nginx_logs.www-origin.http_5xx",
BREAKS HERE
-    monitoring::service { 'https_policy':
-        description   => 'HTTPS-policy',
BREAKS HERE
-
-    $license_file = $virtual_accelerator::va_license_file
-
-    if $license_file != '' and $license_file != undef {
-      file {"/usr/local/etc/6wind_va.lic":
-        ensure  => file,
-        content => $license_file,
-      }
-    }
-
BREAKS HERE
-      content => template('/puppet/etc/puppet/puppetdb.conf.erb'),
BREAKS HERE
-  include apache
-      before  => Apache::Vhost[$vhost_name],
-      before  => Apache::Vhost[$vhost_name],
-        before  => Apache::Vhost[$vhost_name],
-  apache::vhost { $vhost_name:
-  if ! defined(A2mod['rewrite']) {
-    a2mod { 'rewrite':
-  if ! defined(A2mod['proxy']) {
-    a2mod { 'proxy':
-  if ! defined(A2mod['proxy_http']) {
-    a2mod { 'proxy_http':
-  if ! defined(A2mod['cache']) {
-    a2mod { 'cache':
-  if ! defined(A2mod['cgi']) {
-    a2mod { 'cgi':
-      if ! defined(A2mod['mem_cache']) {
-        a2mod { 'mem_cache':
-      if ! defined(A2mod['cache_disk']) {
-        a2mod { 'cache_disk':
BREAKS HERE
-    ensure   => latest,
BREAKS HERE
-        ensure => 'present',
BREAKS HERE
-    
BREAKS HERE
-      statsd_metric => "%{@source_host}.nginx_logs.http_%{@fields.status}";
BREAKS HERE
-    file { '/var/lib/librenms/rrd':
-        mode    => '0555',
BREAKS HERE
-      File['/etc/ldap/krb5.keytab',
-        '/etc/ldap/sasl2/slapd.conf'],
BREAKS HERE
-        source  => $source,
-        owner   => $owner,
-        group   => $group,
-        mode    => '0644',
BREAKS HERE
-    require_package('dpkg-dev')
-
BREAKS HERE
-  $users    = [],
BREAKS HERE
-  
-    content => template('iptables/concat/filter_header'),
-    content => template('iptables/concat/filter_input_header'),
-    content => template('iptables/concat/filter_input_footer'),
-    content => template('iptables/concat/filter_output_header'),
-    content => template('iptables/concat/filter_output_footer'),
-    content => template('iptables/concat/filter_forward_header'),
-    content => template('iptables/concat/filter_forward_footer'),
-    content => template('iptables/concat/filter_footer'),
-      content => template('iptables/concat/nat_header'),
-  
-      content => template('iptables/concat/nat_footer'),
-    content => template('iptables/concat/mangle_header'),
-    content => template('iptables/concat/mangle_footer'),
BREAKS HERE
-      'innodb_file_per_table'         => 'ON',
BREAKS HERE
-#   (optional) The port to use when connecting to Rabbit
-#   (optional) Whether to enable the Rabbit service
-#   Defaults to false
-#
-# [*rabbitmq_class*]
-#   (optional) The rabbitmq puppet class to depend on,
-#   which is dependent on the puppet-rabbitmq version.
-#   Use the default for 1.x, use 'rabbitmq' for 3.x
-#   Defaults to 'rabbitmq::server'
-  $port           = '5672',
-  $rabbitmq_class = 'rabbitmq::server',
-  # only configure manila after the queue is up
-  Class[$rabbitmq_class] -> Anchor<| title == 'manila-start' |>
-
-        require  => Class[$rabbitmq_class],
-    $service_ensure = 'running'
-  } else {
-    $service_ensure = 'stopped'
-  }
-
-  class { $rabbitmq_class:
-    service_ensure    => $service_ensure,
-    port              => $port,
-    delete_guest_user => $delete_guest_user,
-  }
-
-  if ($enabled) {
-      require  => Class[$rabbitmq_class],
BREAKS HERE
-    subscribe => Class['::dnsmasq::install', '::dnsmasq::config'],
BREAKS HERE
-    # the plugin will need that
-	package { "iproute": ensure => installed }
-
-	Service["munin-node"]{
-		# sarge's munin-node init script has no status
-		hasstatus => $lsbdistcodename ? { sarge => false, default => true }
-	}
-    File["/etc/munin/munin-node.conf"]{
-			content => template("munin/munin-node.conf.$operatingsystem.$lsbdistcodename"),
-    }
-	include munin::plugins::debian
BREAKS HERE
-Subproject commit a6727f2f96969b0adae0d01162f90f0f89cfbb73
BREAKS HERE
-  include backup::client
-    require => User[$user],
BREAKS HERE
-      content => "export KUBECONFIG=/etc/kubernetes/admin.conf\n";
BREAKS HERE
-    include classroom::master::showoff
BREAKS HERE
-    $dkms_packages = [
-      'kernel-devel',
-      'dkms',
-      'gcc'
-    ]
-    package { $dkms_packages:
-      ensure => present,
-      before => [
-        Package['openafs-client'],
-        Package['openafs-krb5'],
-      ],
BREAKS HERE
-# This class mangages the Icinga 2 daemon.
-# === Parameters
-#
-# Coming soon...
-#
-# === Examples
-#
-# Coming soon...
-#
-
-  #Service resource for the Icinga 2 daemon:
-  service {$icinga2::params::icinga2_daemon_name:
-    ensure    => running,
-    subscribe => [ Class['icinga2::config'], Class['icinga2::features'] ],
BREAKS HERE
-    special => 'absent',
-    hour    => '9',
-    minute  => '5',
BREAKS HERE
-    package { 'munin':
BREAKS HERE
-        Package['nginx'],
-      require => File['/etc/nginx/sites-available/graphite'],
BREAKS HERE
-    ensure  => directory,
-    owner   => $user,
-    group   => $group,
BREAKS HERE
-        '1'                  => 'mwdebug1001.eqiad.wmnet',
-        'mw1017.eqiad.wmnet' => 'mwdebug1001.eqiad.wmnet',
-        backend_regexp  => '^((mwdebug1001|mwdebug1002)\.eqiad\.wmnet|(mwdebug2001|mwdebug2002)\.codfw\.wmnet)',
BREAKS HERE
-  $graph_cmd = 'elastic-recheck-graph /opt/elastic-recheck/queries -o graph-new.json && mv graph-new.json graph.json'
-  exec { 'run_er_graph':
-    command     => "er_safe_run.sh ${graph_cmd}",
BREAKS HERE
-  file { "/etc/gdsrouter.properties":
-      "puppet:///modules/router/gdsrouter.properties.${govuk_platform}", 
-      "puppet:///modules/router/gdsrouter.properties"
BREAKS HERE
-  $target_file_name          = "${object_name}.conf",
BREAKS HERE
-    $servers = hiera('puppetmaster::servers', {})
BREAKS HERE
-    subscribe     => [Exec['bootstrap_galera_cluster'], Service['mysql']],
BREAKS HERE
-    include ::raid
BREAKS HERE
-    class {'profile::logster_alarm':}
BREAKS HERE
-  $mistral_git_branch = 'st2-0.9.0',
BREAKS HERE
-  $id_hostname = $::fqdn,
BREAKS HERE
-    "${title}-ROUTER_PUBADDR":
-      varname => 'ROUTER_PUBADDR',
-    "${title}-ROUTER_APIADDR":
-      varname => 'ROUTER_APIADDR',
-    "${title}-ROUTER_MONGO_URL":
-      varname => 'ROUTER_MONGO_URL',
-    "${title}-ROUTER_ERROR_LOG":
-      varname => 'ROUTER_ERROR_LOG',
-    "${title}-ROUTER_HEADER_TIMEOUT":
-      varname => 'ROUTER_HEADER_TIMEOUT',
BREAKS HERE
-        proto => 'tcp',
-        port => 'https',
BREAKS HERE
-    require => File["${_ssl_cacert_path}"]
BREAKS HERE
-      owner  => 'haproxy',
-      group  => 'haproxy',
BREAKS HERE
-    $log_dir = $::profile::analytics::refinery::repository::log_dir
BREAKS HERE
-  $authorized_keys_file            = '%h/.ssh/authorized_keys'
BREAKS HERE
-  $conf_template = 'logstash/agent.conf.erb'
BREAKS HERE
-    nginx_extra_config => '
-      location /report-a-problem {
-        proxy_intercept_errors off;
-      }'
BREAKS HERE
-            ignore => '(\.ignore|snmp_*)',
BREAKS HERE
-    if $monitor {
-        require varnish::logging::monitor
-    }
-
BREAKS HERE
-    to_version => '2.1.2'
BREAKS HERE
-  class { '::nova::network::neutron':
-    neutron_password => 'a_big_secret',
BREAKS HERE
-#   Allow use of REMOTE_USER env variable within Django/Graphite. Default = false
BREAKS HERE
-  $address         = undef,
BREAKS HERE
-    'state'       => $state,
-  $rule = merge($basic, $extras)
BREAKS HERE
-#  Defaults to '0.0.0.0/0'
-  $source      = '0.0.0.0/0',
-  $rule = merge($basic, $state_rule, $extras)
-  validate_hash($rule)
-  create_resources('firewall', { "${title}" => $rule })
BREAKS HERE
-define munin::plugin::deploy ($source = '', $enabled = 'true') {
-    if $enabled {
-        plugin{$name: ensure => present }
-    }
BREAKS HERE
-  $contact_email = extlookup('monitoring_group', 'root@localhost')
BREAKS HERE
-    install_from_repository => true,
BREAKS HERE
-  class { 'openstack_project::puppetdb':
-    sysadmins => hiera('sysadmins', []),
BREAKS HERE
-        if $lock_file {
BREAKS HERE
-  $purge        = true
-    RedHat,CentOS,Scientific: {
-      if $::operatingsystemmajrelease == 5 {
-      } elsif $::operatingsystemmajrelease == 6  {
-            'ulimit_type'       => 'soft',
-            'priority'          => '90',
-            'ulimit_type'       => 'soft',
-            'priority'          => '90',
-          }
-      } elsif $::operatingsystemmajrelease == 7 {
-            'ulimit_type'       => 'soft',
-            'priority'          => '20',
-            'ulimit_type'       => 'soft',
-            'priority'          => '20',
-          }
-
BREAKS HERE
-
BREAKS HERE
-#     tag    => 'icinga2::config::file,
BREAKS HERE
-  notify { 'debug':
-    message => "relay_method = ${relay_method}",
-  }
-
BREAKS HERE
-      odl_url      => "${conn_proto}://${odl_url_ip}:${odl_port}/controller/nb/v2/neutron";
BREAKS HERE
-    to_version => '2.2.4',
-    to_version => '2.3.1',
-    to_version => '2.4.0',
BREAKS HERE
-        $command_pre = "${elevation_prefix}${oracle_home}/bin/dbca -silent -createDatabase -templateName ${templatename} -gdbname ${globaldb_name} -sid ${db_name} -characterSet ${character_set} -responseFile NO_VALUE -sysPassword ${sys_password} -systemPassword ${system_password} -dbsnmpPassword ${db_snmp_password} -asmsnmpPassword ${asm_snmp_password} -storageType ${storage_type} -emConfiguration ${em_configuration} -variablesFile ${download_dir}/vars_${sanitized_title}.txt"
-        $command_pre = "${elevation_prefix}${oracle_home}/bin/dbca -silent -createDatabase -templateName ${templatename} -gdbname ${globaldb_name} -sid ${db_name} -characterSet ${character_set} -createAsContainerDatabase ${container_database} -responseFile NO_VALUE -sysPassword ${sys_password} -systemPassword ${system_password} -dbsnmpPassword ${db_snmp_password} -asmsnmpPassword ${asm_snmp_password} -storageType ${storage_type} -datafileDestination ${data_file_destination} -emConfiguration ${em_configuration} -variablesFile ${download_dir}/vars_${sanitized_title}.txt"
-        $command_pre = "${elevation_prefix}${oracle_home}/bin/dbca -silent -createDatabase -templateName ${templatename} -gdbname ${globaldb_name} -sid ${db_name} -characterSet ${character_set} -createAsContainerDatabase ${container_database} -responseFile NO_VALUE -sysPassword ${sys_password} -systemPassword ${system_password} -dbsnmpPassword ${db_snmp_password} -asmsnmpPassword ${asm_snmp_password} -storageType ${storage_type} -emConfiguration ${em_configuration} -variablesFile ${download_dir}/vars_${sanitized_title}.txt"
BREAKS HERE
-#  $sssdtools = 'sssd-tools' - SSSD tools package.
-  $sssdtools = $ipa::params::sssdtools
-        svrpkg      => $ipa::svrpkg,
-        dns         => $ipa::dns,
-        domain      => $ipa::domain,
-        realm       => $ipa::realm,
-        adminpw     => $ipa::adminpw,
-        dspw        => $ipa::dspw,
-        kstart      => $ipa::kstart;
-        kstart    => $ipa::kstart;
BREAKS HERE
-    $enable_vitrage          = true
BREAKS HERE
-  -> Concat <| tag == 'icinga2::config::file' |>
BREAKS HERE
-  $nrpe_plugin_libdir                     = $::icinga2::params::nrpe_plugin_libdir,
-  $nrpe_allowed_hosts                     = $::icinga2::params::nrpe_allowed_hosts,
-  $nrpe_pid_file_path                     = $::icinga2::params::nrpe_pid_file_path,
-
-  $client_plugin_package_install_options  = $::icinga2::params::client_plugin_package_install_options,
-  $icinga2_client_packages                = $::icinga2::params::icinga2_client_packages,
-  $nrpe_allow_command_argument_processing = $::icinga2::params::nrpe_allow_command_argument_processing,
-  $nrpe_command_timeout                   = $::icinga2::params::nrpe_command_timeout,
-  $nrpe_config_basedir                    = $::icinga2::params::nrpe_config_basedir,
-  $nrpe_connection_timeout                = $::icinga2::params::nrpe_connection_timeout,
-  $nrpe_daemon_name                       = $::icinga2::params::nrpe_daemon_name,
-  $nrpe_debug_level                       = $::icinga2::params::nrpe_debug_level,
-  $nrpe_group                             = $::icinga2::params::nrpe_group,
-  $nrpe_listen_port                       = $::icinga2::params::nrpe_listen_port,
-  $nrpe_log_facility                      = $::icinga2::params::nrpe_log_facility,
-  $nrpe_purge_unmanaged                   = $::icinga2::params::nrpe_purge_unmanaged,
-  $nrpe_user                              = $::icinga2::params::nrpe_user,
-
BREAKS HERE
-# This class will ensure that the machine is using a kernel which is currently
-# supported upstream. It assumes Ubuntu Precise at the moment, but could be
-# extended if we upgrade to Trusty
-    'precise': {
-        $latest_lts_supported = 'trusty'
-            check_command       => 'check_nrpe_1arg!check_supported_kernel',
-            notes_url           => 'https://wiki.ubuntu.com/1204_HWE_EOL',
BREAKS HERE
-  $enable_notifications   = 'True'
BREAKS HERE
-         Class['puppet::repository'],
-         Class['nginx'],
-         Class['unicornherder'],
-         ]
-         Class['puppet::repository'],
-         Class['nginx'],
-         Class['unicornherder'],
-         ]
-  }    
-  }    
BREAKS HERE
-# - Build distribution tarball from git repo as a soruce
-# - Deploy dist tarball and setup Drupal from scratch
-# Distribution build process:
-# - site_sandbox_root: root directory of sandbox where build happens
-# - site_staging_root: root directory of target tarballs
-# - site_staging_tarball: target tarball of build process
-# - site_makefile: installation profile drush makefile
-# - site_build_reponame: local repository name under sandbox root
-# - site_repo_url: git repo url of installation profile source
-# - site_build_flagfile: triggers a rebuild when missing or git head differs
-# Deploy process:
-# - site_profile: installation profile to deploy
-# - site_deploy_flagfile: triggers a redeploy when this flagfile is missing
-  $site_docroot = undef,
-  $site_sandbox_root = '/srv/sandbox',
-  $site_staging_root = '/srv/sandbox/release',
-  $site_staging_tarball = '',
-  $site_build_reponame = undef,
-  $site_makefile = undef,
-  $site_repo_url = undef,
-  $site_build_flagfile = '/tmp/drupal-site-build',
-  $site_deploy_flagfile = '/tmp/drupal-site-deploy',
-    require  => File[$site_docroot],
-  file { $site_docroot:
-  # pear / drush cli tool
-  pear::package { 'PEAR': }
-  pear::package { 'Console_Table': }
-  pear::package { 'drush':
-      version    => '6.0.0',
-      repository => 'pear.drush.org',
-      require    => [ Pear::Package['PEAR'], Pear::Package['Console_Table'] ],
-  # drupal dist-build
-  distbuild { "distbuild-${site_name}":
-    site_sandbox_root    => $site_sandbox_root,
-    site_staging_root    => $site_staging_root,
-    site_repo_url        => $site_repo_url,
-    site_build_repo_name => $site_build_reponame,
-    site_staging_tarball => $site_staging_tarball,
-    site_build_flagfile  => $site_build_flagfile,
-    site_deploy_flagfile => $site_deploy_flagfile,
-    site_makefile        => $site_makefile,
-    require              => [ Package['httpd'], Pear::Package['drush'] ],
-  }
-
-  # drupal site deploy
-  sitedeploy { "sitedeploy-${site_name}":
-    site_docroot         => $site_docroot,
-    site_staging_root    => $site_staging_root,
-    site_staging_tarball => $site_staging_tarball,
-    site_deploy_flagfile => $site_deploy_flagfile,
-    site_name            => $site_name,
-    site_profile         => $site_profile,
-    site_mysql_user      => $site_mysql_user,
-    site_mysql_password  => $site_mysql_password,
-    site_mysql_host      => $site_mysql_host,
-    site_mysql_database  => $site_mysql_database,
-    site_admin_password  => $site_admin_password,
-    site_base_url        => $site_base_url,
-    require              => Distbuild["distbuild-${site_name}"],
-  }
-
-}
BREAKS HERE
-      }
-
-        require        => File['/etc/awslogs'],
-      }
-      }
-        ensure  => 'link',
-        target  => '/etc/awslogs/awslogs.conf',
-        require => Exec['cloudwatchlogs-install'],
-          require => Concat['/etc/awslogs/awslogs.conf'],
-          before  => Service['awslogs'],
BREAKS HERE
-  $sahara_enabled = true
-  # https://bugzilla.redhat.com/show_bug.cgi?id=1318765
-  $sahara_enabled = false
-  sahara  => $sahara_enabled,
BREAKS HERE
-      $etc_icinga2_owner = 'icinga'
-      $etc_icinga2_group = 'icinga'
-      $etc_icinga2_mode  = '0750'
-      #Settings for /etc/icinga2/icinga2.conf:
-      $etc_icinga2_icinga2_conf_owner = 'icinga'
-      $etc_icinga2_icinga2_conf_group = 'icinga'
-      $etc_icinga2_icinga2_conf_mode  = '0640'
-      #Settings for /etc/icinga2/conf.d/
-      $etc_icinga2_confd_owner = 'icinga'
-      $etc_icinga2_confd_group = 'icinga'
-      $etc_icinga2_confd_mode  = '0750'
-      #Settings for /etc/icinga2/features-available/:
-      $etc_icinga2_features_available_owner = 'icinga'
-      $etc_icinga2_features_available_group = 'icinga'
-      $etc_icinga2_features_available_mode  = '0750'
-      #Settings for /etc/icinga2/features-enabled/:
-      $etc_icinga2_features_enabled_owner = 'icinga'
-      $etc_icinga2_features_enabled_group = 'icinga'
-      $etc_icinga2_features_enabled_mode  = '0750'
-      #Settings for /etc/icinga2/pki/:
-      $etc_icinga2_pki_owner = 'icinga'
-      $etc_icinga2_pki_group = 'icinga'
-      $etc_icinga2_pki_mode  = '0750'
-      #Settings for /etc/icinga2/scripts/:
-      $etc_icinga2_scripts_owner = 'icinga'
-      $etc_icinga2_scripts_group = 'icinga'
-      $etc_icinga2_scripts_mode  = '0750'
-      #Settings for /etc/icinga2/zones.d/:
-      $etc_icinga2_zonesd_owner = 'icinga'
-      $etc_icinga2_zonesd_group = 'icinga'
-      $etc_icinga2_zonesd_mode  = '0750'
-      #Settings for /etc/icinga2/objects/:
-      $etc_icinga2_obejcts_owner = 'icinga'
-      $etc_icinga2_obejcts_group = 'icinga'
-      $etc_icinga2_obejcts_mode  = '0750'
-      #Settings for subdirectories of /etc/icinga2/objects/:
-      $etc_icinga2_obejcts_sub_dir_owner = 'icinga'
-      $etc_icinga2_obejcts_sub_dir_group = 'icinga'
-      $etc_icinga2_obejcts_sub_dir_mode  = '0750'
-      $etc_icinga2_owner = 'nagios'
-      $etc_icinga2_group = 'nagios'
-      $etc_icinga2_mode  = '0755'
-      #Settings for /etc/icinga2/icinga2.conf:
-      $etc_icinga2_icinga2_conf_owner = 'nagios'
-      $etc_icinga2_icinga2_conf_group = 'nagios'
-      $etc_icinga2_icinga2_conf_mode  = '0644'
-      #Settings for /etc/icinga2/conf.d/
-      $etc_icinga2_confd_owner = 'root'
-      $etc_icinga2_confd_group = 'root'
-      $etc_icinga2_confd_mode  = '0755'
-      #Settings for /etc/icinga2/features-available/:
-      $etc_icinga2_features_available_owner = 'nagios'
-      $etc_icinga2_features_available_group = 'nagios'
-      $etc_icinga2_features_available_mode  = '0755'
-      #Settings for /etc/icinga2/features-enabled/:
-      $etc_icinga2_features_enabled_owner = 'nagios'
-      $etc_icinga2_features_enabled_group = 'nagios'
-      $etc_icinga2_features_enabled_mode  = '0755'
-      #Settings for /etc/icinga2/pki/:
-      $etc_icinga2_pki_owner = 'nagios'
-      $etc_icinga2_pki_group = 'nagios'
-      $etc_icinga2_pki_mode  = '0755'
-      #Settings for /etc/icinga2/scripts/:
-      $etc_icinga2_scripts_owner = 'nagios'
-      $etc_icinga2_scripts_group = 'nagios'
-      $etc_icinga2_scripts_mode  = '0755'
-      #Settings for /etc/icinga2/zones.d/:
-      $etc_icinga2_zonesd_owner = 'nagios'
-      $etc_icinga2_zonesd_group = 'nagios'
-      $etc_icinga2_zonesd_mode  = '0755'
-      #Settings for /etc/icinga2/objects/:
-      $etc_icinga2_obejcts_owner = 'nagios'
-      $etc_icinga2_obejcts_group = 'nagios'
-      $etc_icinga2_obejcts_mode  = '0755'
-      #Settings for subdirectories of /etc/icinga2/objects/:
-      $etc_icinga2_obejcts_sub_dir_owner = 'nagios'
-      $etc_icinga2_obejcts_sub_dir_group = 'nagios'
-      $etc_icinga2_obejcts_sub_dir_mode  = '0755'
BREAKS HERE
-    include ::govuk_jenkins::packages::govuk_python
BREAKS HERE
-    # Taken from `man systemd.unit` on systemd 215, still valid up to systemd 233
-    $unit_types = [
-        'service', 'socket', 'device', 'mount', 'automount',
-        'swap', 'target', 'path', 'timer', 'snapshot', 'slice', 'scope'
-    ]
-
BREAKS HERE
-  $release = '1.0.12',
BREAKS HERE
-# [*ppa*]
-#   Use a specific PPA, e.g "ondrej/php" (without the "ppa:")
-#
-  $ppa       = undef,
-  if ($version != undef and $ppa != undef) {
-    fail('Only one of $version and $ppa can be specified.')
-  }
-
-  if ($ppa) {
-    ::apt::ppa { "ppa:${ppa}": }
-  } else {
-    ::apt::ppa { "ppa:${version_repo}": }
-  }
BREAKS HERE
-    unless      => "cinder type-list | grep ${volume_name}",
BREAKS HERE
-        source => 'puppet:///modules/role/varnish/check_varnish_expiry_mailbox_lag.sh',
BREAKS HERE
-  if ($::kernelmajversion >= 6.3) {
BREAKS HERE
-    default_transport_url => os_transport_url({
-      'transport' => 'rabbit',
-      'port'      => $::openstack_integration::config::rabbit_port,
-    rabbit_use_ssl        => $::openstack_integration::config::ssl,
BREAKS HERE
-        mode   => '0660',
BREAKS HERE
-) inherits php::dev::params {
-    ensure  => $ensure,
-    provider => $provider;
-    ensure	 => $ensure,
-    provider => $provider;
BREAKS HERE
-  Ipa::Serverinstall[$::fqdn] -> Service['ipa'] -> File['/etc/ipa/primary'] -> Ipa::Hostadd <<| |>> -> Ipa::Replicareplicationfirewall <<| tag == "ipa-replica-replication-firewall-${ipa::master::domain}" |>> -> Ipa::Replicaprepare <<| tag == "ipa-replica-prepare-${ipa::master::domain}" |>> -> Ipa::Createreplicas[$::fqdn]
-  realize Service['ipa']
-
-    require       => Package[$ipa::master::svrpkg],
-    before        => Service['ipa']
BREAKS HERE
-
-}
BREAKS HERE
-	plugin { "postfix_mailvolume": ensure => absent }
BREAKS HERE
-        command => 'printf "rhnuuid=%s\n" `/usr/bin/uuidgen` >> /etc/sysconfig/rhn/up2date-uuid',
-        path    => [ "/usr/bin", "/bin" ],
-        user    => "root",
-        group   => $group,
-        creates => "/etc/sysconfig/rhn/up2date-uuid",
BREAKS HERE
-  rbenv::version { '2.1.2':
-    ensure => absent # FIXME: Tidy up once deployed
-  }
BREAKS HERE
-  ensure_resource('concat', $target, {
-    ensure => present,
-    owner  => $user,
-    group  => $group,
-    tag    => 'icinga2::config::file',
-    warn   => true,
-  })
BREAKS HERE
-  $methods,
-  $command,
-  $env,
-  $vars {},
-  $timeout,
-  $arguments = {}
-  #  $object_servicename = $name,
-  #  $template_to_import = 'generic-service',
-  #  $display_name = $name,
-  #  $assign_where = undef,
-  #  $ignore_where = undef,
-  #  $groups = [],
-  #  $vars = {},
-  #  $check_command = undef,
-  #  $max_check_attempts = undef,
-  #  $check_period = undef,
-  #  $check_interval = undef,
-  #  $retry_interval = undef,
-  #  $enable_notifications = undef,
-  #  $enable_active_checks = undef,
-  #  $enable_passive_checks = undef,
-  #  $enable_event_handler = undef,
-  #  $enable_flap_detection = undef,
-  #  $enable_perfdata = undef,
-  #  $event_command = undef,
-  #  #flapping_threshold is defined as a percentage, eg. 10%, 50%, etc.
-  #  $flapping_threshold = undef,
-  #  $volatile = undef,
-  #  $notes = undef,
-  #  $notes_url = undef,
-  #  $action_url = undef,
-  #  $icon_image = undef,
-  #  $icon_image_alt = undef,
-  #  $target_dir        = '/etc/icinga2/conf.d',
-  #  $target_file_name  = "${name}.conf",
-  #  $target_file_owner = 'root',
-  #  $target_file_group = 'root',
-  #  $target_file_mode  = '0644'
-  validate_string($object_servicename)
-  validate_array($groups)
-  validate_string($target_file_mode)
-    content => template('icinga2/object_apply_service_to_host.conf.erb'),
BREAKS HERE
-  if $ipaddress_eth1 {
-      $ipaddress = $ipaddress_eth1
-  } elsif $ipaddress_eth0 {
-      $ipaddress = $ipaddress_eth0
-  } else {
-      $ipaddress = "127.0.0.1"
-  }
-
-      'bind_address' => $ipaddress,
BREAKS HERE
-        command => "echo '\$\$: Starting dispatcher' >> ${dispatch_log_file}; /usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki --max-time 540 --batch-size 420 --dispatch-interval 25 --lock-grace-interval 200 >> ${dispatch_log_file} 2>&1; echo \"\$\$: Dispatcher exited with $?\" >> ${dispatch_log_file}",
BREAKS HERE
-  command => '/usr/sbin/groupadd -f ssl-cert'
BREAKS HERE
-    path    => "${install_dir}/versions/${ruby_version}/bin/",
BREAKS HERE
-  package { 'python-voluptuous':
-    ensure => present,
-  }
-
BREAKS HERE
-  $label            = '',
BREAKS HERE
-    'search'    => "@fields.syslog_program:\"puppet-agent\" AND @source_host:${::hostname}*",
-    'timeframe' => 14400,
-    action_url          => kibana2_url($kibana_url, $kibana_search),
BREAKS HERE
-        require => Class['packages::imagemagick']
BREAKS HERE
-$admin_password = rstrip(hiera('lma::grafana::mysql::admin_password'))
-$influxdb_password = rstrip(hiera('lma::influxdb::password'))
BREAKS HERE
-    $nrpe_check_disk_options = '-w 6% -c 3% -l -e -A -i "/srv/sd[a-b][1-3]"',
BREAKS HERE
-            ensure => present,
BREAKS HERE
-    if $is_mysql_server {
-      # The detach_database plugin installs a mysql-client-X.Y that may not be
-      # compatible with the mysql-client meta-package that is installed by
-      # mysql Puppet module. To avoid this issue we use the client that is
-      # installed by the detach_database plugin.
-      class { '::mysql::client':
-        package_manage => false,
-      }
BREAKS HERE
-    defaults_options => {
-      'mode'    => 'tcp',
-      'log'     => 'global',
-      'retries' => '3',
-      'timeout' => $haproxy_default_timeout,
-      'maxconn' => $haproxy_default_maxconn,
-    },
BREAKS HERE
-  Class['smokeping::install'] ->
-  Class['smokeping::config'] ~>
-  Class['smokeping::service']
BREAKS HERE
-
-      $command = "${command_pre} ${data_file_destination} ${command_var} ${command_init} ${command_nodes} ${elevation_suffix}"
-      }
BREAKS HERE
-  Package['cinder'] -> Cinder_config<||>
-  Package['cinder'] -> Cinder_api_paste_ini<||>
-
BREAKS HERE
-  $factspath = "${configdir}/facts.yaml"
BREAKS HERE
-        require  => File['/etc/init/ircecho.conf'],
BREAKS HERE
-    $m_ary = [ $m15, ($m15 + 15), ($m15 + 30), ($m15 + 45) ]
-    $minutes = join($m_ary, ",")
BREAKS HERE
-  $ssl_dir  = $st2::st2web_ssl_dir,
-  $ssl_cert = $st2::st2web_ssl_cert,
-  $ssl_key  = $st2::st2web_ssl_key,
-  $version  = $st2::version,
-  package { $st2::params::st2_web_packages:
-  file { "${st2::params::nginx_conf_d}/st2.conf":
-    source    => $st2::params::nginx_st2_conf,
-    subscribe => [Package['nginx'], Package['st2']],
-      exec { $st2::params::nginx_default_conf:
-        command => "sed -i 's/default_server//g' ${st2::params::nginx_default_conf}",
-        unless  => "test `grep 'default_server' ${st2::params::nginx_default_conf} | wc -l` > 0",
-      file { $st2::params::nginx_default_conf:
-  -> File["${st2::params::nginx_conf_d}/st2.conf"]
BREAKS HERE
-      notice "unknown operatingsystem: $operatingsystem" 
BREAKS HERE
-      command     => "find ${image_log_document_root} \( -name '*.log' -o -name '*.log.*' \) -mtime +7 -execdir rm {} \\;",
BREAKS HERE
-        rule => 'saddr @resolve(($MYSQL_ROOT_CLIENTS)) proto tcp dport (3307) ACCEPT;',
BREAKS HERE
-    unless    => "/usr/sbin/ipactl status >/dev/null 2>&1"
-    command   => "/usr/sbin/ipa-client-install --uninstall --unattended",
-    logoutput   => "on_failure",
-  }<- notify { "Running IPA replica install, please wait.": }
BREAKS HERE
-        ensure   => present,
-        source   => $source,
-        content  => $content,
-        owner    => 'root',
-        group    => 'root',
-        mode     => '0444',
-        require  => File['/etc/security/access.conf.d'],
-        notify   => Exec['merge-access-conf'],
BREAKS HERE
-            content => template('docker/registry-http-nginx.conf.erb')
BREAKS HERE
-    file { $deploy_dir:
BREAKS HERE
-    enabled_drivers       => ['fake', 'pxe_ipmitool'],
BREAKS HERE
-      query           => "time() - scalar(process_start_time_seconds{job='prometheus', instance=~\"${::hostname}.*\"})",
BREAKS HERE
-      content => $public_key,
BREAKS HERE
-  Optional[String]       $user,
-  Optional[String]       $group,
-  Optional[String]       $ido_mysql_package_name,
-  Optional[String]       $ido_pgsql_package_name,
-  Optional[String]       $service_reload,
BREAKS HERE
-  $sysadmins = []
-    projects  => [
-    container => 'rss',
-    feed      => 'openstackwatch.xml',
-    json_url  => 'https://review.openstack.org/query?q=status:open',
BREAKS HERE
-  $disk,
-  $mkfs_opts      = ''
-  include drbd
-    cluster       => $cluster ? {
-      undef   => 'static',
-      default => $cluster,
-    },
BREAKS HERE
-        'wikipedias' => 'SELECT *,good/total AS ratio FROM wikipedias WHERE lang NOT LIKE \"%articles%\" ORDER BY good desc,total desc',
BREAKS HERE
-    jjb_git_revision            => hiera('jjb_git_revision', '1.6.1'),
BREAKS HERE
-            dashboard_links => 'https://grafana.wikimedia.org/dashboard/db/analytics-hadoop?orgId=1&panelId=47&fullscreen',
-            dashboard_links => 'https://grafana.wikimedia.org/dashboard/db/analytics-hadoop?orgId=1&panelId=39&fullscreen',
-            dashboard_links => 'https://grafana.wikimedia.org/dashboard/db/analytics-hadoop?orgId=1&panelId=40&fullscreen',
BREAKS HERE
-  include sudo
BREAKS HERE
-  $use_cni = hiera('profile::kubernetes::use_cni')
-        master_host => $master_fqdn,
BREAKS HERE
- include ffnord::firewall
-
- file { "/etc/iptables.d/800-${chain}-forward-ACCEPT-${name}":
-   ensure => file,
-   owner => 'root',
-   group => 'root',
-   mode => '0644',
-   content => inline_template("# Process packages from device <%=@name%>
-   require => [File['/etc/iptables.d/']];
- }
- file { "/etc/iptables.d/000-file-value-${name}": 
-   ensure => file,
-   owner => 'root',
-   group => 'root',
-   mode => '0644',
-   content => inline_template("set_value ${path} ${value}\n"),
-   require => [File['/etc/iptables.d/']];
- }
BREAKS HERE
-    class { 'mediawiki::maintenance::update_article_count': ensure => 'absent' } # T192139
BREAKS HERE
-#   the database collation. Optional. Defaults to 'utf8_unicode_ci'
-  $collate       = 'utf8_unicode_ci',
BREAKS HERE
-    require  => [Package['libdbus-1-dev'], Package['libdbus-glib-1-dev'], Package['build-essential'], Package['python-dev']],
BREAKS HERE
-    require_package('mariadb-client', 'python3-yaml')
-    # Script to generate the contacts configuration for the Icinga meta-monitoring
-    file { '/usr/local/bin/generate-check-icinga-contacts':
-        ensure  => present,
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0550',
-        source  => 'puppet:///modules/icinga/generate_check_icinga_contacts.py',
-        require => Package['python3-yaml'],
-    }
-
BREAKS HERE
-    include ::cinder::glance
BREAKS HERE
-        match => '<a href=\"(https://bugs\\.launchpad\\.net/[a-zA-Z0-9\\-]+/\\+bug/(\\d+))[^\"]+\">[^<]+</a>',
BREAKS HERE
-  package { "wsgi":
-    name => $operatingsystem ? {
-      'centos', 'fedora', 'redhat', 'scientific' => "mod_wsgi",
-      default => "libapache2-mod-wsgi",
-    },
BREAKS HERE
-  assert_private('This class should not be called directly')
-  # Local administrator is required to have a password before AD will install
-  exec { 'RequirePassword':
-    command  => 'net user Administrator /passwordreq:yes',
-    unless   => 'if (net user Administrator |select-string -pattern "Password required.*no"){exit 1} else {exit 0}',
-    provider => powershell,
-  }
-  exec { 'Install WMF5':
-    command  => file('classroom/install_wmf5.ps1'),
-    unless   => 'if ($PSVersionTable.PSVersion.Major -ne 5){exit 1} else {exit 0}',
-    provider => powershell,
-    notify   => Reboot['after_wmf5_install'],
-  }
-  reboot { 'after_wmf5_install':
-    before => Dsc_windowsfeature['ADDSInstall'], 
-  }
-  # Install AD Server feature
-  dsc_windowsfeature { 'ADDSInstall':
-    dsc_ensure => 'Present',
-    dsc_name   => 'AD-Domain-Services',
-    require    => [Exec['RequirePassword'],Exec['Install WMF5']],
-  #  exec { "add-feature-adserver":
-  #  command   => "Import-Module ServerManager; Install-WindowsFeature AD-Domain-Services -IncludeManagementTools -IncludeAllSubFeature -Restart:\$true",
-  #  onlyif    => "Import-Module ServerManager; if (@(Get-WindowsFeature AD-Domain-Services | ?{\$_.Installed -match \'false\'}).count -eq 0) { exit 1 } else { exit 0 }",
-  #  provider  => powershell,
-  #  before    => Exec['Config ADDS'],
-  #}
-
- # Setup Classroom Domain
-  dsc_xaddomain { 'FirstDS':
-    dsc_domainname                    => $ad_domainname,
-    dsc_domainadministratorcredential => {'user' => 'Administrator', 'password' => $ad_dsrmpassword },
-    dsc_safemodeadministratorpassword => {'user' => 'Administrator', 'password' => $ad_dsrmpassword },
-    require                           => Dsc_windowsfeature['ADDSInstall'],
-  }
-#
-  reboot {'dsc_reboot':
-    #    subscribe => Dsc_xaddomain['FirstDS'],
-    #notify        => Dsc_xwaitforaddomain['DscForestWait'],
-    message        => 'DSC has requested a reboot',
-    when           => 'pending',
-  }
-#
-  dsc_xwaitforaddomain { 'DscForestWait':
-    dsc_domainname           => $ad_domainname,
-    dsc_domainusercredential => {'user' => 'Administrator', 'password' => $ad_dsrmpassword },
-    dsc_retrycount           => '50',
-    dsc_retryintervalsec     => '30',
-    require                  => Dsc_xaddomain['FirstDS']
-  }
-#
-
-#  exec { 'Config ADDS':
-#    command     => "Import-Module ADDSDeployment; Install-ADDSForest -Force -DomainName ${classroom::ad_domainname} -DomainMode 6 -DomainNetbiosName ${classroom::ad_netbiosdomainname} -ForestMode 6 -DatabasePath c:\\windows\\ntds -LogPath c:\\windows\\ntds -SysvolPath c:\\windows\\sysvol -SafeModeAdministratorPassword (convertto-securestring '${classroom::ad_dsrmpassword}' -asplaintext -force) -InstallDns",
-#    provider    => powershell,
-#    onlyif      => "if((gwmi WIN32_ComputerSystem).Domain -eq \'${classroom::ad_domainname}\'){exit 1} else {exit 0}",
-#    timeout     => '0',
-#    before      => Exec['SetMachineQuota'],
-#  }
-
-#  reboot { 'after ADDS':
-#    subscribe => Exec['Config ADDS'],
-#  }
-
-  # Increase the number of machines that a single user can join to the domain
-  exec { 'SetMachineQuota':
-    command      => 'get-addomain |set-addomain -Replace @{\'ms-DS-MachineAccountQuota\'=\'99\'}',
-    unless       => 'if ((get-addomain | get-adobject -prop \'ms-DS-MachineAccountQuota\' | select -exp \'ms-DS-MachineAccountQuota\') -lt 99) {exit 1} else {exit 0}',
-    provider     => powershell,
-        require => Dsc_xwaitforaddomain['DscForestWait'],
-    #    require      => Reboot['after_AD'],
-  }
-
-  exec { 'STUDENTS OU':
-    command  => "import-module activedirectory;New-ADOrganizationalUnit -Name 'STUDENTS' -Path 'DC=CLASSROOM,DC=LOCAL' -ProtectedFromAccidentalDeletion \$true",
-    onlyif   => "if([adsi]::Exists(\"LDAP://OU=STUDENTS,DC=CLASSROOM,DC=LOCAL\")){exit 1} else {exit 0}",
-    provider => powershell,
-    require  => Exec['SetMachineQuota']
-  }
-  dsc_xadgroup { 'WebsiteAdmins':
-    dsc_groupname => 'WebsiteAdmins',
-    dsc_groupscope => 'Global',
-    dsc_description => 'Web Admins',
-    dsc_ensure      => 'Present',
-  }
-  #  exec { 'Website Admins Group':
-  #  command     => "import-module activedirectory;New-ADGroup -Description 'Website Administrators' -DisplayName 'WebAdmins' -Name 'WebAdmins' -GroupCategory 'Security' -GroupScope 'Global' -Path 'CN=Users,DC=CLASSROOM,DC=LOCAL'",
-  #  onlyif      => "\$groupname = \"WebAdmins\";\$path = \"CN=Users,DC=CLASSROOM,DC=LOCAL\";\$oustring = \"CN=\$groupname,\$path\"; if([adsi]::Exists(\"LDAP://\$oustring\")){exit 1} else {exit 0}",
-  #  provider    => powershell,
-  #  require     => Exec['STUDENTS OU'],
-  #}
-
-  dsc_xaduser { 'admin':
-    dsc_domainname => $ad_domainname,
-    dsc_domainadministratorcredential =>
-      {
-        'user' => 'Administrator',
-        'password' => $ad_dsrmpassword,
-      },
-    dsc_username => 'admin',
-    dsc_password =>
-      {
-        'user' => 'admin',
-        'password' => 'M1Gr3atP@ssw0rd',
-      },
-    dsc_ensure => 'present',
-    require => Dsc_xwaitforaddomain['DscForestWait']
-  #  exec { "Add User - admin":
-  #  command     => "import-module servermanager;add-windowsfeature -name 'rsat-ad-powershell' -includeAllSubFeature;import-module activedirectory;New-ADUser -name 'Classroom Admin' -DisplayName 'Classroom Admin' -GivenName 'Classroom' -SurName 'Admin' -Email 'admin@CLASSROOM.local' -Samaccountname 'admin' -UserPrincipalName 'admin@CLASSROOM.local' -Description 'Classroom Administrator' -PasswordNeverExpires \$true -path 'OU=STUDENTS,DC=CLASSROOM,DC=local' -AccountPassword (ConvertTo-SecureString 'Adm1nP@SSw0rd' -AsPlainText -force) -Enabled \$true;",
-  #  onlyif      => "\$oustring = \"CN=Classroom Admin,OU=STUDENTS,DC=CLASSROOM,DC=local\"; if([adsi]::Exists(\"LDAP://\$oustring\")){exit 1} else {exit 0}",
-  #  provider    => powershell,
-  #  require     => Exec['STUDENTS OU'],
-  #}
-
-  # Download install for brackets lab
BREAKS HERE
-    sriov_vf_config { $number_of_vfs: }
BREAKS HERE
-          { do=>'ignore_testfailure', distribution => 'CPANPLUS' }, #XXX-TODO: CPANPLUS-0.9128 has test failure
-            qw/ Net-SSLeay IO-Socket-SSL Net-SMTP-TLS Net-SSH2 /,
-            qw/ IPC-Run3 IPC-Run IPC-System-Simple /,
BREAKS HERE
-      $execPath = "${oracleHome}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:"
BREAKS HERE
-    gpgkey         => 'http://repo.vmware.com/pub/rhel${osver[0]}/vfabric/5.2/RPM-GPG-KEY-VFABRIC-5.2-EL${osver[0]}'
BREAKS HERE
-          includes => ['tuning.conf'],
-          includes         => ['tuning.conf'],
BREAKS HERE
-    features  => ['checker','mainlog'],
BREAKS HERE
-    $ensure = 'present',
-    $client_id = 'burrow-client',
-    $httpserver_port = 8000,
-    $lagcheck_intervals = 10,
BREAKS HERE
-    command => '/usr/bin/jenkins-jobs update --delete-old /etc/jenkins_jobs/jobs/',
BREAKS HERE
-    package { 'python-requests': ensure => installed; }
-        require => Package["python-requests"],
-        require => [File["/etc/zerofetcher"]],
-    exec { "zero_update_initial":
-        creates => "/var/netmapper/proxies.json",
-        require => File["/etc/zerofetcher/zerofetcher.auth"],
-    cron { "zero_update":
-        require => File["/etc/zerofetcher/zerofetcher.auth"],
BREAKS HERE
-    xen0: { include ::munin::plugins::dom0 }
BREAKS HERE
-        File[$graphite::gr_pid_dir],
BREAKS HERE
-    # TODO change this to be one per language
-        $logo_file = '/usr/share/planet-venus/wikimedia/theme/common/images/planet-wm2.png'
BREAKS HERE
-    both       => 1024,
BREAKS HERE
-            require    => File ["${downloadDir}/${patchFile}"],
BREAKS HERE
-      name   => "gitlab-${edition}"
BREAKS HERE
-  nginx::config::vhost::licensify_upload{ 'licensify':}
BREAKS HERE
-          	baseurl => 'http://apt.sw.be/redhat/el$releasever/en/$basearch/dag',
BREAKS HERE
-  if $apache::source_dir {
-  if $apache::my_class {
BREAKS HERE
-        $init_template = 'phabricator/sshd-phab.conf.erb'
-        $init_template = 'phabricator/sshd-phab.service.erb'
BREAKS HERE
-  # By default, apps are unprotected in Skyscape, unless they
-  # explicitly declare that they want to be. Otherwise, they are protected by
-  # default.
-  if $vhost_protected == undef {
-    $vhost_protected_real = $::govuk_provider ? {
-      'sky'   => false,
-      default => true,
-    }
-  } else {
-    $vhost_protected_real = $vhost_protected
-  }
-
-      protected              => $vhost_protected_real,
BREAKS HERE
-    require    => File['/etc/init.d/zuul-merger'],
BREAKS HERE
-
-    # Allow incoming connections to druid.indexer.runner.startPort + 900
-    $peon_start_port = $runtime_properties['druid.indexer.runner.startPort']
-    $peon_end_port   = $runtime_properties['druid.indexer.runner.startPort'] + 900
-    ferm::service { 'druid-middlemanager-indexer-task':
-        proto  => 'tcp',
-        port   =>  "${peon_start_port}:${peon_end_port}",
-        srange => '$ANALYTICS_NETWORKS',
-    }
BREAKS HERE
-    command     => 'dracut -f -v',
BREAKS HERE
-  if $categories { validate_array($categories) }
-    categories            => $categories,
BREAKS HERE
-#           ]
-#        ]
BREAKS HERE
-  $autoteam  = $classroom::params::autoteam,
-    autoteam  => $autoteam,
BREAKS HERE
-  if defined(Concat['/etc/nginx/lb_healthchecks.conf']) {
-    concat::fragment { "${app_name}_lb_healthcheck":
BREAKS HERE
-# $client_certname::                  The node’s certificate name, and the unique
BREAKS HERE
-        contact_group => 'fr-tech',
-        contact_group => 'fr-tech',
BREAKS HERE
-    package { "postgresql-${pgversion}-postgis":
BREAKS HERE
-  $user        = 'oracle'
-      fail('Unrecognized operating system, please use it on a Linux or SunOS host')
-  file { "${dboraLocation}/dbora" :
-      exec { 'chkconfig dbora':
-        command   => 'chkconfig --add dbora',
-        require   => File['/etc/init.d/dbora'],
-        unless    => 'chkconfig --list | /bin/grep \'dbora\'',
-      exec { 'update-rc.d dbora':
-        command   => 'update-rc.d dbora defaults',
-        require   => File['/etc/init.d/dbora'],
-        unless    => 'ls /etc/rc3.d/*dbora | /bin/grep \'dbora\'',
-      exec { 'chkconfig dbora':
-        require   => [File['/tmp/oradb_smf.xml'],File["${dboraLocation}/dbora"],],
BREAKS HERE
-      require  => Class['mysql::server::config'],
BREAKS HERE
-  file {"/Users/${::boxen_user}/Library/Application Support/Sublime Text 3/Packages/User/Installed Packages/Default (OSX).sublime-keymap":
BREAKS HERE
-    $components           = '-component SOAINFRA -component ORASDPM -component MDS -component OPSS -component BAM -component IAU -component OID -component OIF -component OIM -component OAM -component OAAM'
-    $componentsPasswords  = [$reposPassword, $reposPassword, $reposPassword,$reposPassword,$reposPassword,$reposPassword, $reposPassword, $reposPassword,$reposPassword,$reposPassword, $reposPassword]
BREAKS HERE
-  apt::key {'5E3D7775':
-  apt::key {'34D8786F':
-  Apt::Key['34D8786F'] -> Apt::Source['dell']
BREAKS HERE
-define apache::mod (
-  $package = undef
-) {
-  $mod = $name
-  include apache::params
-  #include apache #This creates duplicate resources in rspec-puppet
-  $mod_packages = $apache::params::mod_packages
-  $mod_package = $mod_packages[$mod] # 2.6 compatibility hack
-  if $package {
-    $package_REAL = $package
-  } elsif "$mod_package" {
-    $package_REAL = $mod_package
-  }
-  $mod_libs = $apache::params::mod_libs
-  $mod_lib = $mod_libs[$mod] # 2.6 compatibility hack
-  if "${mod_lib}" {
-    $lib = $mod_lib
-  }
-  $mod_identifiers = $apache::params::mod_identifiers
-  $mod_identifier = $mod_identifiers[$mod]
-  if "${mod_identifier}" {
-    $identifier = $mod_identifier
-  }
-  if $package_REAL {
-    package { $package_REAL:
-      ensure   => present,
-      require  => Package['httpd'],
-      before   => A2mod[$mod],
-    }
-  }
-  a2mod { $mod:
-    ensure     => present,
-    lib        => $lib,
-    identifier => $identifier,
-    require    => Package['httpd'],
-    notify     => Service['httpd'],
-  }
-}
BREAKS HERE
-	service { "munin":
BREAKS HERE
-        rule   => 'proto esp { saddr $DOMAIN_NETWORKS ACCEPT; }'
BREAKS HERE
-    $rp_args = inline_template('<%= @interfaces.split(",").map{|x| "net.ipv4.conf.#{x.gsub("[_:.]","/")}.rp_filter=0" if !x.start_with?("lo") }.compact.join(",") %>')
BREAKS HERE
-            entrypoint         => '""',
BREAKS HERE
-    # lint:ignore:quoted_booleans
BREAKS HERE
-#   Defaults to '52428800'
-#   Defaults to '3'
-#   Defaults to '2'
-#   Defaults to 'zlib'
-  $backup_swift_object_size     = '52428800',
-  $backup_swift_retry_attempts  = '3',
-  $backup_swift_retry_backoff   = '2',
-  $backup_compression_algorithm = 'zlib',
BREAKS HERE
-# [*api_server*]
-#  (optional) VIP of Config API
-#  String (IPv4) value.
-#  Defaults to hiera('contrail_config_vip')
-#
-#  Defaults to hiera('contrail_config_vip'),
-# [*public_vip*]
-#  Defaults to hiera('public_virtual_ip')
-  $api_server           = hiera('contrail_config_vip'),
-  $disc_server_ip       = hiera('contrail_config_vip'),
-  $public_vip           = hiera('public_virtual_ip'),
-      openstack_vip              => $public_vip,
BREAKS HERE
-	contain hadoop::common::config
-	contain hadoop::common::yarn::config
-
BREAKS HERE
-#   Content.
BREAKS HERE
-  apt::ppa { 'ppa:openstack-ci-core/vhd-util':
-    ensure => present,
-  }
BREAKS HERE
-      'socket /var/lib/haproxy/stats mode 600 level user',
BREAKS HERE
-    $enable_sssd_services = $::sssd_services ? {
-      /sudo/  => $::sssd_services,
-      default => "$::sssd_services, sudo"
BREAKS HERE
-    fail("New Relic license key not provided")
-        location     => "https://download.newrelic.com/infrastructure_agent/linux/apt",
-        release      => $lsbdistcodename,
-        repos        => "main",
-        architecture => "amd64",
-            'id'        => "A758B3FBCD43BE8D123A3476BB29EE038ECCE87C",
-            'source'    => "https://download.newrelic.com/infrastructure_agent/gpg/newrelic-infra.gpg",
-        $repo_releasever = "6"
-        $repo_releasever = $operatingsystemmajrelease
-        descr         => "New Relic Infrastructure",
-        baseurl       => "https://download.newrelic.com/infrastructure_agent/linux/yum/el/$repo_releasever/x86_64",
-        gpgkey        => "https://download.newrelic.com/infrastructure_agent/gpg/newrelic-infra.gpg",
-      ensure => $service_ensure,
BREAKS HERE
-  file { "${check_scripts_directory}/02_mongodb.py":
-    source  => "puppet:///modules/govuk_unattended_reboot/${check_scripts_directory}/02_mongodb.py",
BREAKS HERE
-  icinga2::object { "icinga2::object::Host::${title}":
BREAKS HERE
-
-    # hmac secret used for GitHub webhook
-    '/opt/share/webhook/secrets/github.secret':
-      source  => 'puppet:///private/github.secret',
-      owner   => root,
-      group   => www-data,
-      mode    => '0640';
-    service    => 'github',
-    secretfile => '/opt/share/webhook/secrets/github.secret',
-    command    => 'sudo /opt/puppet/scripts/update-prod';
BREAKS HERE
-        content => "ARGS=\"-web.listen-address=${listen_address} -config.my-cnf=${my_cnf} ${arguments}\"",
BREAKS HERE
-  $es_version = '0.90.9',
BREAKS HERE
-    path    => [ '/bin/', '/sbin/', '/usr/bin/', '/usr/sbin/', "${install_dir}/bin/", "${install_dir}/shims/" ],
-    command     => "chown -R ${owner}:${group} ${install_dir}/versions/${title} && chmod -R g+w ${install_dir}/versions/${title}",
BREAKS HERE
-    require ::profile::openstack::eqiad1::clientpackages
BREAKS HERE
-          if $majdistrelease >= 6 {
BREAKS HERE
-    # Zaqar tempest tests are now broken
-    # It's because Falcon is too old in OpenStack requierements
-    # and therefore in RDO trunk.
-    # https://bugs.launchpad.net/zaqar/+bug/1583358
-    $zaqar_enabled = false
-# Zaqar disabled, see above
-# include ::openstack_integration::zaqar
BREAKS HERE
-    file { '/usr/share/openstack-dashboard/openstack_dashboard/local/enabled/_1923_puppet_role_panel.py':
BREAKS HERE
-  $jvm_extra_args                         = $::puppet::server::jvm_extra_args,
-  $server_puppetserver_version            = $::puppet::server::puppetserver_version,
-  $server_metrics                         = $::puppet::server::puppetserver_metrics,
BREAKS HERE
-            'score_caches'     => {
-            'score_processors' => {
-                'ores_celery' => {
BREAKS HERE
-  if str2bool($::is_virtual) {
BREAKS HERE
-        source  => 'puppet:///modules/toollabs/favico.ico',
BREAKS HERE
-  Package['heat-engine'] -> Heat_config<||>
BREAKS HERE
-      require => Class['::git::install'],
BREAKS HERE
-    include ::profile::hadoop::client
BREAKS HERE
-      Class['tripleo::fencing'] -> Class['pacemaker::stonith']
BREAKS HERE
-  if hiera('step') >= 4 or (hiera('step') >= 3 and $sync_db) {
BREAKS HERE
-    mode    => '0640',
BREAKS HERE
-      if $file =~ /agent\/(.+).rb/ {
BREAKS HERE
-#   Default to {}
BREAKS HERE
-  $dependencies = [
-    'py-dateutil<=2.2',
-  ]
-
-  package { $dependencies:
-    ensure   => 'present',
-    provider => 'pip',
-    notify   => Class['collectd::service'],
-  }
-
-    require => Package[$dependencies],
BREAKS HERE
-      repo_url_suffix => $nodejs_version,
-      before          => Anchor['nodejs-package-install'],
BREAKS HERE
-        require  => File['/etc/init/ircd.conf'],
BREAKS HERE
-    subscribe => File['/etc/munin/munin.conf.header'],
BREAKS HERE
-  class { 'project_config':
-    url  => $project_config_repo,
-    base => $project_config_base,
BREAKS HERE
-  # FIXME: Disable central syslog on Trusty
-  # See https://www.pivotaltracker.com/story/show/81359288 for details
-  case $::lsbdistcodename {
-    'trusty': {
-      $remote_syslog = false
-    }
-    default: {
-      $remote_syslog = true
-    }
-  }
-    log_remote    => $remote_syslog,
BREAKS HERE
-    content => template('ntp/server/ntp.conf.erb'),
BREAKS HERE
-define ntp::daemon($servers=[], $peers=[], $query_acl=[], $time_acl=[], $servers_opt='',
BREAKS HERE
-# IPAclient Default Settings
-  $manual_register = false
-  $mkhomedir       = true
-  $join_user       = ''
-  $join_pw         = 'UNSET'
-  $ipa_realm       = 'UNSET'
-  $enrollment_host = ''
-  $ipa_server      = ''
-  $ipa_domain      = ''
-  $ipa_options     = ''
-  $replicas        = []
-  $domain_dn       = ''
-  $enable_sudo     = false
-  $sudo_bindpw     = ''
-  $ipa_installer = '/usr/sbin/ipa-client-install'
-          $ipa_package = 'freeipa-client'
-          $ipa_package = 'ipa-client'
BREAKS HERE
-  $testmode = false
-  file { '/home/gerrit2/review_site/bin/gerrit.war':
-    command     => '/usr/bin/java -jar /home/gerrit2/review_site/bin/gerrit.war init -d /home/gerrit2/review_site --batch --no-auto-start',
-    command     => '/etc/init.d/gerrit stop; /usr/bin/java -jar /home/gerrit2/review_site/bin/gerrit.war init -d /home/gerrit2/review_site --batch --no-auto-start',
BREAKS HERE
-    service { 'nsca':
-        ensure  => running,
-        require => File['/etc/nsca.cfg'],
BREAKS HERE
-      file { "/usr/src/ossec":
-      file { "/usr/src/ossec/RPM-GPG-KEY-OSSEC":
-        mode    => 0744,
-        require => File["/usr/src/ossec"]
-          require  => File["/usr/src/ossec/RPM-GPG-KEY-OSSEC"]
-        file { "/usr/src/ossec/RPM-GPG-KEY-OSSEC-RHEL5":
-          mode    => 0744,
-          require => File["/usr/src/ossec"]
-          require  => File["/usr/src/ossec/RPM-GPG-KEY-OSSEC-RHEL5"],
-          descr    => 'WAZUH OSSEC Repository - www.wazuh.com',
-          enabled  => true,
-          gpgkey   => 'file:///src/ossec/RPM-GPG-KEY-OSSEC',
-          baseurl  => 'http://ossec.wazuh.com/el/$releasever/$basearch',
-          require  => File["/usr/src/ossec/RPM-GPG-KEY-OSSEC"],
BREAKS HERE
-  class { '::nova::keystone::auth_placement':
-    public_url   => "${::openstack_integration::config::base_url}:8778/placement",
-    internal_url => "${::openstack_integration::config::base_url}:8778/placement",
-    admin_url    => "${::openstack_integration::config::base_url}:8778/placement",
-    password     => 'a_big_secret',
BREAKS HERE
-    subunit2sql_db_host => hiera('subunit2sql_db_host', ''),
-    subunit2sql_db_pass => hiera('subunit2sql_db_password', ''),
-    mqtt_pass       => hiera('mqtt_service_user_password'),
BREAKS HERE
-        command => '/usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki --max-time 540 --batch-size 275 --dispatch-interval 25 --lock-grace-interval 200 2>&1 > /dev/null',
-        command => '/usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki testwikidatawiki --max-time 900 --batch-size 200 --dispatch-interval 30 2>&1 > /dev/null',
-        command => '/usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/pruneChanges.php --wiki wikidatawiki --number-of-days=3 2>&1 >> /var/log/wikidata/prune2.log',
-        command => '/usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/pruneChanges.php --wiki testwikidatawiki --number-of-days=3 2>&1 >> /var/log/wikidata/prune-testwikidata.log',
-        command => '/usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/rebuildEntityPerPage.php --wiki wikidatawiki --force 2>&1 >> /var/log/wikidata/rebuildEpp.log',
BREAKS HERE
-  $ca_file          = pick($::rh_certificate_consumer_ca_file, '/var/lib/puppet/ssl/certs/ca.pem')
BREAKS HERE
-  $protected = true,
-  $ssl_only = false,
-  $platform = $::govuk_platform,
-  $health_check_port = 'NOTSET'
BREAKS HERE
-    owner   => 'neutron',
-    group   => 'neutron',
-    owner   => 'neutron',
-    group   => 'neutron',
BREAKS HERE
-      fail("\"${module_name}\" provides no config directory default value
-           for \"${::kernel}\"")
-      fail("\"${module_name}\" provides no package default value
-            for \"${::operatingsystem}\"")
-      fail("\"${module_name}\" provides no service parameters
-            for \"${::operatingsystem}\"")
BREAKS HERE
-  if($lsbdistcodename=="wheezy"){
BREAKS HERE
-        id      => '9FE55537D1713CA519DFB85114B9C8DB9A1B1C65',
-        source  => 'http://ossec.wazuh.com/repos/apt/conf/ossec-key.gpg.key'
BREAKS HERE
-        file { "${config_dir}/contacts-new.cfg":
-            ensure  => $ensure,
-            content => template('nagios_common/contacts-new.cfg.erb'),
-            owner   => $owner,
-            group   => $group,
-            mode    => '0400',
-        }
BREAKS HERE
-class ffnord( $site_code
-            , $site_name
-            , $icvpn = false
-            , $icvpn_as
-            , $icvpn_name
-            , $icvpn_keyfile
-            , $icvpn_ipv4
-            , $icvpn_ipv6
-            , $dhcprange_start
-            , $dhcprange_end
-            ) {
-}
-
-define ffnord::mesh( $mesh_name # "Freifunk Entenhausen"
-                  , $mesh_code # "ffeh"
-                  , $mesh_mac  # "52:54:00:bd:e6:d4"
-                  , $mesh_prefix_ipv6
-                  , $mesh_prefix_ipv4
-                  , $mesh_ipv6
-                  , $mesh_ipv4 = "0.0.0.0"
-
-                  , $fastd_secret
-                  , $fastd_port
-                  ) {
-    mesh_prefix_ipv4 => $mesh_prefix_ipv4;
-    
BREAKS HERE
-
-    # backups
-    include role::backup::host
-    backup::set {'var-lib-jenkins-config': }
-
BREAKS HERE
-# Parameters: 
-            config => 'toollabs/gridengine/queue-dedicated.erb',
-    sonofgridengine::join { "hostgroups-${::fqdn}":
-        sourcedir => "${toollabs::collectors}/hostgroups",
-        list      => [ '@general' ],
-    }
BREAKS HERE
-    public_url   => "https://${::openstack_integration::config::ip_for_url}:9322",
-    admin_url    => "https://${::openstack_integration::config::ip_for_url}:9322",
-    internal_url => "https://${::openstack_integration::config::ip_for_url}:9322",
BREAKS HERE
-    $swift_container = hiera('profile::docker_registry_ha::registry::swift_container', 'docker_registry'),
-        swift_user             => $swift_account['user'],
-        swift_password         => $password,
-        swift_url              => $swift_auth_url,
-        swift_container        => $swift_container,
-        redis_host             => $redis_host,
-        redis_port             => $redis_port,
-        redis_passwd           => $redis_password,
-        registry_shared_secret => $docker_registry_shared_secret
BREAKS HERE
-    file { "${dumpsdir}/dblists":
-      path   => "${dumpsdir}/dblists",
BREAKS HERE
-# Also disable Ironic. Newton latest packages in Ubuntu are broken.
-  $ssl_enabled    = false
-  $ironic_enabled = false
-  $ssl_enabled    = true
-  $ironic_enabled = true
-if $ironic_enabled {
-  include ::openstack_integration::ironic
-}
-  ironic                  => $ironic_enabled,
BREAKS HERE
-      if $::auto_ferm_ipv6 {
-          ferm::service { "rsyncd_access_${name}":
BREAKS HERE
-  if $domain != 'puppetlabs.vm' {
BREAKS HERE
-  $site_ssl_cert_file_contents  = '',
-  $site_ssl_key_file_contents   = '',
-  $site_ssl_chain_file_contents = '',
-  $site_ssl_cert_file           = '',
-  $site_ssl_key_file            = '',
-  $site_ssl_chain_file          = '',
-  if $site_ssl_cert_file_contents != '' {
-  if $site_ssl_key_file_contents != '' {
-  if $site_ssl_chain_file_contents != '' {
BREAKS HERE
-  $template_to_import = 'plugin-check-command',
-  $arguments         = {},
-  $vars              = {},
-  $target_dir        = '/etc/icinga2/conf.d',
BREAKS HERE
-        source  => 'puppet:///modules/profile/toolforge/portgrabber',
-        source  => 'puppet:///modules/profile/toolforge/portreleaser',
BREAKS HERE
-  # We make mysqladmin non-executable on servers which don't run a mysql
-  # server in order to avoid a logrotate bug (rt#5981).
-  $mysqladmin_mode = $manage_service ? {
-    true  => '0644',
-    false => '0755',
-  }
-
-    mode => $mysqladmin_mode,
BREAKS HERE
-             'git-core',
BREAKS HERE
-        'present' => '2.3.1-0',
BREAKS HERE
-		require     => Anchor['graphite::install::end'],
-			content => template("graphite/opt/graphite/webapp/graphite/local_settings.py.erb");
-            content => template("graphite/opt/graphite/conf/graphite.wsgi.erb");
-		ensure  => present,
BREAKS HERE
-    '/opt/suexec/php5-cgi':
-        ensure  => link,
-        target  => '/usr/bin/php5-cgi',
-        require => Package['php5-cgi'];
-
-
-  apache::custom_config { 'php_suexec_options':
-    content => "
-      <Directory /opt/suexec/>
-        SetHandler fastcgi-script
-      </Directory>
-    ",
-  }
BREAKS HERE
-      exec { "agent-auth":
-        command   	=> "/var/ossec/bin/agent-auth -m $ossec_server_ip -A $::fqdn -D /var/ossec/",
-        creates   	=> "/var/ossec/etc/client.keys",
-      exec { "agent-auth":
-        command   	=> "/var/ossec/bin/agent-auth -m $ossec_server_hostname -A $::fqdn -D /var/ossec/",
-        creates   	=> "/var/ossec/etc/client.keys",
BREAKS HERE
-  $ciphers53 = ['aes256-ctr','aes192-ctr,aes128-ctr']
-  $ciphers66 = ['chacha20-poly1305@openssh.com','aes256-gcm@openssh.com','aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr']
-  $kex66 = ['curve25519-sha256@libssh.org','diffie-hellman-group-exchange-sha256']
-  $macs53 = ['hmac-ripemd160,hmac-sha1']
-  $macs59 = ['hmac-sha2-512','hmac-sha2-256,hmac-ripemd160']
-  $macs66 = ['hmac-sha2-512-etm@openssh.com','hmac-sha2-256-etm@openssh.com','hmac-ripemd160-etm@openssh.com','umac-128-etm@openssh.com','hmac-sha2-512,hmac-sha2-256','hmac-ripemd160']
BREAKS HERE
-  $volume_driver             = 'cinder.volume.drivers.solidfire.SolidFireDriver',
-    "${name}/volume_backend_name":        value => $volume_backend_name;
-    "${name}/volume_driver":              value => $volume_driver;
-    "${name}/san_ip":                     value => $san_ip;
-    "${name}/san_login":                  value => $san_login;
-    "${name}/san_password":               value => $san_password, secret => true;
-    "${name}/sf_emulate_512":             value => $sf_emulate_512;
-    "${name}/sf_allow_tenant_qos":        value => $sf_allow_tenant_qos;
-    "${name}/sf_account_prefix":          value => $sf_account_prefix;
-    "${name}/sf_template_account_name":   value => $sf_template_account_name;
-    "${name}/sf_allow_template_caching":  value => $sf_allow_template_caching;
-    "${name}/sf_api_port":                value => $sf_api_port;
BREAKS HERE
-  package { 'mysql-client':
-    ensure => present,
-    require => Package['mysql-client'],
BREAKS HERE
-                File["/etc/default/varnish${instancesuffix}"],
BREAKS HERE
-  $hiera_version = '1.3.2-1puppetlabs1',
-  $puppet_version = '3.4.3-1puppetlabs1',
BREAKS HERE
-        source => 'puppet://volatile/misc/glide-binaries/glide',
BREAKS HERE
-    $certificate_name = 'archiva.wikimedia.org',
-            default             => "/etc/ssl/localcerts/${certificate_name}.chained.crt",
-        $ssl_certificate_key = "/etc/ssl/private/${certificate_name}.key"
BREAKS HERE
-  if $::hostname == downcase(hiera('bootstrap_nodeid')) {
BREAKS HERE
-    ) {
-
-    }
-    else {
BREAKS HERE
-	if $::graphite::gr_enable_carbon_relay && $::graphite::gr_enable_carbon_aggregator {
BREAKS HERE
-    ['cm-super', 'fonts-inconsolata', 'fonts-liberation', 'fonts-linuxlibertine']:;
BREAKS HERE
-    validate_re($interval, '^\d$')
BREAKS HERE
-        config_file => 'puppet:///modules/puppet_compiler/compiler.config.yaml',
-        use_ssl     => false,
-        auth        => false,
BREAKS HERE
-    to_version => '2.2.1'
BREAKS HERE
-	$zuul_source_dir = '/var/lib/git/integration/zuul'
BREAKS HERE
-    dns_nameservers  => ['8.8.8.8', ],
BREAKS HERE
-        mode      => '0440',
BREAKS HERE
-    war => 'http://ci.openstack.org/tarballs/test/gerrit-2.4-13-g80f364a.war',
BREAKS HERE
-      'http://tarballs.openstack.org/ci/gerrit-2.4.4-14-gab7f4c1.war',
BREAKS HERE
-# Class puppetmaster::puppetdb::database
-class puppetmaster::puppetdb::database($master) {
-    $replication_pass = hiera('puppetdb::password::replication')
-    $puppetdb_pass = hiera('puppetdb::password::rw')
-    if $master == $::fqdn {
-        # We do this for the require in postgres::db
-        $require_class = 'postgresql::master'
-        $on_master = true
-        $require_class = 'postgresql::slave'
-        $on_master = false
-    class { 'prometheus::postgres_exporter': # lint:ignore:wmf_styleguide
-        require => Class[$require_class],
-    }
-    # Postgres replication and users
-    $postgres_users = hiera('puppetmaster::puppetdb::postgres_users', undef)
-    if $postgres_users {
-        $postgres_users_defaults = {
-            pgversion => 9.4,
-            master    => $on_master,
-        create_resources(postgresql::user, $postgres_users,
-            $postgres_users_defaults)
-        pgversion => '9.4',
-        require => Class[$require_class],
-
BREAKS HERE
-			command => "pear config-set auto_discover 1 system",
-			refreshonly => true;
BREAKS HERE
-  include logrotate
BREAKS HERE
-    $puppet_major_version = hiera('puppet_major_version', undef),
-        server               => $puppetmaster,
-        dns_alt_names        => $dns_alt_names,
-        environment          => $environment,
-        puppet_major_version => $puppet_major_version,
BREAKS HERE
-#   Defaults to $::os_service_default
-#   Defaults to $::os_service_default
-  $user_domain_name               = $::os_service_default,
-  $project_domain_name            = $::os_service_default,
BREAKS HERE
-    ensure => latest,
BREAKS HERE
-                File['/etc/gdnsd/config-head'],
BREAKS HERE
-      listen_options    => $swift_proxy_server_listen_options,
BREAKS HERE
-      'munin-rddcached.service':
BREAKS HERE
-      command     => "/usr/local/gerrit/scripts/make_local_repos.py \
-        ${local_git_dir}",
-    command   => '/usr/bin/java -jar /home/gerrit2/review_site/bin/gerrit.war \
-      init -d /home/gerrit2/review_site --batch --no-auto-start',
-    command     => '/etc/init.d/gerrit stop; /usr/bin/java -jar \
-      /home/gerrit2/review_site/bin/gerrit.war init \
-      -d /home/gerrit2/review_site --batch --no-auto-start',
BREAKS HERE
-  $ensure=present,
-  $prerotate='undef',
-  $postrotate='undef',
-  $firstaction='undef',
-  $lastaction='undef',
BREAKS HERE
-  $askbot_revision              = '06be25e5d1aa013a9a201a92db4b35b1ee1f3d32'
BREAKS HERE
-            'lvs2001' => "10.192.1.1",
-            'lvs2002' => "10.192.1.2",
-            'lvs2003' => "10.192.1.3",
-            'lvs2004' => "10.192.17.4",
-            'lvs2005' => "10.192.17.5",
-            'lvs2006' => "10.192.17.6",
BREAKS HERE
-      '-input-raw'          => 'localhost:7999',
BREAKS HERE
-      $package = 'locales'
-      $default_file = '/etc/default/locale'
-      $locale_gen_cmd = '/usr/sbin/locale-gen'
BREAKS HERE
-    # pastebinit config to point to tools paste, since pastes
-    # might contain PII and sending them by default out of tools
-    # might not be the best of ideas
-
-        ensure => 'file',
-        source => 'puppet:///modules/toollabss/pastebinit.conf',
-        mode   => '0644'
BREAKS HERE
-  $vpn_enabled        = $::is_vpn_enabled ? { 'Started'=>true, default=>false }
-  if($vpn_enabled) {
-    $l3_agent_service   = 'neutron-vpn-agent'
-    $p_l3_agent         = 'p_neutron-vpn-agent'
-    $l3_agent_service   = 'neutron-l3-agent'
-    $p_l3_agent         = 'p_neutron-l3-agent'
BREAKS HERE
-# [*pipe*]
-#   String parameter to input answers during extension setup. Supported
-#   *provider*: pecl.
-  $pipe              = undef,
-
-    if $provider == 'pecl' {
-      $real_package = "pecl-${title}"
-    }
-    else {
-      $real_package = "${package_prefix}${title}"
-    if $provider == 'pecl' {
-        ensure   => $ensure,
-        provider => $provider,
-        source   => $real_source,
-        pipe     => $pipe,
-        require  => [
-      if $pipe != undef {
-        warning("pipe param is not supported by php::extension provider ${provider}")
BREAKS HERE
-  file { $::oracle_java::custom_archive_path:
-    archive { "${::oracle_java::custom_archive_path}/${oracle_java::filename}":
-      require => File[$::oracle_java::custom_archive_path],
-    archive { "${::oracle_java::custom_archive_path}/${oracle_java::filename}":
-      require      => File[$::oracle_java::custom_archive_path],
-      extract_path => $::oracle_java::custom_archive_path,
-      creates      => "${::oracle_java::custom_archive_path}/${oracle_java::longversion}"
BREAKS HERE
-class smokeping(
-    $mode               = 'master',
-    $master_url         = 'http://somewhere/cgi-bin/smokeping.cgi',
-    $shared_secret      = '/etc/smokeping/slavesecrets.conf',
-    $slave_secrets      = '/etc/smokeping/smokeping_secrets',
-    $slave_name         = 'slave1',
-    $slave_dir          = '/etc/smokeping/config.d/slaves.d',
-    $slave_location     = '',
-    $slave_display_name = '',
-    $slave_color        = '',
-    $webserver_user     = 'www-data',
-    $webserver_group    = 'www-data',
-    $master_name        = 'default',
-    $owner              = 'Peter Random',
-    $contact            = 'root@localhost',
-    $mailhost           = 'my.mail.host',
-    $cgiurl             = 'http://some.url/smokeping.cgi',
-    $syslogfacility     = 'local0',
-    $syslogpriority     = 'info',
-    $probes             = [ { name => 'FPing', binary => '/usr/bin/fping', step => '300' } ],
-    $default_probe      = 'FPing',
-    $alerts_to          = 'root@localhost',
-    $alerts_from        = 'root@localhost',
-    $alerts             = [ {
-        name       => 'someloss',
-        alert_type => 'loss',
-        pattern    => '>0%,*12*,>0%,*12*,>0%',
-        comment    => 'loss 3 times in a row' } ],
-    $cgi_remark_top     = 'Welcome to the SmokePing website of xxx Company. Here you will learn all about the latency of our network.',
-    $cgi_title_top      = 'Network Latency Grapher',
-    $targets_dir        = '/etc/smokeping/config.d/targets.d',
-    $daemon_user        = 'smokeping',
-    $daemon_group       = 'smokeping',
-    $path_sendmail      = '/usr/sbin/sendmail',
-    $path_imgcache      = '/var/cache/smokeping/images',
-    $path_imgurl        = '../smokeping/images',
-    $path_datadir       = '/var/lib/smokeping',
-    $path_piddir        = '/var/run/smokeping',
-    $path_smokemail     = '/etc/smokeping/smokemail',
-    $path_tmail         = '/etc/smokeping/tmail',
-    $version            = 'present',
-    $enable             = true,
-    $start              = true,
-) {
BREAKS HERE
-# [*pki*]
-#   Provides multiple sources for the certificate, key and ca. Valid parameters are 'puppet' or 'none'.
-#   'puppet' copies the key, cert and CAcert from the Puppet ssl directory to the pki directory
-#   /var/lib/icinga2/certs on Linux and C:/ProgramData/icinga2/var/lib/icinga2/certs on Windows.
-#   'none' does nothing and you either have to manage the files yourself as file resources
-#   or use the ssl_key, ssl_cert, ssl_cacert parameters. Defaults to puppet.
-#
-#   Location of the private key. Default depends on platform:
-#   /var/lib/icinga2/certs/ElasticsearchWriter_elasticsearch.key on Linux
-#   C:/ProgramData/icinga2/var/lib/icinga2/certs/ElasticsearchWriter_elasticsearch.key on Windows
-#   The Value of NodeName comes from the corresponding constant.
-#   Location of the certificate. Default depends on platform:
-#   /var/lib/icinga2/certs/ElasticsearchWriter_elasticsearch.crt on Linux
-#   C:/ProgramData/icinga2/var/lib/icinga2/certs/ElasticsearchWriter_elasticsearch.crt on Windows
-#   The Value of NodeName comes from the corresponding constant.
-#   Location of the CA certificate. Default depends on platform:
-#   /var/lib/icinga2/certs/ElasticsearchWriter_elasticsearch_ca.crt on Linux
-#   C:/ProgramData/icinga2/var/lib/icinga2/certs/ElasticsearchWriter_elasticsearch_ca.crt on Windows
-#   The private key in a base64 encoded string to store in pki directory, file is stored to
-#   path spicified in ssl_key_path. This parameter requires pki to be set to 'none'.
-#   The certificate in a base64 encoded string to store in pki directory, file is  stored to
-#   path spicified in ssl_cert_path. This parameter requires pki to be set to 'none'.
-#   The CA root certificate in a base64 encoded string to store in pki directory, file is stored
-#   to path spicified in ssl_cacert_path. This parameter requires pki to be set to 'none'.
-  Enum['none', 'puppet']                 $pki                  = 'puppet',
-    if $ssl_key_path {
-      $_ssl_key_path = $ssl_key_path }
-    else {
-      $_ssl_key_path = "${ssl_dir}/ElasticsearchWriter_elasticsearch.key" }
-    if $ssl_cert_path {
-      $_ssl_cert_path = $ssl_cert_path }
-    else {
-      $_ssl_cert_path = "${ssl_dir}/ElasticsearchWriter_elasticsearch.crt" }
-    if $ssl_cacert_path {
-      $_ssl_cacert_path = $ssl_cacert_path }
-    else {
-      $_ssl_cacert_path = "${ssl_dir}/ElasticsearchWriter_elasticsearch_ca.crt" }
-
-    case $pki {
-      'puppet': {
-        file { $_ssl_key_path:
-          ensure => file,
-          mode   => $_ssl_key_mode,
-          source => $::icinga2_puppet_hostprivkey,
-          tag    => 'icinga2::config::file',
-        }
-
-        file { $_ssl_cert_path:
-          ensure => file,
-          source => $::icinga2_puppet_hostcert,
-          tag    => 'icinga2::config::file',
-        }
-
-        file { $_ssl_cacert_path:
-          ensure => file,
-          source => $::icinga2_puppet_localcacert,
-          tag    => 'icinga2::config::file',
-        }
-      } # puppet
-
-      'none': {
-        if $ssl_key {
-          $_ssl_key = $::osfamily ? {
-            'windows' => regsubst($ssl_key, '\n', "\r\n", 'EMG'),
-            default   => $ssl_key,
-          }
-
-          file { $_ssl_key_path:
-            ensure  => file,
-            mode    => $_ssl_key_mode,
-            content => $_ssl_key,
-            tag     => 'icinga2::config::file',
-          }
-        }
-
-        if $ssl_cert {
-          $_ssl_cert = $::osfamily ? {
-            'windows' => regsubst($ssl_cert, '\n', "\r\n", 'EMG'),
-            default   => $ssl_cert,
-          }
-
-          file { $_ssl_cert_path:
-            ensure  => file,
-            content => $_ssl_cert,
-            tag     => 'icinga2::config::file',
-          }
-        }
-
-        if $ssl_cacert {
-          $_ssl_cacert = $::osfamily ? {
-            'windows' => regsubst($ssl_cacert, '\n', "\r\n", 'EMG'),
-            default   => $ssl_cacert,
-          }
-
-          file { $_ssl_cacert_path:
-            ensure  => file,
-            content => $_ssl_cacert,
-            tag     => 'icinga2::config::file',
-          }
-        }
-      } # none
-    } # case pki
BREAKS HERE
-        $trustedline = '[trusted=yes]'
-    $binline = "deb ${trustedline} ${uri} ${dist} ${components}\n"
BREAKS HERE
-    package { ['ferm', 'libnet-dns-perl']:
BREAKS HERE
-    $postsave_cmd_real = pick($postsave_cmd, 'if systemctl -q is-active haproxy; then systemctl reload haproxy; else true; fi')
BREAKS HERE
-# Define: pagios::plugin
BREAKS HERE
-  goenv::version { ['1.2.2', '1.3.1', '1.3.3', '1.4.1']: }
-
-  # FIXME: remove once run everywhere.
-  package { 'goenv-go-1.4':
-    ensure => purged
-  }
-
BREAKS HERE
-  class { 'mysql::server':
-  include mysql::server::slave
-    Govuk::Mount['/var/lib/mysql'] -> Class['mysql::server']
BREAKS HERE
-    require ::confd
BREAKS HERE
-glance_image { 'cirros':
-  ensure           => present,
-  container_format => 'bare',
-  disk_format      => 'qcow2',
-  is_public        => 'yes',
-  source           => 'http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img',
-}
-glance_image { 'cirros_alt':
-  ensure           => present,
-  container_format => 'bare',
-  disk_format      => 'qcow2',
-  is_public        => 'yes',
-  source           => 'http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img',
-}
-  configure_networks  => false,
-  nova_available      => false,
BREAKS HERE
-    action          => 'DROP';
BREAKS HERE
-  case $::osfamily {
-    /^[Ww]indows$/: {
-      case $type {
-        'uf':    { $windows_service = 'SplunkForwarder' }
-        default: { $windows_service = 'Splunkd' }
-      }
-      if $service[ensure] == undef {
-        service { $windows_service:
-          enable  => $service[enable],
-      } else {
-        service { $windows_service:
-          ensure => $service[ensure],
-          enable => $service[enable],
-    }
-    default: {
-      if $service[managed] == undef {
BREAKS HERE
-        datadir          => $role::osm::common::datadir,
BREAKS HERE
-  Puppi::Run[$name] -> Class['puppi::is_installed']
BREAKS HERE
-    check_command       => 'check_nrpe_1arg!check_ntp_peer',
-    service_description => 'ntp self-reported failure',
-    host_name           => $::fqdn,
-    notes_url           => 'https://github.gds/pages/gds/opsmanual/2nd-line/nagios.html#ntp-drift-too-high',
BREAKS HERE
-    true    => undef,
BREAKS HERE
-  if $properties['service_notification_commands'] == undef {
-    if $_smtp_auth {
-      $command_filename = "${path}/cmd_notify-service-by-smtp-with-long-service-output.cfg"
-      $smtp_password_escaped = regsubst($smtp_password, '\'', '\'"\'"\'', 'G')
-      if ! defined(File[$command_filename]){
-        file {$command_filename:
-          ensure  => present,
-          content => template('nagios/notify-by-smtp.cfg.erb'),
-          owner   => 'root',
-          group   => 'root',
-          mode    => '0644',
-          # the deployer may modify the file to enable STARTTLS
-          replace => 'no',
-          require => Package[$nagios::params::package_mailx_smtp],
-        }
-      if ! defined(Package[$nagios::params::package_mailx_smtp]){
-        package { $nagios::params::package_mailx_smtp:
-          ensure => present,
-        }
-    } else {
-      file {"${path}/cmd_notify-service-by-email-with-long-service-output.cfg":
-        ensure => present,
-        source => 'puppet:///modules/nagios/cmd_notify_service_by_email.cfg',
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0644',
-      }
-  }
-  if is_array($properties['service_notification_commands']) {
-    $opts['service_notification_commands'] = join(sort($properties['service_notification_commands']), ',')
-  }
-  if $properties['host_notification_commands'] == undef {
-    $opts['host_notification_commands'] = $nagios::params::host_notification_commands
-  }
-  if is_array($properties['host_notification_commands']) {
-    $opts['host_notification_commands'] = join(sort($properties['host_notification_commands']), ',')
BREAKS HERE
-
-rabbitmq_user { ['glance', 'nova', 'neutron', 'sahara', 'heat']:
-  admin    => true,
-  password => 'an_even_bigger_secret',
-  provider => 'rabbitmqctl',
-  require  => Class['::rabbitmq'],
-}
-rabbitmq_user_permissions { ['glance@/', 'nova@/', 'neutron@/', 'sahara@/', 'heat@/']:
-  configure_permission => '.*',
-  write_permission     => '.*',
-  read_permission      => '.*',
-  provider             => 'rabbitmqctl',
-  require              => Class['::rabbitmq'],
-}
-
-# Deploy Glance
-class { '::glance::db::mysql':
-  password => 'glance',
-}
-include ::glance
-include ::glance::backend::file
-include ::glance::client
-class { '::glance::keystone::auth':
-  password => 'a_big_secret',
-}
-class { '::glance::api':
-  debug               => true,
-  verbose             => true,
-  database_connection => 'mysql://glance:glance@127.0.0.1/glance?charset=utf8',
-  keystone_password   => 'a_big_secret',
-  workers             => 2,
-}
-class { '::glance::registry':
-  debug               => true,
-  verbose             => true,
-  database_connection => 'mysql://glance:glance@127.0.0.1/glance?charset=utf8',
-  keystone_password   => 'a_big_secret',
-  workers             => 2,
-}
-class { '::glance::notify::rabbitmq':
-  rabbit_userid       => 'glance',
-  rabbit_password     => 'an_even_bigger_secret',
-  rabbit_host         => '127.0.0.1',
-  notification_driver => 'messagingv2',
-}
-
-# Deploy Neutron
-class { '::neutron::db::mysql':
-  password => 'neutron',
-}
-class { '::neutron::keystone::auth':
-  password => 'a_big_secret',
-}
-class { '::neutron':
-  rabbit_user           => 'neutron',
-  rabbit_password       => 'an_even_bigger_secret',
-  rabbit_host           => '127.0.0.1',
-  allow_overlapping_ips => true,
-  core_plugin           => 'ml2',
-  service_plugins       => ['router', 'metering'],
-  debug                 => true,
-  verbose               => true,
-}
-class { '::neutron::client': }
-class { '::neutron::server':
-  database_connection => 'mysql://neutron:neutron@127.0.0.1/neutron?charset=utf8',
-  auth_password       => 'a_big_secret',
-  identity_uri        => 'http://127.0.0.1:35357/',
-  sync_db             => true,
-  api_workers         => 4,
-}
-class { '::neutron::plugins::ml2':
-  type_drivers         => ['vxlan'],
-  tenant_network_types => ['vxlan'],
-  mechanism_drivers    => ['openvswitch'],
-}
-class { '::neutron::agents::ml2::ovs':
-  enable_tunneling => true,
-  local_ip         => '127.0.0.1',
-  tunnel_types     => ['vxlan'],
-}
-class { '::neutron::agents::metadata':
-  debug            => true,
-  auth_password    => 'a_big_secret',
-  shared_secret    => 'a_big_secret',
-  metadata_workers => 2,
-}
-class { '::neutron::agents::lbaas':
-  debug => true,
-}
-class { '::neutron::agents::l3':
-  debug => true,
-}
-class { '::neutron::agents::dhcp':
-  debug => true,
-}
-class { '::neutron::agents::metering':
-  debug => true,
-}
-class { '::neutron::server::notifications':
-  password => 'a_big_secret',
-}
-
-# Deploy Nova
-class { '::nova::db::mysql':
-  password => 'nova',
-}
-class { '::nova::keystone::auth':
-  password => 'a_big_secret',
-}
-class { '::nova':
-  database_connection    => 'mysql://nova:nova@127.0.0.1/nova?charset=utf8',
-  rabbit_host            => '127.0.0.1',
-  rabbit_userid          => 'nova',
-  rabbit_password        => 'an_even_bigger_secret',
-  glance_api_servers     => 'localhost:9292',
-  verbose                => true,
-  debug                  => true,
-  notification_driver    => 'messagingv2',
-  notify_on_state_change => 'vm_and_task_state',
-}
-class { '::nova::api':
-  admin_password                       => 'a_big_secret',
-  identity_uri                         => 'http://127.0.0.1:35357/',
-  osapi_v3                             => true,
-  neutron_metadata_proxy_shared_secret => 'a_big_secret',
-  osapi_compute_workers                => 2,
-  ec2_workers                          => 2,
-  metadata_workers                     => 2,
-  default_floating_pool                => 'public',
-}
-class { '::nova::cert': }
-class { '::nova::client': }
-class { '::nova::conductor': }
-class { '::nova::consoleauth': }
-class { '::nova::cron::archive_deleted_rows': }
-class { '::nova::compute':
-  vnc_enabled                 => true,
-  instance_usage_audit        => true,
-  instance_usage_audit_period => 'hour',
-}
-class { '::nova::compute::libvirt':
-  libvirt_virt_type => 'qemu',
-  migration_support => true,
-  vncserver_listen  => '0.0.0.0',
-}
-class { '::nova::scheduler': }
-class { '::nova::vncproxy': }
-class { '::nova::network::neutron':
-  neutron_admin_password => 'a_big_secret',
-  neutron_admin_auth_url => 'http://127.0.0.1:35357/v2.0',
-}
-
-# Deploy Sahara
-class { '::sahara::db::mysql':
-  password => 'sahara',
-}
-class { '::sahara::keystone::auth':
-  password     => 'a_big_secret',
-}
-class { '::sahara':
-  database_connection => 'mysql://sahara:sahara@127.0.0.1/sahara?charset=utf8',
-  # two plugins because of hardcode in tempest:
-  # https://github.com/openstack/tempest/blob/master/tempest/config.py#L923
-  plugins             => ['vanilla', 'hdp'],
-  rabbit_userid       => 'sahara',
-  rabbit_password     => 'an_even_bigger_secret',
-  rabbit_host         => '127.0.0.1',
-  rpc_backend         => 'rabbit',
-  admin_password      => 'a_big_secret',
-  admin_user          => 'sahara',
-  admin_tenant_name   => 'services',
-  debug               => true,
-  verbose             => true,
-}
-class { '::sahara::service::api':
-  api_workers => 2,
-}
-class { '::sahara::service::engine': }
-class { '::sahara::client': }
-class { '::sahara::notify':
-  enable_notifications => true,
-}
-
-# Deploy Heat
-class { '::heat':
-  rabbit_userid       => 'heat',
-  rabbit_password     => 'an_even_bigger_secret',
-  rabbit_host         => '127.0.0.1',
-  database_connection => 'mysql://heat:heat@127.0.0.1/heat?charset=utf8',
-  identity_uri        => 'http://127.0.0.1:35357/',
-  keystone_password   => 'a_big_secret',
-  debug               => true,
-  verbose             => true,
-}
-class { '::heat::db::mysql':
-  password => 'heat',
-}
-class { '::heat::keystone::auth':
-  password                  => 'a_big_secret',
-  configure_delegated_roles => true,
-}
-class { '::heat::keystone::domain':
-  domain_password => 'oh_my_no_secret',
-}
-class { '::heat::client': }
-class { '::heat::api':
-  workers => '2',
-}
-class { '::heat::engine':
-  auth_encryption_key => '1234567890AZERTYUIOPMLKJHGFDSQ12',
-}
-class { '::heat::api_cloudwatch':
-  workers => '2',
-}
-class { '::heat::api_cfn':
-  workers => '2',
-}
-
-# Deploy Swift
-include ::memcached
-class { '::swift':
-  swift_hash_suffix => 'secrete',
-}
-class { '::swift::proxy':
-  proxy_local_net_ip => '127.0.0.1',
-  workers            => '4',
-  pipeline           => [
-'catch_errors', 'healthcheck', 'cache', 'tempurl', 'ratelimit',
-'authtoken', 'keystone', 'formpost', 'staticweb', 'container_quotas',
-'account_quotas', 'proxy-logging', 'proxy-server'
-  ],
-}
-include ::swift::proxy::catch_errors
-include ::swift::proxy::healthcheck
-include ::swift::proxy::proxy_logging
-include ::swift::proxy::cache
-include ::swift::proxy::tempurl
-include ::swift::proxy::ratelimit
-class { '::swift::proxy::authtoken':
-  auth_uri       => 'http://127.0.0.1:5000/v2.0',
-  identity_uri   => 'http://127.0.0.1:35357/',
-  admin_password => 'a_big_secret',
-}
-class { '::swift::proxy::keystone':
-  operator_roles => ['Member', 'admin', 'SwiftOperator']
-}
-include ::swift::proxy::formpost
-include ::swift::proxy::staticweb
-include ::swift::proxy::container_quotas
-include ::swift::proxy::account_quotas
-include ::swift::proxy::tempauth
-class { '::swift::keystone::auth':
-  password       => 'a_big_secret',
-  operator_roles => ['admin', 'SwiftOperator', 'ResellerAdmin'],
-}
-file { '/srv/node':
-  ensure  => directory,
-  owner   => 'swift',
-  group   => 'swift',
-  require => Package['swift'],
-}
-include ::swift::ringbuilder
-class { '::swift::storage::all':
-  storage_local_net_ip => '127.0.0.1',
-  incoming_chmod       => 'Du=rwx,g=rx,o=rx,Fu=rw,g=r,o=r',
-  outgoing_chmod       => 'Du=rwx,g=rx,o=rx,Fu=rw,g=r,o=r',
-}
-$swift_components = ['account', 'container', 'object']
-swift::storage::filter::recon { $swift_components : }
-swift::storage::filter::healthcheck { $swift_components : }
-ring_object_device { '127.0.0.1:6000/1':
-  zone   => 1,
-  weight => 1,
-}
-ring_container_device { '127.0.0.1:6001/1':
-  zone   => 1,
-  weight => 1,
-}
-ring_account_device { '127.0.0.1:6002/1':
-  zone   => 1,
-  weight => 1,
-}
-
-# Deploy Horizon
-$vhost_params = { add_listen => false }
-class { '::horizon':
-  secret_key         => 'big_secret',
-  vhost_extra_params => $vhost_params,
-  servername         => $::hostname,
-  allowed_hosts      => $::hostname,
-  # need to disable offline compression due to
-  # https://bugs.launchpad.net/ubuntu/+source/horizon/+bug/1424042
-  compress_offline   => false,
-}
-
-# Configure Tempest and the resources
-$os_auth_options = '--os-username admin --os-password a_big_secret --os-tenant-name openstack --os-auth-url http://127.0.0.1:5000/v2.0'
-
-exec { 'manage_m1.nano_nova_flavor':
-  path     => '/usr/bin:/bin:/usr/sbin:/sbin',
-  provider => shell,
-  command  => "nova ${os_auth_options} flavor-create m1.nano 42 128 0 1",
-  unless   => "nova ${os_auth_options} flavor-list | grep m1.nano",
-}
-Keystone_user_role['admin@openstack'] -> Exec['manage_m1.nano_nova_flavor']
-
-exec { 'manage_m1.micro_nova_flavor':
-  path     => '/usr/bin:/bin:/usr/sbin:/sbin',
-  provider => shell,
-  command  => "nova ${os_auth_options} flavor-create m1.micro 84 128 0 1",
-  unless   => "nova ${os_auth_options} flavor-list | grep m1.micro",
-}
-Keystone_user_role['admin@openstack'] -> Exec['manage_m1.micro_nova_flavor']
-
-neutron_network { 'public':
-  tenant_name     => 'openstack',
-  router_external => true,
-}
-Keystone_user_role['admin@openstack'] -> Neutron_network<||>
-
-neutron_subnet { 'public-subnet':
-  cidr             => '172.24.5.0/24',
-  ip_version       => '4',
-  allocation_pools => ['start=172.24.5.10,end=172.24.5.200'],
-  gateway_ip       => '172.24.5.1',
-  enable_dhcp      => false,
-  network_name     => 'public',
-  tenant_name      => 'openstack',
-}
-
-include ::vswitch::ovs
-vs_bridge { 'br-ex':
-  ensure => present,
-  notify => Exec['create_br-ex_vif'],
-}
-
-# creates br-ex virtual interface to reach floating-ip network
-exec { 'create_br-ex_vif':
-  path        => '/usr/bin:/bin:/usr/sbin:/sbin',
-  provider    => shell,
-  command     => 'ip addr add 172.24.5.1/24 dev br-ex; ip link set br-ex up',
-  refreshonly => true,
-}
-
-glance_image { 'cirros':
-  ensure           => present,
-  container_format => 'bare',
-  disk_format      => 'qcow2',
-  is_public        => 'yes',
-  # TODO(emilien) optimization by 1/ using Hiera to configure Glance image source
-  # and 2/ if running in the gate, use /home/jenkins/cache/files/ cirros image.
-  # source        => '/home/jenkins/cache/files/cirros-0.3.4-x86_64-disk.img',
-  source           => 'http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img',
-}
-glance_image { 'cirros_alt':
-  ensure           => present,
-  container_format => 'bare',
-  disk_format      => 'qcow2',
-  is_public        => 'yes',
-  # TODO(emilien) optimization by 1/ using Hiera to configure Glance image source
-  # and 2/ if running in the gate, use /home/jenkins/cache/files/ cirros image.
-  # source        => '/home/jenkins/cache/files/cirros-0.3.4-x86_64-disk.img',
-  source           => 'http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img',
-}
-
-class { '::tempest':
-  debug                => true,
-  use_stderr           => false,
-  log_file             => 'tempest.log',
-  tempest_clone_owner  => $::id,
-  git_clone            => false,
-  tempest_clone_path   => '/tmp/openstack/tempest',
-  lock_path            => '/tmp/openstack/tempest',
-  tempest_config_file  => '/tmp/openstack/tempest/etc/tempest.conf',
-  configure_images     => true,
-  configure_networks   => true,
-  identity_uri         => 'http://127.0.0.1:5000/v2.0',
-  identity_uri_v3      => 'http://127.0.0.1:5000/v3',
-  admin_username       => 'admin',
-  admin_tenant_name    => 'openstack',
-  admin_password       => 'a_big_secret',
-  admin_domain_name    => 'Default',
-  auth_version         => 'v3',
-  image_name           => 'cirros',
-  image_name_alt       => 'cirros_alt',
-  cinder_available     => false,
-  glance_available     => true,
-  horizon_available    => true,
-  nova_available       => true,
-  neutron_available    => true,
-  ceilometer_available => false,
-  sahara_available     => true,
-  heat_available       => true,
-  swift_available      => true,
-  public_network_name  => 'public',
-  flavor_ref           => '42',
-  flavor_ref_alt       => '84',
-  image_ssh_user       => 'cirros',
-  image_alt_ssh_user   => 'cirros',
-  img_file             => 'cirros-0.3.4-x86_64-disk.img',
-  dashboard_url        => "http://${::hostname}/",
-  # TODO(emilien) optimization by 1/ using Hiera to configure Glance image source
-  # and 2/ if running in the gate, use /home/jenkins/cache/files/ cirros image.
-  # img_dir            => '/home/jenkins/cache/files',
-  img_dir              => '/tmp/openstack/tempest',
BREAKS HERE
-  $git_url = 'https://git.openstack.org/openstack-infra/bugdaystats',
-  $serveradmin = undef
BREAKS HERE
-#   Defaults to 'heat@localhost'.
-#   Defaults to 'heat'.
BREAKS HERE
-  gr_storage_aggregation_rules  = {
BREAKS HERE
-    include passwords::ldap::labs
-    $ldap_pass = $passwords::ldap::labs::proxypass
BREAKS HERE
-    path    => "${httpd::params::vdir}/${priority}-${name}",
BREAKS HERE
-      '0.0.0.0:443' => ['ssl', 'crt-list', '/etc/ssl/ocf-certs.txt'],
-
-  # The primary domain for the SANS cert, which is the name of the pem file.
-  $primary_domain = '.ocf.berkeley.edu'
-
-  # These domains are also included in the *.ocf.berkeley.edu.pem file.
-  # We'll need to list them all in the ocf-certs.txt file so HAProxy
-  # knows which domains each cert covers.
-  $alt_domains = ['.ocf.io']
-
-  $cnames = ldap_attr($::hostname, 'dnsCname', true)
-
-  file { '/etc/ssl/ocf-certs.txt':
-    mode    => '0400',
-    owner   => 'haproxy',
-    group   => 'haproxy',
-    content => template('ocf_kubernetes/master/loadbalancer/ssl/ocf-certs.txt.erb'),
-    notify  => Haproxy::Service[haproxy],
-  }
BREAKS HERE
-    $tendril_database = 'tendril',
-    ){
BREAKS HERE
-    requires_realm('prod')
BREAKS HERE
-define sysctl ( value = undef, ensure = undef ) {
BREAKS HERE
-  package { 'nfs-kernel-server':
-    ensure => installed,
-    require => Class['java::set_defaults'],
BREAKS HERE
-)  {
-  include ::cinder::params
BREAKS HERE
-  maillist { 'third-party-request':
-    ensure      => present,
-    admin       => 'anteaya@anteaya.info',
-    password    => $listpassword,
-    description => 'Third party system account requests.',
-    webserver   => $listdomain,
-    mailserver  => $listdomain,
-  }
-
BREAKS HERE
-    $projectregex = "s/${labsproject}/_PROJECT_/g"
BREAKS HERE
-        srange => "@resolve((${cassandra_hosts_ferm}))",
-            srange => "(@resolve((${cassandra_hosts_ferm})) ${analytics_networks})",
BREAKS HERE
-    include apache::status
BREAKS HERE
-  file { '/home/gerrit2/review_site/hooks/subscriber_map.yaml':
-      'puppet:///modules/openstack_project/gerrit/subscriber_map.yaml',
BREAKS HERE
-    command     => "${bin_dir}/check_mk -I",
-    user        => $site,
-    command     => "${bin_dir}/check_mk -O",
-    user        => $site,
-    command  => "${bin_dir}/cmk -I",
-    user     => $site,
BREAKS HERE
-  include postfix, ssh, stdlib
-
BREAKS HERE
-            'conftool' => {'cluster' => 'dns_rec', 'service' => 'pdns_recursor'},
BREAKS HERE
-  $disable_ipset = $settings['disable_ipset']
BREAKS HERE
-        mode   => 0700,
BREAKS HERE
-    ::apt::ppa { "ppa:${ppa}":
-      before => [Class['::php::packages'],Class['::php::pear'],Class['::php::dev']],
-    }
-    ::apt::ppa { "ppa:${version_repo}":
-      before => [Class['::php::packages'],Class['::php::pear'],Class['::php::dev']],
-    }
BREAKS HERE
-      ensure => latest,
-            onlyif => "ret=1; for i in ${server_list}; do /bin/nc -z \$i ${wsrep_group_comm_port}; if [ \"\$?\" = \"0\" ]; then ret=0; fi; done; /bin/echo \$ret | /bin/grep 1 -q",
BREAKS HERE
-    ensure   => '1.3.0',
BREAKS HERE
-          command   => "rpm --import ${repo['gpgkey']}",
-          before    => Zypprepo['icinga-stable-release'],
-        zypprepo { 'icinga-stable-release':
-          * => $repo,
BREAKS HERE
-){
-      name   => $::ec2api::params::package_manage,
BREAKS HERE
-#     The "execute" script method takes care of executing the event handler. 
-#     Alternatively a string can be specified in which case the shell interpreter (usually /bin/sh) 
-  $ensure               = present,
-  $command              = undef,
-  $env                  = undef,
-  $vars                 = undef,
-  $timeout              = undef,
-  $arguments            = undef,
-  $import               = ['plugin-event-command'],
-  $order                = '20',
-  validate_integer ( $order )
-  validate_array($command)
-    object_name => $name,
BREAKS HERE
-    monitor_service { 'http':
-        description   => 'HTTP',
BREAKS HERE
-    line   => sprintf('PUPPET_SENTRY_DSN="%s"', $::puppet::puppetserver::sentry_dsn),
-    match  => '^PUPPET_SENTRY_DSN=',
BREAKS HERE
-Subproject commit ddebc3bc8fae5e07a462e5c346294de3359f023f
BREAKS HERE
-  logrotate::conf { 'analytics/discovery-stats':
BREAKS HERE
-
-    package {['gcc', 'zlib-devel']:
-      before => [ Package['puppetfactory'], Class['showoff'] ]
-    }
-
-    package { ['serverspec', 'puppetlabs_spec_helper']:
-      ensure   => present,
-      provider => gem,
-      require  => Package['puppet'],
-    }
-
-    # lol, this is great.
-    package { 'puppet':
-      ensure          => present,
-      provider        => gem,
-      install_options => { '--bindir' => '/tmp' },
-    }
BREAKS HERE
-    if ( $gridType == 'CRS_SWONLY' ) {
BREAKS HERE
-  $notification_to_import  = undef,
-  validate_string($notification_to_import)
BREAKS HERE
-        process => 'actionrunner'
-        process => 'auth'
-        process => 'api'
-        process => 'resultstracker'
-        process => 'sensorcontainer'
-        process => 'notifier'
-        process => 'rulesengine'
BREAKS HERE
-  $srvname = $name
BREAKS HERE
-    content => extlookupyy("${host}_key"),
-      ensure => present,
-      source => [
-        "puppet:///modules/nginx/$name.crt",
-        "puppet:///modules/nginx/static.$govuk_platform.alphagov.co.uk.crt"
-      ]
-      ensure => present,
-      source => [
-        "puppet:///modules/nginx/$name.key",
-        "puppet:///modules/nginx/static.$govuk_platform.alphagov.co.uk.key"
-      ]
BREAKS HERE
-      } elsif $operatingsystem == 'RedHat': {
BREAKS HERE
-    gerritbot_nick => 'openstackgerrit',
-    gerritbot_password => hiera('gerrit_gerritbot_password'),
-    gerritbot_server => 'irc.freenode.net',
-    gerritbot_user => 'gerritbot'
BREAKS HERE
-  $share_backend_name        = $name,
-  $unity_server_meta_pool    = undef,
-  $unity_share_data_pools    = undef ,
-  $unity_ethernet_ports      = undef,
-  $package_ensure            = 'present',
-  #Python library storops is required to run Unity driver.
BREAKS HERE
-      $new_source = map($sources) |$source| {
-      $new_source = $sources
-    $_sources = $new_source.map |$src| {
-      $default_source
-      + {pos_file => "${pos_file_path}/${src['tag']}.pos"}
-      + $src
-    }
BREAKS HERE
-      $service_name = 'ssh'
-      $banner_file  = '/etc/issue.net'
-    }
-    default: {
-      fail("Unsupported osfamily ${::osfamily}, currently only supports Debian and RedHat")
-    }
-  }
-  case $::operatingsystem {
-    'Debian': {
-        /^[78].*$/ : {
-          $host_keys=['/etc/ssh/ssh_host_rsa_key','/etc/ssh/ssh_host_dsa_key','/etc/ssh/ssh_host_ecdsa_key']
-          $host_keys=['/etc/ssh/ssh_host_rsa_key','/etc/ssh/ssh_host_dsa_key']
-    default : {
-      $host_keys=['/etc/ssh/ssh_host_rsa_key','/etc/ssh/ssh_host_dsa_key']
BREAKS HERE
-# === Deprecated Parameters
-#
-# [*configure_delegated_roles*]
-#   (optional) Whether to configure the delegated roles.
-#   Defaults to true
-#   Deprecated: Moved to heat::keystone::auth, will be removed in a future release.
-#
-  $trusts_delegated_roles              = ['heat_stack_owner'],  #DEPRECATED
-  $configure_delegated_roles           = true,                  #DEPRECATED
-  if $configure_delegated_roles {
-    warning ('configure_delegated_roles is deprecated in this class, use heat::keystone::auth')
-    keystone_role { $trusts_delegated_roles:
-      ensure => present,
-    }
-  }
-
BREAKS HERE
-  if $mysql_module >= 2.2 {
-    require mysql::bindings
-    require mysql::bindings::python
-    require mysql::python
BREAKS HERE
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0555',
-        source  => 'puppet:///modules/interface/interface-rps.py',
BREAKS HERE
-    debug                    => true,
-    use_stderr               => false,
-    log_file                 => 'tempest.log',
-    tempest_clone_owner      => $::id,
-    git_clone                => false,
-    tempest_clone_path       => '/tmp/openstack/tempest',
-    lock_path                => '/tmp/openstack/tempest',
-    tempest_config_file      => '/tmp/openstack/tempest/etc/tempest.conf',
-    configure_images         => true,
-    configure_networks       => true,
-    identity_uri_v3          => "${::openstack_integration::config::keystone_auth_uri}/v3",
-    admin_username           => 'admin',
-    admin_project_name       => 'openstack',
-    admin_password           => 'a_big_secret',
-    admin_domain_name        => 'Default',
-    auth_version             => 'v3',
-    tempest_roles            => ['Member', 'creator'], # needed to use barbican.
-    image_name               => 'cirros',
-    image_name_alt           => 'cirros_alt',
-    cinder_available         => $cinder,
-    cinder_backup_available  => $cinder_backup,
-    designate_available      => $designate,
-    glance_available         => $glance,
-    glance_v1                => false,
-    glance_v2                => true,
-    keystone_v2              => false,
-    horizon_available        => $horizon,
-    nova_available           => $nova,
-    neutron_available        => $neutron,
-    neutron_bgpvpn_available => $bgpvpn,
-    neutron_lbaas_available  => true,
-    neutron_l2gw_available   => $l2gw,
-    neutron_fwaas_available  => true,
-    ceilometer_available     => $ceilometer,
-    aodh_available           => $aodh,
-    trove_available          => $trove,
-    sahara_available         => $sahara,
-    heat_available           => $heat,
-    swift_available          => $swift,
-    ironic_available         => $ironic,
-    zaqar_available          => $zaqar,
-    mistral_available        => $mistral,
-    vitrage_available        => $vitrage,
-    gnocchi_available        => $gnocchi,
-    panko_available          => $panko,
-    ec2api_available         => $ec2api,
-    watcher_available        => $watcher,
-    public_network_name      => 'public',
-    neutron_api_extensions   => join(any2array($neutron_api_extensions), ','),
-    dashboard_url            => $::openstack_integration::config::base_url,
-    flavor_ref               => '42',
-    flavor_ref_alt           => '84',
-    db_flavor_ref            => '42',
-    image_ssh_user           => 'cirros',
-    image_alt_ssh_user       => 'cirros',
-    img_file                 => 'cirros-0.4.0-x86_64-disk.img',
-    compute_build_interval   => 10,
-    ca_certificates_file     => $::openstack_integration::params::ca_bundle_cert_path,
-    manage_tests_packages    => true,
-    attach_encrypted_volume  => $attach_encrypted_volume,
-    murano_available         => $murano,
-    tempest_workspace        => '/tmp/openstack/tempest',
-    run_ssh                  => true,
-    l2gw_switch              => $l2gw_switch,
-    img_dir                  => '/tmp/openstack/image',
BREAKS HERE
-  $config_dir = '/etc/gitlab',
-  $config_file = '/etc/gitlab/gitlab.rb',
-  $secrets_file = '/etc/gitlab/gitlab-secrets.json',
-    group  => 'group',
BREAKS HERE
-        pos_file_path  => $fluentd_pos_file_path,
-        default_format => $fluentd_default_format
BREAKS HERE
-    $hive_metastore_host = hiera('cdh::hive::metastore_host'),
-    $oozie_host          = hiera('cdh::oozie::oozie_host'),
BREAKS HERE
-            require  => Puppetmaster::Gitprivate['/srv/private']
BREAKS HERE
-            description   => 'HDFS missing blocks',
-            description   => 'HDFS corrupted blocks',
BREAKS HERE
-  $access_log_format                       = "%R - %u %t \"%m %r\" %s",
BREAKS HERE
-        'cap_mon' => 'allow r',
-        'cap_osd' => 'allow class-read object_prefix rbd_children, allow rwx pool=cinder, allow rwx pool=nova, allow rwx pool=glance, allow rwx pool=gnocchi',
BREAKS HERE
-          require => Anchor['cinder::install:end'],
BREAKS HERE
-  include chocolatey
BREAKS HERE
-# Node-OS: trusty
-# Node-OS: xenial
-node /^stackalytics\d*\.openstack\.org$/ {
-  class { 'openstack_project::server':
-    iptables_public_tcp_ports => [80],
-    sysadmins                 => hiera('sysadmins', []),
-  }
-
-  class { 'openstack_project::stackalytics':
-    gerrit_ssh_user              => hiera('stackalytics_gerrit_ssh_user'),
-    stackalytics_ssh_private_key => hiera('stackalytics_ssh_private_key_contents'),
-  }
-}
-
BREAKS HERE
-  if $::nfs::client::effective_client_packages != undef {
-    package { $::nfs::client::effective_client_packages:
BREAKS HERE
-  $plugins = "${root_path}/plugins"
-
-  file { "rbenv::plugins ${user}":
-    ensure  => directory,
-    path    => $plugins,
-    owner   => $user,
-    group   => $group,
-    require => Exec["rbenv::checkout ${user}"],
-  }
BREAKS HERE
-      ''      => [''],
-      ''      => [''],
BREAKS HERE
-  datadir       => ["${es_dir}/elasticsearch_data"],
-}
BREAKS HERE
-                  match => '([Bb]lue[Pp]rint|[Bb][Pp])\\s*[#:]?\\s*(\\S+)',
BREAKS HERE
-    command => "wget -q -O - ${syslinux_archive} | tar -xz -C /usr/local/src",
BREAKS HERE
-class shorewall::rules::out::xmppp {
BREAKS HERE
-    $puppet_major_version = hiera('puppet_major_version', undef),
-        server               => $puppetmaster,
-        dns_alt_names        => $dns_alt_names,
-        environment          => $environment,
-        puppet_major_version => $puppet_major_version,
BREAKS HERE
-$elasticsearch_nodes = hiera_array('elasticsearch_nodes')
BREAKS HERE
-    $wmflabsdotorg_admin = hiera('profile::openstack::eqiad1::designate::wmflabsdotorg_admin'),
-    $wmflabsdotorg_pass = hiera('profile::openstack::eqiad1::designate::wmflabsdotorg_pass'),
-    $wmflabsdotorg_project = hiera('profile::openstack::eqiad1::designate::wmflabsdotorg_project'),
-        wmflabsdotorg_admin                  => $wmflabsdotorg_admin,
-        wmflabsdotorg_pass                   => $wmflabsdotorg_pass,
-        wmflabsdotorg_project                => $wmflabsdotorg_project,
BREAKS HERE
-    firewall { '998 log all':
BREAKS HERE
-        'mw1099.eqiad.wmnet' => 'mwdebug1001.eqiad.wmnet',
-        backend_regexp  => '^((mwdebug1001)\.eqiad\.wmnet|(mwdebug2001|mwdebug2002)\.codfw\.wmnet)',
BREAKS HERE
-    include ::standard
-
BREAKS HERE
-  $ensure               = present,
-  $spool_dir            = undef,
-  $order                = '10',
-  validate_integer ( $order )
-    object_name => $name,
BREAKS HERE
-    default_mods        => ['php', 'cgi', 'authn_file', 'auth_basic', 'authz_user'],
BREAKS HERE
-  $ensure              = running,
-  $ssh_port            = '22',
-  $monitoring_port     = 0,
-  $run_in_background   = True,
BREAKS HERE
-    group { 'tcpircbot': }
BREAKS HERE
-    } else {
-        file { "/etc/ssl/private/${name}.key":
-            ensure  => absent,
-        }
BREAKS HERE
-    require ::profile::openstack::codfw1dev::clientpackages
BREAKS HERE
-        all_puppetmasters   => $all_puppetmasters,
BREAKS HERE
-    require ::profile::base
BREAKS HERE
-
-    interface::ip { 'lists.wikimedia.org_v4':
-        interface => 'eth0',
-        address   => $lists_ip[0],
-        prefixlen => '32',
-    }
-
-    interface::ip { 'lists.wikimedia.org_v6':
-        interface => 'eth0',
-        address   => $lists_ip[1],
-        prefixlen => '128',
BREAKS HERE
-      command => '/usr/bin/python -W ignore::DeprecationWarning /usr/lib/python2.6/site-packages/graphite/manage.py syncdb --noinput',
BREAKS HERE
-        # Use php7.2 from Ondrej Sury's repository.
-                dist       => "${::lsbdistcodename}-wikimedia",
-                components => 'thirdparty/php72',
BREAKS HERE
-  $clusterWare             = false,
-          clusterware             => $clusterWare,
-          clusterware             => $clusterWare,
BREAKS HERE
-    $active_redis_ip = ipresolve($active_redis 4, $::nameservers[0])
BREAKS HERE
-  include ocf_puppet::puppetmaster
BREAKS HERE
-        name   => 'apache2',
BREAKS HERE
-  class { 'ocf::common::networking': octet => 205 }
BREAKS HERE
-    file { '/lib/udev/rules.d/80-swift-disks.rules':
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0444',
-        source => 'puppet:///modules/swift/80-swift-disks.rules',
-        notify => Exec['swift_udev_reload'],
-    }
-
-    exec { 'swift_udev_reload':
-        command     => '/sbin/udevadm control --reload && /sbin/udevadm trigger',
-        refreshonly => true,
BREAKS HERE
-            'baseurl'  => 'https://trunk.rdoproject.org/centos7-mitaka/ac/bd/acbdb030430df2af7d0e884ea7a2851e99b42944_a4c7ab2d/',
-            'baseurl'  => 'http://buildlogs.centos.org/centos/7/cloud/$basearch/openstack-liberty/',
-            'descr'    => 'Liberty delorean-deps',
BREAKS HERE
-    port     => 443,
BREAKS HERE
-                          ${labweb_ips} ${labweb_aaaa})
BREAKS HERE
-    # We also need to know where the puppet repo is. We cannot require a profile
-    # here because the puppet classes are not well structured. TODO: fix this
-    # and transform the git dir into a parameter
-    require ::puppetmaster::base_repo
-
-        target => "${::puppetmaster::base_repo::gitdir}/operations/puppet/conftool-data",
BREAKS HERE
-    file { '/usr/local/lib/nagions/plugins/service_checker':
BREAKS HERE
-# Disable SSL (workaround for Xenial)
-if ($::operatingsystem == 'Ubuntu') and (versioncmp($::operatingsystemmajrelease, '16') >= 0) {
-  $ssl_enabled = false
-} else {
-  $ssl_enabled = true
-}
-
-  ssl  => $ssl_enabled,
BREAKS HERE
-  $gerrit_url = '',
-  $gerrit_port = '',
-  $gerrit_user = '',
-  $reviewday_rsa_key_contents = '',
-  $reviewday_rsa_pubkey_contents = '',
-  $reviewday_gerrit_ssh_key = '',
-  $git_url = '',
-  $httproot = '',
-  $serveradmin = ''
-  if $reviewday_rsa_key_contents != '' {
-  if $reviewday_rsa_pubkey_contents != '' {
-  if $reviewday_gerrit_ssh_key != '' {
BREAKS HERE
-    class { '::profile::wikilabels::server':
BREAKS HERE
-  # define packages required by the exec resources
-  if !defined(Package['wget']) {
-    package { 'wget': ensure => present }
-  # download RPM
-  exec { 'download java RPM':
-    path    => '/usr/bin',
-    cwd     => '/usr/java',
-    creates => "/usr/java/${oracle_java::filename}",
-    command => "wget --no-cookies --no-check-certificate --header \"Cookie: oraclelicense=accept-securebackup-cookie\" \"${oracle_java::downloadurl}\"",
-    timeout => 0, # Oracle's servers can sometimes be (very) slow
-    require => Package['wget']
BREAKS HERE
-    # Unfortunately priority does not allows to use apache::site for this
-    # Purging the package installed puppetmaster site
-    file { '/etc/apache2/site-enabled/puppetmaster':
-        ensure  => absent,
-        require => Package['puppetmaster-passenger'],
BREAKS HERE
-
-    # Make sure wmf-beta-autoupdate can run the l10n updater as l10nupdate
-    sudo_user { 'mwdeploy' :
-        privileges => [
-            'ALL = (l10nupdate) NOPASSWD:/usr/local/bin/mw-update-l10n',
-            'ALL = (l10nupdate) NOPASSWD:/usr/local/bin/mwscript',
-            'ALL = (l10nupdate) NOPASSWD:/usr/local/bin/refreshCdbJsonFiles',
-            # Some script running as mwdeploy explicily use "sudo -u mwdeploy"
-            # which makes Ubuntu to request a password. The following rule
-            # make sure we are not going to ask the password to mwdeploy when
-            # it tries to identify as mwdeploy.
-            'ALL = (mwdeploy) NOPASSWD: ALL',
-
-            # mergeMessageFileList.php is run by mw-update-l10n as the apache user
-            # since https://gerrit.wikimedia.org/r/#/c/44548/
-            # Let it runs mwscript and others as apache user.
-            'ALL = (apache) NOPASSWD: ALL',
-        ]
-    }
BREAKS HERE
-    ensure => file,
-    notify => Service['icinga2'],
BREAKS HERE
-    ocf::repackage { ['nvidia-driver', 'libgl1-nvidia-glx:i386']:
-    package { ['xserver-xorg-video-nvidia', 'nvidia-settings', 'nvidia-cuda-toolkit', 'nvidia-cuda-mps']:; }
BREAKS HERE
-            watch_keys => "/discovery/${discovery}",
BREAKS HERE
-        command => "/usr/bin/pg_dumpall | gzip > ${path}/psql-all-dbs-$(date '+%Y%m%d').sql.gz",
BREAKS HERE
-# [*file_path*] What file within that document root do we need?
BREAKS HERE
-#   String. It defines the service helper like idmapd for servers configured with
BREAKS HERE
-  String                                           $password,
-  Enum['absent', 'present']                        $ensure                 = present,
-  Stdlib::Host                                     $host                   = '127.0.0.1',
-  Stdlib::Port::Unprivileged                       $port                   = 3306,
-  Optional[Stdlib::Absolutepath]                   $socket_path            = undef,
-  String                                           $user                   = 'icinga',
-  String                                           $database               = 'icinga',
-  Boolean                                          $enable_ssl             = false,
-  Enum['none', 'puppet']                           $pki                    = 'puppet',
-  Optional[Stdlib::Absolutepath]                   $ssl_key_path           = undef,
-  Optional[Stdlib::Absolutepath]                   $ssl_cert_path          = undef,
-  Optional[Stdlib::Absolutepath]                   $ssl_cacert_path        = undef,
-  Optional[String]                                 $ssl_key                = undef,
-  Optional[String]                                 $ssl_cert               = undef,
-  Optional[String]                                 $ssl_cacert             = undef,
-  Optional[Stdlib::Absolutepath]                   $ssl_capath             = undef,
-  Optional[String]                                 $ssl_cipher             = undef,
-  Optional[String]                                 $table_prefix           = undef,
-  Optional[String]                                 $instance_name          = undef,
-  Optional[String]                                 $instance_description   = undef,
-  Optional[Boolean]                                $enable_ha              = undef,
-  Optional[Pattern[/^\d+[ms]*$/]]                  $failover_timeout       = undef,
-  Optional[Hash[String,Pattern[/^\d+[dhms]*$/]]]   $cleanup                = undef,
-  Optional[Array]                                  $categories             = undef,
-  Boolean                                          $import_schema          = false,
BREAKS HERE
-        port      => 8000,
-        discovery => 'api-rw'
BREAKS HERE
-      $installer_script_name = 'install-server.sh'
-      $init_scripts = [$service, 'dynaTraceFrontendServer', 'dynaTraceBackendServer']
-  }
-
-  $symlink = "${installer_prefix_dir}/dynatrace"
-    ensure                => uninstalled,
-    installer_script_name => $installer_script_name,
-  }
-  file {'remove_directory':
-    ensure => absent,
BREAKS HERE
-            $package = 'wmf-mariadb101'
-        case $package {
-            $package = 'wmf-mariadb10'
-            require => Package[$package],
BREAKS HERE
-                query           => "scalar(quantile_over_time(0.8,jvm_memory_bytes_used{instance=\"${::hostname}:10080\",area=\"heap\"}[120m]))",
-                query           => "scalar(quantile_over_time(0.8,jvm_memory_bytes_used{instance=\"${::hostname}:10083\",area=\"heap\"}[120m]))",
BREAKS HERE
-  $vardir                      = $::puppet::vardir,
BREAKS HERE
-  include apache
-  apache::vhost { $vhost_name:
-  if ! defined(A2mod['rewrite']) {
-    a2mod { 'rewrite':
-  if ! defined(A2mod['proxy']) {
-    a2mod { 'proxy':
-  if ! defined(A2mod['proxy_http']) {
-    a2mod { 'proxy_http':
-  if ! defined(A2mod['headers']) {
-    a2mod { 'headers':
-      before  => Apache::Vhost[$vhost_name],
-      before  => Apache::Vhost[$vhost_name],
-      before  => Apache::Vhost[$vhost_name],
BREAKS HERE
-    if os_version('debian <= stretch'){
BREAKS HERE
-    define tcdevices($in_bandwidth, $out_bandwidth, $order='100'){
-            line => "${name} ${in_bandwidth} ${out_bandwidth}",
-    define tcrules($source, $destination, $protocol, $ports , $order='1'){
-            line => "# ${name}\n${order} ${source} ${destination} ${protocol} ${ports}",
-    define tcclasses($rate, $ceil, $priority, $options , $order='1'){
-            line => "${name} ${order} ${rate} ${ceil} ${priority} ${options}",
BREAKS HERE
-    before => Package[$package];
BREAKS HERE
-    hour    => 23,
-    hour    => 23,
BREAKS HERE
-    '/opt/jenkins/deploy/.dockercfg':
-      source => 'puppet:///private/dockercfg',
BREAKS HERE
-class osm (
-    $ensure = present,
-){
-    require_package('osm2pgsql', 'osmosis')
BREAKS HERE
-	class { 'eventlogging::supervisor': }
-	class { 'eventlogging::analysis': }
-	class { 'eventlogging::ganglia': }
-	class { 'eventlogging::archive':
-		destinations => $archive_destinations,
-	}
-	class { 'mongodb':
-		dbpath  => '/srv/mongodb',
-		bind_ip => false,
-		auth    => true,
-	}
-	class { 'eventlogging::mediawiki_errors': }
-	package { [
-		'python-jsonschema',
-		'python-mysqldb',
-		'python-pygments',
-		'python-pymongo',
-		'python-sqlalchemy',
-		'python-zmq',
-	]:
-		ensure => present,
-	}
-	systemuser { 'eventlogging':
-		name => 'eventlogging',
-	}
BREAKS HERE
-        content => template('nrpe/check_eth.erb'),
BREAKS HERE
-# == Class: tripleo::network::contrail::control
-# Configure Contrail Control services
-# [*host_ip*]
-#  (required) host IP address of Database node
-#  Defaults to hiera('contrail::disc_server_ip')
-  $host_ip,
-  $disc_server_ip = hiera('contrail::disc_server_ip'),
-  $disc_server_port = hiera('contrail::disc_server_port'),
-  class {'::contrail::database':
-    database_nodemgr_config => {
-      'DEFAULTS'  => {
-        'hostip' => $host_ip,
-      },
-      'DISCOVERY' => {
-        'port'   => $disc_server_port,
-        'server' => $disc_server_ip,
-      },
-    },
BREAKS HERE
-  proxy_set_header Host whitehall-frontend.${::govuk_platform}.alphagov.co.uk;
-  proxy_pass http://whitehall-frontend.${::govuk_platform}.alphagov.co.uk;
-  # nginx::config::vhost::static needs this link to be here
-  # it assumes a file structure of /data/vhost/{app}.{platform}.alphagov.co.uk/shared/public/{app}
-  # but for frontend, it's /data/vhost/www.{platform}.alphagov.co.uk/shared/public/frontend
-  file { "/data/vhost/frontend.${::govuk_platform}.alphagov.co.uk":
-    target => "/data/vhost/www.${::govuk_platform}.alphagov.co.uk",
BREAKS HERE
-  $ossec_server_ip         = undef,
-  $ossec_server_hostname   = undef,
-  $ossec_server_port       = '1514',
-  $ossec_scanpaths         = [],
-  $ossec_emailnotification = 'yes',
-  $ossec_ignorepaths       = [],
-  $ossec_local_files       = $::ossec::params::default_local_files,
-  $ossec_check_frequency   = 79200,
-  $ossec_prefilter         = false,
-  $ossec_service_provider  = $::ossec::params::ossec_service_provider,
-  $selinux                 = false,
-  $agent_name              = $::hostname,
-  $agent_ip_address        = $::ipaddress,
-  $manage_repo             = true,
-  $manage_epel_repo        = true,
-  $agent_package_name      = $::ossec::params::agent_package,
-  $agent_package_version   = 'installed',
-  $agent_service_name      = $::ossec::params::agent_service,
-  $manage_client_keys      = true,
-  $max_clients             = 3000,
-  $ar_repeated_offenders   = '',
-  $service_has_status      = $::ossec::params::service_has_status,
BREAKS HERE
-  # introducing order (archive then update and stop then start service)  
-  service { "Stop the ${role_name}'s service: '${service}'":    #hack to ensure restart service (stop service then start it)  
-    ensure => stopped,
-    name   => $service,
-    enable => true
-  } -> 
-  exec {"Start the service ${service}":
-  }  
BREAKS HERE
-# [*fluentd_pos_file_path*]
-#   (Optional) String.  Path to a directory that will be created
-#   if it does not exist and made writable by the fluentd user.
-  $fluentd_pos_file_path = undef,
-  $fluentd_path_transform = undef
-    if $fluentd_groups {
-      Package<| tag == 'openstack' |>
-      -> user { $::fluentd::config_owner:
-        ensure     => present,
-        groups     => $fluentd_groups,
-        membership => 'minimum',
-        ensure => 'directory',
-        owner  => $::fluentd::config_owner,
-        group  => $::fluentd::config_group,
-        mode   => '0750',
-        command => '/bin/systemctl restart rsyslog',
BREAKS HERE
-      command => "curl --insecure --silent '${swift_ring_get_tempurl}' -o /tmp/swift-rings.tar.gz",
-      returns => [0, 3]
-      command     => "curl --insecure --silent -X PUT '${$swift_ring_put_tempurl}' --data-binary @/tmp/swift-rings.tar.gz",
BREAKS HERE
-  # FIXME: Remove when logstream has been stopped.
-  nginx::log { [
-    'monitoring-json.event.access.log',
-    'monitoring-error.log']:
-    logstream => absent;
-  }
-
-  # FIXME: Remove when deployed.
-  file { [
-    '/etc/nginx/ssl/monitoring.crt',
-    '/etc/nginx/ssl/monitoring.key']:
-    ensure => absent,
-  }
-
BREAKS HERE
-            subjects   => 'archiva.wikimedia.org',
-            puppet_svc => 'nginx',
-            system_svc => 'nginx',
-    }
BREAKS HERE
-      $gweb_pip_hack_source   = "/usr/lib/python2.7/dist-packages/graphite_web-${carbonVersion}-py2.7.egg-info"
-      $gweb_pip_hack_target   = "/opt/graphite/webapp/graphite_web-${carbonVersion}-py2.7.egg-info"
BREAKS HERE
-  $realm,
-  $kdcs = [$::fqdn],
-  $cache_size = 500000,
BREAKS HERE
-    enabled        => 1,
-    enabled        => 1,
BREAKS HERE
-    creates   => $ca_pem,
BREAKS HERE
-    $repodir = hiera('snapshot::dumps::repodir','/srv/dumps')
BREAKS HERE
-      '/var/lib/ceph/data' => {},
BREAKS HERE
-
-  include ulimit
-  ulimit::conf { 'unlimit_etherpad_files':
-    limit_domain => 'eplite',
-    limit_type   => 'hard',
-    limit_item   => 'nofile',
-    limit_value  => '10000'
-  }
BREAKS HERE
-        file { $mount_path:
-            ensure  => absent,
-            force   => true,
-            require => Mount[$mount_path],
BREAKS HERE
-  $ensure           = present,
-  $display_name     = $title,
-  $ranges           = undef,
-  $prefer_includes  = undef,
-  $excludes         = undef,
-  $includes         = undef,
-  $template         = false,
-  $import           = ['legacy-timeperiod'],
-  $target           = undef,
-  $order            = '35',
-  validate_hash ($ranges)
-    object_name => $name,
BREAKS HERE
-#   Valid values are 'apache', 'nginx', 'wsgionly' and 'none'. 'nginx' is only
-#   supported on Debian-like systems.
-# [*gr_apache_port*]
-#   The port to run graphite web server on.
-#   Default is 80.
-# [*gr_apache_port_https*]
-#   The port to run SSL web server on if you have an existing web server on
-#   the default port 443.
-#   Default is 443.
-#   Default: 0.9.12
-#   Default: 0.9.12
-#   Default: 0.9.12
-  $gr_web_group                           = $graphite::params::web_group,
-  $gr_web_user                            = $graphite::params::web_user,
-  $gr_apache_port                         = 80,
-  $gr_apache_port_https                   = 443,
-  $gr_prefetch_cache                      = undef
-  validate_integer($gr_apache_port)
-  validate_integer($gr_apache_port_https)
BREAKS HERE
-    $should_run = ($::hostname != $active_proxy)
-        ensure    => $should_run,
-        refresh   => true,
-        systemd   => true,
-        upstart   => true,
-        subscribe => [File['/usr/local/sbin/kube2proxy'],File['/var/lib/kubernetes/ssl/certs/ca.pem']],
BREAKS HERE
-# == Class: os_hardening::login_defs
-#
-# Configures the login.defs.
-#
BREAKS HERE
-  validate_array($import)
-  if $groups { validate_array($groups) }
-    groups                => $groups,
BREAKS HERE
-                File['/var/cache/squid-in-a-can'],
-                File['/var/log/squid-in-a-can'],
-               ],
BREAKS HERE
-    package { 'ferm':
BREAKS HERE
-      command => '/usr/bin/python /usr/lib/python2.6/site-packages/graphite/manage.py syncdb --noinput',
BREAKS HERE
-      notify => Class['Govuk_jenkins::Reload'],
BREAKS HERE
-      class { 'puppet::agent::service::daemon':  enabled => true  }
-      class { 'puppet::agent::service::cron':    enabled => false }
-      class { 'puppet::agent::service::systemd': enabled => false }
-      class { 'puppet::agent::service::daemon':  enabled => false }
-      class { 'puppet::agent::service::cron':    enabled => true  }
-      class { 'puppet::agent::service::systemd': enabled => false }
-    'systemd.timer': {
-      class { 'puppet::agent::service::daemon':  enabled => false }
-      class { 'puppet::agent::service::cron':    enabled => false }
-      class { 'puppet::agent::service::systemd': enabled => true  }
-      class { 'puppet::agent::service::daemon':  enabled => false }
-      class { 'puppet::agent::service::cron':    enabled => false }
-      class { 'puppet::agent::service::systemd': enabled => false }
BREAKS HERE
-	$phpprefix = $operatingsystem ? {
BREAKS HERE
-    ensure    => $ensure,
-    enable    => $enable,
-    restart   => "service ${service_name} reload",
-    hasstatus => true,
BREAKS HERE
-  ffnord::named::mesh { "${mesh_code}":
-    mesh_ipv4_address => $mesh_ipv4_address,
-    mesh_ipv4_prefix  => $mesh_ipv4_prefix,
-    mesh_ipv4_prefixlen => $mesh_ipv4_prefixlen,
-    mesh_ipv6_address => $mesh_ipv6_address,
-    mesh_ipv6_prefix  => $mesh_ipv6_prefix,
-    mesh_ipv6_prefixlen => $mesh_ipv6_prefixlen;
BREAKS HERE
-                  'Define["prometheus::jmx_exporter_instance"]',
BREAKS HERE
-if ($::os['name'] == 'Fedora') or
BREAKS HERE
-# [*pki*]
-#   Provides multiple sources for the certificate, key and ca. Valid parameters are 'puppet' or 'none'.
-#   'puppet' copies the key, cert and CAcert from the Puppet ssl directory to the certs directory
-#   /var/lib/icinga2/certs on Linux and C:/ProgramData/icinga2/var/lib/icinga2/certs on Windows.
-#   'none' does nothing and you either have to manage the files yourself as file resources
-#   or use the ssl_key, ssl_cert, ssl_cacert parameters. Defaults to puppet.
-#
-#   Location of the private key. Default depends on platform:
-#   /var/lib/icinga2/certs/IdoMysqlConnection_ido-mysql.key on Linux
-#   C:/ProgramData/icinga2/var/lib/icinga2/certs/IdoMysqlConnection_ido-mysql.key on Windows
-#   Location of the certificate. Default depends on platform:
-#   /var/lib/icinga2/certs/IdoMysqlConnection_ido-mysql.crt on Linux
-#   C:/ProgramData/icinga2/var/lib/icinga2/certs/IdoMysqlConnection_ido-mysql.crt on Windows
-#   Location of the CA certificate. Default is:
-#   /var/lib/icinga2/certs/IdoMysqlConnection_ido-mysql_ca.crt on Linux
-#   C:/ProgramData/icinga2/var/lib/icinga2/certs/IdoMysqlConnection_ido-mysql_ca.crt on Windows
-#   The private key in a base64 encoded string to store in cert directory, file is stored to
-#   path spicified in ssl_key_path. This parameter requires pki to be set to 'none'.
-#   The certificate in a base64 encoded string to store in cert directory, file is  stored to
-#   path spicified in ssl_cert_path. This parameter requires pki to be set to 'none'.
-#   The CA root certificate in a base64 encoded string to store in cert directory, file is stored
-#   to path spicified in ssl_cacert_path. This parameter requires pki to be set to 'none'.
-  Enum['none', 'puppet']                      $pki                    = 'puppet',
-    if $ssl_key_path {
-      $_ssl_key_path = $ssl_key_path}
-    else {
-      $_ssl_key_path = "${ssl_dir}/IdoMysqlConnection_ido-mysql.key" }
-    if $ssl_cert_path {
-      $_ssl_cert_path = $ssl_cert_path }
-    else {
-      $_ssl_cert_path = "${ssl_dir}/IdoMysqlConnection_ido-mysql.crt" }
-    if $ssl_cacert_path {
-      $_ssl_cacert_path = $ssl_cacert_path }
-    else {
-      $_ssl_cacert_path = "${ssl_dir}/IdoMysqlConnection_ido-mysql_ca.crt" }
-    $attrs_ssl = {
-      enable_ssl => $enable_ssl,
-      ssl_ca     => $_ssl_cacert_path,
-      ssl_cert   => $_ssl_cert_path,
-      ssl_key    => $_ssl_key_path,
-      ssl_capath => $ssl_capath,
-      ssl_cipher => $ssl_cipher,
-    case $pki {
-      'puppet': {
-        file { $_ssl_key_path:
-          ensure => file,
-          mode   => $_ssl_key_mode,
-          source => $::icinga2_puppet_hostprivkey,
-          tag    => 'icinga2::config::file',
-        }
-        file { $_ssl_cert_path:
-          ensure => file,
-          source => $::icinga2_puppet_hostcert,
-          tag    => 'icinga2::config::file',
-        }
-        file { $_ssl_cacert_path:
-          ensure => file,
-          source => $::icinga2_puppet_localcacert,
-          tag    => 'icinga2::config::file',
-        }
-      } # puppet
-      'none': {
-        if $ssl_key {
-          $_ssl_key = $::osfamily ? {
-            'windows' => regsubst($ssl_key, '\n', "\r\n", 'EMG'),
-            default   => $ssl_key,
-          }
-          file { $_ssl_key_path:
-            ensure  => file,
-            mode    => $_ssl_key_mode,
-            content => $_ssl_key,
-            tag     => 'icinga2::config::file',
-          }
-        }
-        if $ssl_cert {
-          $_ssl_cert = $::osfamily ? {
-            'windows' => regsubst($ssl_cert, '\n', "\r\n", 'EMG'),
-            default   => $ssl_cert,
-          }
-          file { $_ssl_cert_path:
-            ensure  => file,
-            content => $_ssl_cert,
-            tag     => 'icinga2::config::file',
-          }
-        }
-        if $ssl_cacert {
-          $_ssl_cacert = $::osfamily ? {
-            'windows' => regsubst($ssl_cacert, '\n', "\r\n", 'EMG'),
-            default   => $ssl_cacert,
-          }
-          file { $_ssl_cacert_path:
-            ensure  => file,
-            content => $_ssl_cacert,
-            tag     => 'icinga2::config::file',
-          }
-        }
-      } # none
-    } # case pki
-
-      command => "mysql -h ${host} -P ${port} -u ${user} -p'${password}' ${database} < ${ido_mysql_schema}",
-      unless  => "mysql -h ${host} -P ${port} -u ${user} -p'${password}' ${database} -Ns -e 'select version from icinga_dbversion'",
BREAKS HERE
-
-        # package doesn't come with /etc/ dir
-        file { '/etc/rawdog':
-            ensure => 'directory'
-        }
BREAKS HERE
-        content => template('profile/analytics/refinery/job/refinery-sqoop-mediawiki.sh.erb'),
BREAKS HERE
-        "${puppetmaster::gitdir}/operations/software":
-            ensure  => directory,
-            owner   => 'gitpuppet',
-            group   => 'root',
-            require => File["${puppetmaster::gitdir}/operations"];
-            require     => File["${puppetmaster::gitdir}/operations/software"],
BREAKS HERE
-      file { '/etc/cron.daily/push_attachments_to_s3':
-      mode    => '0744',
BREAKS HERE
-  nginx::config::vhost::licensify_post{ "post.licensify.${::govuk_platform}.alphagov.co.uk": to_port => $port}
BREAKS HERE
-class munin::client {
BREAKS HERE
-      'set JAVA_ARGS \'"-Djava.awt.headless=true -Djava.net.preferIPv4Stack=true -Xmx1024m"\'',
BREAKS HERE
-    setup_cell0 => true,
-  }
-  class { '::nova::db::sync_cell_v2':
-    transport_url => $transport_url,
-  }
BREAKS HERE
-    $service_defaults = {
-      ensure     => running,
-      enable     => true,
-      hasrestart => $::nfs::client_services_hasrestart,
-      hasstatus  => $::nfs::client_services_hasstatus,
-      subscribe  => $subscription
-    }
-    create_resources('service', $::nfs::effective_nfsv4_client_services, $service_defaults )
-      $subscrition  = [ Concat[$::nfs::exports_file] ]
-      $subscriptipn = []
-    }
-      $service_defaults = {
-        ensure     => running,
-        enable     => true,
-        hasrestart => $::nfs::client_services_hasrestart,
-        hasstatus  => $::nfs::client_services_hasstatus,
-        subscribe  => $subscription
-    create_resources('service', $::nfs::effective_client_services, $service_defaults )
BREAKS HERE
-    if ! defined(File["${userBaseDir}/${user}/.bash_profile"]) {
-      file { "${userBaseDir}/${user}/.bash_profile":
-        ensure  => present,
-        content => template("oradb/bash_profile.erb"),
-        mode    => '0775',
-        owner   => $user,
-        group   => $group,
-        require => Oradb::Utils::Structure["oracle structure ${version}"],
BREAKS HERE
-    Class['::statistics::web'] -> Class['::statistics::sites::datasets']
-    $site_name       = 'metrics.wikimedia.org'
-    $redirect_target = 'https://metrics.wmflabs.org/'
-
-    apache::site { $site_name:
BREAKS HERE
-    default => $::bacula_db_user,
BREAKS HERE
-  anchor {'puppet::master::package::begin':
-      before => [
-          Class['puppet::repository'],
-          Class['nginx'],
-          Class['unicornherder'],
-          ]
-  }
-  include puppet::repository
-  include nginx
-  include unicornherder
-
-  anchor {'puppet::master::package::end':
-      require => [
-          Class['puppet::repository'],
-          Class['nginx'],
-          Class['unicornherder'],
-          ]
-  }
-    include puppet::master::package, puppet::master::config, puppet::master::service
-    anchor {'puppet::master::begin':
-        before => [
-            Class['puppet::master::package'],
-            Class['puppet::master::config'],
-            Class['puppet::master::service'],
-        ]
-    }
-    anchor {'puppet::master::end':
-        subscribe => [
-            Class['puppet::master::package'],
-            Class['puppet::master::config'],
-            Class['puppet::master::service'],
-        ]
-    }
BREAKS HERE
-    $country = '',
-    $state = '',
-    $locality = '',
-    $organization = '',
-    $unit = '',
-    $email = '',
BREAKS HERE
-            }
BREAKS HERE
-        nrpe_command => '/usr/local/lib/nagios/plugins/check_pybal',
BREAKS HERE
-    include ::designate::backend::bind9
BREAKS HERE
-        log         => '/var/log/messages',
-        log         => '/var/log/secure',
-        log         => '/var/log/maillog',
-        log         => '/var/adm/messages',
-        log         => '/var/log/authlog',
-        log         => '/var/log/mail.log',
-  
BREAKS HERE
-  $file = '/root/.bashrc_profile'
BREAKS HERE
-class govuk_sysdig(
-  ensure_packages( [ "linux-headers-${::kernelrelease}" ] )
-    ensure  => 'installed',
BREAKS HERE
-#    (optional) A URL representing the messaging driver to use and its full
-#    configuration. Transport URLs take the form:
-#      transport://user:pass@host1:port[,hostN:portN]/virtual_host
-#    Defaults to $::os_service_default
-# == keystone authentication options
-#
-# [*auth_uri*]
-#   (Optional) Specifies the public Identity URI for Heat to use.
-#   Located in heat.conf.
-#   Defaults to: 'http://127.0.0.1:5000/'.
-#
-# [*identity_uri*]
-#   (Optional) Specifies the admin Identity URI for Heat to use.
-#   Located in heat.conf.
-#   Defaults to: 'http://127.0.0.1:35357/'.
-#
-# [*auth_plugin*]
-#   Specifies the plugin used for authentication.
-#   Defaults to undef.
-#
-# [*keystone_user*]
-#   Defaults to 'heat'.
-#
-# [*keystone_tenant*]
-#   Defaults to 'services'.
-#
-# [*keystone_password*]
-#
-# [*keystone_project_domain_name*]
-#   Specifies the project domain of Keystone account for "password" auth_plugin.
-#   Defaults to 'Default'.
-#
-# [*keystone_user_domain_id*]
-#   (Optional) Domain ID of the principal if the principal has a domain.
-#   Defaults to: $::os_service_default.
-#
-# [*keystone_user_domain_name*]
-#   Defaults to 'Default'.
-#
-# [*keystone_project_domain_id*]
-#   (Optional) Domain ID of the scoped project if auth is project-scoped.
-#   Defaults to: $::os_service_default.
-#
-# [*memcached_servers*]
-#   (optinal) a list of memcached server(s) to use for caching. If left
-#   undefined, tokens will instead be cached in-process.
-#   Defaults to $::os_service_default.
-#
-  $auth_uri                           = 'http://127.0.0.1:5000/',
-  $identity_uri                       = 'http://127.0.0.1:35357/',
-  $auth_plugin                        = undef,
-  $keystone_user                      = 'heat',
-  $keystone_tenant                    = 'services',
-  $keystone_password                  = false,
-  $keystone_project_domain_id         = $::os_service_default,
-  $keystone_project_domain_name       = 'Default',
-  $keystone_user_domain_id            = $::os_service_default,
-  $keystone_user_domain_name          = 'Default',
-  $memcached_servers                  = $::os_service_default,
-  if $auth_plugin {
-    if $auth_plugin == 'password' {
-      heat_config {
-        'keystone_authtoken/auth_url':            value => $identity_uri;
-        'keystone_authtoken/auth_plugin':         value => $auth_plugin;
-        'keystone_authtoken/username':            value => $keystone_user;
-        'keystone_authtoken/password':            value => $keystone_password, secret => true;
-        'keystone_authtoken/user_domain_id':      value => $keystone_user_domain_id;
-        'keystone_authtoken/user_domain_name':    value => $keystone_user_domain_name;
-        'keystone_authtoken/project_name':        value => $keystone_tenant;
-        'keystone_authtoken/project_domain_id':   value => $keystone_project_domain_id;
-        'keystone_authtoken/project_domain_name': value => $keystone_project_domain_name;
-      }
-    } else {
-      fail('Currently only "password" auth_plugin is supported.')
-    }
-  } else {
-    warning('"admin_user", "admin_password", "admin_tenant_name" configuration options are deprecated in favor of auth_plugin and related options')
-    heat_config {
-      'keystone_authtoken/auth_uri':          value => $auth_uri;
-      'keystone_authtoken/identity_uri':      value => $identity_uri;
-      'keystone_authtoken/admin_tenant_name': value => $keystone_tenant;
-      'keystone_authtoken/admin_user':        value => $keystone_user;
-      'keystone_authtoken/admin_password':    value => $keystone_password, secret => true;
-    }
-  }
-    'trustee/auth_url':            value => $identity_uri;
-    'trustee/username':            value => $keystone_user;
-    'trustee/password':            value => $keystone_password, secret => true;
-    'trustee/project_domain_name': value => $keystone_project_domain_name;
-    'trustee/user_domain_name':    value => $keystone_user_domain_name;
-
-    'clients_keystone/auth_uri': value => $identity_uri;
-    'clients_heat/url':          value => $heat_clients_url;
-    'keystone_authtoken/memcached_servers': value => join(any2array($memcached_servers), ',');
BREAKS HERE
-#   Defaults to warning.
-  Enum['absent', 'present']                         $ensure   = present,
-  Enum['debug', 'information', 'notice', 'warning'] $severity = 'warning',
BREAKS HERE
-    group { 'eventlog':
-        ensure => 'present',
-        system => true,
-    if ! defined(File['/etc/eventlogging']) {
-    if ! defined(File['/var/log/eventlogging']) {
BREAKS HERE
-#   Class[nrpe::packages]
-define nrpe::check($command) {
-    Class[nrpe::packages] -> Nrpe::Check[$title]
-
-    file { "/etc/nagios/nrpe.d/${title}.cfg":
-        owner   => root,
-        group   => root,
-        notify  => Service['nagios-nrpe-server']
BREAKS HERE
-    Class['tripleo::firewall::pre'] -> Class['tripleo::firewall::post']
BREAKS HERE
-        $path         = $downloadDir
-
-    if ! defined(File[$path]) {
-      file { $path :
-        path          => $path,
-          require     => File[$path],
-          require     => File[$path],
-          require     => File[$path],
-          command     => "/bin/sh -c 'unset DISPLAY;${path}/database/runInstaller -silent -waitforcompletion -responseFile ${path}/db_install_${version}.rsp'",
-          command     => "/bin/sh -c 'unset DISPLAY;${path}/database/runInstaller -silent -waitforcompletion -responseFile ${path}/db_install_${version}.rsp'",
-          command     => "/bin/sh -c 'unset DISPLAY;${path}/database/runInstaller -silent -waitforcompletion -responseFile ${path}/db_install_${version}.rsp'",
BREAKS HERE
-# FIXME: This class needs better documentation as per https://docs.puppetlabs.com/guides/style_guide.html#puppet-doc
BREAKS HERE
-  $channel_file,
-  $vhost_name = $::fqdn,
-  $ssh_rsa_key_contents = undef,
BREAKS HERE
-  # enforcer will probably depend on cups-tea4cups in the future
-  package { ['cups-tea4cups', 'enforcer']: }
-      require => Package['cups-tea4cups', 'enforcer'];
-      ensure => directory,
-      mode   => '0500';
-      source => 'puppet:///private/enforcer/enforcer.conf';
BREAKS HERE
-    ensure   => $ensure,
BREAKS HERE
-  $vhost_name = $::fqdn,
-  $docroot = '/srv/etherpad-lite',
-  $serveradmin = "webmaster@${::fqdn}",
-  $ssl_cert_file = '',
-  $ssl_key_file = '',
-  $ssl_chain_file = '',
-  $ssl_cert_file_contents = '', # If left empty puppet will not create file.
-  $ssl_key_file_contents = '', # If left empty puppet will not create file.
-  $ssl_chain_file_contents = '' # If left empty puppet will not create file.
BREAKS HERE
-        source => 'puppet:///modules/labstore/monitor/check_drbd_status',
-        source => 'puppet:///modules/labstore/monitor/check_drbd_role',
-        source => 'puppet:///modules/labstore/monitor/check_drbd_cluster_ip',
-        source => 'puppet:///modules/labstore/monitor/check_nfs_status',
BREAKS HERE
-    $tmpl       = undef,
-        content => template($tmpl),
BREAKS HERE
-  package { 's3cmd':
BREAKS HERE
-# [$deployment_applications]
-    'app_domain' => $app_domain
BREAKS HERE
-# [*errbit_environment_name*]
-#   Errbit environment name, one of preview, staging or production
-#   Default: ''
-#
-  $errbit_environment_name = undef,
-    govuk::app::envvar {
-    "${title}-ERRBIT_API_KEY":
-      value   => $errbit_api_key;
-    "${title}-ERRBIT_ENVIRONMENT_NAME":
-      varname => 'ERRBIT_ENVIRONMENT_NAME',
-      value   => $errbit_environment_name;
BREAKS HERE
-  $asterisk_conf_source = '',
-  $modules_conf_source  = '',
-  include asterisk::server::command
BREAKS HERE
-  nginx::config::vhost::proxy { 'graphite':
-    to           => ['graphite.cluster'],
-    aliases      => ['graphite.*', 'grafana', 'grafana.*'],
-    ssl_only     => true,
-    ssl_certtype => 'wildcard_publishing',
-    protected    => false,
-    root         => '/dev/null',
BREAKS HERE
-  
-      service => $service;
-      secret => "/etc/google-authenticator/\${USER}/google_authenticator",
BREAKS HERE
-    $cluster_options={},
BREAKS HERE
-        command => '/bin/true',
BREAKS HERE
-    notice("Oops this is not what I EXPECT")
BREAKS HERE
-# [*trusts_delegated_roles*]
-#   (optional) Array of trustor roles to be delegated to heat.
-#   Defaults to ['heat_stack_owner']
-#
-  $trusts_delegated_roles        = ['heat_stack_owner'],
-  $configure_delegated_roles     = true,
BREAKS HERE
-  String                         $edition                       = undef,
BREAKS HERE
-    sysadmins                    => hiera('sysadmins', []),
BREAKS HERE
-  $options = {}
-    $sshd_options_motd
BREAKS HERE
-    if ($csr_content =~ /CERTIFICATE REQUEST/) {
BREAKS HERE
-  include iptables::params
-    ensure     => directory,
-    require    => Package['iptables'],
BREAKS HERE
-        # FIXME - top-scope var without namespace, will break in puppet 2.8
-        # lint:ignore:variable_scope
-        'bgp-peer-address' => $hostname ? {
-        # lint:endignore
BREAKS HERE
-    file { '/etc/security/limits.d/graphite.conf':
-        source => 'puppet:///modules/graphite/graphite.limits.conf',
-    }
-
BREAKS HERE
-      command   => 'service mysql start --wsrep_cluster_address=gcomm://',
BREAKS HERE
-        'path'    => '/usr/share/smokeping',
-        'require' => 'all granted',
BREAKS HERE
-include ::openstack_integration::glance
-  horizon => true,
BREAKS HERE
-        ensure  => 'latest',
-        ensure  => 'present',
-            ensure => 'directory',
-            ensure => 'directory',
-            hour    => 1,
-            minute  => 0,
-        ensure  => 'file',
BREAKS HERE
-      $backend_package = $::cinder::params::psycopg_package_name
BREAKS HERE
-                    Exec['concat-bacula-keypair'],
BREAKS HERE
-          extracted_patch_dir     => "${downloadDir}/${patchId}",
-          extracted_patch_dir     => "${downloadDir}/${patchId}",
-}
BREAKS HERE
-  $real_extensions = hiera_hash('php::extensions', $extensions)
BREAKS HERE
-      ensure   => present,
-      template => template('collectd/etc/collectd/conf.d/graphite.conf.erb'),
BREAKS HERE
-    'pecl'  => concat(["set .anon/extension '${name}.so'"], $config),
BREAKS HERE
-  $etcd_image_version = 'v3.0.13'
BREAKS HERE
-#
-# [*public_address*]
-#   (Optional) Public address for endpoint.
-#   Defaults to '127.0.0.1'.
-#
-# [*admin_address*]
-#   (Optional) Admin address for endpoint.
-#   Defaults to '127.0.0.1'.
-#
-# [*internal_address*]
-#   (Optional) Internal address for endpoint.
-#   Defaults to '127.0.0.1'.
-#
-# [*port*]
-#   (Optional) Port for endpoint.
-#   Defaults to '8000'.
-#
-# [*version*]
-#   (Optional) Version for API.
-#   Defaults to 'v1'
-#   (Optional) Protocol for public endpoint.
-#   Defaults to 'http'.
-# [*admin_protocol*]
-#   (Optional) Protocol for admin endpoint.
-#   Defaults to 'http'.
-#   (Optional) Protocol for internal endpoint.
-#   Defaults to 'http'.
-  $public_address       = '127.0.0.1',
-  $admin_address        = '127.0.0.1',
-  $internal_address     = '127.0.0.1',
-  $port                 = '8000',
-  $version              = 'v1',
-  $public_protocol      = 'http',
-  $admin_protocol       = 'http',
-  $internal_protocol    = 'http',
-  if $service_name == undef {
-    $real_service_name = $auth_name
-    $real_service_name = $service_name
-    public_url          => "${public_protocol}://${public_address}:${port}/${version}/",
-    admin_url           => "${admin_protocol}://${admin_address}:${port}/${version}/",
-    internal_url        => "${internal_protocol}://${internal_address}:${port}/${version}/",
BREAKS HERE
-  access_log /var/log/nginx/assets-origin.digital.cabinet-office.gov.uk-access.log timed_combined;
-    $json_access_log:
-    $access_log:
-      logstream => false;
-    $error_log:
BREAKS HERE
-  exec { "git config --global user.name '${::hostname}'":
-  exec { "git config --global user.email ${::hostname}@puppetlabs.vm":
BREAKS HERE
-  ini_setting { 'puppetdb_server':
-  ini_setting { 'puppetdb_port':
BREAKS HERE
-            before   => [Package['npm'], Package['nodejs']],
BREAKS HERE
-  $dbname = 'cinder',
-  $user   = 'cinder'
-  require postgresql::python
-
-  Postgresql::Db[$dbname]    ~> Exec<| title == 'cinder-manage db_sync' |>
-  Package['python-psycopg2'] -> Exec<| title == 'cinder-manage db_sync' |>
-
-  postgresql::db { $dbname:
-    user     => $user,
-    password => $password,
BREAKS HERE
-
-    file { '/srv/downloads':
-        ensure => 'directory',
-        owner  => 'postgres',
-        group  => 'postgres',
-        mode   => '0755',
-    }
BREAKS HERE
-    $_crt_file = shellquote($_crt_file)
BREAKS HERE
-            path => "${::site}.${cluster}.httpd",
BREAKS HERE
-# Parsoid round-trip test result aggregator.
-# === Parameters
-#
-# [*db_name*]
-#   Database name for storing results.
-#
-# [*db_user*]
-#   Database user.
-#
-# [*db_host*]
-#   MySQL host. Default: 'localhost'.
-#
-# [*db_port*]
-#   MySQL port. Default: 3306.
-#
-# [*coord_port*]
-#   The result aggregator will listen on this port. Default: 8002.
-#
-# [*webapp_port*]
-#   The user-facing webapp that displays test results will listen on
-#   this port. Default: 8003.
-#
-class testreduce(
-    $db_name,
-    $db_user,
-    $db_pass,
-    $db_host     = 'localhost',
-    $db_port     = 3306,
-    $coord_port  = 8002,
-    $webapp_port = 8003,
-) {
-    file { '/etc/testreduce/settings.js':
-        content => template('testreduce/settings.js.erb'),
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
-        notify  => Service['testreduce'],
-    }
-
-    file { '/etc/init/testreduce.conf':
-        source => 'puppet:///modules/testreduce/testreduce.upstart.conf',
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0444',
-        notify => Service['testreduce'],
-    }
-
-        notify    => Service['testreduce'],
-    }
-
-    service { 'testreduce':
-        ensure   => running,
-        provider => upstart,
BREAKS HERE
-    attrs       => $attrs,
BREAKS HERE
-      source => "puppet:///modules/munin/openbsd/package/munin_openbsd.tar.gz",
-      owner => root, group => 0, mode => 0600;
-      unless => 'test -d /opt/munin',
-      before => File['/var/run/munin'],
-    ensure => directory,
-    owner => root, group  => 0, mode => 0755;
-    binary => $::operatingsystemrelease ? {
-      '4.3' => '/opt/munin/sbin/munin-node',
-      default => '/usr/local/sbin/munin-node'
-    },
-    restart => '/bin/kill -HUP `/bin/cat /var/run/munin/munin-node.pid`',
-    stop => '/bin/kill `/bin/cat /var/run/munin/munin-node.pid`',
-    start => $::operatingsystemrelease ? {
-      '4.3' => '/opt/munin/sbin/munin-node',
-      default => '/usr/local/sbin/munin-node'
-    },
-    status => 'test -e /var/run/munin/munin-node.pid && (ps ax | egrep -q "^$(cat /var/run/munin/munin-node.pid).*munin-node")',
-    hasstatus => true,
-    hasrestart => true,
-    require => [ File['/var/run/munin'], File['/var/log/munin'] ],
-    minute => 0,
-    hour => 2,
BREAKS HERE
-# [*pacemaker_master*]
-#   (Optional) The master node runs some tasks
-#   one step earlier than others; disable to
-#   the node is not the master.
-
-  $pacemaker_master = true,
-  if $step >= 4 or ($step >= 3 and $pacemaker_master) {
BREAKS HERE
-    require => [
-        Class['unicornherder'],
-        Anchor['puppet::master::begin']
BREAKS HERE
-define graphite::carbon::storage ( $pattern,$retentions){
-    target  => '/etc/carbon/storage-schemas.conf',
-    content => template('graphite/storage-schemas.erb'),
BREAKS HERE
-        /^lvs100(7|10)$/  => 'high-traffic1',
-        /^lvs100(8|11)$/  => 'high-traffic2',
-        /^lvs100(9|12)$/  => 'low-traffic',
BREAKS HERE
-# This module was automatically generated on 2018-05-14 11:08:09
-    version => '3.5.1',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['cloudbees-folder'], Jenkins::Plugin['matrix-project'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '1.92',
-    require => [ Jenkins::Plugin['ant'], Jenkins::Plugin['antisamy-markup-formatter'], Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['dashboard-view'], Jenkins::Plugin['git'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['maven-plugin'], Jenkins::Plugin['structs'], Jenkins::Plugin['token-macro'] ]
-    version => '1.7',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['structs'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['junit'] ]
-    version => '2.2',
-    require => [ Jenkins::Plugin['antisamy-markup-formatter'], Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['junit'], Jenkins::Plugin['matrix-auth'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['windows-slaves'] ]
-    require => [ Jenkins::Plugin['ant'], Jenkins::Plugin['antisamy-markup-formatter'], Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['external-monitor-job'], Jenkins::Plugin['javadoc'], Jenkins::Plugin['junit'], Jenkins::Plugin['ldap'], Jenkins::Plugin['mailer'], Jenkins::Plugin['matrix-auth'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['pam-auth'], Jenkins::Plugin['windows-slaves'] ]
-    version => '2.16.2',
-    require => [  ]
-    version => '2.0.11',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['cloudbees-folder'], Jenkins::Plugin['scm-api'], Jenkins::Plugin['structs'] ]
-    version => '1.18',
-    require => [ Jenkins::Plugin['antisamy-markup-formatter'], Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['external-monitor-job'], Jenkins::Plugin['junit'], Jenkins::Plugin['ldap'], Jenkins::Plugin['mailer'], Jenkins::Plugin['matrix-auth'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['pam-auth'], Jenkins::Plugin['token-macro'], Jenkins::Plugin['windows-slaves'] ]
-    version => '6.1.2',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'] ]
-    version => '1.6.0',
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['maven-plugin'], Jenkins::Plugin['run-condition'], Jenkins::Plugin['token-macro'] ]
-    version => '1.38.1',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['maven-plugin'] ]
-    version => '2.13',
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['maven-plugin'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['junit'], Jenkins::Plugin['matrix-project'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '2.0',
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '1.14',
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '2.58',
-    require => [ Jenkins::Plugin['analysis-core'], Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['junit'], Jenkins::Plugin['mailer'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['script-security'], Jenkins::Plugin['token-macro'], Jenkins::Plugin['workflow-job'], Jenkins::Plugin['workflow-step-api'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '1.18',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['junit'] ]
-    version => '1.39.0',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'], Jenkins::Plugin['git'], Jenkins::Plugin['github'], Jenkins::Plugin['github-api'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['plain-credentials'], Jenkins::Plugin['ssh-agent'], Jenkins::Plugin['structs'], Jenkins::Plugin['token-macro'] ]
-    version => '3.5.1',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'], Jenkins::Plugin['git-client'], Jenkins::Plugin['mailer'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['parameterized-trigger'], Jenkins::Plugin['scm-api'], Jenkins::Plugin['ssh-credentials'], Jenkins::Plugin['structs'], Jenkins::Plugin['token-macro'], Jenkins::Plugin['workflow-scm-step'] ]
-    version => '2.5.0',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'], Jenkins::Plugin['ssh-credentials'], Jenkins::Plugin['structs'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['git-client'] ]
-    version => '1.28.0',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'], Jenkins::Plugin['display-url-api'], Jenkins::Plugin['git'], Jenkins::Plugin['github-api'], Jenkins::Plugin['plain-credentials'], Jenkins::Plugin['scm-api'], Jenkins::Plugin['token-macro'] ]
-    version => '1.86',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['jackson2-api'] ]
-    version => '2.2.3',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'], Jenkins::Plugin['display-url-api'], Jenkins::Plugin['git'], Jenkins::Plugin['github'], Jenkins::Plugin['github-api'], Jenkins::Plugin['scm-api'], Jenkins::Plugin['structs'] ]
-    version => '0.27',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['git'], Jenkins::Plugin['github-api'], Jenkins::Plugin['github-branch-source'], Jenkins::Plugin['mailer'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['workflow-multibranch'] ]
-    require => [ Jenkins::Plugin['antisamy-markup-formatter'], Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['external-monitor-job'], Jenkins::Plugin['junit'], Jenkins::Plugin['ldap'], Jenkins::Plugin['mailer'], Jenkins::Plugin['matrix-auth'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['pam-auth'], Jenkins::Plugin['windows-slaves'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['script-security'], Jenkins::Plugin['token-macro'] ]
-    version => '2.3.1',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['script-security'], Jenkins::Plugin['workflow-cps'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '2.7.3',
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '2.17',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['junit'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['maven-plugin'] ]
-    require => [ Jenkins::Plugin['ant'], Jenkins::Plugin['antisamy-markup-formatter'], Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['external-monitor-job'], Jenkins::Plugin['javadoc'], Jenkins::Plugin['junit'], Jenkins::Plugin['ldap'], Jenkins::Plugin['mailer'], Jenkins::Plugin['matrix-auth'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['pam-auth'], Jenkins::Plugin['windows-slaves'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '1.21',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['structs'] ]
-    version => '1.16',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['mailer'] ]
-    version => '1.20',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['display-url-api'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['junit'] ]
-    version => '1.7',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['cloudbees-folder'], Jenkins::Plugin['icon-shim'] ]
-    version => '1.11',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['junit'], Jenkins::Plugin['script-security'] ]
-    version => '2.17',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['javadoc'], Jenkins::Plugin['junit'], Jenkins::Plugin['mailer'], Jenkins::Plugin['token-macro'] ]
-    version => '2.1',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['scm-api'], Jenkins::Plugin['ssh-credentials'], Jenkins::Plugin['structs'] ]
-    version => '1.69.0',
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '1.3',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['junit'] ]
-    version => '2.35.1',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['conditional-buildstep'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['subversion'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '1.17',
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    require => [ Jenkins::Plugin['ant'], Jenkins::Plugin['antisamy-markup-formatter'], Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['external-monitor-job'], Jenkins::Plugin['javadoc'], Jenkins::Plugin['junit'], Jenkins::Plugin['ldap'], Jenkins::Plugin['mailer'], Jenkins::Plugin['matrix-auth'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['pam-auth'], Jenkins::Plugin['windows-slaves'] ]
-    version => '1.0',
-    require => [ Jenkins::Plugin['ant'], Jenkins::Plugin['antisamy-markup-formatter'], Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['external-monitor-job'], Jenkins::Plugin['javadoc'], Jenkins::Plugin['junit'], Jenkins::Plugin['ldap'], Jenkins::Plugin['mailer'], Jenkins::Plugin['matrix-auth'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['pam-auth'], Jenkins::Plugin['token-macro'], Jenkins::Plugin['windows-slaves'] ]
-    version => '2.2.1',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['structs'] ]
-    version => '1.34',
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '1.15',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'], Jenkins::Plugin['ssh-credentials'], Jenkins::Plugin['workflow-step-api'] ]
-    version => '1.13',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'] ]
-    version => '1.21',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'], Jenkins::Plugin['ssh-credentials'] ]
-    version => '1.10',
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '2.9',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'], Jenkins::Plugin['mapdb-api'], Jenkins::Plugin['scm-api'], Jenkins::Plugin['ssh-credentials'], Jenkins::Plugin['workflow-scm-step'] ]
-    require => [ Jenkins::Plugin['ant'], Jenkins::Plugin['antisamy-markup-formatter'], Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['external-monitor-job'], Jenkins::Plugin['javadoc'], Jenkins::Plugin['junit'], Jenkins::Plugin['ldap'], Jenkins::Plugin['mailer'], Jenkins::Plugin['matrix-auth'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['pam-auth'], Jenkins::Plugin['windows-slaves'] ]
-    version => '1.8.8',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['workflow-step-api'] ]
-    version => '2.3',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['workflow-job'], Jenkins::Plugin['workflow-step-api'] ]
-    version => '1.15',
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '4.63',
-    require => [ Jenkins::Plugin['analysis-core'], Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['dashboard-view'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['maven-plugin'], Jenkins::Plugin['token-macro'] ]
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '2.20',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['scm-api'], Jenkins::Plugin['workflow-step-api'] ]
-    version => '2.40',
-    require => [ Jenkins::Plugin['ace-editor'], Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['jquery-detached'], Jenkins::Plugin['scm-api'], Jenkins::Plugin['script-security'], Jenkins::Plugin['structs'], Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-scm-step'], Jenkins::Plugin['workflow-step-api'], Jenkins::Plugin['workflow-support'] ]
-    version => '2.9',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['cloudbees-folder'], Jenkins::Plugin['git-client'], Jenkins::Plugin['git-server'], Jenkins::Plugin['scm-api'], Jenkins::Plugin['script-security'], Jenkins::Plugin['workflow-cps'], Jenkins::Plugin['workflow-scm-step'] ]
-    version => '2.11.2',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-step-api'], Jenkins::Plugin['workflow-support'] ]
-    version => '2.16',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['branch-api'], Jenkins::Plugin['cloudbees-folder'], Jenkins::Plugin['scm-api'], Jenkins::Plugin['script-security'], Jenkins::Plugin['structs'], Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-cps'], Jenkins::Plugin['workflow-job'], Jenkins::Plugin['workflow-scm-step'], Jenkins::Plugin['workflow-step-api'], Jenkins::Plugin['workflow-support'] ]
-    version => '2.6',
-    require => [ Jenkins::Plugin['workflow-step-api'] ]
-    version => '2.12',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['structs'] ]
-    version => '2.14',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['script-security'], Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-step-api'] ]
-    version => '1.102',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['junit'] ]
BREAKS HERE
-        require => [
-                    Class['postgresql::server'],
-                    Exec["pg_basebackup-${master_server}"],
-                ]
BREAKS HERE
-  $quota_shares = 10,
-  $quota_snapshots = 10,
-  $quota_gigabytes = 1000,
-  $quota_driver = 'manila.quota.DbQuotaDriver'
-    'DEFAULT/quota_shares':    value => $quota_shares;
-    'DEFAULT/quota_snapshots': value => $quota_snapshots;
-    'DEFAULT/quota_gigabytes': value => $quota_gigabytes;
-    'DEFAULT/quota_driver':    value => $quota_driver;
BREAKS HERE
-    $geowiki_host       = hiera('profile::statistics::web::geowiki_host'),
-    class { '::statistics::sites::stats':
-        geowiki_private_data_bare_host => $geowiki_host,
-    }
BREAKS HERE
-            ensure  => 'present',
-            content => 'puppet:///modules/planet/theme/rawdog_style.css';
-            ensure => 'present',
-            source => template('planet/html/rd_feeditem.html.tmpl.erb');
BREAKS HERE
-      resource_params => "master_ip=${ovn_dbs_vip} nb_master_port=${nb_db_port} sb_master_port=${sb_db_port} manage_northd=yes",
BREAKS HERE
-    require   => Package['cgroups'],
-    require   => Package['cgroups'],
BREAKS HERE
-    debian,ubuntu: {
BREAKS HERE
-        crt_content => file($crt_file),
BREAKS HERE
-# [*os_password*]
-#   (required) The keystone tenant:username password.
-#
-#   (optional) The keystone tenant name. Defaults to 'admin'.
-#   (optional) The keystone user name. Defaults to 'admin.
-#   (optional) The keystone auth url. Defaults to 'http://127.0.0.1:5000/v2.0/'.
-#   (optional) The keystone region name. Default is unset.
-
-
-  $os_password,
-  $os_tenant_name = 'admin',
-  $os_username    = 'admin',
-  $os_auth_url    = 'http://127.0.0.1:5000/v2.0/',
-  $os_region_name = undef,
-# TODO: (xarses) This should be moved to a ruby provider so that among other
-#   reasons, the credential discovery magic can occur like in neutron.
-
-  $cinder_env = [
-    "OS_TENANT_NAME=${os_tenant_name}",
-    "OS_USERNAME=${os_username}",
-    "OS_PASSWORD=${os_password}",
-    "OS_AUTH_URL=${os_auth_url}",
-  ]
-
-  if $os_region_name {
-    $region_env = ["OS_REGION_NAME=${os_region_name}"]
-  }
-  else {
-    $region_env = []
-  exec {"cinder type-key ${type} set ${key}=${value}":
-    path        => ['/usr/bin', '/bin'],
-    command     => "cinder type-key ${type} set ${key}=${value}",
-    unless      => "cinder extra-specs-list | grep -Eq '\\b${type}\\b.*\\b${key}\\b.*\\b${value}\\b'",
-    environment => concat($cinder_env, $region_env),
-    require     => Package['python-cinderclient']
BREAKS HERE
-    $cumin_log_path = '/var/log/cumin',
BREAKS HERE
-    # Temporarily disabled, while T159828 is being tested.
-        ensure  => absent,
BREAKS HERE
-    # this probably requires the source repo for the openstack suite
-    # i.e, openstack::commonpackages::ocata or something similar
-    require openstack::clientpackages::anyopenstack_anydebian
BREAKS HERE
-  cron { 'puppet':
-    ensure  => present,
-    user    => 'root',
-    minute  => [$first, $second],
-    command => '/usr/bin/puppet agent --onetime --no-daemonize; /bin/chmod 644 /var/lib/puppet/state/*.yaml',
-    require => Package['puppet'];
-
BREAKS HERE
-        before       => Base::Service_unit[$title],
-            before => Service[$title],
BREAKS HERE
-                content => 'puppet:///modules/puppetmaster/git/private/commit-msg-master',
BREAKS HERE
-# [*storage_vnx_pool_name*]
-#   (required) Storage pool name.
-  $storage_vnx_pool_name,
-    "${name}/storage_vnx_pool_name":           value => $storage_vnx_pool_name;
BREAKS HERE
-			mode => 755, owner => root, group => root;
BREAKS HERE
-	# workaround bug in munin_node_configure
-	plugin { "postfix_mailvolume": ensure => absent }
BREAKS HERE
-      odl_username  => $odl_username,
-      odl_password  => $odl_password,
-      odl_url       => "${conn_proto}://${odl_url_ip}:${odl_port}/controller/nb/v2/neutron";
BREAKS HERE
-  include jeepyb
-  include pip
-  include gerrit::user
-      owner    => 'root',
-      group    => 'root',
-      mode     => '0444',
-      source   => $robots_txt_source,
-      require  => File['/home/gerrit2/review_site/static'],
-    ensure   => link,
-    target   => '/usr/share/java/mysql-connector-java.jar',
-    before   => Exec['gerrit-start'],
-    require  => [
-        ensure   => link,
-        target   => '/usr/share/java/bcpkix.jar',
-        before   => Exec['gerrit-start'],
-        require  => [
-        ensure   => link,
-        target   => '/usr/share/java/bcpg.jar',
-        before   => Exec['gerrit-start'],
-        require  => [
BREAKS HERE
-    $e2 = inline_template('extensions: "<%= @extensions.to_s %>" : <%= @extensions.class %>')
BREAKS HERE
-  $gw_control_ip     = '8.8.8.8',     # Control ip addr
-      gw_control_ip => $gw_control_ip,
BREAKS HERE
-  $control_owner = undef,
-  include classroom::virtual
-    include classroom::master::hiera
-      plugins          => [ "Certificates", "Classification", "ConsoleUser", "Docker", "Logs", "Dashboard", "CodeManager", "ShellUser" ],
BREAKS HERE
-      "${title}-GOVUK_APP_LOGROOT":
-        varname => 'GOVUK_APP_LOGROOT',
-        value   => "/var/log/${title}";
BREAKS HERE
-        home => '/var/lib/scap',
BREAKS HERE
-  if $zookeeper_hostnames and $daemon_namenode {
-    if $hadoop::ha_credentials and $hadoop::ha_diest {
BREAKS HERE
-# python.py
-        'python-cffi',          # 0.8.6
-        'python3-cffi',         # 0.8.6
-        'python-dev',           # 2.7.9
-        'python3-dev',          # 3.4.2
BREAKS HERE
-	file {
-		"/etc/munin/":
-		"/etc/munin/munin-node.conf":
BREAKS HERE
-        directory => '/srv/org/wikibase',
BREAKS HERE
-                  ]
BREAKS HERE
-    service { cron:
-}
BREAKS HERE
-			content => template("munin/munin-node.conf.$operatingsystem.$lsbdistcodename"),
-    File["/etc/munin/munin-node.conf"]{
-			content => template("munin/munin-node.conf.$operatingsystem"),
-    }
BREAKS HERE
-                File["/etc/systemd/system/${instancesuffix}.service.d/puppet-override.conf"],
-    file { "/etc/systemd/system/${instancesuffix}.service.d/puppet-override.conf":
BREAKS HERE
-    file { '/etc/cron.daily/logrotate':
-        ensure => file,
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0555',
-        source => 'puppet:///modules/toollabs/logrotate.crondaily',
-    }
-
BREAKS HERE
-                    ensure  => 'directory',
-                    mode    => $file_mode,
-                    owner   => $owner,
-                    group   => $group,
-                    before  => Exec["git_clone_${title}"],
BREAKS HERE
-  include ocf_decal::decal_website
BREAKS HERE
-        match   => '\\#?(\\d+)',
BREAKS HERE
-                command => "/usr/sbin/postmap /etc/postfix/sasl_passwd",
-                refreshonly => true,
-                require => [
-                        File["/etc/postfix/sasl_passwd"],
-                        Package["postfix"]],
BREAKS HERE
-        mode    => '0644';
-        mode    => '0644';
BREAKS HERE
-            server           => { port => 9000, type => 'fcgi' },
BREAKS HERE
-            notify     => Exec['apt_update_php'],
BREAKS HERE
-    sslcert::certificate { 'icinga.wikimedia.org': }
BREAKS HERE
-  $step = Integer(hiera('step')),
BREAKS HERE
-    # db2062 is a one-time test of MariaDB 10.1, which doesn't have yet
-    # proper support (see T148507 & T116557)
-    if ($::hostname == 'db2062') {
-        class {'mariadb::packages_wmf':
-            package => 'wmf-mariadb101',
-        }
-        class {'mariadb::service':
-            package => 'wmf-mariadb101',
-        }
-    } elsif (os_version('debian >= stretch')) {
-        # No init.d hack needed for now on stretch
-        # But we may need user-systemd sub-unit
-        class {'mariadb::packages_wmf':
-            package => 'wmf-mariadb101',
-        }
-        include mariadb::packages_wmf
-        include mariadb::service
BREAKS HERE
-
-    file { "/etc/ssh/userkeys/${user}":
BREAKS HERE
-        command => "/usr/bin/rsync -avz --delete rsync://${deployment_server}/srv/deployment /srv/deployment > /dev/null 2>&1",
BREAKS HERE
-        opatch{ $patchId:
-        opatch{ $patchId:
BREAKS HERE
-  # Fixes a bug. #12813
-  class { '::puppet::package::patches': }
BREAKS HERE
-    Service['heat-api'] -> Service[$::apache::params::service_name]
-    Anchor['heat::service::begin'] ~> Service[$::apache::params::service_name]
BREAKS HERE
-    interface::add_ip6_mapped { 'main': interface => 'eth0', }
-
BREAKS HERE
-        physical: { munin::plugins::physical }
BREAKS HERE
-#  $tsig:
BREAKS HERE
-
-  $hasrestart     = $::icinga2::params::service_reload ? {
-  $hasrestart     = $reload
BREAKS HERE
-        value => '/usr/local/bin/wal-e_postgres_archiving_wrapper';
BREAKS HERE
-  if $step >= 4 {
BREAKS HERE
-    # The nf_conntrack kernel module is usually auto-loaded during ferm startup.
-    # But some additional configuration options for timewait handling are configured
-    # via sysctl settings and if ferm autoloads the kernel module after
-    # systemd-sysctl.service has run, the sysctl settings are not applied
-    # Add the nf_conntrack module via /etc/modules-load.d/ which loads
-    # them before systemd-sysctl.service is executed
-    file { '/etc/modules-load.d/conntrack.conf':
-        ensure  => present,
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
-        content => "nf_conntrack\n",
-        require => File['/etc/modprobe.d/nf_conntrack.conf'],
-    }
-
BREAKS HERE
-  $release = '1.0.4',
BREAKS HERE
-        'bitmap',
-        'bitmap-fonts-compat',
-          $graphitepkgs = union($common_os_pkgs,['python-sqlite2'])
-          $graphitepkgs = union($common_os_pkgs,['python-sqlite3dbm'])
BREAKS HERE
-class icinga2::config inherits icinga2::params {
BREAKS HERE
-    $ec2api_enabled     = true
BREAKS HERE
-#  Boolean parameter, whether to prefix all setting keys with
-#  the extension name. Defaults to false.
-    $full_settings = ensure_prefix($settings, "${lowercase_title}.")
BREAKS HERE
-    require => [ File[$repo_file],  Exec['Duo Security GPG Import'] ]
BREAKS HERE
-    require    => Package['wget'],
BREAKS HERE
-  if ! defined(Httpd_mod['rewrite']) {
-    httpd_mod { 'rewrite':
-      before => Service['httpd']
-  if ! defined(Httpd_mod['proxy']) {
-    httpd_mod { 'proxy':
-      before => Service['httpd']
-  if ! defined(Httpd_mod['proxy_http']) {
-    httpd_mod { 'proxy_http':
-      before => Service['httpd']
-  package { 'build-essential':
-    ensure => 'present',
-  package { 'python-dev':
-    ensure => 'present',
BREAKS HERE
-    $mysql  = hiera('mysql')
-      host     => $db_vip,
-      command => "/bin/rm -f ${db_options_file}",
-      require => Mysql::Db[$db_name],
BREAKS HERE
-	service { "munin":
-			notify => Service["munin"],
BREAKS HERE
-            ensure => directory,
-            owner  => $title,
-            group  => 'root',
-            mode   => '0755',
-            before => Service[$title],
BREAKS HERE
-File { mode => 0644, owner => root, group => root, links => follow, backup => main, }
BREAKS HERE
-    port   => $galera_ports,
-    action => accept,
BREAKS HERE
-    $namespace      = hiera('profile::conftool::client::namespace', '/conftool'),
BREAKS HERE
-  http_port      => hiera('lma::influxdb::grafana_port')
BREAKS HERE
-    $confdir = "${snapshot::dumps::dirs::dumpsdir}/confs"
-        command     => "${scriptPath} --config ${confdir}/wikidump.conf",
BREAKS HERE
-        class { '::package_builder':
-            # We need /var/cache/pbuilder to be a symlink to /mnt
-            # before cowbuilder/pbuilder is installed
-            require  => Class['contint::packages::labs'],
-            # Cowdancer is confused by /var/cache/pbuilder being a symlink
-            # causing it to fail to properly --update cow images. T125999
-            basepath => '/mnt/pbuilder'
-        }
BREAKS HERE
-    mode    => '0755',
BREAKS HERE
-}
BREAKS HERE
-    wg_recaptchapublickey      => hiera('wiki_wg_recaptchapublickey'),
-    wg_recaptchaprivatekey     => hiera('wiki_wg_recaptchaprivatekey'),
BREAKS HERE
-# [*provider*]
-#   The provider used to install php5-dev
-#   Could be "pecl", "apt" or any other OS package provider
-#
BREAKS HERE
-  $gerrit_url = 'localhost',
-  $gerrit_port = '29418',
-  $gerrit_user = 'reviewday',
-  $reviewday_rsa_key_contents = undef,
-  $reviewday_gerrit_ssh_key = undef,
-  $git_url = 'git://git.openstack.org/openstack-infra/reviewday',
-  $httproot = '/srv/static/reviewday',
-  $serveradmin = 'webmaster@example.org'
BREAKS HERE
-    include ::k8s::infrastructure_config
BREAKS HERE
-    app => 'hmrc_manuals_api',
BREAKS HERE
-#   Defaults to 'false'
-#   Defaults to 'false'
-#   Defaults to '/var/log/heat'
-#   Defaults to false.
-#   Defaults to true
-#   Defaults to LOG_USER.
-  $verbose                            = false,
-  $debug                              = false,
-  $log_dir                            = '/var/log/heat',
-  $use_syslog                         = false,
-  $use_stderr                         = true,
-  $log_facility                       = 'LOG_USER',
-
-    'DEFAULT/debug'                        : value => $debug;
-    'DEFAULT/verbose'                      : value => $verbose;
-    'DEFAULT/use_stderr'                   : value => $use_stderr;
-  # Log configuration
-  if $log_dir {
-    heat_config {
-      'DEFAULT/log_dir' : value  => $log_dir;
-    }
-  } else {
-    heat_config {
-      'DEFAULT/log_dir' : ensure => absent;
-    }
-  }
-
-  # Syslog configuration
-  if $use_syslog {
-    heat_config {
-      'DEFAULT/use_syslog':           value => true;
-      'DEFAULT/syslog_log_facility':  value => $log_facility;
-    }
-  } else {
-    heat_config {
-      'DEFAULT/use_syslog':           value => false;
-    }
-  }
-
BREAKS HERE
-    provider => 'pip',
BREAKS HERE
-        ensure         => present,
-        systemd        => true,
-        upstart        => true,
-        refresh        => false,
-        service_params => $service_params,
-        subscribe      => Package[$ext_pkgs],
BREAKS HERE
-class profile::toolforge::mailrelay(
-    $external_hostname = hiera('profile::toolforge::mailrelay::external_hostname'),
-    $mail_domain = hiera('profile::toolforge::mail_domain', 'tools.wmflabs.org'),
-) {
-    class { '::exim4':
-        queuerunner => 'combined',
-        config      => template('profile/toolforge/mail-relay.exim4.conf.erb'),
-        variant     => 'heavy',
-        require     => File['/usr/local/sbin/localuser',
-                            '/usr/local/sbin/maintainers'],
-    }
-
-    # Manually maintained outbound sender blocklist
-    file { '/etc/exim4/deny_senders.list':
-        ensure  => present,
-        owner   => 'root',
-        group   => 'Debian-exim',
-        mode    => '0440',
-        replace => false,
-        content => '# Add MAIL FROM address to block. One per line',
-        require => Package['exim4-config'],
-        notify  => Service['exim4'],
-    }
-
-    file { '/usr/local/sbin/localuser':
-        ensure => file,
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0555',
-        source => 'puppet:///modules/profile/toolforge/mailrelay/localuser',
-    }
-
-    file { '/usr/local/sbin/maintainers':
-        ensure => file,
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0555',
-        source => 'puppet:///modules/profile/toolforge/mailrelay/maintainers',
-    }
-
-    file { '/etc/aliases':
-        ensure => file,
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0644',
-        source => 'puppet:///modules/profile/toolforge/mailrelay/aliases',
-    }
-
-    diamond::collector::extendedexim { 'extended_exim_collector': }
-}
BREAKS HERE
-        mirrorlist => 'http://mirrors.fedoraproject.org/mirrorlist?repo=testing-debug-epel5&arch=$basearch'
BREAKS HERE
-    url_pattern          => 'http://logs.openstack.org/{build.parameters[BASE_LOG_PATH]}/{job.name}/{build.number}',
-    url_pattern          => 'http://logs.openstack.org/{build.parameters[BASE_LOG_PATH]}/{job.name}/{build.number}',
BREAKS HERE
-class dnsmasq {
BREAKS HERE
-    notify { "${title}: no special configuration yet": }
BREAKS HERE
-        ensure => absent,
BREAKS HERE
-  Class['ipa::client'] -> Ipa::Masterprincipal <<| tag == 'ipa-master-principal' |>> -> Ipa::Replicainstall[$::fqdn] -> Ipa::Replicapreparefirewall <<| tag == 'ipa-replica-prepare-firewall' |>> -> Ipa::Masterreplicationfirewall <<| tag == 'ipa-master-replication-firewall' |>> -> Service['ipa']
BREAKS HERE
-    sysadmins           => hiera('sysadmins', []),
-    site_admin_password => hiera('groups_dev_site_admin_password', 'XXX'),
-    site_mysql_host     => hiera('groups_dev_site_mysql_host', 'localhost'),
-    site_mysql_password => hiera('groups_dev_site_mysql_password', 'XXX'),
-    conf_cron_key       => hiera('groups_dev_conf_cron_key', 'XXX'),
BREAKS HERE
-  user { "Create system user '${dynatrace_owner}'":
-  }
-  ->
-  group { "Create group '${dynatrace_group}'":
-    members => [$dynatrace_owner]
-  }
BREAKS HERE
-
BREAKS HERE
-  govuk::app::envvar { 'ROUTER_MONGO_DB':
-    app   => 'router',
-    value => $router_mongodb_name,
BREAKS HERE
-        source  => 'puppet:///modules/puppetmaster/naggen2',
-        source  => 'puppet:///modules/puppetmaster/prometheus-ganglia-gen',
BREAKS HERE
-        # libmariadbclient-dev is buggy on trusty
-        # https://bugs.debian.org/759309
-        package { 'libmysqlclient-dev':
-        package { 'libmariadbclient-dev':
-        'libboost-python-dev',
BREAKS HERE
-        } ->
-        exec { "extract opatch ${title} ${patch_file}":
BREAKS HERE
-    'docker-py',
BREAKS HERE
-# == Class: spamasssassin
BREAKS HERE
-  #
-  @a2mod {
-   'rewrite' : ensure => present;
-   'headers' : ensure => present;
-   'expires' : ensure => present;
BREAKS HERE
-# This Puppet module provisions a set of client-side performance
-# monitoring scripts for Wikimedia sites.
-
-    nrpe::monitor_service { 'statsv':
-        description  => 'statsv process',
-        nrpe_command => '/usr/lib/nagios/plugins/check_procs -c 1: -C python -a statsv',
-    }
BREAKS HERE
-      'balance' => 'leastconn',
-      'balance' => 'leastconn',
-      'balance' => 'leastconn',
BREAKS HERE
-    file{'/etc/logrotate.d/munin'
-        source => [ "puppet://$server/files/munin/config/host/${fqdn}/logrotate"
BREAKS HERE
-  validate_re($version, '^([0-9]|[0-9]u[0-9]{1,2})$', '$version must be formated as \'major\'u\'minor\' or just \'major\'')
BREAKS HERE
-# This recursor does three useful things:
-#  IP instead.
-#  - It defines a cname for 'puppet' that resolves to the deployment-appropriate
-#  puppetmaster
-#
-    $puppetmaster_hostname = hiera('profile::openstack::base::puppetmaster_hostname'),
-        puppetmaster_hostname => $puppetmaster_hostname,
BREAKS HERE
-  $priorities_plugin   = params_lookup( 'priorities_plugin' ),
BREAKS HERE
-      # FIXME: No Python3 packages on RHEL
-      #$python3_dev_package = 'python3-devel'
-      $python3_dev_package = 'python3-all-dev'
BREAKS HERE
-  $enabled_backends = undef
-    'DEFAULT/enabled_backends':         value => join($enabled_backends, ',');
-}
BREAKS HERE
-    group   => 'monasca-agent',
BREAKS HERE
-        ensure  => absent,
-    }
-
-    file { '/var/lib/gerrit2/review_site/etc/its/templates/DraftPublishedPhabricator.vm':
-        source  => 'puppet:///modules/gerrit/its/templates/DraftPublishedPhabricator.vm',
-    file { '/var/lib/gerrit2/review_site/etc/its/templates/PatchSetCreatedPhabricator.vm':
-        source  => 'puppet:///modules/gerrit/its/templates/PatchSetCreatedPhabricator.vm',
BREAKS HERE
-  case $::operatingsystem {
-    /RedHat|CentOS/: {
-      err("Unsupported operatingsystem: ${::operatingsystem}.")
BREAKS HERE
-	$gr_max_cache_size = "inf",
-	$gr_line_receiver_interface = "0.0.0.0",
-	$gr_enable_udp_listener = "False",
-	$gr_udp_receiver_interface = "0.0.0.0",
-	$gr_use_insecure_unpickler = "False",
-	$gr_cache_query_interface = "0.0.0.0",
-){
-	class { 'graphite::install':
-		notify => Class['graphite::config'],
-	}
BREAKS HERE
-        'bind-address'          => $bind_address,
-        'max_connections'       => $mysql_max_connections,
-        'open_files_limit'      => '-1',
-        'innodb_file_per_table' => 'ON',
-        'ssl'                   => $enable_internal_tls,
-        'ssl-key'               => $tls_keyfile,
-        'ssl-cert'              => $tls_certfile,
-        'ssl-ca'                => undef,
BREAKS HERE
-        'gfortran', 'g++-4.8', 'gfortran-4.8',
BREAKS HERE
-            $username = hiera('profile::docker::registry::swift_username')
-            $password = hiera('profile::docker::registry::swift_password')
-            $auth_url = hiera('profile::docker::registry::swift_auth_url')
-            $container = hiera('profile::docker::registry::swift_container')
-                    'username'  => $username,
-                    'password'  => $password,
-                    'authurl'   => $auth_url,
-                    'container' => $container,
BREAKS HERE
-    $pgversion = $::lsbdistcodename ? {
-    $ensure='present',
-    $includes=[],
-    $listen_addresses='*',
-    $port='5432',
-    $datadir=undef,
-    ) {
-
-            "postgresql-${pgversion}",
-            "postgresql-${pgversion}-debversion",
-            "postgresql-client-${pgversion}",
-            'libdbi-perl',
-            'libdbd-pg-perl',
-        ]:
-        ensure    => $ensure,
-        content => template('postgresql/postgresql.conf.erb'),
-
BREAKS HERE
-  class { 'mysql::server':
-  include mysql::server::account_security
-  include mysql::python
-  include diskimage_builder
-  include pip
-      ensure   => directory,
-      mode     => '0755',
-      owner    => 'nodepool',
-      group    => 'nodepool',
-      require  => [
BREAKS HERE
-    system::role { 'role::ci::master': description => 'CI Jenkins master' }
BREAKS HERE
-        '1'                  => 'mwdebug1002.eqiad.wmnet',
-        'mw1017.eqiad.wmnet' => 'mwdebug1002.eqiad.wmnet',
-        backend_regexp  => '^((mwdebug1002)\.eqiad\.wmnet|(mwdebug2001|mwdebug2002)\.codfw\.wmnet)',
BREAKS HERE
-  $gerrit_server        => 'review.openstack.org',
-  $gerrit_user          => 'zuul',
-  $gerrit_ssh_host_key  => hiera('gerrit_ssh_rsa_pubkey_contents'),
-  $zuul_ssh_private_key => hiera('zuul_ssh_private_key_contents'),
-  $zuul_url             = "http://${::fqdn}/p",
-  $git_email            = 'zuul@openstack.org',
-  $git_name             = 'OpenStack Zuul',
-  $revision             = 'feature/zuulv3',
-    gerrit_server        => $gerrit_server
BREAKS HERE
-    statusbot_channels      => 'edeploy, fuel-dev, heat, magnetodb, murano, openstack, openstack-101, openstack-anvil, openstack-bacon, openstack-barbican, openstack-blazar, openstack-board, openstack-ceilometer, openstack-chef, openstack-cinder, openstack-cloudkeep, openstack-community, openstack-containers, openstack-dev, openstack-dns, openstack-doc, openstack-entropy, openstack-foundation, openstack-gantt, openstack-gate, openstack-hyper-v, openstack-infra, openstack-ironic, openstack-keystone, openstack-manila, openstack-marconi, openstack-meeting, openstack-meeting-3, openstack-meeting-alt, openstack-meniscus, openstack-merges, openstack-metering, openstack-monasca, openstack-neutron, openstack-nova, openstack-opw, openstack-oslo, openstack-packaging, openstack-qa, openstack-raksha, openstack-relmgr-office, openstack-sahara, openstack-sdks, openstack-state-management, openstack-swift, openstack-translation, openstack-trove, packstack-dev, refstack, storyboard, syscompass, tripleo',
BREAKS HERE
-      value   => "https://signon.${app_domain}";
BREAKS HERE
-        mode        => '0644',
-        mode        => '0644',
BREAKS HERE
-    $slave_hosts  = [],
-        subjects   => $host,
-        check_command => "check_ssl_http_letsencrypt!${host}",
-    apache::site { $host:
-        content => template('gerrit/gerrit.wikimedia.org.erb'),
BREAKS HERE
-    log_driver                  => 'syslog',
BREAKS HERE
-  $update   = '67',
-  $build    = '01',
BREAKS HERE
-    $victim        = hiera(profile::labs::db::kill_long_running_queries::pt_kill_victim,),
BREAKS HERE
-  goenv::version { ['1.2.2', '1.3.1']: }
BREAKS HERE
-# This class manages the Puppet parameters. 
BREAKS HERE
-  exec { "extract ${rcuFile}":
-    command    => "unzip ${source}/${rcuFile} -d ${downloadDir}/rcu_${version}",
-    creates    => "${downloadDir}/rcu_${version}/rcuHome",
-    path       => $execPath,
-    user       => $user,
-    group      => $group,
-    logoutput  => false,
BREAKS HERE
-            versioncmp($::operatingsystemrelease, '7') >= 0) {
BREAKS HERE
-    $barbican_enabled   = true
BREAKS HERE
-  $release = '1.0.20',
BREAKS HERE
-# This class installs BaRMan.
-# The class can be used right away with the defaults:
-#    pre_backup_script = '/usr/bin/touch /tmp/started',
-#    post_backup_script = '/usr/bin/touch /tmp/stopped',
-#    custom_lines = '; something'
-
-  $home = '/var/lib/barman',
-  $logfile = '/var/log/barman/barman.log',
-  $compression = 'gzip',
-  $pre_backup_script = false,
-  $custom_lines = ''
-    ensure  => latest,
-    ensure  => directory,
-    group   => 'barman',
-    ensure  => present,
-    group   => 'barman',
-    content => template('barman/barman.conf'),
-    ensure  => directory,
-    owner   => 'barman',
-    group   => 'barman',
-    ensure  => present,
-    group   => 'barman',
-    content => template('barman/logrotate.conf'),
BREAKS HERE
-    $oraInventory = "${oracleBase}/oraInventory"
BREAKS HERE
-class profile::labs::db::wikireplica {
-    $mysql_root_clients = join($::network::constants::special_hosts['production']['mysql_root_clients'], ' ')
-        srange => "(${mysql_root_clients})",
-        srange => "(${mysql_root_clients})",
BREAKS HERE
-#   Either 'true' or 'false' indicating if govspeak format should be made
-#   Default: 'false'
-  $expose_govspeak = 'false',
-
-  govuk::app::envvar {
-    'EXPOSE_GOVSPEAK':
-      value => $expose_govspeak;
BREAKS HERE
-#     channel  => '#wikimedia-operations',
-class tcpircbot (
-    $user        = 'tcpircbot',
-    $group       = 'tcpircbot',
-    $dir         = '/srv/tcpircbot',
-) {
-    if ! defined(Group[$group]) {
-        group { $group:
-            ensure => present,
-        }
-    }
-    if ! defined(User[$user]) {
-        user { $user:
-            ensure     => present,
-            gid        => $group,
-            shell      => '/bin/false',
-            home       => $dir,
-            managehome => true,
-            system     => true,
-        }
BREAKS HERE
-  $watcher_enabled = true
BREAKS HERE
-  String $owner = $mcollective::plugin_owner,
-  String $group = $mcollective::plugin_group,
-      command => "${scriptpath} -o ${factspath}",
-      command              => $scriptpath,
-      arguments            => "-o ${factspath}",
-      command => "${scriptpath} -o ${factspath}",
BREAKS HERE
-    $zuul_url       = 'git://zuul.eqiad.wmnet',
BREAKS HERE
-  Optional[Array] $additional_packages = lookup("${name}::sst::${wsrep_sst_method}::additional_packages", {default_value => undef})
BREAKS HERE
-      '2014'  => '6',
BREAKS HERE
-        include  => {
-          src => true
-        };
BREAKS HERE
-  case $operatingsystem {
BREAKS HERE
-  $domainlist_file = '',
-  $email = '',
-  $days = ''
BREAKS HERE
-        }
BREAKS HERE
-    file { '/usr/local/bin/exceptionmonitor':
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0555',
-        content => template('role/logging/exceptionmonitor.erb'),
-    }
-
BREAKS HERE
-    zanata_url                  => 'https://github.com/zanata/zanata-platform/releases/download/platform-4.3.1/zanata-4.3.1-wildfly.zip',
-    zanata_checksum             => 'f7c629e302c835d61789e26b2d382805f4e685c2',
BREAKS HERE
-    sysadmins                => hiera('sysadmins', []),
BREAKS HERE
-			$munin_node_service = "munin" 
BREAKS HERE
-    notify      => Service['hound']
-
BREAKS HERE
-    package { $::puppetboard::params::virtualenvpkg:
BREAKS HERE
-  $host_perfdata_path    = "${spool_dir}/perfdata/host-perfdata",
-  $service_perfdata_path = "${spool_dir}/perfdata/service-perfdata",
-  $host_temp_path        = "${spool_dir}/tmp/host-perfdata",
-  $service_temp_path     = "${spool_dir}/tmp/service-perfdata",
BREAKS HERE
-  ## FILE SERVING SOURCE
-  case $::base_source {
-    '': {
-      $general_base_source = $::puppetversion ? {
-        /(^0.25)/ => 'puppet:///modules',
-        /(^0.)/   => "puppet://${servername}",
-        default   => 'puppet:///modules',
-      }
-    }
-    default: { $general_base_source = $::base_source }
-  }
-
BREAKS HERE
-        owner   => 'shinken',
BREAKS HERE
-      '/srv/data' => {},
BREAKS HERE
-        baseurl  => 'http://li.nux.ro/download/nux/dextop/el7/$basearch/ http://mirror.li.nux.ro/li.nux.ro/nux/dextop/el7/$basearch/',
-        baseurl  => 'http://li.nux.ro/download/nux/dextop-testing/el7/$basearch/',
BREAKS HERE
-  $graphiteweb_install_lib_dir_REAL = pick($gr_graphiteweb_install_lib, "${graphiteweb_webapp_dir_REAL}/graphite")
BREAKS HERE
-  $config_json = 'hound/config.json',
-  $vhost_name = $::fqdn,
-  $datadir = '/home/hound/data',
-  $serveradmin = "webmaster@${::fqdn}",
BREAKS HERE
-  file { '/opt/jenkins/autoclean-docker.sh':
-    source => 'puppet:///modules/ocf_jenkins/autoclean-docker.sh',
-    command => 'chronic /opt/jenkins/autoclean-docker.sh',
BREAKS HERE
-    command => 'chgrp apache /var/log/munin /var/log/munin/munin-graph.log && chmod g+w /var/log/munin /var/log/munin/munin-graph.log && find /var/www/html/munin/* -maxdepth 1 -type d -exec chgrp -R apache {} \; && find /var/www/html/munin/* -maxdepth 1 -type d -exec chmod -R g+w {} \;',
BREAKS HERE
-  package { 'git':
-    ensure => present
-  }
-
-    creates     => "${base_install_dir}/etherpad-lite/node_modules",
BREAKS HERE
-        backend_regexp  => '^((mwdebug1001|mwdebug1002)\.eqiad\.wmnet|(mw2017|mw2099)\.codfw\.wmnet)',
BREAKS HERE
-        mode   => '0440',
-
BREAKS HERE
-    $enable_vitrage          = true
BREAKS HERE
-                ensure  => $directory,
BREAKS HERE
-    munin::plugin::deploy { "pg__connections": enabled => false }
-    munin::plugin::deploy { "pg__locks": enabled => false }
BREAKS HERE
-    require_package('cumin')
BREAKS HERE
-#   'config' parameter. Default: false
-    # the local log file name
-
-    # configuration management
-    if $full_config {
-        unless $config and size($config) > 0 {
-            fail('A config needs to be specified when full_config == true!')
-        }
-        $complete_config = $config
-    } else {
-        # load configuration
-        $local_config = $config ? {
-            undef   => '{}',
-            default => $config
-        }
-        $complete_config = merge_config(
-            template('service/node/config.yaml.erb'),
-            $local_config
-        )
-    }
-
-    if $deployment == 'scap3' and $deployment_config {
-        file { "/etc/${title}/config-vars.yaml":
-            ensure  => present,
-            content => template('service/node/config-vars.yaml.erb'),
-            owner   => $deployment_user,
-            group   => $deployment_user,
-            mode    => '0444',
-            tag     => "${title}::config",
-
-        # We need to ensure that the full config gets deployed when we change the
-        # puppet controlled part. If auto_refresh is true, this will also restart
-        # the service.
-        file { "/usr/local/bin/apply-config-${title}":
-            ensure  => present,
-            content => template('service/node/apply-config.sh.erb'),
-            owner   => 'root',
-            group   => 'root',
-            mode    => '0755',
-            before  => Exec["${title} config deploy"],
-        }
-
-        exec { "${title} config deploy":
-                command     => "/usr/local/bin/apply-config-${title}",
-                user        => $deployment_user,
-                group       => $deployment_user,
-                refreshonly => true,
-                subscribe   => File["/etc/${title}/config-vars.yaml"],
-        }
-
-        file { "/etc/${title}/config.yaml":
-            ensure  => present,
-            content => $complete_config,
-            owner   => 'root',
-            group   => 'root',
-            mode    => '0444',
-            tag     => "${title}::config",
-        }
-        if $auto_refresh {
-            # if the service should be restarted after a
-            # config change, specify the notify/before requirement
-            File["/etc/${title}/config.yaml"] ~> Service[$title]
-        } else {
-            # no restart should happen, just ensure the file is
-            # created before the service
-            File["/etc/${title}/config.yaml"] -> Service[$title]
BREAKS HERE
-  package { ['npm','nodejs-legacy']:
-    require => Package['npm'],
-    require => Package['npm'],
-      Package['npm'],
BREAKS HERE
-  $eplite_version   = ''
-    path        =>
-      "/usr/bin:/bin:/usr/local/bin:${base_install_dir}/etherpad-lite",
BREAKS HERE
-  $enable_flap_detection = undef,
BREAKS HERE
-    owner   => 'root',
-    mode    => 555,
-    ensure  => 'present',
-    source  => 'puppet:///modules/gerritbot/gerritbot.init',
-    name       => 'gerritbot',
-    subscribe  => [Package['gerritbot'],
-                   File['/etc/gerritbot/gerritbot.config'],
-                   File['/etc/gerritbot/channel_config.yaml']],
-    owner  => 'root',
-    mode    => 0775,
-    owner   => 'root',
-    mode    => 440,
-    ensure  => 'present',
-    source  => 'puppet:///modules/gerritbot/gerritbot_channel_config.yaml',
-    owner   => 'root',
-    mode    => 440,
-    ensure  => 'present',
-    source  => 'puppet:///modules/gerritbot/logging.config',
-    owner   => 'root',
-    group   => 'gerrit2',
-    mode    => 440,
-    ensure  => 'present',
-    replace => 'true',
-
BREAKS HERE
-        ensure => 'present',
-        owner  => $user,
-        group  => $group,
-        mode   => '0400',
-        ensure => 'present',
-        owner  => $user,
-        group  => $group,
-        mode   => '0400',
BREAKS HERE
-            $urgentprio_members = ['monitoring_google_group', 'pager_nonworkhours', 'zendesk_urgent_priority']
-            $highprio_members   = ['monitoring_google_group','zendesk_high_priority']
-            $normalprio_members = ['monitoring_google_group','zendesk_normal_priority']
BREAKS HERE
-      mode      => '0755';
-      environment => 'MAILTO=root',
BREAKS HERE
-            ensure => stopped,
-            enable => false,
BREAKS HERE
-        webserver::php5-mysql
BREAKS HERE
-            dashboard_links => ['https://grafana.wikimedia.org/dashboard/db/analytics-hadoop?orgId=1&panelId=47&fullscreen'],
-            dashboard_links => ['https://grafana.wikimedia.org/dashboard/db/analytics-hadoop?orgId=1&panelId=39&fullscreen'],
-            dashboard_links => ['https://grafana.wikimedia.org/dashboard/db/analytics-hadoop?orgId=1&panelId=40&fullscreen'],
-            dashboard_links => ['https://grafana.wikimedia.org/dashboard/db/analytics-hadoop?panelId=4&fullscreen&orgId=1'],
-            dashboard_links => ['https://grafana.wikimedia.org/dashboard/db/analytics-hadoop?panelId=12&fullscreen&orgId=1'],
-            warning         => 0.7,
-            critical        => 0.9,
BREAKS HERE
-            'lvs1011' => '208.80.154.47',
-            'lvs1012' => '208.80.154.48',
-            'lvs1011' => '208.80.154.165',
-            'lvs1012' => '208.80.154.166',
-            'lvs1011' => '208.80.154.100',
-            'lvs1012' => '208.80.154.101',
-            'lvs1011' => '208.80.155.115',
-            'lvs1012' => '208.80.155.116',
-            'lvs1011' => '10.64.1.11',
-            'lvs1012' => '10.64.1.12',
-            'lvs1011' => '10.64.17.11',
-            'lvs1012' => '10.64.17.12',
-            'lvs1011' => '10.64.49.11',
-            'lvs1012' => '10.64.49.12',
BREAKS HERE
-    if $::operatingsystem == 'ubuntu' {
-    } else {
BREAKS HERE
-  $real_ip_header = ''
BREAKS HERE
-        hour    => 6,
BREAKS HERE
-        ensure  => absent
BREAKS HERE
-
-  include ocf::ssl::default
-  file {
-    # copies proper .pgpass file for ocfbackups to authenticate on backup
-    '/opt/share/.pgpass':
-      source    => 'puppet:///private/backups/pgpass',
-      mode      => '0600',
-      owner     => 'ocfbackups',
-      show_diff => false;
-  }
-
-      value => "/etc/ssl/private/${::fqdn}.fullchain";
BREAKS HERE
-#   (Optional) Specifies the Authentication URI for Heat to use.
-#   Defaults to false,
-#   which uses: "${keystone_protocol}://${keystone_host}:5000/v2.0"
-
-# [*keystone_host*]
-#
-# [*keystone_port*]
-# [*keystone_protocol*]
-  $keystone_host               = '127.0.0.1',
-  $keystone_port               = '35357',
-  $keystone_protocol           = 'http',
-  #Deprecated parameters
-    'keystone_authtoken/auth_host'         : value => $keystone_host;
-    'keystone_authtoken/auth_port'         : value => $keystone_port;
-    'keystone_authtoken/auth_protocol'     : value => $keystone_protocol;
BREAKS HERE
-      source    => 'puppet:///private/backups/.pgpass',
BREAKS HERE
-  $socket_path     = "${run_dir}/icinga2/cmd/livestatus",
-  $compat_log_path = "${log_dir}/log/icinga2/compat",
BREAKS HERE
-  $website_host = hiera('website_host', 'www.gov.uk')
-      $website_host,
BREAKS HERE
-            before   => File["${target_basedir}/ssl/server-keypair.pem"],
-            requires => File["${target_basedir}/ssl"],
-            creates  => "${target_basedir}/ssl/server-keypair.pem",
-            command  => "/bin/cat \
BREAKS HERE
-$ldap_protocol              = $influxdb_grafana['ldap_protocol']
BREAKS HERE
-  iptables::debug{ "debug params":
BREAKS HERE
-      $public_bind_opts = list_to_hash(suffix(any2array($public_virtual_ip), ":${public_ssl_port}"), union($haproxy_listen_bind_param, ['ssl', 'crt', $public_certificate]))
-    $internal_bind_opts = list_to_hash(suffix(any2array($internal_ip), ":${service_port}"), union($haproxy_listen_bind_param, ['ssl', 'crt', $public_certificate]))
BREAKS HERE
-    ensure_packages('libmapnik3.0')
-
-    $cassandra_kartotherian_user = 'kartotherian'
-    $cassandra_kartotherian_pass = hiera('maps::cassandra_kartotherian_pass')
-    $pgsql_kartotherian_user = 'kartotherian'
-    $pgsql_kartotherian_pass = hiera('maps::postgresql_kartotherian_pass')
BREAKS HERE
-  if $duo_unix::manage_ssh {
-    package { 'openssh-server': 
-  package { $duo_unix::duo_package: 
-    ensure  => latest,
-    require => [ File[$repo_file], Exec['duo-security-apt-update'], Exec['Duo Security GPG Import'] ];
-    notify  => Exec['duo-security-apt-update'];
-    refreshonly => true;
-    unless  => '/usr/bin/apt-key list | grep "Duo Security"';
BREAKS HERE
-    director            => 'dir.example.com',
-    sd_max_concur_jobs  => 5,
-    sqlvariant          => 'mysql',
BREAKS HERE
-  # fix augeas lens until it's updated in PE
-  include classroom::agent::augeas
BREAKS HERE
-class package_builder::environments {
BREAKS HERE
-      'DEFAULT/sql_connection': value => $sql_connection;
-    Heat_config['DEFAULT/sql_connection'] ~> Exec['heat-dbsync']
BREAKS HERE
-    logfile => "/var/log/apt/history.log",
-    tags    => ['apt','history'];
-    logfile => "/var/log/apt/term.log",
-    tags    => ['apt','term'];
-    logfile => "/var/log/dpkg.log",
-    tags    => ['dpkg'];
-    logfile => "/var/log/unattended-upgrades/unattended-upgrades.log",
-    tags    => ['apt','unattended'];
-    logfile => "/var/log/unattended-upgrades/unattended-upgrades-shutdown.log",
-    tags    => ['apt','unattended'];
-    }
BREAKS HERE
-        check_command => 'check_ssh_port!29418',
BREAKS HERE
-  $site_docroot = "${site_root}/w",
-  $site_vhost_root = '/srv/vhosts',
-    docroot  => $site_docroot,
-  file { $site_root:
-    command   => "/bin/ln -s ${site_root}/slot1 ${site_docroot}",
-    unless    => "/usr/bin/test -L ${site_docroot}",
-    require   => File[$site_root],
-  file { "${site_root}/etc":
-    require => File[$site_root],
-  file { "${site_root}/etc/settings.php":
-    require => File["${site_root}/etc"],
BREAKS HERE
-    require_package('graphite-carbon', 'python-whisper')
-        before => Class['packages::graphite_carbon'],
-        require => Class['packages::graphite_carbon'],
-        require => Class['packages::graphite_carbon'],
-        require => Class['packages::graphite_carbon'],
-        require => Class['packages::graphite_carbon'],
BREAKS HERE
-            'php5-mysql',
BREAKS HERE
-    file { "${dumpsdir}/confs":
-      path   => "${dumpsdir}/confs",
BREAKS HERE
-          ensure  => 'purged',
BREAKS HERE
-  $gearman_workers = [
-    'ze01.openstack.org',
-    'ze02.openstack.org',
-    'ze03.openstack.org',
-    'ze04.openstack.org',
-    'ze05.openstack.org',
-    'ze06.openstack.org',
-    'ze07.openstack.org',
-    'ze08.openstack.org',
-    'ze09.openstack.org',
-    'ze10.openstack.org',
-    'zm01.openstack.org',
-    'zm02.openstack.org',
-    'zm03.openstack.org',
-    'zm04.openstack.org',
-    'zm05.openstack.org',
-    'zm06.openstack.org',
-    'zm07.openstack.org',
-    'zm08.openstack.org',
-  ]
-  $iptables_rules = regsubst ($gearman_workers, '^(.*)$', '-m state --state NEW -m tcp -p tcp --dport 4730 -s \1 -j ACCEPT')
-
-    iptables_rules6           => $iptables_rules,
-    iptables_rules4           => $iptables_rules,
BREAKS HERE
-  if $users { validate_array ($users )}
-  if $user_groups { validate_array ($user_groups )}
BREAKS HERE
-  include ocf::packages::kubernetes::apt
BREAKS HERE
-  $branch = 'master'
-    onlyif  => "test -d ${dest}",
-    repo    => 'https://github.com/joyent/node.git',
-    dest    => "${base_install_dir}/nodejs",
-    branch  => 'v0.6.16-release',
-    require => Package['git']
-    repo    => 'https://github.com/Pita/etherpad-lite.git',
-    dest    => "${base_install_dir}/etherpad-lite",
-    user    => $ep_user,
-    require => Package['git']
BREAKS HERE
-  $passenger_version  = '3.0.9' # '4.0.10'
-  
-      $mod_passenger_location = "${passenger_root}/${builddir}/apache2/mod_passenger.so"
-        $libruby              = 'libopenssl-ruby'
-        $libruby              = 'libruby'
-      $mod_passenger_location = "${passenger_root}/${builddir}/apache2/mod_passenger.so"
-      $mod_passenger_location = "${passenger_root}/${builddir}/apache2/mod_passenger.so"
BREAKS HERE
-  $zk_cluster_members = {
-    1 => 'zk01.openstack.org',
-    2 => 'zk02.openstack.org',
-    3 => 'zk03.openstack.org',
-  }
BREAKS HERE
-
-    # this uses modules/rsync to
-    # set up an rsync daemon service
-    include ::rsync::server
-
-    # Set up an rsync module so that anybody
-    # can rsync read from $gitfat_archiva_path.
-    # The git fat store will be available at:
-    #   hostname::archiva/git-fat
-    rsync::server::module { 'archiva':
-        path      => $archiva_path,
-        read_only => 'yes',
-        uid       => 'nobody',
-        gid       => 'nogroup',
-    }
BREAKS HERE
-# The databaseType value should contain only one of these choices.        
-# EE     : Enterprise Edition                                
-# SE     : Standard Edition                                  
-#            version      => '11.2.0.3', 
-#            downloadDir  => '/install',  
-#            version      => '11.2.0.1', 
-#            downloadDir  => '/install',  
-
-define oradb::installdb( $version      = undef,
-                         $file         = undef,
-                         $databaseType = 'SE',
-                         $oracleBase   = undef,
-                         $oracleHome   = undef,
-                         $user         = 'oracle',
-                         $group        = 'dba',
-                         $downloadDir  = '/install',
-                         $puppetDownloadMntPoint  = undef,      
-    )
-  
-  {
-
-
-       $continue = true
-       if ( $found ) {
-         notify {"oradb::installdb ${oracleHome} already exists":}
-         $continue = false
-       } else {
-         notify {"oradb::installdb ${oracleHome} does not exists":}
-         $continue = true 
-       }
-if ( $continue ) {
-
-   case $operatingsystem {
-     CentOS, RedHat, OracleLinux, Ubuntu, Debian, SLES: { 
-
-        $execPath        = "/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:"
-        $path            = $downloadDir
-        $oraInstPath     = "/etc"
-        $oraInventory    = "${oracleBase}/oraInventory"
-        
-        Exec { path      => $execPath,
-               user      => $user,
-               group     => $group,
-               logoutput => true,
-             }
-               ensure  => present,
-               mode    => 0775,
-               owner   => $user,
-               group   => $group,
-             }        
-     }
-     default: { 
-        fail("Unrecognized operating system") 
-     }
-   }
-   if $puppetDownloadMntPoint == undef {
-     $mountPoint =  "puppet:///modules/oradb/"      
-   } else {
-     $mountPoint =  $puppetDownloadMntPoint
-   }
-   if ! defined(Group[$group]) {
-      group { $group : 
-              ensure => present,
-   }
-   if ! defined(User[$user]) {
-      user { $user : 
-              ensure     => present, 
-              groups     => $group,
-              shell      => '/bin/bash',
-              password   => '$1$DSJ51vh6$4XzzwyIOk6Bi/54kglGk3.',  
-              home       => "/home/${user}",
-              comment    => 'This user ${user} was created by Puppet',
-              require    => Group[$group],
-              managehome => true, 
-       }
-   }
-
-   if ! defined(File[$path]) {
-        path    => $path,
-        ensure  => directory,
-        recurse => false, 
-        replace => false,
-   }
-
-if $version == '12.1.0.1' {  
-
-   # db file 1 installer zip
-   file { "${path}/${file}_1of2.zip":
-     source  => "${mountPoint}/${file}_1of2.zip",
-     require => File[$path],
-   }
-
-   # db file 2 installer zip
-   file { "${path}/${file}_2of2.zip":
-     source  => "${mountPoint}/${file}_2of2.zip",
-     require => File["${path}/${file}_1of2.zip"],
-   }
-
-   exec { "extract ${path}/${file}_1of2.zip":
-      command => "unzip -o ${path}/${file}_1of2.zip -d ${path}/${file}",
-      require => File["${path}/${file}_1of2.zip"],
-      creates => "${path}/${file}/database/install/addLangs.sh",
-   }
-
-   exec { "extract ${path}/${file}_2of2.zip":
-      command => "unzip -o ${path}/${file}_2of2.zip -d ${path}/${file}",
-      require => [ File["${path}/${file}_2of2.zip"], Exec["extract ${path}/${file}_1of2.zip"], ],
-      creates => "${path}/${file}/database/stage/Components/oracle.rdbms/12.1.0.1.0/1/DataFiles/filegroup19.6.1.jar",
-   }
- }
-
-
-
- if $version == '11.2.0.1' {  
-
-   # db file 1 installer zip
-   file { "${path}/${file}_1of2.zip":
-     source  => "${mountPoint}/${file}_1of2.zip",
-     require => File[$path],
-   }
-
-
-   exec { "extract ${path}/${file}_1of2.zip":
-      command => "unzip -o ${path}/${file}_1of2.zip -d ${path}/${file}",
-      require => File["${path}/${file}_1of2.zip"],
-   }
-       
-
-   # db file 2 installer zip
-   file { "${path}/${file}_2of2.zip":
-     source  => "${mountPoint}/${file}_2of2.zip",
-     require => File["${path}/${file}_1of2.zip"],
-   }
-
-   exec { "extract ${path}/${file}_2of2.zip":
-      command => "unzip -o ${path}/${file}_2of2.zip -d ${path}/${file}",
-      require => File["${path}/${file}_2of2.zip"],
-   }
- }
-
- if ( $version == '11.2.0.3' or $version == '11.2.0.4' ) {  
-
-   # db file 1 installer zip
-   file { "${path}/${file}_1of7.zip":
-     source  => "${mountPoint}/${file}_1of7.zip",
-     require => File[$path],
-   }
-
-
-   exec { "extract ${path}/${file}_1of7.zip":
-      command => "unzip -o ${path}/${file}_1of7.zip -d ${path}/${file}",
-      require => File["${path}/${file}_1of7.zip"],
-   }
-       
-
-   # db file 2 installer zip
-   file { "${path}/${file}_2of7.zip":
-     source  => "${mountPoint}/${file}_2of7.zip",
-     require => File["${path}/${file}_1of7.zip"],
-   }
-
-   exec { "extract ${path}/${file}_2of7.zip":
-      command => "unzip -o ${path}/${file}_2of7.zip -d ${path}/${file}",
-      require => File["${path}/${file}_2of7.zip"],
-   }
-       
-
-   # db file 3 installer zip
-   file { "${path}/${file}_3of7.zip":
-     source  => "${mountPoint}/${file}_3of7.zip",
-     require => File["${path}/${file}_2of7.zip"],
-   }
-
-   exec { "extract ${path}/${file}_3of7.zip":
-      command => "unzip -o ${path}/${file}_3of7.zip -d ${path}/${file}",
-      require => File["${path}/${file}_3of7.zip"],
-   }
-       
-
-
-   # db file 4 installer zip
-   file { "${path}/${file}_4of7.zip":
-     source  => "${mountPoint}/${file}_4of7.zip",
-     require => File["${path}/${file}_3of7.zip"],
-   }
-
-   exec { "extract ${path}/${file}_4of7.zip":
-      command => "unzip -o ${path}/${file}_4of7.zip -d ${path}/${file}",
-      require => File["${path}/${file}_4of7.zip"],
-   }
-       
-
-   # db file 5 installer zip
-   file { "${path}/${file}_5of7.zip":
-     source  => "${mountPoint}/${file}_5of7.zip",
-     require => File["${path}/${file}_4of7.zip"],
-   }
-
-   exec { "extract ${path}/${file}_5of7.zip":
-      command => "unzip -o ${path}/${file}_5of7.zip -d ${path}/${file}",
-      require => File["${path}/${file}_5of7.zip"],
-   }
-       
-   # db file 6 installer zip
-   file { "${path}/${file}_6of7.zip":
-     source  => "${mountPoint}/${file}_6of7.zip",
-     require => File["${path}/${file}_5of7.zip"],
-   }
-
-   exec { "extract ${path}/${file}_6of7.zip":
-      command => "unzip -o ${path}/${file}_6of7.zip -d ${path}/${file}",
-      require => File["${path}/${file}_6of7.zip"],
-   }
-       
-
-   # db file 7 installer zip
-   file { "${path}/${file}_7of7.zip":
-     source  => "${mountPoint}/${file}_7of7.zip",
-     require => File["${path}/${file}_6of7.zip"],
-   }
-                                   
-   exec { "extract ${path}/${file}_7of7.zip":
-      command => "unzip -o ${path}/${file}_7of7.zip -d ${path}/${file}",
-      require => File["${path}/${file}_7of7.zip"],
-   }
- }
-   if ! defined(File["${oraInstPath}/oraInst.loc"]) {
-     file { "${oraInstPath}/oraInst.loc":
-            ensure  => present,
-            content => template("oradb/oraInst.loc.erb"),
-          }
-   }
-   if ! defined(File[$oracleBase]) {
-        ensure  => directory,
-        recurse => false, 
-        replace => false,
-   }
-
-   if ! defined(File["${path}/db_install_${version}.rsp"]) {
-     file { "${path}/db_install_${version}.rsp":
-            ensure  => present,
-            content => template("oradb/db_install_${version}.rsp.erb"),
-            require => File["${oraInstPath}/oraInst.loc"],
-          }
-   }
-
-   if $version == '12.1.0.1' {     
-     exec { "install oracle database ${title}":
-            command     => "/bin/sh -c 'unset DISPLAY;${path}/${file}/database/runInstaller -silent -waitforcompletion -responseFile ${path}/db_install_${version}.rsp'",
-            require     => [File ["${oraInstPath}/oraInst.loc"],File["${path}/db_install_${version}.rsp"],Exec["extract ${path}/${file}_2of2.zip"]],
-            creates     => $oracleHome,
-     } 
-   }
-   if ( $version == '11.2.0.3' or $version == '11.2.0.4' ) {     
-     exec { "install oracle database ${title}":
-            command     => "/bin/sh -c 'unset DISPLAY;${path}/${file}/database/runInstaller -silent -waitforcompletion -responseFile ${path}/db_install_${version}.rsp'",
-            require     => [File ["${oraInstPath}/oraInst.loc"],File["${path}/db_install_${version}.rsp"],Exec["extract ${path}/${file}_7of7.zip"]],
-            creates     => $oracleHome,
-     } 
-   }
-
-   if $version == '11.2.0.1' {     
-     exec { "install oracle database ${title}":
-            command     => "/bin/sh -c 'unset DISPLAY;${path}/${file}/database/runInstaller -silent -waitforcompletion -responseFile ${path}/db_install_${version}.rsp'",
-            require     => [File ["${oraInstPath}/oraInst.loc"],File["${path}/db_install_${version}.rsp"],Exec["extract ${path}/${file}_2of2.zip"]],
-            creates     => $oracleHome,
-     } 
-   }
-   
-   
-   if ! defined(File["/home/${user}/.bash_profile"]) {
-     file { "/home/${user}/.bash_profile":
-            ensure  => present,
-            content => template("oradb/bash_profile.erb"),
-          }
-   }
-   exec { "run root.sh script ${title}":
-          command   => "${oracleHome}/root.sh",
-          user      => 'root',
-          group     => 'root',
-          require   => Exec["install oracle database ${title}"],          
-   }    
-}
-
BREAKS HERE
-  $ssl_enabled = false
-  $ssl_enabled = true
-  gnocchi    => $gnocchi_enabled,
-  ceilometer => true,
-  aodh       => true,
BREAKS HERE
-  class { '::system::augeas':
-  class { '::system::crontabs':
-  class { '::system::execs':
-  class { '::system::facts':
-  class { '::system::files':
-  class { '::system::groups':
-  class { '::system::groups::realize':
-  class { '::system::hosts':
-  class { '::system::limits':
-  class { '::system::mail':
-  class { '::system::mounts':
-  include '::system::network'
-  class { '::system::ntp':
-  class { '::system::packages':
-  class { '::system::schedules':
-  class { '::system::selbooleans':
-  class { '::system::services':
-  class { '::system::sshd':
-  class { '::system::sysconfig':
-  class { '::system::sysctl':
-  class { '::system::templates':
-  class { '::system::users':
-  class { '::system::users::realize':
-  class { '::system::yumgroups':
-  class { '::system::yumrepos':
-  class { '::system::providers':
BREAKS HERE
-  include jenkins
BREAKS HERE
-            if (!defined(File["git_clone_${title}_directory"])) {
-                file { "git_clone_${title}_directory":
-                    path    => $directory,
BREAKS HERE
-  $groups            = [],
-  validate_array ( $groups )
BREAKS HERE
-  $critical_age = 2 * (24 * 60 * 60)
-    check_command       => "check_nrpe!check_file_age!-f /var/lib/clamav/daily.cld -c ${critical_age}",
BREAKS HERE
-
BREAKS HERE
-# This class installs passenger
-#   - ruby::dev
BREAKS HERE
-            'baseurl'  => 'https://trunk.rdoproject.org/centos7-master/de/ae/deae83ce77cc56cae3793845809dd16fc7ebd0cc_07716550/',
BREAKS HERE
-    $dispatch_log_file = '/var/log/wikidata/dispatchChanges-wikidatawiki.log'
-    $test_dispatch_log_file = '/var/log/wikidata/dispatchChanges-testwikidatawiki.log'
-        command => "echo \"\$\$: Starting dispatcher\" >> ${dispatch_log_file}; PHP='hhvm -vEval.Jit=1' /usr/local/bin/mwscript extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki --max-time 600 --batch-size 420 --dispatch-interval 25 --randomness 15 >> ${dispatch_log_file} 2>&1; echo \"\$\$: Dispatcher exited with $?\" >> ${dispatch_log_file}",
-        command => "echo \"\$\$: Starting dispatcher\" >> ${test_dispatch_log_file}; /usr/local/bin/mwscript extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki testwikidatawiki --max-time 900 --batch-size 200 --dispatch-interval 30 >> ${test_dispatch_log_file} 2>&1; echo \"\$\$: Dispatcher exited with $?\" >> ${test_dispatch_log_file}",
BREAKS HERE
-    mode   => 644,
-    mode   => 644,
-    mode => 755,
BREAKS HERE
-    $param = getvar("${param_name}")
BREAKS HERE
-            "puppet://$server/modules/shorewall/shorewall.conf.Default"
BREAKS HERE
-}
BREAKS HERE
-  include '::apt'
-  create_resources(::apt::key, { 'php::repo::debian' => {
-    id     => $key['id'],
-    source => $key['source'],
-  }})
-
-  ::apt::source { "source_php_${release}":
-    require  => Apt::Key['php::repo::debian'],
-      ::apt::source { 'dotdeb-wheezy':
-    # Required packages for PHP 7.1 repository
-    ensure_packages(['lsb-release', 'ca-certificates'], {'ensure' => 'present'})
-
-    # Add PHP 7.1 key + repository
-    apt::key { 'php::repo::debian-php71':
-      id     => 'DF3D585DB8F0EB658690A554AC0E47584A7A714D',
-      source => 'https://packages.sury.org/php/apt.gpg',
-    }
-
-    ::apt::source { 'source_php_71':
-      release  => $facts['os']['distro']['codename'],
-      require  => [
-        Apt::Key['php::repo::debian-php71'],
-        Package['apt-transport-https', 'lsb-release', 'ca-certificates']
-      ],
BREAKS HERE
-    file { '/etc/puppet/puppet.conf':
-      source => 'puppet:///modules/puppet/etc/puppet/puppet.conf.puppetdb'
-    }
-    file  { '/etc/puppet/puppet.conf':
-      ensure => present,
-      mode   => '0644',
-      source => 'puppet:///modules/puppet/etc/puppet/puppet.conf';
-    }
BREAKS HERE
-# This class installs the foreman repo
-    failovermethod => 'priority',
-    gpgkey         => 'http://packages.icinga.org/icinga.key',
BREAKS HERE
-    if 'sudo' in $ldapincludes {
-        class { '::ldap::client::sudo':
-            ldapconfig => $ldapconfig,
-        }
-    }
-
BREAKS HERE
-  # Check that we have something to configure to avoid creating
-  # stub config files.
-    if $fluentd_transform and !empty($sources) {
-      $new_source = {} + map($sources) |$source| {
-          if $source['path'] {
-            $newpath = {
-              'path' => regsubst($source['path'],
-                        $fluentd_transform[0],
-                        $fluentd_transform[1])
-            }
-
-            $source + $newpath
-          } else {
-            $source
-          }
-    }else{
-    # Insert default values into list of sources.
-    $_sources = { 'pos_file' => "${pos_file_path}/${new_source['tag']}.pos" }
-      + $default_source + $new_source
-        'source' => $_sources,
BREAKS HERE
-  $extension_key = $zend ? {
-    true  => 'zend_extension',
-    false => 'extension',
-  $lowercase_title = downcase($title)
-      {"${extension_key}" => "${name}.so"},
BREAKS HERE
-    munin::plugins::djbdns
-	
BREAKS HERE
-    $_repository_configuration = $repository_configuration
BREAKS HERE
-  @collectd::plugin { '00-curl_json':
-    content => "LoadPlugin curl_json\n",
BREAKS HERE
-  Enum['codership', 'mariadb', 'osp5', 'percona'] $vendor_type,
-  String $vendor_version = lookup("${name}::${vendor_type}::default_version", {default_value => undef}),
BREAKS HERE
-  $app_vhost = $vhost ? {
-    'NOTSET' => "${title}",
-    default  => "${vhost}",
-  }
-
BREAKS HERE
-        ''  =>  "munin/plugins/$name",
BREAKS HERE
-        command => "python ${script} 2>&1 >> ${log}",
BREAKS HERE
-    $keep_generator=['categories_rdf:3', 'cirrussearch:3', 'contenttranslation:3', 'globalblocks:3', 'imageinfo:3', 'mediatitles:3', 'pagetitles:3', 'wikibase/wikidatawiki:3']
-    $keep_replicas=['categories_rdf:11', 'cirrussearch:11', 'contenttranslation:14', 'globalblocks:13', 'imageinfo:32', 'mediatitles:90', 'pagetitles:90', 'wikibase/wikidatawiki:20']
BREAKS HERE
-    # Temporarily handle tox separately so we can pin it
-      ensure   => '1.6.1',
-    # Temporarily handle tox separately so we can pin it
-      ensure   => '1.6.1',
BREAKS HERE
-    'PLEK_SERVICE_LICENSIFY_URI': value => "https://licensify.${app_domain}";
-      'PLEK_SERVICE_MAPIT_URI': value  => "https://mapit.${app_domain}";
-      'PLEK_SERVICE_SEARCH_URI': value => "https://search.${app_domain}";
-      'PLEK_SERVICE_RUMMAGER_URI': value => "https://rummager.${app_domain}";
BREAKS HERE
-  } elsif ( $::operatingsystem == 'RedHat' and $::operatingsystemmajrelease == 5 ) {
-  } elsif ( $::operatingsystem == "OracleLinux" ) {
BREAKS HERE
-    'rsync',
BREAKS HERE
-    if $event_id {
-      $session_id = pick($event_pw, regsubst($event_id, '^(\w*-)?(\w*)$', '\2'))
-    }
-    else {
-      $session_id = $classroom::params::session_id
-    }
BREAKS HERE
-# Node-OS:trusty
-    httpd_vhost_name        => 'pholio.openstack.org'),
BREAKS HERE
-        source  => 'puppet:///modules/role/labs/downloadserver.nginx',
BREAKS HERE
-    command     => "chown -R ${owner}:${group} ${install_dir}/plugins",
-    user        => 'root',
-    unless      => "test -d ${install_dir}/versions/${title}",
-    require     => Class['rbenv'],
-    command     => 'git reset --hard HEAD && git pull',
-    cwd         => "${install_dir}/plugins/ruby-build",
-    user        => 'root',
-    unless      => "test -d ${install_dir}/versions/${title}",
-    require     => Rbenv::Plugin['sstephenson/ruby-build'],
-    command     => sprintf("rbenv install ${title}${install_options}%s", $patch ? { undef => '', false => '', default => " < ${patch_file}" }),
-    creates     => "${install_dir}/versions/${title}",
BREAKS HERE
-      'http://tarballs.openstack.org/ci/gerrit-2.4.2-11-gb5a28fb.war',
BREAKS HERE
-        directory          => '/srv/deployment/mediawiki-config',
BREAKS HERE
-        mode   => '0544',
-        mode   => '0544',
BREAKS HERE
-        srange => '$CUMIN_MASTERS ACCEPT',
BREAKS HERE
-      server => "keyserver.ubuntu.com"
-    location => "https://deb.nodesource.com/node_10.x",
-    release => "xenial",
-    repos => "main"
-  # Fixes a circular dependency issue (http://unix.stackexchange.com/a/202990)
-  exec { "remove keyboard configuration":
-    command => "/usr/bin/apt-get remove --assume-yes keyboard-configuration",
-    require => Exec["update"]
-  }
-    require => Exec["remove keyboard configuration"]
-  
BREAKS HERE
-    create_resources(package, $config, $defaults)
BREAKS HERE
-    notify  => Service['nodepool'],
BREAKS HERE
-        require => [ File[$mediawiki_deployment_dir], Package['scap'] ],
BREAKS HERE
-        source => 'puppet:///modules/profile/toolforge/dologmsg',
BREAKS HERE
-  }
BREAKS HERE
-            environment => 'SENTRY_CONF=/etc/sentry/sentry.conf.py',
BREAKS HERE
-        command => "${install_dir}/poller.php -h all >> /dev/null 2>&1",
BREAKS HERE
-      port => $::redis_port;
-      port => $::redis_port;
-      port => $::redis_port;
-      port => $::redis_port;
-      port => $::redis_port;
-      port => $::redis_port;
-      port => $::redis_port;
BREAKS HERE
-        # Install a script to safely restart php
BREAKS HERE
-    $dest,
-    $site,
-    $class_name,
-    $port,
-    $labels = {},
-    $class_parameters = {},
-    # TODO/puppet4: convert this class to use typed parameters
-    validate_string($dest)
-    validate_string($site)
-    validate_string($class_name)
-    validate_numeric($port)
-    validate_hash($labels)
-    validate_hash($class_parameters)
-
BREAKS HERE
-		uri        => 'http://apt.wikimedia.org/wikimedia',
-		dist       => "${::lsbdistcodename}-wikimedia",
-		components => 'main universe',
BREAKS HERE
-
BREAKS HERE
-#   notification object.
-  if $vars { validate_hash ($vars )}
BREAKS HERE
-  $git_url = '',
-    ensure  => directory,
-    owner   => 'bugdaystats',
-    group   => 'bugdaystats',
-    mode    => '0755',
-    source   => 'https://git.openstack.org/openstack-infra/bugdaystats',
BREAKS HERE
-    neutron_url      => "http://${::openstack_integration::config::ip_for_url}:9696",
BREAKS HERE
-  class { 'nginx': }
-    server_name           => [$servername],
-    ssl                   => true,
-    ssl_port              => '8140',
-    listen_port           => '8140', # force ssl_only by matching ssl_port
-    ssl_cert              => "${::puppet::ssldir}/certs/${servername}.pem",
-    ssl_key               => "${::puppet::ssldir}/private_keys/${servername}.pem",
-    ssl_ciphers           => $::puppet::server::ssl_ciphers,
-    ssl_protocols         => $::puppet::server::ssl_protocols,
-    proxy_read_timeout    => '300',
-    proxy                 => "http://puppetmaster_unicorn",
-    vhost_cfg_append      => {
-      proxy_connect_timeout  => '300',
-      proxy_set_header       => [ 'Host $host', 'X-Real-IP $remote_addr', 'X-Forwarded-For $proxy_add_x_forwarded_for', 'X-Client-Verify $ssl_client_verify', 'X-Client-DN $ssl_client_s_dn', 'X-SSL-Issuer $ssl_client_i_dn'],
-
BREAKS HERE
-  include legacy
BREAKS HERE
-  validate_array($import)
-  if !is_array($command) { validate_string($command) }
-  if !is_string($command) { validate_array($command) }
-    command   => $command,
BREAKS HERE
-    sysadmins               => hiera('sysadmins', []),
BREAKS HERE
-    if $::fqdn =~ /^labvirt100[0-9].eqiad.wmnet/ {
-        openstack::nova::compute::partition{ '/dev/sdb':}
-    }
-
-    }
-
-    file { '/var/lib/nova/instances':
-        ensure  => 'directory',
-        owner   => 'nova',
-        group   => 'nova',
-        require => Mount['/var/lib/nova/instances'],
BREAKS HERE
-    diamond::collector { 'LoadAvg': }
BREAKS HERE
-  $host_keys53 = ['/etc/ssh/ssh_host_rsa_key',
-                  '/etc/ssh/ssh_host_dsa_key',
-          $host_keys                = $host_keys53
-          $host_keys                = $host_keys53
-          $host_keys                = $host_keys53
-          $host_keys                = $host_keys53
-          $ciphers                  = $ciphers53
-          $host_keys                = $host_keys53
-          $macs                     = $macs59
BREAKS HERE
-   '/etc/bird/':
-     ensure => directory,
-     mode => '0755';
-   '/etc/apt/preferences.d/bird':
-     ensure => file,
-     mode => "0644",
-     owner => root,
-     group => root,
-     source => "puppet:///modules/ffnord/etc/apt/preferences.d/bird";
-  ffnord::firewall::service { "bird":
-    "INCLUDE_BIRD4": value => $include_bird4;
-    "INCLUDE_BIRD6": value => $include_bird6;
BREAKS HERE
-include ::openstack_integration::sahara
BREAKS HERE
-
-      govuk::app::envvar { 'PLEK_SERVICE_DRAFT_ORIGIN_URI':
-        varname => 'PLEK_SERVICE_DRAFT_ORIGIN_URI',
-        value   => "https://draft-origin.${app_domain}",
-      }
BREAKS HERE
-# sets up an IPsec implementation
-# https://en.wikipedia.org/wiki/StrongSwan
-    package { 'strongswan': ensure => present }
-
-        # Temporary hack to work around ugly strongswan systemd issue,
-        #   see https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=781209
-        exec { 'strongswan-disable-sysvinit':
-            command => '/usr/sbin/dpkg-divert --divert /etc/init.d/ipsec-disabled /etc/init.d/ipsec',
-            unless  => '/usr/bin/test -f /etc/init.d/ipsec.disabled',
-            before  => Package['strongswan'],
-        }
-
BREAKS HERE
-  if $rabbit_hosts {
-    heat_engine_config { 'DEFAULT/rabbit_host': ensure => absent }
-    heat_engine_config { 'DEFAULT/rabbit_port': ensure => absent }
-    heat_engine_config { 'DEFAULT/rabbit_hosts':
-      value => join($rabbit_hosts, ',')
-    }
-  } else {
-    heat_engine_config { 'DEFAULT/rabbit_host': value => $rabbit_host }
-    heat_engine_config { 'DEFAULT/rabbit_port': value => $rabbit_port }
-    heat_engine_config { 'DEFAULT/rabbit_hosts':
-      value => "${rabbit_host}:${rabbit_port}"
-    }
-  }
-
-  if size($rabbit_hosts) > 1 {
-    heat_engine_config { 'DEFAULT/rabbit_ha_queues': value => true }
-  } else {
-    heat_engine_config { 'DEFAULT/rabbit_ha_queues': value => false }
-  }
-
-		    Package['heat-engine'],
-		    Class['heat::db']],
-  heat_engine_config {
-    'DEFAULT/rabbit_userid'          : value => $rabbit_userid;
-    'DEFAULT/rabbit_password'        : value => $rabbit_password;
-    'DEFAULT/rabbit_virtualhost'     : value => $rabbit_virtualhost;
BREAKS HERE
-      err('Only "passenger", "thin", and "unicorn" are valid options for servertype')
BREAKS HERE
-        content => template('diamond/collector.conf.erb'),
BREAKS HERE
-    }
BREAKS HERE
-  $protect_licensify_frontend = str2bool(extlookup('protect_frontend_apps', 'no'))
-
-    vhost_protected    => $protect_licensify_frontend,
BREAKS HERE
-        path        => $archiva_path,
-        read_only   => 'yes',
-        uid         => 'nobody',
-        gid         => 'nogroup',
BREAKS HERE
-        ensure  => $ensure,
BREAKS HERE
-          group       => $group,
BREAKS HERE
-        require       => Package['librenms/librenms'],
BREAKS HERE
-	# Dependencies as mentionned in zuul:tools/pip-requires
-	$packages = [
-			'python-yaml',
-			'python-webob',
-			'python-daemon',
-			'python-lockfile',
-			'python-paramiko',
-			'python-jenkins',
-			'python-paste',
-
-			# GitPython at least 0.3.2RC1 which is neither in Lucid nor in Precise
-			# We had to backport it and its dependencies from Quantal:
-			'python-git',
-			'python-gitdb',
-			'python-async',
-			'python-smmap',
-
-			'python-extras',  # backported in Precise (bug 47122)
-			'python-statsd',
-
-			'python-setuptools',
-	]
-
-	package { $packages:
-		ensure => present,
-	}
-
-	# We have packaged the python voluptuous module under
-	# operations/debs/python-voluptuous. Zuul does not work
-	# AT ALL with version 0.7 so make sure we have 0.6.x
-	package { 'python-voluptuous':
-		ensure => '0.6.1-1~wmf1',
-	}
-
-	# Used to be in /var/lib/git/zuul but /var/lib/git can be used
-	# to replicate git bare repositories.
-	$zuul_source_dir = '/usr/local/src/zuul'
-
-	git::clone { 'integration/zuul':
-		ensure => present,
-		directory => $zuul_source_dir,
-		origin => $git_source_repo,
-		branch => $git_branch,
-	}
-
-	# We do not ship `statsd` python module so ignore it
-	# it is gracefully ignored by Zuul.
-	exec { 'remove_statsd_dependency':
-		command => '/bin/sed -i "s/^statsd/#statsd/" tools/pip-requires',
-		cwd => $zuul_source_dir,
-		refreshonly => true,
-		subscribe => Git::Clone['integration/zuul'],
-	}
-
-	exec { 'install_zuul':
-		# Make sure to install without downloading from pypi
-		command => 'python setup.py easy_install --allow-hosts=None .',
-		cwd => $zuul_source_dir,
-		path => '/bin:/usr/bin',
-		refreshonly => true,
-		subscribe => Git::Clone['integration/zuul'],
-		require => [
-			Exec['remove_statsd_dependency'],
-			Package['python-setuptools'],
-		],
-	}
-
-	file { '/etc/zuul':
-		ensure => directory,
-	}
-
-	# TODO: We should put in  notify either Service['zuul'] or Exec['zuul-reload']
-	#       at some point, but that still has some problems.
-	file { '/etc/zuul/zuul.conf':
-		ensure => present,
-		owner => 'jenkins',
-		mode => '0400',
-		content => template('zuul/zuul.conf.erb'),
-		require => [
-			File['/etc/zuul'],
-			Package['jenkins'],
-		],
-	}
-
-	file { '/var/log/zuul':
-		ensure => directory,
-		owner => 'jenkins',
-		require => Package['jenkins'],
-	}
-
-	file { '/var/run/zuul':
-		ensure => directory,
-		owner => 'jenkins',
-		require => Package['jenkins'],
-	}
-
-	file { '/var/lib/zuul':
-		ensure => directory,
-		owner => 'jenkins',
-		require => Package['jenkins'],
-	}
-
-	file { $git_dir:
-		ensure => directory,
-		owner => 'jenkins',
-		require => Package['jenkins'],
-	}
-
-	file { '/etc/init.d/zuul/':
-		ensure => present,
-		owner => 'root',
-		group => 'root',
-		mode => '0555',
-		source => 'puppet:///modules/zuul/zuul.init',
-	}
-
-	exec { 'zuul-reload':
-		command => '/etc/init.d/zuul reload',
-		require => File['/etc/init.d/zuul'],
-		refreshonly => true,
-	}
-
-	service { 'zuul':
-		name => 'zuul',
-		enable => true,
-		hasrestart => true,
-		require => File['/etc/init.d/zuul'],
-	}
BREAKS HERE
-        require => Sudo::User['diamond_check_keyholder']
BREAKS HERE
-    command     => 'ec2api-manage db_sync',
-
-  Exec['ec2api_db_sync'] ~>
-  Service<| tag == 'ec2api-service' |>
-
-  Exec['ec2api_db_sync'] ~>
-  Service<| tag == 'ec2api-service' |>
BREAKS HERE
-    libvirt_virt_type => 'qemu',
-    migration_support => true,
-    vncserver_listen  => '0.0.0.0',
BREAKS HERE
-      'DEFAULT/rabbit_password':     value => $rabbit_password;
-      'DEFAULT/qpid_password':               value => $qpid_password;
-    'DEFAULT/sql_connection':      value => $sql_connection;
BREAKS HERE
-    source => 'puppet:///modules/openstack_project/gerrit/patchset-created',
BREAKS HERE
-        file { "/var/www/planet/${title}/bootstrap.css":
BREAKS HERE
-      Service['carbon-cache'],
BREAKS HERE
-    $smarthost = 'logging.management.production',
-    $smarthost_auth = false
-    require => Class['postfix::package'],
-    notify  => Class['postfix::service'];
BREAKS HERE
-    global_version => '1.4.2',
-  goenv::version { ['1.2.2', '1.3.1', '1.3.3', '1.4.1', '1.4.2']: }
BREAKS HERE
-  $govuk_frontend_servers,
-      servers       => $govuk_frontend_servers;
BREAKS HERE
-    value   => "/etc/st2api/${_logger_config}.conf",
BREAKS HERE
-  $zk_receivers = [
-    'nb03.openstack.org',
-    'nb04.openstack.org',
-    'nl01.openstack.org',
-    'nl02.openstack.org',
-    'zuul01.openstack.org',
-    'zuulv3.openstack.org',
-  ]
-  $zk_iptables_rule = regsubst($zk_receivers,
-                               '^(.*)$', '-m state --state NEW -m tcp -p tcp --dport 2181 -s \1 -j ACCEPT')
-  $iptables_rule = flatten([$zk_iptables_rule])
-    iptables_rules6           => $iptables_rule,
-    iptables_rules4           => $iptables_rule,
BREAKS HERE
-    require ::puppetmaster::gitclone
BREAKS HERE
-      $canonicalweburl='',
BREAKS HERE
-
-    package { $real_package:
-      ensure  => $ensure,
-      require => $require,
-    }
-  } else {
-    package { $real_package:
-      ensure  => $ensure,
-      require => $require,
-    }
BREAKS HERE
-        content => template('gridengine/default-gridengine-shadow.erb'),
BREAKS HERE
-        command  => '/usr/bin/mysql -u root -Bs < /usr/lib/wikistats/grants.sql',
-        user     => 'root',
-        timeout  => '30',
-        unless   => '/usr/bin/test -f /usr/lib/wikistats/db_grants_done',
-        before   => File['/usr/lib/wikistats/db_grants_done'],
-        requires => File['/usr/lib/wikistats/grants.sql'],
BREAKS HERE
-    $plugin_src = $ensure ? { "present" => $name, default => $ensure }
BREAKS HERE
-
BREAKS HERE
-        srange => '(($LABS_NETWORKS @resolve(contint1001.wikimedia.org) @resolve(contint2001.wikimedia.org)))',
BREAKS HERE
-      Class['::epel']
-      -> Class['::nodejs']
-
-      Yumrepo['epel']
-      -> Class['::nodejs']
-
-      Yumrepo['epel']
-      -> Package<| tag == 'nodesource_repo' |>
BREAKS HERE
-  $update_file_url           = $dynatrace::update_file_url,
-  $update_rest_url           = $dynatrace::update_rest_url,
-  $update_user               = $dynatrace::update_user,
-  $update_passwd             = $dynatrace::update_passwd,
BREAKS HERE
-    class { 'mediawiki::maintenance::update_article_count': ensure => $ensure }
BREAKS HERE
-	plugin { apt_all: ensure => present; }
-	plugin {
-    munin::plugin::deploy { "gentoo_lastupdated": }
-define munin::plugin::deploy ($source = '', $enabled = 'true') {
-    $real_source = $source ? {
-        ''  =>  "munin/plugins/$name",
-        default => $source
-    }
-    include munin::plugin::scriptpaths
-	debug ( "munin_plugin_${name}: name=$name, source=$source, script_path=$munin::plugin::scriptpaths::script_path" )
-    file { "munin_plugin_${name}":
-            path => "$munin::plugin::scriptpaths::script_path/${name}",
-            source => "puppet://$servername/$real_source",
-            ensure => file,
-            mode => 0755, owner => root, group => 0;
-    }
-    if $enabled {
-        plugin{$name: ensure => present }
-    }
-}
-    munin::plugin::deploy { "xen": }
-    munin::plugin::deploy { "xen-cpu": }
-    munin::plugin::deploy { "xen_memory": }
-    munin::plugin::deploy { "xen_vbd": }
BREAKS HERE
-    $seeds = split(template('profile/cassandra/seeds.erb'), '\|')
-    $cassandra_hosts_ferm = join($seeds, ' ')
BREAKS HERE
-      'source.list'    => true,
BREAKS HERE
-      'leiningen'
BREAKS HERE
-class apache::mod::authz_host      { apache::mod_conf { 'authz_host':     } }
BREAKS HERE
-        rotate       => 2,
BREAKS HERE
-        'http://tarballs.openstack.org/ci/gerrit/gerrit-v2.13.9.4.2a605d5.war',
BREAKS HERE
-  $node_name    = hiera('bootstrap_nodeid')
-      $node_string = split($node_name, '-')
-      $ha_node_index = $node_string[-1] + 1
-        enable_ha     => true,
-        ha_node_ips   => $odl_api_ips,
-        ha_node_index => $ha_node_index,
BREAKS HERE
-      set $content_type_from_rails $upstream_http_content_type;
-        # invalidation. Note that Cache-Control & Content-Disposition headers
-        # are copied from the Rails response into the proxied response by
-        add_header Content-Type $content_type_from_rails;
BREAKS HERE
-class profile::wmcs::services::postgres::osm_primary {
-    include passwords::osm
-            password => $passwords::osm::osm_password,
-            password => $passwords::osm::osm_password,
-            password => $passwords::osm::kolossos_password,
-            password => $passwords::osm::kolossos_password,
-            password => $passwords::osm::aude_password,
-            password => $passwords::osm::aude_password,
-            password => $passwords::osm::planemad_password,
-            password => $passwords::osm::planemad_password,
BREAKS HERE
-        require => File['/var/lib/gerrit2/review_site/etc'],
BREAKS HERE
-        command     => "find ${::local_git_dir} -type d -name \"*.git\" -print -exec git --git-dir=\"{}\" repack -afd \;",
BREAKS HERE
-        'mw2017.codfw.wmnet' => 'mwdebug2001.codfw.wmnet',
-        backend_regexp  => '^((mwdebug1001|mwdebug1002)\.eqiad\.wmnet|(mwdebug2001|mwdebug2002)\.codfw\.wmnet)',
BREAKS HERE
-        require => [Package['nova-compute'], File['/var/lib/nova/ssl/ca.pem']]
BREAKS HERE
-        require    => File['/etc/pybal/pools'],
BREAKS HERE
-        ensure => present,
-        mode   => '0555',
-        owner  => 'root',
-        group  => 'root',
-        source => "puppet:///modules/${module_name}/authdns-gen-zones.py",
BREAKS HERE
-    include contint::browsertests
BREAKS HERE
-  file { [$conf_dir, $pki_dir]:
-    owner   => $user,
BREAKS HERE
-  # TODO(iurygregory): update configuration to authtoken schema
-    auth_type                   => 'keystone',
-    keystone_password           => 'a_big_secret',
-    auth_url                    => "${::openstack_integration::config::keystone_admin_uri}/v3",
-  # add me in puppet-barbican
-  barbican_config {
-    'keystone_authtoken/auth_uri': value => "${::openstack_integration::config::keystone_auth_uri}/v3";
-  }
BREAKS HERE
-            nrpe_command  => "/usr/lib/nagios/plugins/check_procs -c 1 -a '/usr/bin/varnishkafka -S /etc/varnishkafka/statsv.conf'",
BREAKS HERE
-  include monitoring::checks::reboots
BREAKS HERE
-    $notify_iptables = Service['iptables']
-
-    if ($::osfamily == 'RedHat' and $::operatingsystemmajrelease >= '7') {
-      exec { 'stop-firewalld-if-running':
-        command => '/usr/bin/systemctl stop firewalld',
-        onlyif  => '/usr/bin/pgrep firewalld',
-      }
-      package { 'firewalld':
-        ensure  => 'purged',
-        require => Exec['stop-firewalld-if-running'],
-        before  => Package['iptables'],
-    notify  => $notify_iptables,
BREAKS HERE
-    from                => '15minutes',
-    from                => '15minutes',
-    from                => '15minutes',
BREAKS HERE
-    trusted_ro_paths         => ['/etc/openafs', '/etc/ssl/certs', '/usr/share/ca-certificates', '/var/lib/zuul/ssh'],
BREAKS HERE
-      store_creds    => true,
-    # Make sure admin database exists before mongodb creates the
-    # /root/.mongorc.js file.
-    # This prevents the error:
-    # Could not evaluate MongoDB shell command: load('/root/.mongorc.js'); printjson(db.getMongo().getDBs())
-    Mongodb::Db['admin']
-    -> File[$::mongodb::params::rcfile]
-    -> Mongodb::Db<| title != 'admin' |>
-
BREAKS HERE
-    to => ['govuk-developer-documentation-production.s3-website-eu-west-1.amazonaws.com'],
BREAKS HERE
-    include icinga::group
-    class { 'nagios_common::contactgroups':
-    class { 'nagios_common::contacts':
-      'nagios_common::user_macros',
-      'nagios_common::timeperiods',
-      'nagios_common::notification_commands',
-    class { 'icinga::plugins':
BREAKS HERE
-    fsid                      => '7200aea0-2ddd-4a32-aa2a-d49f66ab554c',
-    manage_repo               => false, # repo already managed in openstack_integration::repo
-    ms_bind_ipv6              => $ms_bind_ipv6,
-    authentication_type       => 'cephx',
-    mon_host                  => $::openstack_integration::config::ip_for_url,
-    mon_initial_members       => $::hostname,
-    osd_pool_default_size     => '1',
-    osd_pool_default_min_size => '1',
-    mon_key                   => 'AQD7kyJQQGoOBhAAqrPAqSopSwPrrfMMomzVdw==',
-    client_keys               => {
-    osds                      => {
-    'global/osd_max_object_namespace_len' => { value => '64' },
-    'global/osd_max_object_name_len'      => { value => '256' },
BREAKS HERE
-    asset_pipeline_prefix => $app_name,
BREAKS HERE
-  $ssl_enabled   = false
-  $trove_enabled = false
-  $trove_enabled = true
-  driver => 'linuxbridge',
-  sahara  => true,
BREAKS HERE
-      'http://www.openstack.org/verify/member/',
BREAKS HERE
-  if !$enable_install and !$enable_upgrade {
-  if $enable_upgrade {
BREAKS HERE
-        check_command => "check_ssl_http_letsencrypt!${tls_host}",
BREAKS HERE
-        case $::operatingsystem {
-          'centos', 'redhat', 'oraclelinux', 'cloudlinux', 'xenserver', 'slc': {
-            yumrepo { 'icinga-stable-release':
-              baseurl  => "http://packages.icinga.com/epel/${::operatingsystemmajrelease}/release/",
-              descr    => 'ICINGA (stable release for epel)',
-              enabled  => 1,
-              gpgcheck => 1,
-              gpgkey   => 'http://packages.icinga.com/icinga.key',
-            }
-
-            Yumrepo['icinga-stable-release'] -> Package<|tag == 'icinga2'|>
-          }
-          default: {
-            fail('Your plattform is not supported to manage a repository.')
-          }
-        case $::operatingsystem {
-          'debian': {
-            include ::apt, ::apt::backports
-            apt::source { 'icinga-stable-release':
-              location => 'http://packages.icinga.com/debian',
-              release  => "icinga-${::lsbdistcodename}",
-              repos    => 'main',
-              key      => {
-                id     => 'F51A91A5EE001AA5D77D53C4C6E319C334410682',
-                source => 'http://packages.icinga.com/icinga.key',
-              },
-              require  => Class['::apt::backports'],
-            }
-          }
-          'ubuntu': {
-            include ::apt
-            apt::source { 'icinga-stable-release':
-              location => 'http://packages.icinga.com/ubuntu',
-              release  => "icinga-${::lsbdistcodename}",
-              repos    => 'main',
-              key      => {
-                id     => 'F51A91A5EE001AA5D77D53C4C6E319C334410682',
-                source => 'http://packages.icinga.com/icinga.key',
-              };
-            }
-          }
-          default: {
-            fail('Your plattform is not supported to manage a repository.')
-          }
-        contain ::apt::update
-        file { '/etc/pki/GPG-KEY-icinga':
-          ensure => file,
-          source => 'http://packages.icinga.com/icinga.key',
-        }
-          command   => 'rpm --import /etc/pki/GPG-KEY-icinga',
-          unless    => "rpm -q gpg-pubkey-`echo $(gpg --throw-keyids < /etc/pki/GPG-KEY-icinga) | cut --characters=11-18 | tr [A-Z] [a-z]`",
-          require   => File['/etc/pki/GPG-KEY-icinga'],
-        case $::operatingsystem {
-          'SLES': {
-            zypprepo { 'icinga-stable-release':
-              baseurl  => "http://packages.icinga.com/SUSE/${::operatingsystemrelease}/release/",
-              enabled  => 1,
-              gpgcheck => 1,
-              require  => Exec['import icinga gpg key'],
-            }
-
-            Zypprepo['icinga-stable-release'] -> Package <| tag == 'icinga2' |>
-          }
-          default: {
-            fail('Your plattform is not supported to manage a repository.')
-          }
BREAKS HERE
-    ensure => '2.7.19-1puppetlabs2',
-    ensure  => '2.7.19-1puppetlabs2',
BREAKS HERE
-  $denied_ip_addresses) {
BREAKS HERE
-    file { '$log_dir':
BREAKS HERE
-                Package['puppetmaster-passenger'],
-                Package['puppetmaster-common']
BREAKS HERE
-    if os_version('ubuntu <= lucid') {
-        package {'timeout':
-            ensure => latest,
-        }
-    }
-
-        require => File['/etc/default/puppet'],
BREAKS HERE
-    enable => true
BREAKS HERE
-  $shorewall4 = true,
-    shorewall4      => $shorewall4,
BREAKS HERE
-#   Location of the certificate revocation list. Defaults to undef.
BREAKS HERE
-      'RABBITMQ_SERVER_START_ARGS' => '"-proto_dist inet6_tcp"'
BREAKS HERE
-          validate_cmd => '/usr/sbin/nutcracker --test-conf %',
BREAKS HERE
-# $server_directory_environments:: Enable directory environments
BREAKS HERE
-          location    => "https://packages.gitlab.com/gitlab/gitlab-${edition}/ubuntu/",
BREAKS HERE
-  if $dnsmasq::params::purge {
BREAKS HERE
-		enabled => true,
BREAKS HERE
-        include passwords::root
BREAKS HERE
-    require_package('conntrack', 'libguestfs-tools')
BREAKS HERE
-      $update_locale_pkg = 'libc-bin'
BREAKS HERE
-  file {'local_settings.py':
-    require => Package['graphite-web'],
BREAKS HERE
-# [*repositoryd*]
-#   `repository.d` is removed since Icinga 2 2.8.0, set to true (default) will handle the directory.
-#   This Parameter will change to false by default in v2.0.0 and will be removed in the future.
-#
-  Boolean                    $repositoryd    = true,
BREAKS HERE
-    monday    => '00:09-17:00',
-    tuesday   => '00:09-17:00',
-    wednesday => '00:09-17:00',
-    thursday  => '00:09-17:00',
-    friday    => '00:09-17:00',
-    saturday  => '00:09-17:00',
-    sunday    => '00:09-17:00',
BREAKS HERE
-  Class['icinga2']
-    Class['icinga2']
-    } -> Class['icinga2']
BREAKS HERE
-    require => [Class['mongodb::s3backup::package'],Class['mongodb::s3backup::backups']],
BREAKS HERE
-        "&& mv ${crt_file}.new ${crt_file}"
BREAKS HERE
-
BREAKS HERE
-  $puppetca_cmd  = "${puppet_cmd} cert"
-
BREAKS HERE
-    true    => st2_latest_revision(),
BREAKS HERE
-        $php_version_major = $php::globals::php_version[0]
BREAKS HERE
-    ensure => $facter_version,
-    require => Package['facter', 'hiera'],
-  # Pin the desired Puppet version so that Puppet doesn't update
-  # without us having tested the new version first. If Puppet breaks,
-  # it won't be able to downgrade itself to the correct version.
-  apt::pin { 'prevent_puppet_breakage':
-    packages   => 'puppet-common puppet',
-    version    => $puppet_version,
-    priority   => 1001, # 1001 will cause a downgrade if necessary
-  }
-  apt::pin { 'prevent_facter_upgrade':
-    packages  => 'facter',
-    version   => $facter_version,
-    priority  => 1001,
-  }
-
BREAKS HERE
-    class { 'mediawiki::maintenance::readinglists': ensure => absent }
BREAKS HERE
-    source  => template("${module_name}/${seeder_wrapper_name}.erb"),
BREAKS HERE
-#   Enable Mtail service. (default true)
-  $enabled = true,
-  $port = 3093,
BREAKS HERE
-    validate_re($::operatingsystemrelease, '^[6-7]\.\d+|^20\d{2}.\d{2}', "Unsupported RedHat release: '${::operatingsystemrelease}'")
-    default => undef,
-      default => undef,
-      default => undef,
-  $gweb   = "graphite_web-${::graphite::gr_graphite_ver}-py${::graphite::params::pyver}.egg-info"
-  ensure_packages($::graphite::params::graphitepkgs, {
-    before => Package['carbon']
-  })
-      ensure => $::graphite::gr_carbon_ver,
-      name   => $::graphite::gr_carbon_pkg,
-      source => $::graphite::gr_carbon_source,
-      before => [
-        Package['txamqp'],
-        Package['carbon'],
-        ],
-      ensure_packages(flatten([
-        $::graphite::params::python_pip_pkg,
-        $::graphite::params::python_dev_pkg,
-        ]))
-      require => Package[
-        'carbon', 'graphite-web', 'whisper'],
BREAKS HERE
-# = Class: role::aptly
-#
-# Sets up a simple aptly repo server serving over http on port 80
-#
-# filtertags: labs-common
-    include ::aptly
-
-    # Auto setup published repositories for all available distros
-    aptly::repo { "trusty-${::labsproject}":
-        publish      => true,
-    }
-
-    aptly::repo { "jessie-${::labsproject}":
-        publish      => true,
-    }
-
-    aptly::repo { "stretch-${::labsproject}":
-        publish      => true,
-    }
-
-    ferm::service { 'aptly':
-        proto  => 'tcp',
-        port   => '80',
-        srange => '$DOMAIN_NETWORKS',
-    }
BREAKS HERE
-#   mysql_host:
-#     The mysql host to which gerrit should connect.
-  $mysql_host = 'localhost',
BREAKS HERE
-    require ::sslcert
BREAKS HERE
-    $additional_forward_zones = "",
-    $forward_zones    = "wmnet=208.80.154.238;208.80.153.231;91.198.174.239, 10.in-addr.arpa=208.80.154.238;208.80.153.231;91.198.174.239"
BREAKS HERE
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
-        notify  => Service['keyholder-proxy'],
BREAKS HERE
-  ensure_packages($header_packages, {
BREAKS HERE
-    class { '::php::repo': } ->
-    Anchor['php::begin']
-  anchor { 'php::begin': } ->
-    class { '::php::packages': } ->
-    class { '::php::cli':
-    } ->
-  anchor { 'php::end': }
-    Class['php::packages'] ->
-    class {'::php::global':
-    } ->
-    Anchor['php::end']
-    Anchor['php::begin'] ->
-      class { '::php::embedded':
-      } ->
-    Anchor['php::end']
-    Anchor['php::begin'] ->
-      class { '::php::dev': } ->
-    Anchor['php::end']
-    Anchor['php::begin'] ->
-      class { '::php::composer':
-      } ->
-    Anchor['php::end']
-    Anchor['php::begin'] ->
-      class { '::php::pear':
-      } ->
-    Anchor['php::end']
-    Anchor['php::begin'] ->
-      class { '::php::phpunit': } ->
-    Anchor['php::end']
-    Anchor['php::begin'] ->
-      class { '::php::apache_config':
-      } ->
-    Anchor['php::end']
BREAKS HERE
-    if $facts['net_driver'][$interface] == 'bnx2x' {
BREAKS HERE
-    content => template('graphite/etc/init.d/carbon-cache.erb'),
-      content => template('graphite/etc/init.d/carbon-relay.erb'),
-      content => template('graphite/etc/init.d/carbon-aggregator.erb'),
BREAKS HERE
-        provider => 'upstart',
BREAKS HERE
-    $prometheus_labels = "instance=~'${::hostname}:.*',layer='${inst}'"
-        query          => "varnish_mgt_child_start{${prometheus_labels}}",
BREAKS HERE
-# - $multicast_group:  multicast group to use for peer discovery.  Defaults to
-#       elasticsearch's default: '224.2.2.4'.
-# - $multicast_enabled: Should multicast be enabled. See
-#       https://www.elastic.co/guide/en/elasticsearch/reference/1.7/modules-discovery-zen.html
-#       for more documentation.
-#       Note: It make sense to have multicast configuration separated from
-#       unicast. It is valid to have both unicast and multicast enabled at the
-#       same time and can be useful as a transition state.
-#       Defaults to 'false'
-#       In an environment without reliable multicast (OpenStack) add all the
-#       hosts in the cluster to this list.  Elasticsearch will still use
-#       multicast discovery but this will keep it from getting lost if none of
-#       its pings reach other servers.
-# - $merge_threads: Number of merge threads to use. Default 3. Set
-#        to 1 if using spinning disks.
-    $multicast_group = '224.2.2.4',
-    $multicast_enabled = false,
-    $unicast_hosts = undef,
-    $merge_threads = 3,
-    validate_bool($multicast_enabled)
-        content => template('elasticsearch/elasticsearch.yml.erb'),
-    file { '/etc/elasticsearch/logging.yml':
-        ensure  => file,
-        owner   => 'root',
-        group   => 'root',
-        content => template('elasticsearch/logging.yml.erb'),
-        mode    => '0444',
-        require => Package['elasticsearch'],
-    # do not actually use any scripts.
-        content => template('elasticsearch/elasticsearch.erb'),
BREAKS HERE
-    # ensure the prefix is passed down
-    Pybal::Conf_file {
-        prefix => $conftool_prefix,
-    }
BREAKS HERE
-  if ! defined(Firewall["0100-INPUT ACCEPT $port"]) {
-      "0100-INPUT ACCEPT $port":
BREAKS HERE
-            source_host => 'labstore1003.eqiad.wmflabs',
BREAKS HERE
-        srange => "(@resolve((${prometheus_nodes})), @resolve((${prometheus_nodes}), AAAA))",
BREAKS HERE
-# [*ssldir*]
-#   The directory where the puppet ssl certs are contained
-#
-    $ssldir           = '/var/lib/puppet/ssl',
BREAKS HERE
-    $master_host = hiera('profile::kubernetes::master_host')
BREAKS HERE
-class puppet_compiler::web($ensure='present') {
BREAKS HERE
-    check_command       => "check_ssl_cert!signon.${app_domain}!30",
-    check_command       => 'check_ssl_cert!www-origin.mirror.provider0.production.govuk.service.gov.uk!30',
-    check_command       => 'check_ssl_cert!www-origin.mirror.provider1.production.govuk.service.gov.uk!30',
BREAKS HERE
-    garbagecollector    => 'st2garbagecollector',
-    st2garbagecollector => 'st2garbagecollector',
BREAKS HERE
-        mwapi_server => $::service::configuration::mwapi_uri,
BREAKS HERE
-    installer_path_detailed => '/opt/dynatrace/agent/lib/dtwsagent',
BREAKS HERE
-  $site_ssl_key_file_contents   = undef,
-  $site_ssl_cert_file           = '/etc/ssl/certs/ssl-cert-snakeoil.pem',
-  $site_ssl_chain_file          = undef,
BREAKS HERE
-  validate_hash($glocal_hooks)
BREAKS HERE
-        hour    => fqdn_rand(23, 'memkeys'),
-        minute  => fqdn_rand(59, 'memkeys'),
BREAKS HERE
-
-    # TODO: Remove this entirely once all hosts have this file removed
-    '/usr/local/sbin/migrate-puppet-agent':
-      ensure => absent,
BREAKS HERE
-  package { 'vnstat' : ensure => installed; }
-  Package['vnstat']
-  -> exec { "vnstat device ${name}":
-           command => "/usr/bin/vnstat -u -i ${name}";
-       }
BREAKS HERE
-      command => "mysql -h '${host}' -u '${user}' -p'${password}' '${database}' < '${ido_mysql_schema_dir}/mysql.sql'",
-      unless  => "mysql -h '${host}' -u '${user}' -p'${password}' '${database}' -Ns -e 'select version from icinga_dbversion'",
BREAKS HERE
-    baseurl  => "${repo_uri}/${::operatingsystem}/${releasever}/\$basearch",
BREAKS HERE
-  icinga::check { 'check_mirror_provider1_cert_valid':
-    check_command       => 'check_ssl_cert!www-origin.mirror.provider1.production.govuk.service.gov.uk!www-origin.mirror.provider1.production.govuk.service.gov.uk!30',
-    host_name           => $::fqdn,
-    service_description => 'check the provider1 mirror SSL certificate is valid and not due to expire',
-  icinga::check { "check_hsts_headers_from_${::hostname}":
-    check_command       => 'check_hsts_headers',
-    service_description => 'Strict-Transport-Security headers',
-    host_name           => $::fqdn,
BREAKS HERE
-      {'redirect' => "prefix https://${domain}.ocf.berkeley.edu%[capture.req.uri] code 301 if { hdr(host) -i ${fqdn} }"}
BREAKS HERE
-    'foreman':        ensure => '0.27.0',    provider => gem;
BREAKS HERE
-#   Defaults to $::processorcount
-  $service_workers                = $::processorcount,
BREAKS HERE
-      settings => $settings,
-        settings => $settings,
-  # FIXME: for deep merging support we need a explicit hash lookup instead of
-  #        automatic parameter lookup
-  #        (https://tickets.puppetlabs.com/browse/HI-118)
-  $real_settings = hiera_hash('php::settings', $settings)
-
BREAKS HERE
-  host          => '127.0.0.1',
BREAKS HERE
-  if  versioncmp($::operatingsystemmajrelease, '7')  != 0 {
BREAKS HERE
-                 "git-review",
BREAKS HERE
-          command   => "unzip -n ${downloadDir}/${patchFile} -d ${oracleHome}",
BREAKS HERE
-  ferm::service{ 'rsync-server':
-      proto  => 'tcp',
-      port   => 873,
-  }
-
BREAKS HERE
-      'RABBITMQ_CTL_ERL_ARGS' => $rabbitmq_additional_erl_args
BREAKS HERE
-#   Defaults to 'utf8_unicode_ci'
-  $collate       = 'utf8_unicode_ci',
BREAKS HERE
-    $remote_syslog = hiera('profile::base:remote_syslog', ['syslog.eqiad.wmnet', 'syslog.codfw.wmnet']),
BREAKS HERE
-    # Clone mediawiki/event-schemas so refinery can use them.
-    class { '::eventschemas': }
-
-    # The analytics/refinery repo will deployed to this node via Scap3.
-    # The analytics user/groups are deployed/managed by Scap.
-    # The analytics_deploy SSH keypair files are stored in the private repo,
-    # and since manage_user is true the analytics_deploy public ssh key
-    # will be added to the 'analytics' user's ssh config. The rationale is to
-    # have a single 'analytics' multi-purpose user that owns refinery files
-    # deployed via scap and could possibly do other things (not yet defined).
-    scap::target { 'analytics/refinery':
-        deploy_user => 'analytics',
-        key_name    => 'analytics_deploy',
-        manage_user => true,
-    }
-
-    # analytics/refinery repository is deployed via git-deploy at this path.
-    # You must deploy this yourself; puppet will not do it for you.
-    $path = '/srv/deployment/analytics/refinery'
-    # Put refinery python module in user PYTHONPATH
-    file { '/etc/profile.d/refinery.sh':
-        content => "export PYTHONPATH=\${PYTHONPATH}:${path}/python",
-    }
-    # Create directory in /var/log for general purpose Refinery job logging.
-    $log_dir = '/var/log/refinery'
-    $log_dir_group = $::realm ? {
-        'production' => 'analytics-admins',
-        'labs'       => "project-${::labsproject}",
-    }
-    file { $log_dir:
-        ensure => 'directory',
-        owner  => 'hdfs',
-        group  => $log_dir_group,
-        # setgid bit here to make refinery log files writeable
-        # by users in the $$log_dir_group group.
-        mode   => '2775',
-    }
-
-    logrotate::conf { 'refinery':
-        source  => 'puppet:///modules/profile/analytics/refinery-logrotate.conf',
-        require => File[$log_dir],
-    }
BREAKS HERE
-    file { [ '/srv/org', '/srv/org/wikimedia', '/srv/org/wikimedia/static-bugzilla' ]:
-        ensure => directory,
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0755',
-    }
BREAKS HERE
-    '/' => "${docroot}/wsgi.py",
BREAKS HERE
-    legacy                  => false,
BREAKS HERE
-    include ::base::firewall
BREAKS HERE
-            dynamic_extension_path   => '/usr/lib/x86_64-linux-gnu/hhvm/extensions/current',
BREAKS HERE
-        proxy_pass https://whitehall-admin.${app_domain};
BREAKS HERE
-        source => 'puppet://modules/puppetmaster/reimage.sh'
BREAKS HERE
-#   Defaults to: false
-#   Defaults to: false
-# [*keystone_host*]
-#   (Optional) DEPRECATED The keystone host.
-#   Defaults to localhost.
-#
-# [*keystone_port*]
-#   (Optional) DEPRECATED The port used to access the keystone host.
-#   Defaults to 35357.
-#
-# [*keystone_protocol*]
-#   (Optional) DEPRECATED. The protocol used to access the keystone host
-#   Defaults to http.
-#
-  $auth_uri                           = false,
-  $identity_uri                       = false,
-  $keystone_host                      = '127.0.0.1',
-  $keystone_port                      = '35357',
-  $keystone_protocol                  = 'http',
-  # if both auth_uri and identity_uri are set we skip these deprecated settings entirely
-  if !$auth_uri or !$identity_uri {
-    if $keystone_host {
-      warning('The keystone_host parameter is deprecated. Please use auth_uri and identity_uri instead.')
-        'keystone_authtoken/auth_host': value => $keystone_host;
-      heat_config {
-        'keystone_authtoken/auth_host': ensure => absent;
-      }
-    }
-
-    if $keystone_port {
-      warning('The keystone_port parameter is deprecated. Please use auth_uri and identity_uri instead.')
-      heat_config {
-        'keystone_authtoken/auth_port': value => $keystone_port;
-      }
-    } else {
-      heat_config {
-        'keystone_authtoken/auth_port': ensure => absent;
-      }
-    }
-
-    if $keystone_protocol {
-      warning('The keystone_protocol parameter is deprecated. Please use auth_uri and identity_uri instead.')
-      heat_config {
-        'keystone_authtoken/auth_protocol': value => $keystone_protocol;
-      }
-    } else {
-      heat_config {
-        'keystone_authtoken/auth_protocol': ensure => absent;
-      }
-      'keystone_authtoken/auth_host': ensure => absent;
-      'keystone_authtoken/auth_port': ensure => absent;
-      'keystone_authtoken/auth_protocol': ensure => absent;
-  if $auth_uri {
-    heat_config { 'keystone_authtoken/auth_uri': value => $auth_uri; }
-  } else {
-    heat_config { 'keystone_authtoken/auth_uri': value => "${keystone_protocol}://${keystone_host}:5000/v2.0"; }
-  }
-  if $identity_uri {
-    heat_config {
-      'keystone_authtoken/identity_uri': value => $identity_uri;
-    }
-  } else {
-    heat_config {
-      'keystone_authtoken/identity_uri': ensure => absent;
-    }
-    'keystone_authtoken/region_name':       value => $region_name;
-    'keystone_authtoken/admin_tenant_name': value => $keystone_tenant;
-    'keystone_authtoken/admin_user':        value => $keystone_user;
-    'keystone_authtoken/admin_password':    value => $keystone_password, secret => true;
BREAKS HERE
-    include apache::status
BREAKS HERE
-  Boolean                                    $prefix                 = false,
BREAKS HERE
-  $common_modules_path = ["${modules_path}/common", "/usr/share/puppet/modules"]
BREAKS HERE
-  $iqdn = regsubst($::fqdn, '\.[^\.]+$', '')
BREAKS HERE
-    file {
-     '/etc/apt/preferences.d/bird':
-        ensure => file,
-        mode => '0644',
-        owner => root,
-        group => root,
-        source => 'puppet:///modules/ffnord/etc/apt/preferences.d/bird';
BREAKS HERE
-#    The value of this is used for the measurement setting in host_template. Icinga defaults to '$host.check_command$'.
-#    The value of this is used for the measurement setting in host_template. Icinga defaults to '$service.check_command$'.
-  Optional[String]                         $host_measurement       = undef,
-  Optional[Hash]                           $host_tags              = undef,
-  Optional[String]                         $service_measurement    = undef,
-  Optional[Hash]                           $service_tags           = undef,
BREAKS HERE
-      disk   => '0',
-      disk   => '0',
-      disk   => '0',
-      disk   => '0',
BREAKS HERE
-# Class: askbot
-# This class installs Askbot and main dependencies, like
-# postgresql or mysql driver, and other django libraries.
-# (django-redis-cache, django-haystack, pysolr, stopforumspam)
-# Parameters:
-#   - $db_provider: database provider (mysql | pgsql)
-#   - $askbot_version: pip package version of askbot
-#   - $redis_enabled: set to true if askbot using redis for cache
-# Actions:
-#   - Install Askbot
-#   - Install Askbot dependencies
-  $db_provider = 'mysql',
-  $askbot_version = '0.7.50',
-  $redis_enabled = false,
-  include apache::mod::wsgi
-  case $db_provider {
-    'mysql': {
-      $package_deps = [ 'python-pip', 'python-dev', 'python-mysqldb' ]
-    }
-    'pgsql': {
-      $package_deps = [ 'python-pip', 'python-dev', 'python-psycopg2' ]
-    }
-    default: {
-      fail("Unsupported database provider: ${db_provider}")
-    }
-  }
-
-  package { $package_deps:
-    ensure => present,
-  if $redis_enabled {
-    package { 'django-redis-cache':
-      ensure   => present,
-      provider => 'pip',
-      before   => Package['askbot'],
-  package { [ 'django-haystack', 'pysolr' ]:
-    ensure   => present,
-    provider => 'pip',
-    before   => Package['askbot'],
-  }
-
-  package { 'stopforumspam':
-    ensure   => present,
-    provider => 'pip',
-    before   => Package['askbot'],
-  }
-
-  package { 'askbot':
-    ensure   => $askbot_version,
-    provider => 'pip',
-    require  => Package[$package_deps],
-  file { '/srv/askbot-sites':
-    ensure => directory,
-    owner  => 'root',
-    group  => 'root',
-    mode   => '0755',
-}
BREAKS HERE
-  # lucid doesn't support the -m and -n options to alert on number of truechimers
-  $ntp_peer_cmd = $::lsbdistcodename ? {
-    'lucid'   => '/usr/lib/nagios/plugins/check_ntp_peer -H 127.0.0.1 -w 0.5 -c 1',
-    'precise' => '/usr/lib/nagios/plugins/check_ntp_peer -H 127.0.0.1 -w 0.5 -c 1 -m @1 -n @0',
-  }
-    content => "command[check_ntp_peer]=${ntp_peer_cmd}\n",
BREAKS HERE
-  archive { '/tmp/logstash_2.0.0-1_all.deb':
-    source        => 'https://download.elastic.co/logstash/logstash/packages/debian/logstash_2.0.0-1_all.deb',
-    checksum      => '094b18c77d7c959c1203012983337d5249922290',
-    source   => '/tmp/logstash_2.0.0-1_all.deb',
-      Archive['/tmp/logstash_2.0.0-1_all.deb'],
BREAKS HERE
-    content => template('zuul/default.erb'),
BREAKS HERE
-    require ::profile::openstack::codfw1dev::clientpackages
BREAKS HERE
-    require => Exec['configure_composer', 'install_moodle'],
BREAKS HERE
-          line => "WORKERSNUM=${_workers}",
BREAKS HERE
-  include cgit
-  class { 'cgit':
BREAKS HERE
-  validate_array($cassandra_servers)
BREAKS HERE
-  $mysql_user_password,
BREAKS HERE
-        config_host     => $config_host
BREAKS HERE
-			mode => 755, owner => root, group => root;
BREAKS HERE
-  Enum['stopped', 'false', 'running', 'true'] $service_ensure   = true, # lint:ignore:quoted_booleans
BREAKS HERE
-    $plugin_src = $ensure ? { "present" => $name, default => $ensure }
BREAKS HERE
-	service { "munin":
-			notify => Service["munin"],
BREAKS HERE
-    if $dynamic_directors {
-        require role::cache::base
-        if $name == '' {
-            $inst = 'backend'
-        } else {
-            $inst = $name
-        }
-        if inline_template("<%= @directors.map{|k,v| v['dynamic'] }.include?('yes') %>") == "true" {
-            $use_dynamic_directors = true
-        } else {
-            $use_dynamic_directors = false
-        }
-        if $use_dynamic_directors {
-            varnish::common::directors { $vcl:
-                instance      => $inst,
-                directors     => $directors,
-                extraopts     => $extraopts,
-                before        => [
-                                  File["/etc/varnish/wikimedia_${vcl}.vcl"],
-                                  Service["varnish${instancesuffix}"]
-                                  ],
-            }
BREAKS HERE
-  $org_oo = getparam(Class['::mysql::server'], "override_options")
BREAKS HERE
-  $smarthost = '',
-  $smarthost_user = '',
-  $smarthost_pass = '',
BREAKS HERE
-  $_version = $autoupdate {
-    true    => st2_latest_version(),
BREAKS HERE
-    war => 'http://ci.openstack.org/tarballs/gerrit-2.4.1-8-g5bbcc7f.war',
-    script_site => 'openstack'
BREAKS HERE
-# [*libvirt_enabled*]
-#   (Optional) Whether or not Libvirt is enabled.
-#   Defaults to false
-#
-# [*manage_migration*]
-#   (Optional) Whether or not manage Nova Live migration
-#   Defaults to false
-#
-# [*nova_compute_enabled*]
-#   (Optional) Whether or not nova-compute is enabled.
-#   Defaults to false
-#
-# [*migration_ssh_key*]
-#   (Optional) SSH key pair for migration SSH tunnel.
-#   Expects a hash with keys 'private_key' and 'public_key'.
-#   Defaults to {}
-#
-# [*migration_ssh_localaddrs*]
-#   (Optional) Restrict ssh migration to clients connecting via this list of
-#   IPs.
-#   Defaults to [] (no restriction)
-#
-# [*libvirt_tls*]
-#   (Optional) Whether or not libvird TLS service is enabled.
-#   Defaults to false
-  $bootstrap_node           = hiera('bootstrap_nodeid', undef),
-  $libvirt_enabled          = false,
-  $manage_migration         = false,
-  $oslomsg_rpc_proto        = hiera('messaging_rpc_service_name', 'rabbit'),
-  $oslomsg_rpc_hosts        = any2array(hiera('rabbitmq_node_names', undef)),
-  $oslomsg_rpc_password     = hiera('nova::rabbit_password'),
-  $oslomsg_rpc_port         = hiera('nova::rabbit_port', '5672'),
-  $oslomsg_rpc_username     = hiera('nova::rabbit_userid', 'guest'),
-  $oslomsg_notify_proto     = hiera('messaging_notify_service_name', 'rabbit'),
-  $oslomsg_notify_hosts     = any2array(hiera('rabbitmq_node_names', undef)),
-  $oslomsg_notify_password  = hiera('nova::rabbit_password'),
-  $oslomsg_notify_port      = hiera('nova::rabbit_port', '5672'),
-  $oslomsg_notify_username  = hiera('nova::rabbit_userid', 'guest'),
-  $oslomsg_use_ssl          = hiera('nova::rabbit_use_ssl', '0'),
-  $nova_compute_enabled     = false,
-  $step                     = Integer(hiera('step')),
-  $migration_ssh_key        = {},
-  $migration_ssh_localaddrs = [],
-  $libvirt_tls              = false
-  validate_array($migration_ssh_localaddrs)
-  $migration_ssh_localaddrs.each |$x| { validate_ip_address($x) }
-  $migration_ssh_localaddrs_real = unique($migration_ssh_localaddrs)
-
-
-  if $step >= 4 {
-    if $manage_migration {
-      # Libvirt setup (live-migration)
-      if $libvirt_tls {
-        class { '::nova::migration::libvirt':
-          transport         => 'tls',
-          configure_libvirt => $libvirt_enabled,
-          configure_nova    => $nova_compute_enabled,
-        }
-      } else {
-        # Reuse the cold-migration SSH tunnel when TLS is not enabled
-        class { '::nova::migration::libvirt':
-          transport          => 'ssh',
-          configure_libvirt  => $libvirt_enabled,
-          configure_nova     => $nova_compute_enabled,
-          client_user        => 'nova_migration',
-          client_extraparams => {'keyfile' => '/etc/nova/migration/identity'}
-        }
-      }
-
-      $services_enabled = hiera('service_names', [])
-      if !empty($migration_ssh_key) and 'sshd' in $services_enabled {
-        # Nova SSH tunnel setup (cold-migration)
-
-        # Server side
-        if !empty($migration_ssh_localaddrs_real) {
-          $allow_type = sprintf('LocalAddress %s User', join($migration_ssh_localaddrs_real,','))
-          $deny_type = 'LocalAddress'
-          $deny_name = sprintf('!%s', join($migration_ssh_localaddrs_real,',!'))
-
-          ssh::server::match_block { 'nova_migration deny':
-            name    => $deny_name,
-            type    => $deny_type,
-            order   => 2,
-            options => {
-              'DenyUsers' => 'nova_migration'
-            },
-            notify  => Service['sshd']
-          }
-        }
-        else {
-          $allow_type = 'User'
-        }
-        $allow_name = 'nova_migration'
-
-        ssh::server::match_block { 'nova_migration allow':
-          name    => $allow_name,
-          type    => $allow_type,
-          order   => 1,
-          options => {
-            'ForceCommand'           => '/bin/nova-migration-wrapper',
-            'PasswordAuthentication' => 'no',
-            'AllowTcpForwarding'     => 'no',
-            'X11Forwarding'          => 'no',
-            'AuthorizedKeysFile'     => '/etc/nova/migration/authorized_keys'
-          },
-          notify  => Service['sshd']
-        }
-
-        $migration_authorized_keys = $migration_ssh_key['public_key']
-        $migration_identity = $migration_ssh_key['private_key']
-        $migration_user_shell = '/bin/bash'
-      }
-      else {
-        # Remove the keys and prevent login when migration over SSH is not enabled
-        $migration_authorized_keys = '# Migration over SSH disabled by TripleO'
-        $migration_identity = '# Migration over SSH disabled by TripleO'
-        $migration_user_shell = '/sbin/nologin'
-      }
-
-      package { 'openstack-nova-migration':
-        ensure => present,
-        tag    => ['openstack', 'nova-package'],
-      }
-
-      file { '/etc/nova/migration/authorized_keys':
-        content => $migration_authorized_keys,
-        mode    => '0640',
-        owner   => 'root',
-        group   => 'nova_migration',
-        require => Package['openstack-nova-migration']
-      }
-
-      file { '/etc/nova/migration/identity':
-        content => $migration_identity,
-        mode    => '0600',
-        owner   => 'nova',
-        group   => 'nova',
-        require => Package['openstack-nova-migration']
-      }
-
-      user {'nova_migration':
-        shell   => $migration_user_shell,
-        require => Package['openstack-nova-migration']
-      }
-    }
-  }
BREAKS HERE
-    package {
-        ['git-core', 'php5', 'php5-mysql', 'php5-gd', 'php-apc', 'php5-mailparse',
-         'php5-dev', 'php5-curl', 'php5-cli', 'php5-json', 'php5-ldap']:
-        notify  => Service[apache2],
-        require => Package[php5],
-        owner   => www-data,
-        group   => www-data,
-        owner   => root,
-        group   => root,
BREAKS HERE
-    content => template('splunk/aux/log-local.cfg'),
BREAKS HERE
-  $verbose           = 'False',
-  $debug             = 'False',
BREAKS HERE
-    ensure => present,
-    owner  => 'root',
-    group  => 'root',
-    mode   => '0644',
BREAKS HERE
-  ensure_resource('file_line', 'set initscript env', {
-    match  => $override_match,
-    notify => Service['cinder-volume']
-  })
BREAKS HERE
-            'source-dir' => '/var/lib/config-data/puppet-generated/iscsid/',
BREAKS HERE
-  #FIXME - This maintenance page is currently hardcoded with assets etc
-  #        that it shouldn't be. Specific to migration. Should be changed
-  #        after migration is completed.
-      ensure  => present,
-      content => template('loadbalancer/usr/share/nginx/html/maintenance_page.erb'),
BREAKS HERE
-  $mongodb_nodes_template = '<%= @mongodb_nodes.map { |node| "- #{node}:27017" }.join("\n") %>'
BREAKS HERE
-  $verbose                     = 'False'
BREAKS HERE
-        require => Package[$php_package],
BREAKS HERE
-                notify => Service['uwsgi'],
BREAKS HERE
-class nfs::client::configure{
BREAKS HERE
-  class { 'bandersnatch':
-    bandersnatch_source => 'https://bitbucket.org/jeblair/bandersnatch',
-  }
BREAKS HERE
-#  Defaults to hiera('nova_vncproxy_enabled', false)
-  $nova_novncproxy           = hiera('nova_vncproxy_enabled', false),
BREAKS HERE
- if ! is_domain_name($name) {
BREAKS HERE
-        path => $log_directory,
BREAKS HERE
-        owner   => 'cassandra',
-        group   => 'cassandra',
BREAKS HERE
-        command => 'timeout 3500s /usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/rebuildTermSqlIndex.php --wiki wikidatawiki --entity-type=item --batch-size 500 --sleep 50 --from-id $(ls -t /var/log/wikidata/rebuildTermSqlIndex.log{,*[0-9]} | xargs -d "\n" tac | awk \'/Processed up to page (\d+?)/ { print $5; exit }\') >> /var/log/wikidata/rebuildTermSqlIndex.log 2>&1',
BREAKS HERE
-# [*package_repo_ensure*]
BREAKS HERE
-# Class: toollabs
-#
-# This is a "sub" role included by the actual tool labs roles and would
-# normally not be included directly in node definitions.
-#
-# Parameters:
-#
-# Actions:
-#
-# Requires:
-#
-# Sample Usage:
-#
-
-    $sysdir = '/data/project/.system'
-    #
-    # The $store is an incredibly horrid workaround the fact that we cannot
-    # use exported resources in our puppet setup: individual instances store
-    # information in a shared filesystem that are collected locally into
-    # files to finish up the configuration.
-    #
-    # Case in point here: SSH host keys distributed around the project for
-    # known_hosts and HBA of the execution nodes.
-    #
-        ensure => directory,
-        owner  => 'root',
-        group  => "${::labsproject}.admin",
-        mode   => '2775',
-        content => "${::fqdn},${::hostname},${::ipaddress} ssh-rsa ${::sshrsakey}\n${::fqdn},${::hostname},${::ipaddress} ecdsa-sha2-nistp256 ${::sshecdsakey}\n"
-        require => File[$store],
-        require => Exec['make_known_hosts'],
-    # This is atrocious, but the only way to make certain
-    # that the gridengine system directory is properly shared
-    # between all grid nodes for proper access to accounting
-    # and scheduling.  Yes, this uses before.
-
-    $geconf     = "${sysdir}/gridengine"
-    $collectors = "${geconf}/collectors"
-
-    file { $geconf:
-        ensure  => directory,
-        require => File[$sysdir],
-    }
-
-    file { $collectors:
-        ensure  => directory,
-        require => File[$geconf],
-    }
-
-    file { '/var/lib/gridengine':
-        ensure  => directory,
-    }
-
-    mount { '/var/lib/gridengine':
-        ensure  => mounted,
-        device  => "${sysdir}/gridengine",
-        fstype  => none,
-        options => 'rw,bind,noauto',
-        require => File[
-            $geconf,
-            '/var/lib/gridengine'
-        ],
-    }
-
-    Mount['/var/lib/gridengine'] -> Package <| title == 'gridengine-common' |>
-    # this is a link to shared folder
-        ensure => link,
-        target => '/data/project/.shared'
-        ensure => link,
-        force  => true,
-        target => "${store}/mail",
-    }
-
-    # Install at on all hosts for maintenance tasks.
-    package { 'at':
-        ensure => latest,
-    diamond::collector::localcrontab { 'localcrontabcollector': }
-
-    # Make sure nano is installed and the default editor
-    package { 'nano':
-        ensure => latest,
-    }
-
-    alternatives::select { 'editor':
-        path => '/bin/nano',
-    }
BREAKS HERE
-#   (Optional) Whether to enable the v1 API (true/false).
-  # V1/V2 APIs
BREAKS HERE
-                    $merge_threads = 3) {
BREAKS HERE
-        ensure  => absent,
-        command => 'timeout 3500s /usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/rebuildTermSqlIndex.php --wiki wikidatawiki --entity-type=item --batch-size 500 --sleep 50 --from-id $(tail -100 /var/log/wikidata/rebuildTermSqlIndex.log | grep -E "Processed up to page (\d+?)" | sed -E "s/Processed up to page //; s/ \(Q.+?//" | tail -1) >> /var/log/wikidata/rebuildTermSqlIndex.log 2>&1',
BREAKS HERE
-  $rabbitmq_user_password
BREAKS HERE
-                'eqiad' => [ "lvs1001", "lvs1004", "lvs1007", "lvs1010" ],
-                'codfw' => [ "lvs2001", "lvs2004" ],
-                'esams' => [ "lvs3001", "lvs3003" ],
-                'ulsfo' => [ "lvs4001", "lvs4003" ],
-                'eqiad' => [ "lvs1002", "lvs1005", "lvs1008", "lvs1011" ],
-                'codfw' => [ "lvs2002", "lvs2005" ],
-                'esams' => [ "lvs3002", "lvs3004" ],
-                'ulsfo' => [ "lvs4002", "lvs4004" ],
-                'eqiad' => [ "lvs1003", "lvs1006", "lvs1009", "lvs1012" ],
-                'codfw' => [ "lvs2003", "lvs2006" ],
-        $v6_ip = "::"
-        'bgp' => "yes",
-            /^lvs100[1-3]$/ => "208.80.154.196", # cr1-eqiad
-            /^lvs100[4-6]$/ => "208.80.154.197", # cr2-eqiad
-            /^lvs100[789]$/ => "208.80.154.196", # cr1-eqiad
-            /^lvs101[012]$/ => "208.80.154.197", # cr2-eqiad
-            /^lvs200[1-3]$/ => "208.80.153.192", # cr1-codfw
-            /^lvs200[4-6]$/ => "208.80.153.193", # cr2-codfw
-            /^lvs300[12]$/  => "91.198.174.245",  # cr1-esams
-            /^lvs300[34]$/  => "91.198.174.246",  # cr2-knams
-            /^lvs400[12]$/  => "198.35.26.192",   # cr1-ulsfo
-            /^lvs400[34]$/  => "198.35.26.193",   # cr2-ulsfo
-            default         => "(unspecified)"
-        },
-            'lvs1004' => "208.80.154.58",
-            'lvs1005' => "208.80.154.59",
-            'lvs1006' => "208.80.154.60",
-            'lvs1007' => "208.80.154.43",
-            'lvs1008' => "208.80.154.44",
-            'lvs1009' => "208.80.154.45",
-            'lvs1010' => "208.80.154.46",
-            'lvs1011' => "208.80.154.47",
-            'lvs1012' => "208.80.154.48",
-            'lvs1001' => "208.80.154.140",
-            'lvs1002' => "208.80.154.141",
-            'lvs1003' => "208.80.154.142",
-            'lvs1007' => "208.80.154.161",
-            'lvs1008' => "208.80.154.162",
-            'lvs1009' => "208.80.154.163",
-            'lvs1010' => "208.80.154.164",
-            'lvs1011' => "208.80.154.165",
-            'lvs1012' => "208.80.154.166",
-            'lvs1001' => "208.80.154.78",
-            'lvs1002' => "208.80.154.68",
-            'lvs1003' => "208.80.154.69",
-            'lvs1004' => "208.80.154.70",
-            'lvs1005' => "208.80.154.71",
-            'lvs1006' => "208.80.154.72",
-            'lvs1007' => "208.80.154.96",
-            'lvs1008' => "208.80.154.97",
-            'lvs1009' => "208.80.154.98",
-            'lvs1010' => "208.80.154.99",
-            'lvs1011' => "208.80.154.100",
-            'lvs1012' => "208.80.154.101",
-            'lvs1007' => "208.80.155.111",
-            'lvs1008' => "208.80.155.112",
-            'lvs1009' => "208.80.155.113",
-            'lvs1010' => "208.80.155.114",
-            'lvs1011' => "208.80.155.115",
-            'lvs1012' => "208.80.155.116",
-            'lvs1001' => "10.64.1.1",
-            'lvs1002' => "10.64.1.2",
-            'lvs1003' => "10.64.1.3",
-            'lvs1004' => "10.64.1.4",
-            'lvs1005' => "10.64.1.5",
-            'lvs1006' => "10.64.1.6",
-            'lvs1010' => "10.64.1.10",
-            'lvs1011' => "10.64.1.11",
-            'lvs1012' => "10.64.1.12",
-            'lvs1001' => "10.64.17.1",
-            'lvs1002' => "10.64.17.2",
-            'lvs1003' => "10.64.17.3",
-            'lvs1004' => "10.64.17.4",
-            'lvs1005' => "10.64.17.5",
-            'lvs1006' => "10.64.17.6",
-            'lvs1007' => "10.64.17.7",
-            'lvs1008' => "10.64.17.8",
-            'lvs1009' => "10.64.17.9",
-            'lvs1010' => "10.64.17.10",
-            'lvs1011' => "10.64.17.11",
-            'lvs1012' => "10.64.17.12",
-            'lvs1001' => "10.64.33.1",
-            'lvs1002' => "10.64.33.2",
-            'lvs1003' => "10.64.33.3",
-            'lvs1004' => "10.64.33.4",
-            'lvs1005' => "10.64.33.5",
-            'lvs1006' => "10.64.33.6",
-            'lvs1007' => "10.64.33.7",
-            'lvs1008' => "10.64.33.8",
-            'lvs1009' => "10.64.33.9",
-            'lvs1007' => "10.64.49.7",
-            'lvs1008' => "10.64.49.8",
-            'lvs1009' => "10.64.49.9",
-            'lvs1010' => "10.64.49.10",
-            'lvs1011' => "10.64.49.11",
-            'lvs1012' => "10.64.49.12",
-            'lvs2001' => "208.80.153.6",
-            'lvs2002' => "208.80.153.7",
-            'lvs2003' => "208.80.153.8",
-            'lvs2004' => "208.80.153.9",
-            'lvs2005' => "208.80.153.10",
-            'lvs2006' => "208.80.153.11",
-            'lvs2001' => "208.80.153.39",
-            'lvs2002' => "208.80.153.40",
-            'lvs2003' => "208.80.153.41",
-            'lvs2004' => "208.80.153.36",
-            'lvs2005' => "208.80.153.37",
-            'lvs2006' => "208.80.153.38",
-            'lvs2001' => "208.80.153.68",
-            'lvs2002' => "208.80.153.69",
-            'lvs2003' => "208.80.153.70",
-            'lvs2004' => "208.80.153.71",
-            'lvs2005' => "208.80.153.72",
-            'lvs2006' => "208.80.153.73",
-            'lvs2004' => "10.192.1.4",
-            'lvs2005' => "10.192.1.5",
-            'lvs2006' => "10.192.1.6",
-            'lvs2001' => "10.192.17.1",
-            'lvs2002' => "10.192.17.2",
-            'lvs2003' => "10.192.17.3",
-            'lvs2001' => "10.192.33.1",
-            'lvs2002' => "10.192.33.2",
-            'lvs2003' => "10.192.33.3",
-            'lvs2004' => "10.192.33.4",
-            'lvs2005' => "10.192.33.5",
-            'lvs2006' => "10.192.33.6",
BREAKS HERE
-        broker_list => $kafka_config['brokers']['string'],
-        redis_pass  => $::passwords::redis::main_password
BREAKS HERE
-class icinga2::config inherits icinga2::params {
BREAKS HERE
-    file{ '/etc/logster/badpass':
-        ensure => 'file',
-        owner  => 'root',
-        group  => 'deployment',
-        mode   => '0675',
-    }
-
-        logster_options => "--parser-option='-a /etc/logster/csp.yaml -s /srv/security/logs/csp-report-only.log -n CSP -e logsteralarms@wikimedia.org'",
-        logster_options => "--parser-option='-a /etc/logster/badpass-priv.yaml -s /srv/security/logs/badpass-priv.log -n badpass-priv -e logsteralarms@wikimedia.org'",
BREAKS HERE
-    $modulepath         = '$confdir/modules/site:$confdir/env/$environment/dist',
-    $manifest           = '$confdir/modules/site/site.pp',
-    $config_version_cmd = '/usr/bin/git --git-dir $confdir/environments/$environment/.git rev-parse --short HEAD 2>/dev/null || echo',
-    $storeconfigs       = undef,
-    $report             = 'true',
-    $reports            = ["store", "https"],
-    $reporturl          = "http://$fqdn/reports",
-    $servertype         = "unicorn",
-    $ca                 = false,
-    $bindaddress        = '::',
-    $enc                = '',
-    $enc_exec           = '',
-    $monitor_server     = hiera('puppet_server_monitor', 'true'),
-    $backup_server      = hiera('puppet_server_backup', 'true')
-    $ensure             = 'present',
-  ) {
BREAKS HERE
-
-  # Both these variables should not be hard-coded but it's just a temporary
-  # solution since this information won't be necessary in future releases of
-  # plugin
-  $app_note_version = "1.2.2"
-  $app_note_folder = "6wind-app-note-openstack-support-v${app_note_version}-ubuntu-14.04"
-  $app_note_archive_ext = ".tar.gz"
-  $app_note_archive = "${$app_note_folder}${$app_note_archive_ext}"
-
BREAKS HERE
-      srange => $neighbors_list,
-        srange => $neighbors_list,
-        srange => $neighbors_list,
BREAKS HERE
-) {
-      file { "check_${title}_needs_merge":
-          ensure  => present,
-          path    => "/usr/local/lib/nagios/plugins/check_${title}-needs-merge",
-          owner   => root,
-          group   => root,
-          mode    => '0555',
-          content => template('monitoring/check_git-needs-merge.erb')
-      }
-      nrpe::monitor_service { "${title}_merged":
-          description  => "Unmerged changes on repository ${title}",
-          nrpe_command => "/usr/local/lib/nagios/plugins/check_${title}-needs-merge",
-          require      => File["check_${title}_needs_merge"]
-      }
BREAKS HERE
-      $carbon_line_receiver_interface  = '127.0.0.1'
-      $carbon_udp_receiver_interface   = '127.0.0.1'
-      $carbon_pickle_receiver_iterface = '127.0.0.1'
-      $carbon_cache_query_interface    = '127.0.0.1'
-      $relay_method                    = 'consistent-hashing'
-      $carbon_line_receiver_interface  = '0.0.0.0'
-      $carbon_udp_receiver_interface   = '0.0.0.0'
-      $carbon_pickle_receiver_iterface = '0.0.0.0'
-      $carbon_cache_query_interface    = '0.0.0.0'
-      $relay_method                    = 'rules'
BREAKS HERE
-  service { $relay_service_name:
-    ensure     => $relay_service_enable,
BREAKS HERE
-  $staff = split($::ocf_staff, ',')
-      exec { "git clone https://github.com/ocf/puppet ${repo_path} && cd ${repo_path} && make vendor":
BREAKS HERE
-			command => "/usr/bin/curl http://wp-cli.org/installer.sh -o $install_path/installer.sh",
-			creates => "$install_path/installer.sh",
BREAKS HERE
-      $ruby1_9_1_package = 'ruby1.9.1'
-      $ruby1_9_1_dev_package = 'ruby1.9.1-dev'
BREAKS HERE
-            'score_caches'    => {
-            'scoring_systems' => {
-                'celery_queue' => {
BREAKS HERE
-    munin::plugin::deploy { "pg__connections": enabled => false }
-    munin::plugin::deploy { "pg__locks": enabled => false }
BREAKS HERE
-    install_options => '--index https://pypi.python.org/pypi',
BREAKS HERE
-    port          => $port,
-    servername    => $servername,
-    bind_host     => $bind_host,
-    path          => $path,
-    ssl           => $ssl,
-    workers       => $workers,
-    ssl_cert      => $ssl_cert,
-    ssl_key       => $ssl_key,
-    ssl_chain     => $ssl_chain,
-    ssl_ca        => $ssl_ca,
-    ssl_crl_path  => $ssl_crl_path,
-    ssl_crl       => $ssl_crl,
-    ssl_certs_dir => $ssl_certs_dir,
-    threads       => $threads,
-    priority      => $priority,
BREAKS HERE
-    $trove_enabled   = true
BREAKS HERE
-# [*iscsi_ip_address*]
-#   (Required) The IP address that the iSCSI daemon is listening on
-#
-# [*iscsi_helper*]
-# [*iscsi_protocol*]
-  $iscsi_ip_address,
-  $iscsi_helper              = 'tgtadm',
-  $iscsi_protocol            = $::os_service_default,
-    "${name}/iscsi_ip_address":          value => $iscsi_ip_address;
-    "${name}/iscsi_helper":              value => $iscsi_helper;
-    "${name}/iscsi_protocol":            value => $iscsi_protocol;
-  case $iscsi_helper {
-      fail("Unsupported iscsi helper: ${iscsi_helper}.")
BREAKS HERE
-#   (Optional) Use these options to configure the RabbitMQ message system.
-#   Defaults to 'heat.openstack.common.rpc.impl_kombu'
-  $rpc_backend                        = 'heat.openstack.common.rpc.impl_kombu',
-  if $rpc_backend == 'heat.openstack.common.rpc.impl_kombu' {
-  if $rpc_backend == 'heat.openstack.common.rpc.impl_qpid' {
BREAKS HERE
-# [*rpc_backend*]
-#   (Optional) Use these options to configure the RabbitMQ message system.
-#   Defaults to 'rabbit'
-#
-  $rpc_backend                 = 'rabbit',
-    !is_service_default($rabbit_virtual_host) {
-manila::rabbit_port, manila::rabbit_userid and manila::rabbit_virtual_host are \
-deprecated. Please use manila::default_transport_url instead.")
-  if $rpc_backend == 'manila.openstack.common.rpc.impl_kombu' or $rpc_backend == 'rabbit' {
-
-    if ! $rabbit_password {
-      fail('Please specify a rabbit_password parameter.')
-    }
-
-    oslo::messaging::rabbit { 'manila_config':
-      rabbit_password     => $rabbit_password,
-      rabbit_userid       => $rabbit_userid,
-      rabbit_virtual_host => $rabbit_virtual_host,
-      rabbit_use_ssl      => $rabbit_use_ssl,
-      amqp_durable_queues => $amqp_durable_queues,
-      rabbit_hosts        => $rabbit_hosts,
-      rabbit_host         => $rabbit_host,
-      rabbit_port         => $rabbit_port,
-      rabbit_ha_queues    => $rabbit_ha_queues,
-      kombu_ssl_ca_certs  => $kombu_ssl_ca_certs,
-      kombu_ssl_certfile  => $kombu_ssl_certfile,
-      kombu_ssl_keyfile   => $kombu_ssl_keyfile,
-      kombu_ssl_version   => $kombu_ssl_version,
-    }
-  elsif $rpc_backend == 'amqp' {
-
-    oslo::messaging::amqp { 'manila_config':
-      server_request_prefix  => $amqp_server_request_prefix,
-      broadcast_prefix       => $amqp_broadcast_prefix,
-      group_request_prefix   => $amqp_group_request_prefix,
-      container_name         => $amqp_container_name,
-      idle_timeout           => $amqp_idle_timeout,
-      trace                  => $amqp_trace,
-      allow_insecure_clients => $amqp_allow_insecure_clients,
-      ssl_ca_file            => $amqp_ssl_ca_file,
-      ssl_key_password       => $amqp_ssl_key_password,
-      ssl_cert_file          => $amqp_ssl_cert_file,
-      ssl_key_file           => $amqp_ssl_key_file,
-      sasl_mechanisms        => $amqp_sasl_mechanisms,
-      sasl_config_dir        => $amqp_sasl_config_dir,
-      sasl_config_name       => $amqp_sasl_config_name,
-      username               => $amqp_username,
-      password               => $amqp_password,
-    }
BREAKS HERE
-if $lma_collector['gse_cluster_global'] {
-  $service_clusters = keys($lma_collector['gse_cluster_global']['clusters'])
-  $service_clusters = []
-if $lma_collector['gse_cluster_node'] {
-  openstack_deployment_name => $env_id,
-  openstack_management_vip  => $cluster_ip,
-  global_clusters           => $service_clusters,
-  node_clusters             => $node_clusters,
-  require                   => Class['lma_infra_alerting::nagios'],
BREAKS HERE
-
BREAKS HERE
-
-        $ext_lock_path = "${phabdir}/extension_lock_${extension_tag}"
-
BREAKS HERE
-  $whisper_dir              = $::graphite::params::web_whisper_dir,
BREAKS HERE
-  package { 'vstorage-client':
-    ensure => present,
-    tag    => 'cinder-support-package',
-    require => Anchor['cinder::install::end'],
-    notify  => Anchor['cinder::service::begin'],
-  }
-
-  file { '/var/log/pstorage':
-    ensure  => 'directory',
BREAKS HERE
-  Optional[Pattern[/^\d+[ms]*$/]]      $rotation_interval       = undef,
BREAKS HERE
-        luahandler       => 'urlproxy.lua'
BREAKS HERE
-    package { 'phantomjs':
-        ensure => present,
-    }
-
-
-    file { '/srv/webperf/asset-check.js':
-        source  => 'puppet:///modules/webperf/asset-check.js',
-        require => Package['phantomjs'],
-    }
-
-    file { '/srv/webperf/asset-check.py':
-        source  => 'puppet:///modules/webperf/asset-check.py',
-        require => [ File['/srv/webperf/asset-check.js'], Package['ganglia-monitor'] ],
-    }
-
-    file { '/etc/init/asset-check.conf':
-        source  => 'puppet:///modules/webperf/asset-check.conf',
-        require => [ File['/srv/webperf/asset-check.py'], User['webperf'] ],
-    }
-
-    service { 'asset-check':
-        ensure   => running,
-        provider => 'upstart',
-        require  => File['/etc/init/asset-check.conf'],
-    }
BREAKS HERE
-    $root_password = hiera('etcd::auth::common::root_password'),
-            password => $root_password,
BREAKS HERE
-  Stdlib::Absolutepath           $config_file                   = '/etc/gitlab',
BREAKS HERE
-  $pin_puppet            = '3.',
-  $enable_puppet         = false,
-  $http_proxy            = undef,
-  $https_proxy           = undef,
-  $puppetmaster_server   = 'puppetmaster.openstack.org',
-  $puppet_ca_server      = undef,
-  $basemodule_path       = '/etc/puppet/modules',
-  $agent_runinterval     = 600,
-  $puppet_release        = $::lsbdistcodename,
-  $is_master             = false,
-  $is_masterless         = false,
BREAKS HERE
-	}
-
-	if $acpi_available {
-		plugin { acpi: }
BREAKS HERE
-        if !defined(File["/etc/security/keytabs/${keytab_metadata['role']}'"]) {
BREAKS HERE
-include ::gitlab
BREAKS HERE
-        $new_source = {} + $all
-      $new_source = {} + $sources
BREAKS HERE
-  $jail     = '90amd64'
BREAKS HERE
-    $yaml_template                    = "${module}/cassandra.yaml.erb",
-    $env_template                     = "${module}/cassandra-env.sh.erb",
-    $rackdc_template                  = "${module}/cassandra-rackdc.properties.erb",
-    validate_string($initial_token)
BREAKS HERE
-    service_enable => false
BREAKS HERE
-    $ensure = present,
BREAKS HERE
-          name                 => 'gitea',
BREAKS HERE
-      # Instruct Nginx to set "Sendfile" headers for both Mainstream and
-      # Whitehall public asset URLs. The Rails app will respond with the
-      # X-Accel-Redirect header set to a path prefixed with /raw/ or
-      # /cloud-storage-proxy/ which will be handled by the relevant internal
-      # location block below.
-      location ~ ^/(media|government/uploads)/(.*) {
-         proxy_set_header X-Sendfile-Type X-Accel-Redirect;
-         proxy_set_header X-Accel-Mapping /var/apps/asset-manager/uploads/assets/=/raw/;
-
-         <%- if @aws_migration %>
-         proxy_pass http://asset-manager-proxy;
-         <%- else %>
-         proxy_pass http://asset-manager.<%= @app_domain %>-proxy;
-         <%- end %>
-       }
-
-      # /raw/(.*) is the path mapping sent from the Rails application to
-      # Nginx and is immediately picked up. /raw/(.*) is not available
-      # publicly as it is an internal path mapping.
-      location ~ /raw/(.*) {
-        internal;
-        add_header GOVUK-Asset-Manager-File-Store NFS;
-
-        # Control whether the asset can be embedded in other pages[1] by
-        # respecting X-Frame-Options from the Rails application.
-        # [1]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
-        add_header X-Frame-Options $upstream_http_x_frame_options;
-
-        alias /var/apps/asset-manager/uploads/assets/$1;
-      }
-
BREAKS HERE
-     } else {
-       cinder_config { 'DEFAULT/rabbit_host':      value => $rabbit_host }
-       cinder_config { 'DEFAULT/rabbit_port':      value => $rabbit_port }
-       cinder_config { 'DEFAULT/rabbit_hosts':     value => "${rabbit_host}:${rabbit_port}" }
-       cinder_config { 'DEFAULT/rabbit_ha_queues': value => false }
-     }
-   }
BREAKS HERE
-  $ensure       = present,
-  $host_name    = undef,
-  $service_name = undef,
-  $vars         = undef,
-  $users        = undef,
-  $user_groups  = undef,
-  $times        = undef,
-  $command      = undef,
-  $interval     = undef,
-  $period       = undef,
-  $zone         = undef,
-  $types        = undef,
-  $states       = undef,
-  $apply        = false,
-  $apply_target = 'Host',
-  $assign       = [],
-  $ignore       = [],
-  $import       = [],
-  $template     = false,
-  $target       = undef,
-  $order        = '85',
-    object_name  => $name,
BREAKS HERE
-    pacemaker::resource::service { $::cinder::params::backup_service : }
BREAKS HERE
-    bundler_version => '1.14.5',
-    bundler_version => '1.14.5',
-    bundler_version => '1.14.5',
-    bundler_version => '1.14.5',
-    bundler_version => '1.14.5',
-    bundler_version => '1.14.5',
-    bundler_version => '1.14.5',
-    bundler_version => '1.14.5',
-    bundler_version => '1.15.0',
-    bundler_version => '1.14.5',
-    bundler_version => '1.14.5',
-    bundler_version => '1.14.5',
-    bundler_version => '1.14.5',
BREAKS HERE
-      $fpm_package_suffix      = 'php-fpm'
BREAKS HERE
-  $auth_uri                    = 'http://127.0.0.1:5000/v2.0',
-    'keystone_authtoken/auth_uri'          : value => $auth_uri;
BREAKS HERE
-    service { 'invisible-unicorn':
BREAKS HERE
-    database_connection => "mysql://nova:${nova_mysql_password}@127.0.0.1/nova?charset=utf8",
-    rabbit_userid       => 'nova',
-    rabbit_password     => $nova_rabbit_password,
-    rabbit_host         => $controller_public_address,
-    rabbit_port         => '5671',
-    rabbit_use_ssl      => true,
-    glance_api_servers  => "https://${controller_public_address}:9292",
-    use_ssl             => true,
-    cert_file           => $ssl_cert_path,
-    key_file            => "/etc/nova/ssl/private/${controller_public_address}.pem",
-    subscribe           => Class['::infracloud::cacert'],
BREAKS HERE
-  $host_certificate = pick($::rh_certificate_consumer_host_cert, "/var/lib/puppet/ssl/certs/${fqdn}.pem")
-  $host_private_key = pick($::rh_certificate_consumer_host_key, "/var/lib/puppet/ssl/private_keys/${fqdn}.pem")
-}
BREAKS HERE
-  Optional[Pattern[/\A(?:\w*-)+(\w*)\Z/]] $event_id           = undef,
BREAKS HERE
-  Class['mrepo::selinux'] ->
-  Class['mrepo::repos'] ->
-  Anchor['mrepo::end']
BREAKS HERE
-                      'DEFAULT/rpc_backend' => { value => 'rabbit' },
BREAKS HERE
-    'HOSTDISPLAYNAME'        => '$host.display_name$',
-    'HOSTDISPLAYNAME'        => '$host.display_name$',
BREAKS HERE
-    # Manages the migration to Nova API in mod_wsgi with Apache.
-    # - First update nova.conf with new parameters
-    # - Stop nova-api process before starting apache to avoid binding error
-    # - Start apache after configuring all vhosts
-    exec { 'stop_nova-api':
-      command     => 'service openstack-nova-api stop',
-      path        => ['/usr/bin', '/usr/sbin'],
-      onlyif      => 'systemctl is-active openstack-nova-api',
-      refreshonly => true,
-    }
-    Nova_config<||> ~> Exec['stop_nova-api']
-    Exec['stop_nova-api'] -> Service['httpd']
-
BREAKS HERE
-          mode   => '0644',
-          owner  => 'root',
-          group  => 'root',
-          source => template("puppet:///modules/puppet/agent_service.erb"),
BREAKS HERE
-			content => template("munin/munin-node.conf.$operatingsystem.$lsbdistrelease"),
BREAKS HERE
-    6       => Service['rpcbind'],
-    6       => Service['nfslock'],
BREAKS HERE
-    $druid_properties       = hiera('druid::properties'),
BREAKS HERE
-        path    => ['/usr/bin'],
BREAKS HERE
-#   If nothing is given, it will default to: "systemctl restart ${service name}"
-  $postsave_cmd_real = pick($postsave_cmd, "systemctl restart ${::nova::params::vncproxy_service_name}")
-    postsave_cmd => $postsave_cmd_real,
BREAKS HERE
-define ntp::daemon($servers=[], $peers=[], $query_acl=[], $time_acl=[]) {
BREAKS HERE
-#
-    vmware: {
BREAKS HERE
-  $ec2api_config = {},
BREAKS HERE
-			content => template("munin/munin-node.conf.$operatingsystem.$lsbdistcodename"),
-    File["/etc/munin/munin-node.conf"]{
-			content => template("munin/munin-node.conf.$operatingsystem"),
-    }
BREAKS HERE
-  ) {
-  require graphite::params
-  if $manage_httpd {
BREAKS HERE
-  include elasticsearch
-  elasticsearch::node { 'govuk-development':
BREAKS HERE
-        /^(16.04)$/ => '7.0',
BREAKS HERE
-        Package['heat-engine'],
-        Class['heat::db']],
BREAKS HERE
-      ensure  => present,
-      content => template('govuk/node/s_asset_base/push-attachments-to-s3.sh.erb'),
-      mode    => '0755',
-    }
BREAKS HERE
-    eplite_version => '1.6.6',
BREAKS HERE
-  $ssl_chain_file = '',
-  $ssl_cert_file_contents = '', # If left empty puppet will not create file.
-  $ssl_key_file_contents = '',  # If left empty puppet will not create file.
-  $ssl_chain_file_contents = '' # If left empty puppet will not create file.
-  if $ssl_cert_file_contents != '' {
-  if $ssl_key_file_contents != '' {
-  if $ssl_chain_file_contents != '' {
-    ensure  => 'link',
-    target  => '/etc/php5/mods-available/phabricator.ini',
-    notify  => Service['httpd'],
BREAKS HERE
-  $dynatrace_version = '7.0.0.2411'
BREAKS HERE
-  Boolean $restart_on_logging_change                                    = true
-    'offsets.topic.replication.factor'         => 1,
-    'transaction.state.log.min.isr'            => 1,
-    'transaction.state.log.replication.factor' => 1,
-    'zookeeper.connect'                        => 'localhost:2181',
BREAKS HERE
-  db_host        => $db_host,
-  db_name        => $db_name,
-  db_username    => $db_username,
-  db_password    => $db_password,
-  admin_username => $admin_username,
-  admin_password => $admin_password,
-  domain         => hiera('lma::influxdb::vip'),
-  http_port      => hiera('lma::influxdb::grafana_port'),
-  version        => '3.0.4-1464167696',
BREAKS HERE
-        dumpsdir   => '/data/xmldatadumps/public',
-        remotedirs => 'dumpsdata1002.eqiad.wmnet::data/xmldatadumps/public/, dataset1001.wikimedia.org::data/xmldatadumps/public/',
BREAKS HERE
-    delete_guest_user => true
BREAKS HERE
-    # Hack: faking directories that Trebuchet would normally manage.
-    # The integration project in labs does not use Trebuchet to manage these
-    # packages, but in production we do.
-    if ! defined(File['/srv/deployment']) {
-        file { '/srv/deployment':
-            ensure => 'directory',
-            mode   => '0755',
-        }
-    }
BREAKS HERE
-    target    => 'govuk.app.support.queues.default',
BREAKS HERE
-      firewall_src_port        => $firewall_src_ip,
BREAKS HERE
-                dashboard_links => 'https://grafana.wikimedia.org/dashboard/db/analytics-hadoop?panelId=4&fullscreen&orgId=1',
-                dashboard_links => 'https://grafana.wikimedia.org/dashboard/db/analytics-hadoop?panelId=12&fullscreen&orgId=1',
BREAKS HERE
-  Stdlib::Absolutepath                           $target,
-  Enum['absent', 'present']                      $ensure            = present,
-  String                                         $notification_name = $title,
-  Optional[String]                               $host_name         = undef,
-  Optional[String]                               $service_name      = undef,
-  Optional[Variant[String, Hash]]                $vars              = undef,
-  Optional[Variant[String, Array]]               $users             = undef,
-  Optional[Variant[String, Array]]               $user_groups       = undef,
-  Optional[Hash]                                 $times             = undef,
-  Optional[String]                               $command           = undef,
-  Optional[Pattern[/^\d+\.?\d*[d|h|m|s]?$/]]     $interval          = undef,
-  Optional[String]                               $period            = undef,
-  Optional[String]                               $zone              = undef,
-  Optional[Variant[Array, String]]               $types             = undef,
-  Optional[Variant[Array, String]]               $states            = undef,
-  Variant[Boolean, String]                       $apply             = false,
-  Variant[Boolean, String]                       $prefix            = false,
-  Enum['Host', 'Service']                        $apply_target      = 'Host',
-  Array                                          $assign            = [],
-  Array                                          $ignore            = [],
-  Array                                          $import            = [],
-  Boolean                                        $template          = false,
-  Variant[String, Integer]                       $order             = 85,
BREAKS HERE
-  $control_owner      = $classroom::params::control_owner,
-  $offline            = $classroom::params::offline,
-  $session_id         = $classroom::params::session_id,
-  $jvm_tuning_profile = $classroom::params::jvm_tuning_profile,
-  $use_gitea          = $classroom::params::use_gitea,
-    use_gitea          => $use_gitea,
-    control_owner      => $control_owner,
BREAKS HERE
-      options           => $haproxy_member_options,
BREAKS HERE
-    rabbitmq_user_password => $rabbitmq_password,
-    enable_notifications   => 'False'
BREAKS HERE
-  
BREAKS HERE
-# Default: ''
-# Default: empty
-  $mrepo_env     = '',
-  $mrepo_logging = '',
-      if $::mrepo_env {
BREAKS HERE
-  $stringify_facts   = $puppet::server::stringify_facts,
BREAKS HERE
-      $update_file_path_dtf = "/dynatrace/server_update/dynaTrace-6.5.1.1003.dtf"
BREAKS HERE
-    $master_ip = ipresolve($master_host)
BREAKS HERE
-        require => [Package['nova-compute'], File['/var/lib/nova/ssl/cacert.pem']]
BREAKS HERE
-        owner  => 'root',
BREAKS HERE
-        command => 'hdfs zkfc -formatZK',
BREAKS HERE
-    # Temporary code to remove delayed job related files & services
-    govuk::delayed_job::worker { 'asset-manager':
-      enable_service => false,
-    }
-
BREAKS HERE
-  validate_array($command)
BREAKS HERE
-  include dnsmasq::params
-  anchor { 'dnsmasq::start': }
-  class { 'dnsmasq::install': require => Anchor['dnsmasq::start'], }
-  class { 'dnsmasq::config': require => Class['dnsmasq::install'], }
-  class { 'dnsmasq::service':
-    subscribe => Class['dnsmasq::install', 'dnsmasq::config'],
-  class { 'dnsmasq::reload':
-    require => Class['dnsmasq::service'],
-  anchor { 'dnsmasq::end': require => Class['dnsmasq::service'], }
BREAKS HERE
-        debian: { include shorewall::debian }
-        ubuntu: { include shorewall::debian }
BREAKS HERE
-      subscribe => [ File["/usr/local/gerrit/gerritbot"] ],
BREAKS HERE
-    'client/rbd_default_features'         => { value => '15' },
BREAKS HERE
-        command => '/usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki --max-time 1600 --batch-size 275 --dispatch-interval 25 --lock-grace-interval 200 2>&1 >> /dev/null',
-        command => '/usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki testwikidatawiki --max-time 900 --batch-size 200 --dispatch-interval 30 2>&1 >> /dev/null',
-
BREAKS HERE
-    icinga::plugin { 'check_http_timeout_noncrit':
BREAKS HERE
-  service { 'anope':
-    enable  => true,
-    require => [Package['anope'], Service['inspircd']],
BREAKS HERE
-        owner   => 'icinga',
-        group   => 'icinga',
-        owner   => 'icinga',
-        group   => 'icinga',
-        owner   => 'icinga',
-        group   => 'icinga',
-        group  => 'icinga',
-        group  => 'icinga',
BREAKS HERE
-    auth_uri       => 'http://127.0.0.1:5000/v2.0',
-    identity_uri   => 'http://127.0.0.1:35357/',
BREAKS HERE
-    $keymgr_api_class           = undef
BREAKS HERE
-      content => inline_template("net.netfilter.nf_conntrack_max=<%=conntrack_max%>/n");
BREAKS HERE
-        source => 'puppet:///modules/letsencrypt/acme-setup',
BREAKS HERE
-      case $facts['os']['family'] {
BREAKS HERE
-        listen_address        => '127.0.0.1:9904',
-        proxy_pass => 'http://localhost:9904/analytics',
BREAKS HERE
-#   - icinga2: Uses the icinga2 CLI to generate a Certificate and Key The ticket is generated on the
-# [*ssl_key_path*]
-#   Location of the private key. Default depends on platform:
-#   /var/lib/icinga2/certs/NodeName.key on Linux
-#   C:/ProgramData/icinga2/var/lib/icinga2/certs/NodeName.key on Windows
-#   The Value of NodeName comes from the corresponding constant.
-#
-# [*ssl_cert_path*]
-#   Location of the certificate. Default depends on platform:
-#   /var/lib/icinga2/certs/NodeName.crt on Linux
-#   C:/ProgramData/icinga2/var/lib/icinga2/certs/NodeName.crt on Windows
-#   The Value of NodeName comes from the corresponding constant.
-#
-# [*ssl_csr_path*]
-#   Location of the certificate signing request. Default depends on platform:
-#   /var/lib/icinga2/certs/NodeName.csr on Linux
-#   C:/ProgramData/icinga2/var/lib/icinga2/certs/NodeName.csr on Windows
-#   The Value of NodeName comes from the corresponding constant.
-#
-# [*ssl_cacert_path*]
-#   Location of the CA certificate. Default is:
-#   /var/lib/icinga2/certs/ca.crt on Linux
-#   C:/ProgramData/icinga2/var/lib/icinga2/certs/ca.crt on Windows
-#
-# [*ssl_crl_path*]
-#
-# === Variables
-#
-# [*node_name*]
-#   Certname and Keyname based on constant NodeName.
-#
-# [*_ssl_key_path*]
-#   Validated path to private key file.
-#
-# [*_ssl_cert_path*]
-#   Validated path to certificate file.
-#
-# [*_ssl_casert_path*]
-#   Validated path to root CA certificate file.
-#
-  Optional[Stdlib::Absolutepath]                          $ssl_key_path                     = undef,
-  Optional[Stdlib::Absolutepath]                          $ssl_cert_path                    = undef,
-  Optional[Stdlib::Absolutepath]                          $ssl_cacert_path                  = undef,
-  Optional[Stdlib::Absolutepath]                          $ssl_crl_path                     = undef,
-    crl_path                         => $ssl_crl_path,
BREAKS HERE
-class ocf::packages::postfix($manage = true) {
-  if $manage {
BREAKS HERE
-
-        owner  => 'root',
-        group  => 'root',
BREAKS HERE
-      hour    => '*',
BREAKS HERE
-    # key pair for VE sync tasks (T84731)
-    file { '/var/lib/jenkins/.ssh/jenkins-mwext-sync_id_rsa':
-        ensure  => present,
-        owner   => 'jenkins',
-        group   => 'jenkins',
-        mode    => '0400',
-        content => secret('ssh/ci/jenkins-mwext-sync_id_rsa'),
-        require => User['jenkins'],
-    }
-
-    file { '/var/lib/jenkins/.ssh/jenkins-mwext-sync_id_rsa.pub':
-        ensure  => present,
-        owner   => 'jenkins',
-        group   => 'jenkins',
-        mode    => '0400',
-        source  => 'puppet:///modules/jenkins/jenkins-mwext-sync_id_rsa.pub',
-        require => User['jenkins'],
-    }
-
BREAKS HERE
-# == Class: profile::webperf::arclamp
BREAKS HERE
-    subscribe => Package[$st2::params::st2_web_packages],
BREAKS HERE
-        owner => 'postgres',
-        group => 'postgres',
-        mode => 0755,
BREAKS HERE
-#   Username for the qrouter daemon
-#   Password for the qrouter daemon
-#   Port for the listener (not that we do not use qdr::listener_port
-      listener_port => "${qdr_listener_port}",
-    } ->
BREAKS HERE
-        owner  => 'root',
-        group  => 'root',
BREAKS HERE
-Subproject commit 0cb1e6c4ed3d0efe3d7088dd20aea6dbc1710f56
--- /dev/null
BREAKS HERE
-  Stdlib::Host     $ca_server     = lookup('puppet_ca_server'),
BREAKS HERE
-  if versioncmp($::operatingsystemmajrelease,'6') > 0 {
-    # patch for https://github.com/munin-monitoring/munin/pull/326
-    exec{'sed -i \'s/^AVCSTATS=.*/AVCSTATS="\/sys\/fs\/selinux\/avc\/cache_stats"/\' /usr/share/munin/plugins/selinux_avcstat':
-      onlyif  => 'grep -q "AVCSTATS=\"/selinux" /usr/share/munin/plugins/selinux_avcstat',
-      require => Package['munin-node']
-    }
-  }
BREAKS HERE
-    include ::profile::hadoop::mysql_password
BREAKS HERE
-    war => 'http://ci.openstack.org/tarballs/gerrit-2.4.1-8-g5bbcc7f.war',
BREAKS HERE
-  } ~>
-
-  exec { 'fix_galera_config_errors_episode_I':
-  } ~>
-
-  exec { 'fix_galera_config_errors_episode_II':
BREAKS HERE
-    if os_version('debian == stretch') {
-        cgred::group {'shell':
-            order  => '01',
-            config => {
-                memory => {
-                    'memory.limit_in_bytes' => '4611686018427387903',
-                },
-            },
-            rules  => [
-                '*:/bin/sh             memory     /shell',
-                '*:/bin/dash           memory     /shell',
-                '*:/bin/bash           memory     /shell',
-                '*:/usr/bin/zsh        memory     /shell',
-                '*:/usr/bin/screen     memory     /shell',
-                '*:/usr/bin/tmux       memory     /shell',
-                '*:/usr/bin/lshell     memory     /shell',
-            ],
-        }
-        # misc group for on-the-fly classification
-        # of expensive processes as opposed to kill
-        cgred::group {'throttle':
-            config => {
-                cpu    => {
-                    'cpu.shares' => '128',
-                },
-                memory => {
-                    'memory.limit_in_bytes' => '1152921504606846975',
-                },
-            },
-        }
-        cgred::group {'user-daemons':
-            config => {
-                cpu    => {
-                    'cpu.shares' => '512',
-            },
-                memory => {
-                    'memory.limit_in_bytes' => '1152921504606846975',
-            },
-        },
-            rules  => [
-                '*:/usr/bin/mosh-server             memory /daemon',
-                '*:/usr/lib/openssh/sftp-server     cpu    /daemon',
-                '%                                  memory /daemon',
-            ],
-        }
-        cgred::group {'scripts':
-            config => {
-                cpu    => {
-                    'cpu.shares' => '512',
-                },
-                memory => {
-                    'memory.limit_in_bytes' => '2305843009213693951',
-                },
-            },
-            rules  => [
-                '*:/usr/bin/php             cpu      /scripts',
-                '%                          memory   /scripts',
-                '*:/usr/bin/ruby            cpu      /scripts',
-                '%                          memory   /scripts',
-                '*:/usr/bin/ruby2.3       cpu      /scripts',
-                '%                          memory   /scripts',
-                '*:/usr/bin/python          cpu      /scripts',
-                '%                          memory   /scripts',
-                '*:/usr/bin/python2.7       cpu      /scripts',
-                '%                          memory   /scripts',
-                '*:/usr/bin/python3         cpu      /scripts',
-                '%                          memory   /scripts',
-                '*:/usr/bin/python3.5       cpu      /scripts',
-                '%                          memory   /scripts',
-                '*:/usr/bin/perl            cpu      /scripts',
-                '%                          memory   /scripts',
-                '*:/usr/bin/perl5.24.1      cpu      /scripts',
-                '%                          memory   /scripts',
-                '*:/usr/bin/tclsh8.5        cpu      /scripts',
-                '%                          memory   /scripts',
-                '*:/usr/bin/tclsh8.6        cpu      /scripts',
-                '%                          memory   /scripts',
-                '*:/usr/bin/tclsh8.7        cpu      /scripts',
-                '%                          memory   /scripts',
-                '*:/shared/bin/node         cpu      /scripts',
-                '%                          memory   /scripts',
-                '*:/data/project/shared/tcl/bin/tclsh8.7        cpu      /scripts',
-                '%                                              memory   /scripts',
-            ],
-        }
-        cgred::group {'utilities':
-            config => {
-                cpu    => {
-                    'cpu.shares' => '512',
-                },
-                memory => {
-                    'memory.limit_in_bytes' => '2305843009213693951',
-                },
-            },
-            rules  => [
-                '*:/usr/bin/vim               memory  /utilities',
-                '*:/usr/bin/vim.basic         memory  /utilities',
-                '*:/usr/bin/vim.diff          memory  /utilities',
-                '*:/usr/bin/vim.tiny          memory  /utilities',
-                '*:/usr/bin/nano              memory  /utilities',
-                '*:/usr/bin/unzip             cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/bin/tar                   cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/bin/bzip2                  cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/bin/gzip                  cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/md5sum            cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/sha1sum           cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/sha224sum         cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/sha256sum         cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/sha384sum         cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/sha512sum         cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/make              cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/gcc               cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/g++               cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/find              cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/top               cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/htop              cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/sort              cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/sed               cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/mawk              cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/awk               cpu     /utilities',
-                '%                            memory  /utilities',
-                '*:/usr/bin/wc                cpu     /utilities',
-                '%                            memory  /utilities',
-            ],
-        }
-    }
BREAKS HERE
-    vhost_protected => $protect_cache_servers
BREAKS HERE
-    $phab_settings['auth.login-message'] = template($auth_template)
BREAKS HERE
-    require => [ File['/etc/drush'], Drush['drush'] ],
BREAKS HERE
-        command => '/usr/bin/find /tmp -name "perf-*" -not -cnewer /run/hhvm/hhvm.pid',
BREAKS HERE
-        ensure      => stopped,
-        enable      => false,
-        hasstatus   => false,
-        stop        => '/usr/bin/pkill -9 -f mpt-statusd',
-        require     => Package['mpt-status'],
-        subscribe   => File['/etc/default/mpt-statusd'],
BREAKS HERE
-        'mw1099.eqiad.wmnet' => 'mwdebug1002.eqiad.wmnet',
-        backend_regexp  => '^((mwdebug1001|mwdebug1002)\.eqiad\.wmnet|(mwdebug2001|mwdebug2002)\.codfw\.wmnet)',
BREAKS HERE
-#  include icinga2
-#  include icinga2
-  include prefix($features, 'icinga2::feature::')
BREAKS HERE
-        name      => 'apache2',
-        ensure    => $service_enable,
-        enable    => $service_enable,
-        subscribe => Package['httpd'],
BREAKS HERE
-    ensure => latest,
BREAKS HERE
-  $designate_enabled = true
BREAKS HERE
-    ensure => directory,
-    owner  => 'postgres',
-    group  => 'postgres',
-    mode   => '0775',
-    require  => [ Class['govuk_postgresql::server'], File['/etc/wal-e'] ],
BREAKS HERE
-  if !str2bool("$web_manage_db_setup") {
BREAKS HERE
-    command     => "${path} --no-interaction --quiet self-update",
BREAKS HERE
-        2, 5: {}
-    if $version == 2 {
-        # logging.yml is used by elasticsearch 2.x
-        file { '/etc/elasticsearch/logging.yml':
-            ensure  => file,
-            owner   => 'root',
-            group   => 'root',
-            content => template('elasticsearch/logging.yml.erb'),
-            mode    => '0444',
-            require => Package['elasticsearch'],
-        }
-        # Needs to be defined so the service definition can depend on
-        # it being setup in elasticsearch 5
-        file { '/etc/elasticsearch/log4j2.properties':
-            ensure => absent,
-        }
-        file { '/etc/elasticsearch/jvm.options':
-            ensure => absent,
-        }
-    } else {
-        file { '/etc/elasticsearch/logging.yml':
-            ensure => absent,
-        }
-        # log4j2.properties is used by elasticsearch 5.x
-        file { '/etc/elasticsearch/log4j2.properties':
-            ensure  => file,
-            owner   => 'root',
-            group   => 'root',
-            content => template('elasticsearch/log4j2.properties.erb'),
-            mode    => '0444',
-            require => Package['elasticsearch'],
-        }
-        file { '/etc/elasticsearch/jvm.options':
-            ensure  => file,
-            owner   => 'root',
-            group   => 'root',
-            content => template('elasticsearch/jvm.options.erb'),
-            mode    => '0444',
-            require => Package['elasticsearch'],
-        }
BREAKS HERE
-    class { 'eventschemas': }
-        schemas_path => "${::eventschemas::path}/jsonschema",
BREAKS HERE
-    require openstack::nova::compute::audit
-
-    # qemu-kvm and qemu-system are alternative packages to meet the needs of
-    # libvirt.
-    #  Lately, Precise has been installing qemu-kvm by default.  That's
-    #  different
-    #  from our old, existing servers, and it also defaults to use spice for vms
-    #  even though spice is not installed.  Messy.
-    package { [ 'qemu-kvm' ]:
-        ensure  => absent,
-        require => Package['qemu-system'],
-    # Some older VMs have a hardcoded path to the emulator
-    #  binary, /usr/bin/kvm.  Since the kvm/qemu reorg,
-    #  new distros don't create a kvm binary.  We can safely
-    #  alias kvm to qemu-system-x86_64 which keeps those old
-    #  instances happy.
-    file { '/usr/bin/kvm':
-        ensure  => link,
-        target  => '/usr/bin/qemu-system-x86_64',
-        require => Package['qemu-system'],
-    }
-
-    file { '/var/lib/nova/.ssh':
-        ensure  => 'directory',
-        owner   => 'nova',
-        group   => 'nova',
-        mode    => '0700',
-        require => Package['nova-compute'],
-    }
-    file { '/var/lib/nova/.ssh/id_rsa':
-        owner     => 'nova',
-        group     => 'nova',
-        mode      => '0600',
-        content   => secret('ssh/nova/nova.key'),
-        require   => File['/var/lib/nova/.ssh'],
-        show_diff => false,
-    }
-    file { '/var/lib/nova/.ssh/id_rsa.pub':
-        owner   => 'nova',
-        group   => 'nova',
-        mode    => '0600',
-        content => secret('ssh/nova/nova.pub'),
-        require => File['/var/lib/nova/.ssh'],
-    }
-    file { '/etc/libvirt/libvirtd.conf':
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
-        content => template("openstack/${version}/nova/compute/libvirtd.conf.erb"),
-        notify  => Service[$libvirt_service],
-        require => Package['nova-compute'],
-    # This seems irrelevant in Jessie
-    file { '/etc/libvirt/qemu/networks/autostart/default.xml':
-        ensure  => 'absent',
-        require => Package['libvirt-bin'],
-    }
-
BREAKS HERE
-  $cores_per_port = $settings['cores_per_port']
BREAKS HERE
-#   Defaults to 'cinder.backup.drivers.swift'.
-  $backup_driver                = 'cinder.backup.drivers.swift',
BREAKS HERE
-                         } ]
-                         } ]
-    serveradmin => 'webmaster@openstack.org'
BREAKS HERE
-    $keystone_tenant_real = $::cinder::keystone::authtoken::project_name
-    $keystone_username_real = $::cinder::keystone::authtoken::username
-    $keystone_password_real = $::cinder::keystone::authtoken::password
-        'command'  => "cinder --os-auth-url ${::cinder::keystone::authtoken::auth_uri} --os-project-name ${keystone_tenant_real} --os-username ${keystone_username_real} --os-password ${keystone_password_real} list",
BREAKS HERE
-      default_pool_size => 30,
BREAKS HERE
-    $services = $::nfs::effective_nfsv4_client_services
-    $services = $::nfs::effective_client_services
-  create_resources('service', $services, $service_defaults )
BREAKS HERE
-  $purge = true,
BREAKS HERE
-    server    => 'logging.cluster',
-    log_local => true,
-  rsyslog::snippet { '100-ratelimit':
-  rsyslog::snippet { '100-preservefqdn':
-    content => '$PreserveFQDN on',
-  }
-
-  rsyslog::snippet { '410-audispd':
-  rsyslog::snippet { '490-client-programs':
-    content => template('govuk/etc/rsyslog.d/490-client-programs.conf.erb'),
BREAKS HERE
-  
-  
-    
BREAKS HERE
-  contain "::yum::repo::${yum_repo}"
-  contain '::yum::repo::remi'
BREAKS HERE
-    $store = '/data/project/.system/store'
-    $repo  = '/data/project/.system/deb'
-    file { $store:
-        group   => 'root',
-        mode    => '0755',
BREAKS HERE
-        mysql_health_name     => '-:"SELECT SUM(date_length + index_length) / 1024 / 1024 AS 'db size' FROM information_schema.tables WHERE table_schema = '\" + db_name + \"';"',
BREAKS HERE
-  if $::aws_environment == "staging" {
BREAKS HERE
-      source  => 'puppet:///modules/ocf/ntp.conf',
-      content => template('ocf/ntp.conf.erb'),
BREAKS HERE
-    munin::plugin::deploy{'yum_updates':
BREAKS HERE
-  case $::kernel {
-    'Linux', 'SunOS': {
-      $execPath      = '/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:'
-      $path          = $downloadDir
-
-      Exec { path    => $execPath,
-        user         => $user,
-        group        => $group,
-        logoutput    => true,
-      }
-      File {
-        ensure       => present,
-        mode         => 0775,
-        owner        => $user,
-        group        => $group,
-      }
-    }
-    default: {
-      fail("Unrecognized operating system")
-    }
-  }
-      $oraInstPath        = "/etc"
-      $oraInstPath        = "/var/opt"
-    $mountPoint    = "puppet:///modules/oradb/"
-    $mountPoint    =  $puppetDownloadMntPoint
-    if ! defined(File["${path}/${patchFile}"]) {
-      file { "${path}/${patchFile}":
-          command    => "unzip -n ${path}/${patchFile} -d ${path}",
-          require    => File ["${path}/${patchFile}"],
-          creates    => "${path}/${patchId}",
-          command    => "unzip -n ${mountPoint}/${patchFile} -d ${path}",
-          creates    => "${path}/${patchId}",
-          extracted_patch_dir     => "${path}/${patchId}",
-          extracted_patch_dir     => "${path}/${patchId}",
BREAKS HERE
-# Provisions Icinga alerts for twemproxy.
-        nrpe_command => '/usr/lib/nagios/plugins/check_procs -c 1:2 -u nobody -C nutcracker',
BREAKS HERE
-# [*max_memory*]
-#   Maximum memory allowed for uWSGI workers *combined* (default: 8G).
-#
-    $max_memory        = to_bytes("8G"),
-    package { ['memcached', 'python-memcache', 'graphite-web', 'cgroup-bin']: }
-                'cgroup'      => '/sys/fs/cgroup/memory/graphite-web',
-                'cgroup-opt'  => "memory.limit_in_bytes=${max_memory}",
BREAKS HERE
-  validate_array($import)
-  if !is_array($command) { validate_string($command) }
-  if !is_string($command) { validate_array($command) }
-    'command'   => $command,
BREAKS HERE
-    requires => File[$store],
BREAKS HERE
-	$gr_user                      = '',
-	$gr_max_cache_size            = inf,
-	$gr_max_updates_per_second    = 500,
-	$gr_max_creates_per_minute    = 50,
-	$gr_line_receiver_interface   = '0.0.0.0',
-	$gr_line_receiver_port        = 2003,
-	$gr_enable_udp_listener       = False,
-	$gr_udp_receiver_interface    = '0.0.0.0',
-	$gr_udp_receiver_port         = 2003,
-	$gr_pickle_receiver_interface = '0.0.0.0',
-	$gr_pickle_receiver_port      = 2004,
-	$gr_use_insecure_unpickler    = False,
-	$gr_cache_query_interface     = '0.0.0.0',
-	$gr_cache_query_port          = 7002,
-	$gr_timezone                  = 'GMT',
-	$gr_apache_port               = 80,
-	$gr_apache_port_https         = 443
-	class { 'graphite::install': notify => Class['graphite::config'] }
-	class { 'graphite::config':	require => Class['graphite::install'] }
BREAKS HERE
-            before          => Class['::k8s::apiserver']
BREAKS HERE
-#    
-#     The defauly is 0. From Red Hat 7 this is confifured using the options 
-#     You can add any valid sysfs attribute and its value to the OPTIONS 
-#     parameter.The Red Hat Enterprise Linux (7 )installation program currently 
-#     uses this to configure the layer mode (layer2) and the relative port 
-#     number (portno) of qeth devices. 
-          ensure  => $ensure,
BREAKS HERE
-    include ::mysql
-    include ::passwords::racktables
-    include ::apache
-    include ::apache::mod::php5
-    include ::apache::mod::ssl
-    include ::apache::mod::rewrite
-    include ::apache::mod::headers
BREAKS HERE
-        unless => 'grep -q "if [ -x /opt/munin/sbin/munin-node ]; then echo -n \' munin\'; /opt/munin/sbin/munin-node; fi" /etc/rc.local',
BREAKS HERE
-# [*rabbit_hosts*]
-#   list of the oslo messaging rpc host fqdns
-#   Defaults to hiera('rabbitmq_node_names', undef)
-#
-#   Defaults to hiera('messaging_rpc_service_name', rabbit)
-#   Defaults to hiera('oslo_messaging_rpc_node_names', undef)
-#   Defaults to hiera('nova::rabbit_port', 5672)
-#   Defaults to hiera('nova::rabbit_userid', 'guest')
-#   Defaults to hiera('nova::rabbit_password')
-#   Defaults to hiera('messaging_notify_service_name', rabbit)
-#   Defaults to hiera('oslo_messaging_notify_node_names', undef)
-#   Defaults to hiera('nova::rabbit_port', 5672)
-#   Defaults to hiera('nova::rabbit_userid', 'guest')
-#   Defaults to hiera('nova::rabbit_password')
-# [*oslomsg_use_ssl*]
-#   Defaults to hiera('nova::rabbit_use_ssl', '0')
-  $rabbit_hosts            = hiera('rabbitmq_node_names', undef),
-  $oslomsg_rpc_proto       = hiera('messaging_rpc_service_name', 'rabbit'),
-  $oslomsg_rpc_hosts       = hiera('oslo_messaging_rpc_node_names', undef),
-  $oslomsg_rpc_password    = hiera('nova::rabbit_password'),
-  $oslomsg_rpc_port        = hiera('nova::rabbit_port', '5672'),
-  $oslomsg_rpc_username    = hiera('nova::rabbit_userid', 'guest'),
-  $oslomsg_notify_proto    = hiera('messaging_notify_service_name', 'rabbit'),
-  $oslomsg_notify_hosts    = hiera('oslo_messaging_notify_node_names', undef),
-  $oslomsg_notify_password = hiera('nova::rabbit_password'),
-  $oslomsg_notify_port     = hiera('nova::rabbit_port', '5672'),
-  $oslomsg_notify_username = hiera('nova::rabbit_userid', 'guest'),
-  $oslomsg_use_ssl         = hiera('nova::rabbit_use_ssl', '0'),
-    $oslomsg_use_ssl_real = sprintf('%s', bool2num(str2bool($oslomsg_use_ssl)))
-    $oslomsg_rpc_hosts_real = any2array(pick($rabbit_hosts, $oslomsg_rpc_hosts, []))
-    $oslomsg_notify_hosts_real = any2array(pick($rabbit_hosts, $oslomsg_notify_hosts, []))
-        'hosts'     => $oslomsg_rpc_hosts_real,
-        'ssl'       => $oslomsg_use_ssl_real,
-        'hosts'     => $oslomsg_notify_hosts_real,
-        'ssl'       => $oslomsg_use_ssl_real,
BREAKS HERE
-        command => '/usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki --max-time 540 --batch-size 350 --dispatch-interval 25 --lock-grace-interval 200 >/dev/null 2>&1',
BREAKS HERE
-# Downloads and installs Java Runtime Environment.
BREAKS HERE
-    include ::apache::mod::php5
-    require_package('php5-cli')
BREAKS HERE
-  $bluebox_username     = hiera('nodepool_bluebox_username', 'username')
-  $bluebox_password     = hiera('nodepool_bluebox_password')
-  $bluebox_project      = hiera('nodepool_bluebox_project', 'project')
-  $rackspace_username   = hiera('nodepool_rackspace_username', 'username')
-  $rackspace_password   = hiera('nodepool_rackspace_password')
-  $rackspace_project    = hiera('nodepool_rackspace_project', 'project')
-  $hpcloud_username     = hiera('nodepool_hpcloud_username', 'username')
-  $hpcloud_password     = hiera('nodepool_hpcloud_password')
-  $hpcloud_project      = hiera('nodepool_hpcloud_project', 'project')
-  $internap_username    = hiera('nodepool_internap_username', 'username')
-  $internap_password    = hiera('nodepool_internap_password')
-  $internap_project     = hiera('nodepool_internap_project', 'project')
-  $ovh_username         = hiera('nodepool_ovh_username', 'username')
-  $ovh_password         = hiera('nodepool_ovh_password')
-  $ovh_project          = hiera('nodepool_ovh_project', 'project')
-  $tripleo_username     = hiera('nodepool_tripleo_username', 'username')
-  $tripleo_password     = hiera('nodepool_tripleo_password')
-  $tripleo_project      = hiera('nodepool_tripleo_project', 'project')
-  $clouds_yaml          = template("openstack_project/nodepool/clouds.yaml.erb")
BREAKS HERE
-  $package_ensure     = '3.0.9'
-  $passenger_version  = '3.0.9'
BREAKS HERE
-#   (Optional) Defaults to undef.
-#   (Optional) Defaults to undef.
-#   Defaults to undef
-#   Defaults to undef
-#   Defaults to undef
-#   Defaults to 'TLSv1'
-#   Defaults to '/var/log/cinder'
-#   Defaults to false, not set_
-  $database_max_pool_size             = undef,
-  $database_max_overflow              = undef,
-  $kombu_ssl_ca_certs                 = undef,
-  $kombu_ssl_certfile                 = undef,
-  $kombu_ssl_keyfile                  = undef,
-  $kombu_ssl_version                  = 'TLSv1',
-  $ca_file                            = false,
-  $log_dir                            = '/var/log/cinder',
-    if $rabbit_use_ssl {
-      cinder_config { 'oslo_messaging_rabbit/kombu_ssl_version': value => $kombu_ssl_version }
-
-      if $kombu_ssl_ca_certs {
-        cinder_config { 'oslo_messaging_rabbit/kombu_ssl_ca_certs': value => $kombu_ssl_ca_certs }
-      } else {
-        cinder_config { 'oslo_messaging_rabbit/kombu_ssl_ca_certs': ensure => absent}
-      }
-
-      if $kombu_ssl_certfile {
-        cinder_config { 'oslo_messaging_rabbit/kombu_ssl_certfile': value => $kombu_ssl_certfile }
-      } else {
-        cinder_config { 'oslo_messaging_rabbit/kombu_ssl_certfile': ensure => absent}
-      }
-
-      if $kombu_ssl_keyfile {
-        cinder_config { 'oslo_messaging_rabbit/kombu_ssl_keyfile': value => $kombu_ssl_keyfile }
-      } else {
-        cinder_config { 'oslo_messaging_rabbit/kombu_ssl_keyfile': ensure => absent}
-      }
-    } else {
-      cinder_config {
-        'oslo_messaging_rabbit/kombu_ssl_ca_certs': ensure => absent;
-        'oslo_messaging_rabbit/kombu_ssl_certfile': ensure => absent;
-        'oslo_messaging_rabbit/kombu_ssl_keyfile':  ensure => absent;
-        'oslo_messaging_rabbit/kombu_ssl_version':  ensure => absent;
-      }
-    }
-
-  if $database_max_pool_size {
-    cinder_config {
-      'database/max_pool_size': value => $database_max_pool_size;
-    }
-  } else {
-    cinder_config {
-      'database/max_pool_size': ensure => absent;
-    }
-  }
-
-  if $database_max_overflow {
-    cinder_config {
-      'database/max_overflow': value => $database_max_overflow;
-    }
-  } else {
-    cinder_config {
-      'database/max_overflow': ensure => absent;
-    }
-  }
-
-  if $log_dir {
-    cinder_config {
-      'DEFAULT/log_dir': value => $log_dir;
-    }
-  } else {
-    cinder_config {
-      'DEFAULT/log_dir': ensure => absent;
-    }
-  }
-
-    }
-    if $ca_file {
-      cinder_config { 'DEFAULT/ssl_ca_file' :
-        value => $ca_file,
-      }
-    } else {
-      cinder_config { 'DEFAULT/ssl_ca_file' :
-        ensure => absent,
-      }
BREAKS HERE
-  ## StackStorm default credentials (change these!)
-  $admin_username = 'st2admin'
-  $admin_password = 'Ch@ngeMe'
-
BREAKS HERE
-			ensure => "3.7.10",
-			provider => "pear";
BREAKS HERE
-    ensure   => 'latest',
BREAKS HERE
-# [*graphite_host*]
-#   Hostname or IP of Graphite server (default: localhost).
-#
-# [*graphite_port*]
-#   Port of Graphite server (default: 2003).
-#
-#      graphite_host = 'professor.pmtpa.wmnet',
-#      graphite_port = 2004,
-    $graphite_host = 'localhost',
-    $graphite_port = 2003,
-    $config = ordered_json($settings, {
-        port         => $port,
-        backends     => [ './backends/graphite', './backends/ganglia' ],
-        graphiteHost => $graphite_host,
-        graphitePort => $graphite_port,
-        mgmt_address => '127.0.0.1',
-    })
-
BREAKS HERE
-        $backend_package = $::heat::params::psycopg_package_name
BREAKS HERE
-      mode => '0644',
BREAKS HERE
-  File[$::apache::mod_enable_dir] -> Exec["syntax verification for ${vhost_name}"]
BREAKS HERE
-    pacemaker::constraint::order { 'gansha_vip-then-ganesha':
-        -> Pacemaker::Constraint::Order['gansha_vip-then-ganesha']
BREAKS HERE
-  Package['manila'] -> Manila_config<||>
-  Package['manila'] -> Manila_api_paste_ini<||>
-
BREAKS HERE
-  $vhost_name = $::fqdn,
-  $mysql_host,
-  $mysql_password,
-  $mysql_user,
-  $projects_file,
-  $superusers_file,
-  $ssl_cert_file,
-  $ssl_key_file,
-  $ssl_chain_file,
-  $storyboard_git_source_repo = 'https://git.openstack.org/openstack-infra/storyboard/',
-  $storyboard_revision = 'master',
-  $storyboard_webclient_url = 'http://tarballs.openstack.org/storyboard-webclient/storyboard-webclient-latest.tar.gz',
-  $serveradmin = "webmaster@${::fqdn}",
-  $ssl_cert_file_contents = '',
-  $ssl_key_file_contents = '',
-  $ssl_chain_file_contents = ''
-  include apache
-  include mysql::python
-  include pip
-
-  package { 'libapache2-mod-wsgi':
-    ensure => present,
-  }
-
-  package { 'curl':
-    ensure => present,
-  }
-
-  group { 'storyboard':
-    ensure => present,
-  }
-
-  user { 'storyboard':
-    ensure     => present,
-    home       => '/home/storyboard',
-    shell      => '/bin/bash',
-    gid        => 'storyboard',
-    managehome => true,
-    require    => Group['storyboard'],
-  }
-
-  vcsrepo { '/opt/storyboard':
-    ensure   => latest,
-    provider => git,
-    revision => $storyboard_revision,
-    source   => $storyboard_git_source_repo,
-  }
-
-  exec { 'install-storyboard' :
-    command     => 'pip install /opt/storyboard',
-    path        => '/usr/local/bin:/usr/bin:/bin/',
-    refreshonly => true,
-    subscribe   => Vcsrepo['/opt/storyboard'],
-    notify      => Service['httpd'],
-    require     => Class['pip'],
-  }
-
-  file { '/etc/storyboard':
-    ensure => directory,
-  }
-
-  file { '/etc/storyboard/storyboard.conf':
-    ensure  => present,
-    owner   => 'storyboard',
-    mode    => '0400',
-    content => template('storyboard/storyboard.conf.erb'),
-    notify  => Service['httpd'],
-    require => [
-      File['/etc/storyboard'],
-      User['storyboard'],
-    ],
-  }
-
-  file { '/etc/storyboard/projects.yaml':
-    ensure  => present,
-    owner   => 'storyboard',
-    mode    => '0400',
-    source  => $projects_file,
-    replace => true,
-    require => [
-      File['/etc/storyboard'],
-      User['storyboard'],
-    ],
-  }
-
-  file { '/etc/storyboard/superusers.yaml':
-    ensure  => present,
-    owner   => 'storyboard',
-    mode    => '0400',
-    source  => $superusers_file,
-    replace => true,
-    require => [
-      File['/etc/storyboard'],
-      User['storyboard'],
-    ],
-  }
-
-  exec { 'migrate-storyboard-db':
-    command     => 'storyboard-db-manage --config-file /etc/storyboard/storyboard.conf upgrade head',
-    path        => '/usr/local/bin:/usr/bin:/bin/',
-    refreshonly => true,
-    subscribe   => Exec['install-storyboard'],
-    require     => [
-      File['/etc/storyboard/storyboard.conf'],
-    ],
-  }
-
-  exec { 'load-projects-yaml':
-    command     => 'storyboard-db-manage --config-file /etc/storyboard/storyboard.conf load_projects /etc/storyboard/projects.yaml',
-    path        => '/usr/local/bin:/usr/bin:/bin/',
-    refreshonly => true,
-    subscribe   => File['/etc/storyboard/projects.yaml'],
-    require     => [
-      File['/etc/storyboard/projects.yaml'],
-      Exec['migrate-storyboard-db'],
-    ],
-  }
-
-  exec { 'load-superusers-yaml':
-    command     => 'storyboard-db-manage --config-file /etc/storyboard/storyboard.conf load_superusers /etc/storyboard/superusers.yaml',
-    path        => '/usr/local/bin:/usr/bin:/bin/',
-    refreshonly => true,
-    subscribe   => File['/etc/storyboard/superusers.yaml'],
-    require     => [
-      File['/etc/storyboard/superusers.yaml'],
-      Exec['migrate-storyboard-db'],
-    ],
-  }
-
-  file { '/var/log/storyboard':
-    ensure  => directory,
-    owner   => 'storyboard',
-    require => User['storyboard'],
-  }
-
-  # START storyboard-webclient
-  $tarball = 'storyboard-webclient.tar.gz'
-
-  file { '/var/lib/storyboard':
-    ensure  => directory,
-    owner   => 'storyboard',
-    group   => 'storyboard',
-  }
-
-  # Checking last modified time versus mtime on the file
-  exec { 'get-webclient':
-    command => "curl ${storyboard_webclient_url} -z ./${tarball} -o ${tarball}",
-    path    => '/bin:/usr/bin',
-    cwd     => '/var/lib/storyboard',
-    onlyif  => "curl -I ${storyboard_webclient_url} -z ./${tarball} | grep '200 OK'",
-    require => [
-      File['/var/lib/storyboard'],
-      Package['curl'],
-    ]
-  }
-
-  exec { 'unpack-webclient':
-    command     => "tar -xzf ${tarball}",
-    path        => '/bin:/usr/bin',
-    cwd         => '/var/lib/storyboard',
-    refreshonly => true,
-    subscribe   => Exec['get-webclient'],
-  }
-
-  file { '/var/lib/storyboard/www':
-    ensure  => directory,
-    owner   => 'storyboard',
-    group   => 'storyboard',
-    require => Exec['unpack-webclient'],
-    source  => '/var/lib/storyboard/dist',
-    recurse => true,
-    purge   => true,
-    force   => true
-  }
-
-  # END storyboard-webclient
-
-  apache::vhost { $vhost_name:
-    port     => 80,
-    docroot  => 'MEANINGLESS ARGUMENT',
-    priority => '50',
-    template => 'storyboard/storyboard.vhost.erb',
-    require  => Package['libapache2-mod-wsgi'],
-    ssl      => true,
-  }
-
-  a2mod { 'proxy':
-    ensure => present,
-  }
-
-  a2mod { 'proxy_http':
-    ensure => present,
-  }
-
-  a2mod {'wsgi':
-    ensure  => present,
-    require => Package['libapache2-mod-wsgi'],
-  }
-
-  if $ssl_cert_file_contents != '' {
-    file { $ssl_cert_file:
-      owner   => 'root',
-      group   => 'root',
-      mode    => '0640',
-      content => $ssl_cert_file_contents,
-      before  => Apache::Vhost[$vhost_name],
-    }
-  }
-
-  if $ssl_key_file_contents != '' {
-    file { $ssl_key_file:
-      owner   => 'root',
-      group   => 'ssl-cert',
-      mode    => '0640',
-      content => $ssl_key_file_contents,
-      before  => Apache::Vhost[$vhost_name],
-    }
-  }
-  if $ssl_chain_file_contents != '' {
-    file { $ssl_chain_file:
-      owner   => 'root',
-      group   => 'root',
-      mode    => '0640',
-      content => $ssl_chain_file_contents,
-      before  => Apache::Vhost[$vhost_name],
-    }
BREAKS HERE
-    $script_path_default =  "/usr/share/munin/plugins"
-
-    $script_path_default =  "/usr/libexec/munin/plugins"
-    package { 'munin':
-                alias => munin-node,
-    # link
-    # mh: really needed?
-#    file{
-#        "/etc/init.d/munin":
-#            ensure => "/etc/init.d/munin-node",
-#    }
-
-
-
-    $script_path_default =  "/usr/share/munin/plugins"
BREAKS HERE
-        rule   => "saddr (@resolve((${designate_host} ${second_region_designate_host})))
BREAKS HERE
-  $trove_enabled   = false
BREAKS HERE
-  class { "pxe::menu::default": tftp_root => $tftp_root; }
-
BREAKS HERE
-            File['/etc/mysql/tendril.cfg'],
BREAKS HERE
-        require  => Package['etcd'],
BREAKS HERE
-	# script for warning users when the lab is about to close
-	'/opt/share/puppet/lab-close-notify':
-	  mode    => '0755',
-	  source  => 'puppet:///modules/ocf_desktop/xsession/lab-close-notify';
BREAKS HERE
-  class { "jenkins_jobs":
-    site => "openstack",
-  }
-
BREAKS HERE
-class puppetmaster::puppetdb($master, $port=443, $jetty_port=8080) {
BREAKS HERE
-        $max_spare = ceil($num_workers * 0.3)
-        $min_spare = ceil($num_workers * 0.1)
BREAKS HERE
-  $ssh_rsa_key_contents = '',
-  $ssh_rsa_pubkey_contents = '',
-  include pip
-  if $ssh_rsa_key_contents != '' {
-  if $ssh_rsa_pubkey_contents != '' {
BREAKS HERE
-  $web_index_file = '/var/lib/graphite-web/index'
BREAKS HERE
-      enabled          => true,
BREAKS HERE
-  $ssl_dir  = $::st2::st2web_ssl_dir,
-  $ssl_cert = $::st2::st2web_ssl_cert,
-  $ssl_key  = $::st2::st2web_ssl_key,
-  $version  = $::st2::version,
-  package { $::st2::params::st2_web_packages:
-  file { "${::st2::params::nginx_conf_d}/st2.conf":
-    source    => $::st2::params::nginx_st2_conf,
-    subscribe => Package[$::st2::params::st2_server_package],
-      exec { $::st2::params::nginx_default_conf:
-        command => "sed -i 's/default_server//g' ${::st2::params::nginx_default_conf}",
-        unless  => "test `grep 'default_server' ${::st2::params::nginx_default_conf} | wc -l` > 0",
-      file { $::st2::params::nginx_default_conf:
-  -> File["${::st2::params::nginx_conf_d}/st2.conf"]
BREAKS HERE
-      $war
-      command => 'sleep $((RANDOM\%60+60)) && python /usr/local/gerrit/scripts/update_gerrit_users.py',
-      command => 'python /usr/local/gerrit/scripts/expire_old_reviews.py',
BREAKS HERE
-        group   => $deploy_user,
BREAKS HERE
-  if $require { munin::plugin{$name: ensure => $ensure, config => $config, require => $require } } }
BREAKS HERE
-        source => 'puppet:///modules/role/files/toollabs/clush/toolforge_canary_list.txt',
BREAKS HERE
-    exec { '/usr/bin/apt-key add for wikimedia stretch':
-        command     => "apt-key add --keyring ${stretch_keyring} /srv/images/base/wikimedia-stretch.pub.gpg",
BREAKS HERE
-  $auth_uri                    = false,
-  $identity_uri                = false,
-  $package_ensure              = 'present',
-  $verbose                     = false,
-  $debug                       = false,
-  $log_dir                     = '/var/log/heat',
-  $keystone_user               = 'heat',
-  $keystone_tenant             = 'services',
-  $keystone_password           = false,
-  $keystone_ec2_uri            = 'http://127.0.0.1:5000/v2.0/ec2tokens',
-  $rpc_backend                 = 'heat.openstack.common.rpc.impl_kombu',
-  $rabbit_host                 = '127.0.0.1',
-  $rabbit_port                 = 5672,
-  $rabbit_hosts                = undef,
-  $rabbit_userid               = 'guest',
-  $rabbit_password             = '',
-  $rabbit_virtual_host         = '/',
-  $rabbit_use_ssl              = false,
-  $kombu_ssl_ca_certs          = undef,
-  $kombu_ssl_certfile          = undef,
-  $kombu_ssl_keyfile           = undef,
-  $kombu_ssl_version           = 'TLSv1',
-  $amqp_durable_queues         = false,
-  $qpid_hostname               = 'localhost',
-  $qpid_port                   = 5672,
-  $qpid_username               = 'guest',
-  $qpid_password               = 'guest',
-  $qpid_heartbeat              = 60,
-  $qpid_protocol               = 'tcp',
-  $qpid_tcp_nodelay            = true,
-  $qpid_reconnect              = true,
-  $qpid_reconnect_timeout      = 0,
-  $qpid_reconnect_limit        = 0,
-  $qpid_reconnect_interval_min = 0,
-  $qpid_reconnect_interval_max = 0,
-  $qpid_reconnect_interval     = 0,
-  $database_connection         = 'sqlite:////var/lib/heat/heat.sqlite',
-  $database_idle_timeout       = 3600,
-  $use_syslog                  = false,
-  $log_facility                = 'LOG_USER',
-  $flavor                      = undef,
-  $region_name                 = undef,
-  $enable_stack_adopt          = undef,
-  $enable_stack_abandon        = undef,
-  $sync_db                     = true,
-  $mysql_module                = undef,
-  $sql_connection              = undef,
-  $keystone_host               = '127.0.0.1',
-  $keystone_port               = '35357',
-  $keystone_protocol           = 'http',
-  $instance_user               = undef,
-      'oslo_messaging_rabbit/rabbit_userid'          : value => $rabbit_userid;
-      'oslo_messaging_rabbit/rabbit_password'        : value => $rabbit_password, secret => true;
-      'oslo_messaging_rabbit/rabbit_virtual_host'    : value => $rabbit_virtual_host;
-      'oslo_messaging_rabbit/rabbit_use_ssl'         : value => $rabbit_use_ssl;
-      'DEFAULT/amqp_durable_queues'    : value => $amqp_durable_queues;
BREAKS HERE
-      $canonicalweburl="https://$fqdn/",
-      $serveradmin="webmaster@$fqdn",
-      $ssl_cert_file='/etc/ssl/certs/ssl-cert-snakeoil.pem',
-      $ssl_key_file='/etc/ssl/private/ssl-cert-snakeoil.key',
-      $ssl_chain_file='',
-      $openidssourl="https://login.launchpad.net/+openid",
-      $email='',
-      $database_poollimit='',
-      $container_heaplimit='',
-      $core_packedgitopenfiles='',
-      $core_packedgitlimit='',
-      $core_packedgitwindowsize='',
-      $sshd_threads='',
-      $httpd_acceptorthreads='',
-      $httpd_minthreads='',
-      $httpd_maxthreads='',
-      $httpd_maxwait='',
-      $commentlinks = [],
-      $war,
-      $contactstore=false,
-      $contactstore_appsec='',
-      $contactstore_pubkey='',
-      $contactstore_url='',
-      $projects_file = 'UNDEF',
-      $enable_melody = 'false',
-      $melody_session = 'false',
-      $mysql_password,
-      $mysql_root_password,
-      $email_private_key,
-      $replicate_github=false,
-      $replicate_local=true,
-      $local_git_dir='/var/lib/git',
-      $replication_targets=[],
-      $gitweb=true,
-      $testmode=false
-      ) {
-# Set up MySQL.
-# Set up apache.
-    port => 443,
-    docroot => 'MEANINGLESS ARGUMENT',
-    ssl => true,
BREAKS HERE
-    ensure  => directory,
-    owner   => 'root',
-    group   => 'root',
-    mode    => '0755',
BREAKS HERE
-  # Set the varnish storage size to 75% of memory - 500
-  $varnish_storage_size_pre = $::memtotalmb / 4 * 3 - 500
BREAKS HERE
-        check_command => "check_http_url_for_regexp_on_port!${::fqdn}:5001!5001!/debug/health!\'\\{\\}\'",
BREAKS HERE
-class openstack_integration::keystone {
BREAKS HERE
-    # Install as many languages as possible
-    include locales::extended
-
-        require     => Class['locales::extended'],
BREAKS HERE
-    host_aliases => [$iqdn],
BREAKS HERE
-      exec { "Unmount any mirrored ISOs":
-          before  => File["${mrepo::params::src_root}/$name"];
BREAKS HERE
-  package { "github2":
BREAKS HERE
-    ensure    => $enabled ? {true => running, false => stopped},
-  if ! $enabled {
-    case $::lsbdistid {
-      'Ubuntu': {
-        file_line { '/etc/default/puppetmaster START':
-          path    => '/etc/default/puppetmaster',
-          line    => 'START=no',
-          match   => '^START=',
-          require => Package[$puppet::params::master_package],
-        }
-      }
BREAKS HERE
-	$package_version = "2.6.0-rc7-wmf1",
BREAKS HERE
-    routing_key   => 'redirect.unpublishing.#',
BREAKS HERE
-      'wsrep_max_ws_rows'              => '131072',
-      'wsrep_max_ws_size'              => '1073741824',
BREAKS HERE
-#   GELF receiver host address. Defaults to '127.0.0.1'.
-#   GELF receiver port. Defaults to 12201.
-#   Source name for this instance. Defaults to icinga2.
-#   Enable performance data for 'CHECK RESULT' events. Defaults to false.
-  Enum['absent', 'present'] $ensure               = present,
-  String                    $host                 = '127.0.0.1',
-  Integer[1,65535]          $port                 = 12201,
-  String                    $source               = 'icinga2',
-  Boolean                   $enable_send_perfdata = false,
BREAKS HERE
-    $murano_enabled  = true
BREAKS HERE
-#   (Optional) ENable one or more SASL mechanisms.
BREAKS HERE
-        'check_lastmod',
-        'lastmod',
BREAKS HERE
-  # FIXME: Consider using a normal user with a "monitoring" user tag.  Not
-  # configurable from puppet using the current puppetlabs/rabbitmq (4.0).
-  # Added here: https://github.com/puppetlabs/puppetlabs-rabbitmq/pull/193
-    admin    => true,
BREAKS HERE
-  # These host entries prevent Gor from performing DNS lookups, which occur
-  # once for *every* request/goroutine, and can be quite overwhelming.
-  $host_defaults = {
-    'ensure'  => $gor_hosts_ensure,
-    'notify'  => 'Class[Govuk_gor]',
-    'comment' => 'Used by Gor. See comments in router::gor.',
-  }
-  create_resources('host', $replay_targets, $host_defaults)
BREAKS HERE
-        ensure   => present,
-        override => true,
-        content  => systemd_template('wmcs/nfs/maintain-dbusers'),
-        restart  => true,
BREAKS HERE
-    github_oauth_token  => hiera('gerrit_github_token'),
-    mysql_password      => hiera('gerrit_mysql_password'),
-    mysql_root_password => hiera('gerrit_mysql_root_password'),
-    email_private_key   => hiera('gerrit_email_private_key'),
-    gerritbot_password  => hiera('gerrit_gerritbot_password'),
-    sysadmins           => hiera('sysadmins'),
BREAKS HERE
-    if $local_tcpconns_established_warning == undef {
-      if $unicorn_worker_processes {
-        $local_tcpconns_warning = $unicorn_worker_processes
-      } else {
-        # This is the defualt in govuk_app_config for Unicorn worker
-        # processes
-        $local_tcpconns_warning = 2
-      }
-    }
-    if $local_tcpconns_established_critical == undef {
-      $local_tcpconns_critical = (
-        $local_tcpconns_warning + 2
-      )
-    } else {
-      $local_tcpconns_critical = $local_tcpconns_established_critical
-    }
BREAKS HERE
-      package { ['libopenssl-ruby', 'libcurl4-openssl-dev']:
-    path      => [ $gem_binary_path, '/usr/bin', '/bin'],
BREAKS HERE
-      environment => ["PYTHONPATH=/home/${agent_username}/reprepro-updater/src:\$PYTHONPATH"],
-      environment => ["PYTHONPATH=/home/${agent_username}/reprepro-updater/src:\$PYTHONPATH"],
-      environment => ["PYTHONPATH=/home/${agent_username}/reprepro-updater/src:\$PYTHONPATH"],
BREAKS HERE
-  $gr_aggregator_pickle_port    = 2024
-  $gr_aggregator_forward_all    = 'True'
-  $gr_aggregator_max_queue_size = 10000
BREAKS HERE
-        before => Service['phd'],
-define phabricator::extension($rootdir='/') {
-    file { "${rootdir}/phabricator/src/extensions/${name}":
-        ensure => link,
-        target => "${rootdir}/extensions/${name}",
-    }
-}
-
-define phabricator::redirector($mysql_user, $mysql_pass, $mysql_host, $rootdir='/') {
-    file { "${rootdir}/phabricator/support/preamble.php":
-        source => 'puppet:///modules/phabricator/preamble.php',
-        require => File["${rootdir}/phabricator/support/redirect_config.json"]
-    }
-
-    file { "${rootdir}/phabricator/support/redirect_config.json":
-        content => template('phabricator/redirect_config.json.erb')
-    }
-}
BREAKS HERE
-    check_command       => 'check_ganglia_metric!nginx_http_5xx!1!5',
BREAKS HERE
-    include apache::mod::access_compat  # enables allow/deny syntax in 2.4
-    include apache::mod::filter         # enables AddOutputFilterByType in 2.4
-    include apache::mod::version        # enables <IfVersion> config guards
-    include apache::monitoring          # send metrics to Diamond and Ganglia
-    include apache::mpm                 # prefork by default
-    class {'apache::logrotate':
BREAKS HERE
-        command     => "unzip -o ${source}/${file} -d ${downloadDir}/grid_${version}",
-        creates     => "${downloadDir}/grid_${version}",
-      command     => "/bin/sh -c 'unset DISPLAY;${downloadDir}/grid_${version}/grid/runInstaller -silent -waitforcompletion -ignoreSysPrereqs -ignorePrereq -responseFile ${downloadDir}/grid_install_${version}.rsp'",
BREAKS HERE
-    target              => "absolute(diffSeries(keepLastValue(stats.gauges.govuk.app.rummager.govuk_index.docs.count,${keep_last_value_limit}), timeShift(keepLastValue(stats.gauges.govuk.app.rummager.govuk_index.docs.count,${keep_last_value_limit}), '\\''7d'\\'')))",
-    target              => "absolute(diffSeries(keepLastValue(stats.gauges.govuk.app.rummager.mainstream_index.docs.count,${keep_last_value_limit}), timeShift(keepLastValue(stats.gauges.govuk.app.rummager.mainstream_index.docs.count,${keep_last_value_limit}), '\\''7d'\\'')))",
-    target              => "absolute(diffSeries(keepLastValue(stats.gauges.govuk.app.rummager.government_index.docs.count,${keep_last_value_limit}), timeShift(keepLastValue(stats.gauges.govuk.app.rummager.government_index.docs.count,${keep_last_value_limit}), '\\''7d'\\'')))",
-    target              => "absolute(diffSeries(keepLastValue(stats.gauges.govuk.app.rummager.detailed_index.docs.count,${keep_last_value_limit}), timeShift(keepLastValue(stats.gauges.govuk.app.rummager.detailed_index.docs.count,${keep_last_value_limit}), '\\''3d'\\'')))",
BREAKS HERE
-  $carbon_line_receiver_interface   = '0.0.0.0'
-  $relay_replication_factor         = '1'
BREAKS HERE
-    file { '/etc/logrotate.d/nginx-postrotate/toolviews.sh':
BREAKS HERE
-# Collector of analytic events
-# See <https://wikitech.wikimedia.org/wiki/EventLogging>
-class eventlogging( $archive_destinations = [] ) {
-    class { 'eventlogging::supervisor': }
-    class { 'eventlogging::analysis': }
-    class { 'eventlogging::ganglia': }
-    class { 'eventlogging::archive':
-        destinations => $archive_destinations,
-    class { 'mongodb':
-        dbpath  => '/srv/mongodb',
-        bind_ip => false,
-        auth    => true,
-    class { 'eventlogging::mediawiki_errors': }
-
-    package { [
-        'python-jsonschema',
-        'python-mysqldb',
-        'python-pygments',
-        'python-pymongo',
-        'python-sqlalchemy',
-        'python-zmq',
-        ensure => present,
-    systemuser { 'eventlogging':
-        name => 'eventlogging',
BREAKS HERE
-  $heat_config = {},
BREAKS HERE
-  $drushdsdtar     = 'https://github.com/mkissam/drush-dsd/archive/v0.7.tar.gz',
-  $basedrushdsdtar = 'drush-dsd-0.7.tar.gz',
-}
BREAKS HERE
-  Ipa::Serverinstall[$::fqdn] -> Ipa::Service[$::fqdn] -> File['/etc/ipa/primary'] -> Ipa::Hostadd <<| |>> -> Ipa::Replicareplicationfirewall <<| tag == "ipa-replica-replication-firewall-${ipa::master::domain}" |>> -> Ipa::Replicaprepare <<| tag == "ipa-replica-prepare-${ipa::master::domain}" |>> -> Ipa::Createreplicas[$::fqdn]
-  ipa::service { $::fqdn:
-  }
-
BREAKS HERE
-  
BREAKS HERE
-            source => 'puppet:///modules/base/check_cpufreq',
BREAKS HERE
-#
-  $dbname = 'manila',
-  $user   = 'manila'
-  require postgresql::python
-
-  Postgresql::Db[$dbname]    ~> Exec<| title == 'manila-manage db_sync' |>
-  Package['python-psycopg2'] -> Exec<| title == 'manila-manage db_sync' |>
-
-  postgresql::db { $dbname:
-    user      =>  $user,
-    password  =>  $password,
BREAKS HERE
-#   /etc/icinga2/pki/NodeName.key on Linux
-#   C:/ProgramData/icinga2/etc/icinga2/pki/NodeName.key on Windows
-#   /etc/icinga2/pki/NodeName.crt on Linux
-#   C:/ProgramData/icinga2/etc/icinga2/pki/NodeName.crt on Windows
-#   /etc/icinga2/pki/NodeName.csr on Linux
-#   C:/ProgramData/icinga2/etc/icinga2/pki/NodeName.csr on Windows
-#   /etc/icinga2/pki/ca.crt on Linux
-#   C:/ProgramData/icinga2/etc/icinga2/pki/ca.crt on Windows
BREAKS HERE
-# git::systemconfig{ 'gitconf for analytics repositories':
BREAKS HERE
-            srange =>  '@resolve(labcontrol1004.wikimedia.org)',
BREAKS HERE
-                }
-                # create target definitions
-                file { $smokeping::targets_dir:
-                    ensure  => directory,
-                    recurse => true,
-                    purge   => true,
-                    force   => true,
-                }
-                concat { '/etc/smokeping/config.d/Targets':
-                    owner => root,
-                    group => root,
-                    mode  => '0644',
-                }
-                concat::fragment { 'targets-header':
-                    target  => '/etc/smokeping/config.d/Targets',
-                    order   => 10,
-                    content => template('smokeping/targets-header.erb'),
-                }
BREAKS HERE
-    $icinga_user = 'icinga',
-    $icinga_group = 'icinga',
BREAKS HERE
-        description    => 'Varnish child restarted',
-        dashboard_link => "https://grafana.wikimedia.org/dashboard/db/varnish-machine-stats?orgId=1&var-server=${::hostname}&var-datasource=${::site} prometheus/ops",
BREAKS HERE
-            qw/ Net-SSLeay Crypt-SSLeay IO-Socket-SSL Net-SMTP-TLS Net-SSH2 /,
BREAKS HERE
-    $enable_vitrage  = true
BREAKS HERE
-        file { "/etc/ssl/certs/${title}.crt":
-            ensure  => $ensure,
-            require => Package['ca-certificates'],
-            notify  => Exec['update-ca-certificates'],
BREAKS HERE
-    # Because PE writes a default, we cannot use replace => false
-    file { "${classroom::codedir}/hiera.yaml":
-      ensure => file,
-      content => template('classroom/hiera/hiera.agent.yaml.erb'),
BREAKS HERE
-#   - icinga2: Uses the icinga2 CLI to generate a Certificate and Key. The ticket is generated on the
-#              Puppetmaster by using the configured 'ticket_salt' in a custom function.
-      $ticket_id = icinga2_ticket_id($node_name, $ticket_salt)
-        command => "${icinga2_bin} pki request --host ${ca_host} --port ${ca_port} --ca ${_ssl_cacert_path} --key ${_ssl_key_path} --cert ${_ssl_cert_path} --trustedcert ${trusted_cert} --ticket ${ticket_id}",
BREAKS HERE
-    # common Apache modules
-    include ::apache::mod::rewrite
-    include ::apache::mod::headers
-
BREAKS HERE
-#   Defaults to 'if systemctl -q is-active opendaylight; then systemctl restart opendaylight; else true; fi'
BREAKS HERE
-    $admin_password,
BREAKS HERE
-  $util_patch       = '/opt/graphite/graphite_util.patch'
BREAKS HERE
-        $monitoring_enabled            = hiera('profile::aqs::monitoring_enabled'),
-        $druid_host                    = hiera('profile::aqs::druid_host'),
-        $druid_query_path              = hiera('profile::aqs::druid_query_path'),
-        $druid_uri_pattern             = hiera('profile::aqs::druid_uri_pattern'),
-        $logstash_host                 = hiera('logstash_host'),
-        $statsd_host                   = hiera('profile::aqs::statsd_host'),
-        druid_host                    => $druid_host,
-        druid_query_path              => $druid_query_path,
-        druid_uri_pattern             => $druid_uri_pattern,
BREAKS HERE
-	Service["munin-node"]:
BREAKS HERE
-  # selinux may deny directory listing and access to subdirectories
-  # so update context to allow it
-  if $::osfamily == 'RedHat' {
-    if ! defined(Exec["update_context_${docroot}"]) {
-      exec { "update_context_${docroot}":
-        command => "chcon -R -t httpd_sys_content_t ${docroot}/",
-        unless  => "ls -lZ ${docroot} | grep httpd_sys_content_t",
-        path    => '/bin:/usr/bin:/usr/local/bin:/usr/sbin',
-        require => Package['httpd'],
-        notify  => Service['httpd'],
-      }
-    }
-  }
-
BREAKS HERE
-      iscsi_ip_address          => normalize_ip_for_uri($cinder_iscsi_address),
-      iscsi_helper              => $cinder_iscsi_helper,
-      iscsi_protocol            => $cinder_iscsi_protocol,
BREAKS HERE
-	$ifs = gsub(split($interfaces, " "), "(.+)", "if_\\1")
-	$if_errs = gsub(split($interfaces, " "), "(.+)", "if_err_\\1")
BREAKS HERE
-    server        => 'logging.cluster',
-    log_local     => true,
-    preserve_fqdn => true,
BREAKS HERE
-  validate_hash($vars)
BREAKS HERE
-  # this gives me a sad. We need some refactoring. Serious refactoring.
-  if ! defined(File['/usr/local/bin/process_reports.rb']) {
-    file { '/usr/local/bin/process_reports.rb':
-      ensure => file,
-      source => 'puppet:///modules/classroom/process_reports.rb',
-    }
BREAKS HERE
-class profile::ci::docker {
-    exec { 'jenkins-deploy docker membership':
-        unless  => '/usr/bin/id -Gn jenkins-deploy | /bin/grep -qw "docker"',
-        command => '/usr/sbin/usermod -aG docker jenkins-deploy',
BREAKS HERE
-    # This is used to provide a local (caching, forwarding) resolver
-    # for the proxy so that it doesn't hit dnsmasq so hard -- nginx
-    # appears to do little/no DNS caching on its own.
-    package { 'bind9':
-        ensure  => 'present',
-    }
-
-    file { '/etc/bind/named.conf.options':
-        ensure  => 'file',
-        require => Package['bind9'],
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
-        source  => 'puppet:///modules/dynamicproxy/named.conf.options',
-    }
-
BREAKS HERE
-  $app_name = 'authenticating-proxy',
BREAKS HERE
-  # Contrived way to transform {'a'=>'x', 'b'=>'y'} into {'a'=>{'properties'=>{'service_description'=>'x', ...}, ...}, 'b'=>{'properties'=>{'service_description'=>'y', ...}, ...}}
-    inline_template("<%= @services_hash.inject({}) { |c, (k, v)| c[k] = @default_resource.merge({'properties' => @default_properties.merge({'service_description' => v})}); c}.to_yaml %>")
BREAKS HERE
-  $hostname     = '',
-  $auth_enabled = undef,
-  $config_file  = undef,
-  $data_dir     = undef,
-  $meta_dir     = undef,
-  $wal_dir      = undef,
-  $hh_dir       = undef,
-  $snapshot     = undef,
BREAKS HERE
-class role::mariadb::core(
-    $shard,
-    $ssl           = 'puppet-cert',
-    $binlog_format = 'MIXED',
-    $master        = false,
-    ) {
-    if ($shard == 'es1') {
-        $mysql_role = 'standalone'
-    } elsif $master == true {
-        $mysql_role = 'master'
-        $mysql_role = 'slave'
-    # FIXME: Get package, socket, datadir, etc. from hiera
-    # FIXME: Support multiple instances per host
-    if (os_version('debian >= stretch')) {
-        # stretch defaults to MariaDB 10.1 with systemd
-        $package = 'wmf-mariadb101'
-        # TODO: manage custom systemd preferences like ulimits
-        # ignore service managing for now
-        $initd = false
-    } else {
-        # jessie, trusty defaults to MariaDB 10.0 with init.d
-        $package = 'wmf-mariadb10'
-        $initd = true
-    }
-    if $initd {
-        class {'mariadb::service':
-            package => $package,
-        }
-        datadir          => '/srv/sqldata',
-        tmpdir           => '/srv/tmp',
-        prompt   => "PRODUCTION ${shard}",
-        enabled    => $master,
BREAKS HERE
-                'codfw' => { 'dns_rec' => "208.80.153.254", 'dns_rec6' => "2620:0:861:ed1a::3:fe" },
BREAKS HERE
-        favicon  => '//wikitech.wikimedia.org/static/favicon/wikitech.ico',
-
-    file { '/var/www/error/errorpage.html':
-        ensure  => file,
-        content => template('dynamicproxy/errorpage.erb'),
-        owner   => 'www-data',
-        group   => 'www-data',
-        mode    => '0444',
-        require => [File['/var/www/error'],
-                    File['/var/www/error/labs-logo.png'],
-                    File['/var/www/error/labs-logo-2x.png']
-    file { '/var/www/error/banned.html':
-        ensure  => file,
-        content => template('dynamicproxy/banned.erb'),
-        owner   => 'www-data',
-        group   => 'www-data',
-        mode    => '0444',
-        require => [File['/var/www/error'],
-                    File['/var/www/error/labs-logo.png'],
-                    File['/var/www/error/labs-logo-2x.png']
BREAKS HERE
-# [*rpc_backend*]
-#   (Optional) Use these options to configure the message system.
-#   Defaults to $::os_service_default.
-#
-  $rpc_backend                        = $::os_service_default,
-    !is_service_default($rabbit_virtual_host) {
-heat::rabbit_port, heat::rabbit_userid and heat::rabbit_virtual_host are \
-deprecated. Please use heat::default_transport_url instead.")
-  if $rpc_backend == 'rabbit' or is_service_default($rpc_backend) {
-    if $rabbit_heartbeat_timeout_threshold == 0 {
-      warning('Default value for rabbit_heartbeat_timeout_threshold parameter is different from OpenStack project defaults')
-    }
-    oslo::messaging::rabbit { 'heat_config':
-      kombu_ssl_version           => $kombu_ssl_version,
-      kombu_ssl_keyfile           => $kombu_ssl_keyfile,
-      kombu_ssl_certfile          => $kombu_ssl_certfile,
-      kombu_ssl_ca_certs          => $kombu_ssl_ca_certs,
-      kombu_reconnect_delay       => $kombu_reconnect_delay,
-      kombu_failover_strategy     => $kombu_failover_strategy,
-      kombu_compression           => $kombu_compression,
-      rabbit_userid               => $rabbit_userid,
-      rabbit_password             => $rabbit_password,
-      rabbit_virtual_host         => $rabbit_virtual_host,
-      heartbeat_timeout_threshold => $rabbit_heartbeat_timeout_threshold,
-      heartbeat_rate              => $rabbit_heartbeat_rate,
-      rabbit_use_ssl              => $rabbit_use_ssl,
-      amqp_durable_queues         => $amqp_durable_queues,
-      rabbit_host                 => $rabbit_host,
-      rabbit_port                 => $rabbit_port,
-      rabbit_hosts                => $rabbit_hosts,
-      rabbit_ha_queues            => $rabbit_ha_queues,
-    }
-  elsif $rpc_backend == 'amqp' {
-    oslo::messaging::amqp { 'heat_config':
-      server_request_prefix  => $amqp_server_request_prefix,
-      broadcast_prefix       => $amqp_broadcast_prefix,
-      group_request_prefix   => $amqp_group_request_prefix,
-      container_name         => $amqp_container_name,
-      idle_timeout           => $amqp_idle_timeout,
-      trace                  => $amqp_trace,
-      ssl_ca_file            => $amqp_ssl_ca_file,
-      ssl_cert_file          => $amqp_ssl_cert_file,
-      ssl_key_file           => $amqp_ssl_key_file,
-      ssl_key_password       => $amqp_ssl_key_password,
-      allow_insecure_clients => $amqp_allow_insecure_clients,
-      sasl_mechanisms        => $amqp_sasl_mechanisms,
-      sasl_config_dir        => $amqp_sasl_config_dir,
-      sasl_config_name       => $amqp_sasl_config_name,
-      username               => $amqp_username,
-      password               => $amqp_password,
-    }
BREAKS HERE
-      before => File["${conf_dir}/features-enabled", $pki_dir],
BREAKS HERE
-    sysadmin        => $listadmins,
BREAKS HERE
-              require   => Exec["extract opatch ${patch_file}"],
BREAKS HERE
-  # We use Gnocchi/Panko instead of local database
-  class { '::ceilometer::db::sync':
-    extra_params => '--skip-metering-database',
-  }
BREAKS HERE
-  file { '/usr/local/sbin/process-mirrors-logs':
-    source => 'puppet:///modules/ocf_mirrors/process-mirrors-logs',
-    command     => '/usr/local/sbin/process-mirrors-logs --quiet',
BREAKS HERE
-	plugin { apt_all: ensure => present; }
-	plugin {
-    munin::plugin::deploy { "gentoo_lastupdated": }
-define munin::plugin::deploy ($source = '', $enabled = 'true') {
-    $real_source = $source ? {
-        ''  =>  "munin/plugins/$name",
-        default => $source
-    }
-    include munin::plugin::scriptpaths
-	debug ( "munin_plugin_${name}: name=$name, source=$source, script_path=$munin::plugin::scriptpaths::script_path" )
-    file { "munin_plugin_${name}":
-            path => "$munin::plugin::scriptpaths::script_path/${name}",
-            source => "puppet://$servername/$real_source",
-            ensure => file,
-            mode => 0755, owner => root, group => 0;
-    }
-    if $enabled {
-        plugin{$name: ensure => present }
-    }
-}
-    munin::plugin::deploy { "xen": }
-    munin::plugin::deploy { "xen-cpu": }
-    munin::plugin::deploy { "xen_memory": }
-    munin::plugin::deploy { "xen_vbd": }
BREAKS HERE
-  $git_source = 'https://git.openstack.org/openstack-infra/grafyaml',
-  $grafana_url = 'http://localhost:8080',
BREAKS HERE
-    ## Debugging symbols
-
-    $libboost_dbg_package = os_version('debian >= jessie') ? {
-        true    => 'libboost1.55-dbg',
-        default => 'libboost1.54-dbg',
-    }
-
-    package { [
-        'hhvm-dbg',
-        $libboost_dbg_package,
-        'libc6-dbg',
-        'libcurl3-dbg',
-        'libevent-dbg',
-        'libgcc1-dbg',
-        'libjemalloc1-dbg',
-        'libjson-c2-dbg',
-        'libldap-2.4-2-dbg',
-        'libmemcached-dbg',
-        'libpcre3-dbg',
-        'libsqlite3-0-dbg',
-        'libssl1.0.0-dbg',
-        'libstdc++6-4.8-dbg',
-        'libxml2-dbg',
-        'libxslt1-dbg',
-    ]:
-        ensure => present,
-    }
-
-
-    ## Profiling and debugging tools
-    #   The gv and graphiz packages enable pprof to generate PDF and SVG
-    # - perf-tools is <https://github.com/brendangregg/perf-tools>.
-    $perftools_package = os_version('debian >= jessie') ? {
-        true    => 'perf-tools-unstable',
-        default => 'perf-tools',
-    package { [ 'google-perftools', 'gv', 'apache2-utils', $perftools_package ]:
-        ensure => present,
-    require_package('graphviz')
BREAKS HERE
-    $cron = true
-      # Puppet ships with a service, so use that instead of cron
-      $cron = false
-
-      $cron = true
-
-  # Run puppet as a cron job or a service, depending on the version installed.
-  # Puppet 4+ doesn't ship with a service, so a cron job is used instead.
-  if $cron {
-    cron { 'puppet-agent':
-      ensure      => present,
-      command     => 'puppet agent --verbose --onetime --no-daemonize --logdest syslog > /dev/null 2>&1',
-      user        => 'root',
-      minute      => [fqdn_rand(30), fqdn_rand(30) + 30],
-      environment => 'PATH=/opt/puppetlabs/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin',
-      require     => Package[$puppet_pkg],
-    }
-    service { 'puppet':
-      ensure  => stopped,
-      enable  => false,
-      require => Package[$puppet_pkg],
-    }
-  } else {
-    service { 'puppet':
-      require => Package[$puppet_pkg],
-    }
BREAKS HERE
-        before  => Exec["${title} config deploy"],
-            reload     => "/usr/local/apply-config-${title}"
BREAKS HERE
-        if $block {
-            if !defined(File['/usr/local/sbin/block-for-export']) {
-                # This script will block until the NFS volume is available
-                file { '/usr/local/sbin/block-for-export':
-                    ensure => present,
-                    owner  => 'root',
-                    group  => 'root',
-                    mode   => '0555',
-                    source => 'puppet:///modules/labstore/block-for-export',
-            }
-            exec { "block-for-nfs-${name}":
-                command => "/usr/local/sbin/block-for-export ${server} project/${project} ${block_timeout}",
-                require => [File['/etc/modprobe.d/nfs-no-idmap.conf'], File['/usr/local/sbin/block-for-export']],
-                unless  => "/bin/mountpoint -q ${mount_path}",
-
BREAKS HERE
-    $repodir = '/srv/deployment/dumps/dumps'
BREAKS HERE
-    service_description => "mongod high lock% on ${::govuk_class}-${::hostname}",
BREAKS HERE
-            command => '/usr/bin/git --init',
BREAKS HERE
-    source  => $yum::source_repo_dir,
-  if $yum::source_repo_dir == undef {
BREAKS HERE
-node 'review01.openstack.org' {
-node /^elasticsearch0[1-7]\.openstack\.org$/ {
-node 'pbx.openstack.org' {
-node 'openstackid-dev.openstack.org' {
-node 'kdc01.openstack.org' {
-node 'kdc04.openstack.org' {
-node 'afsdb01.openstack.org' {
-node 'ask.openstack.org' {
-node 'ask-staging.openstack.org' {
BREAKS HERE
-    nova_admin_password => 'a_big_secret',
BREAKS HERE
-  $github_ca_cert_content = hiera('github_ca_cert')
-  file {
-    '/home/jenkins/govuk':
-      ensure  => directory;
-    '/home/jenkins/govuk/cert':
-      ensure  => directory;
-    '/home/jenkins/govuk/cert/github.gds.pem':
-      ensure  => present,
-      content => $github_ca_cert_content;
BREAKS HERE
-  define createExport (
-    $clients,
-    $ensure = 'present'
-  ) {
-    if $ensure != 'absent' {
-      $line = "${name} ${clients}\n"
-
-      concat::fragment { $name:
-        target  => '/etc/exports',
-        content => $line
-      }
-    }
-  }
-
-  define nfsv4_bindmount (
-    $v4_export_name,
-    $bind,
-    $ensure = 'mounted'
-  ) {
-    $expdir = "${nfs::server::nfs_v4_export_root}/${v4_export_name}"
-    mkdir_p { $expdir: }
-    mount { $expdir:
-      ensure  => $ensure,
-      device  => $name,
-      atboot  => true,
-      fstype  => 'none',
-      options => $bind,
-      require => Mkdir_p[$expdir],
-    }
-  }
-
-  define mkdir_p () {
-    exec { "mkdir_recurse_${name}":
-      path    => ['/bin', '/usr/bin'],
-      command => "mkdir -p ${name}",
-      unless  => "test -d ${name}",
-    }
-    file { $name:
-      ensure  => directory,
-      require => Exec["mkdir_recurse_${name}"],
-    }
-  }
-
-    nfsv4_bindmount { $name:
-    createExport { "${nfs::server::nfs_v4_export_root}/${v4_export_name}":
-      require => Nfsv4_bindmount[$name]
BREAKS HERE
-        description   => 'check if wikidata.org dispatch lag is higher than 2 minutes',
-        check_command => 'check_wikidata',
-        host          => 'wikidata',
-        retry_check_interval => 5,
-        contact_group => 'admins,wikidata',
BREAKS HERE
-        'zip'     => "${purge_command} mkdir -p ${target} && ${extract_zip}",
-        'tar.gz'  => "${purge_command} mkdir -p ${target} && ${extract_targz}",
-        'tgz'     => "${purge_command} mkdir -p ${target} && ${extract_targz}",
-        'tar.bz2' => "${purge_command} mkdir -p ${target} && ${extract_tarbz2}",
-        'tgz2'    => "${purge_command} mkdir -p ${target} && ${extract_tarbz2}",
-        'tar.xz'  => "${purge_command} mkdir -p ${target} && ${extract_tarxz}",
-        'txz'     => "${purge_command} mkdir -p ${target} && ${extract_tarxz}",
BREAKS HERE
-class profile::mediawiki::maintenance(
-    $maintenance_server = hiera('maintenance_server'),
-) {
-    $ensure = $maintenance_server ? {
-        $::fqdn => 'present',
-        undef   => 'absent',
BREAKS HERE
-  include puppet::agent
BREAKS HERE
-        require    => Class['apache::mod::ssl']
BREAKS HERE
-# Includes PuppetDB of a fixed version on the same host.
-  include puppet::repository
-  include puppet::puppetdb
-  anchor {'puppet::puppetserver::begin':
-    notify => Class['puppet::puppetserver::service'],
-  }
-  class{'puppet::puppetserver::package':
-    notify           => Class['puppet::puppetserver::service'],
-    require          => [
-      Class['puppet::package'],
-      Anchor['puppet::puppetserver::begin'],
-    ],
-  }
-  class{'puppet::puppetserver::config':
-    require => Class['puppet::puppetserver::package'],
-    notify  => Class['puppet::puppetserver::service'],
-  }
-  class { 'puppet::puppetserver::generate_cert':
-    require   => Class['puppet::puppetserver::config'],
-  }
-  class { 'puppet::puppetserver::firewall':
-    require => Class['puppet::puppetserver::config'],
-  }
-  class{'puppet::puppetserver::service':
-    subscribe => [
-      Class['puppet::package'],
-    ],
-    require   => Class['puppet::puppetserver::generate_cert'],
-  }
-  class { 'puppet::puppetserver::nginx':
-    require      => Class['puppet::puppetserver::generate_cert'],
-  }
-  anchor {'puppet::puppetserver::end':
-    subscribe =>  Class['puppet::puppetserver::service'],
-    require   =>  [
-                    Class['puppet::puppetserver::firewall'],
-                    Class['puppet::puppetserver::nginx'],
-                    File['/etc/puppet/gpg'],
-                  ],
-  }
-
BREAKS HERE
-<<<<<<< HEAD
BREAKS HERE
-  if versioncmp($::operatingsystemmajrelease,'6') > 1 {
BREAKS HERE
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0129] ld all show',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0129] ld [0-9] show',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0129] pd all show',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0129] pd [0-9]\:[0-9] show',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0129] pd [0-9][EIC]\:[0-9]\:[0-9] show',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0129] pd [0-9][EIC]\:[0-9]\:[0-9][0-9] show',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0129] show status',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0129] ld all show',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0129] ld [0-9] show',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0129] pd all show',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0129] pd [0-9]\:[0-9] show',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0129] pd [0-9][EIC]\:[0-9]\:[0-9] show',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0129] pd [0-9][EIC]\:[0-9]\:[0-9][0-9] show',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0129] show status',
BREAKS HERE
-    $private_reverse = hiera('profile::openstack::eqiad1::pdns::private_reverse'),
-        private_reverse       => $private_reverse,
BREAKS HERE
-  ipv6 => true,
BREAKS HERE
-#
-	class { 'graphite::config':
-		gr_user                      => $gr_user,
-		gr_max_cache_size            => $gr_max_cache_size,
-		gr_max_updates_per_second    => $gr_max_updates_per_second,
-		gr_max_creates_per_minute    => $gr_max_creates_per_minute,
-		gr_line_receiver_interface   => $gr_line_receiver_interface,
-		gr_line_receiver_port        => $gr_line_receiver_port,
-		gr_enable_udp_listener       => $gr_enable_udp_listener,
-		gr_udp_receiver_interface    => $gr_udp_receiver_interface,
-		gr_udp_receiver_port         => $gr_udp_receiver_port,
-		gr_pickle_receiver_interface => $gr_pickle_receiver_interface,
-		gr_pickle_receiver_port      => $gr_pickle_receiver_port,
-		gr_use_insecure_unpickler    => $gr_use_insecure_unpickler,
-		gr_cache_query_interface     => $gr_cache_query_interface,
-		gr_cache_query_port          => $gr_cache_query_port,
-		gr_timezone                  => $gr_timezone,
-		gr_apache_port               => $gr_apache_port,
-		gr_apache_port_https         => $gr_apache_port_https,
-		require => Class['graphite::install']
-	}
-      # Allow the end user to establish relationships to the "main" class
-      # and preserve the relationship to the implementation classes through
-      # a transitive relationship to the composite class.
-      anchor { 'graphite::begin': before => Class['graphite::install'] }
-      anchor { 'graphite::end': require => Class['graphite::config'] }
BREAKS HERE
-  	  require    => File['/etc/iniit.d/carbon-aggregator'];
BREAKS HERE
-        ignore  => '9*',
-        notify  => Exec['update_motd'],
-    }
-
-    exec { 'update_motd':
-        command     => '/bin/run-parts --lsbsysinit /etc/update-motd.d > /run/motd',
-        refreshonly => true,
BREAKS HERE
-      require      => Service['mysql'],
BREAKS HERE
-  # Make sure keepalive starts before haproxy.
-  if (defined(Class['::haproxy'])) {
-    Class['::keepalived::service'] -> Class['::haproxy']
-  }
BREAKS HERE
-        ensure => 'latest'
BREAKS HERE
-    $letsencrypt_sh_git_url = 'https://github.com/lukas2511/dehydrated.git',
-    $challengetype = 'dns-01',
-    $letsencrypt_host = pick($::servername, $::puppetmaster),
-    $letsencrypt_ca = 'https://acme-v01.api.letsencrypt.org/directory',
-    $dh_param_size = 2048,
-    $manage_packages = true,
-){
-    require ::letsencrypt::params
-
-
-
BREAKS HERE
-    include ::dumps::deprecated::user
-            user        => 'datasets',
BREAKS HERE
-  $keystone_enabled       = true,
-  $keystone_tenant        = 'services',
-  $keystone_user          = 'cinder',
-  $keystone_auth_host     = 'localhost',
-  $keystone_auth_port     = '35357',
-  $keystone_auth_protocol = 'http',
-  $service_port           = '5000',
-  $package_ensure         = 'latest',
-  $bind_host              = '0.0.0.0',
-  $enabled                = true
BREAKS HERE
-    # Parameters that need to be defined in hiera
-    $physical_volumes = hiera('profile::docker::engine::physical_volumes')
-    # Volume group to substitute
-    $vg_to_remove = hiera('profile::docker::engine::vg_to_remove', undef)
-    # Size of the thin pool and the metadata pool.
-    $lv_extents = hiera('profile::docker::engine::lv_extents', '95%VG')
-    $pool_metadata_size = hiera('profile::docker::engine::lvm_metadata_size', undef)
-    # Storage
-    if $vg_to_remove {
-        volume_group { $vg_to_remove:
-            ensure           => absent,
-            physical_volumes => [],
-        }
-    }
-    $basic_lv_params = {
-        extents  => $lv_extents,
-        thinpool => true,
-        mounted  => false,
-        createfs => false,
-    }
-
-    $lv_params = $pool_metadata_size ? {
-        undef   => $basic_lv_params,
-        default => merge($basic_lv_params, {'poolmetadatasize' => $pool_metadata_size}),
-    }
-
-    $logical_volumes = {
-        'thinpool'     => $lv_params,
-    }
-
-    $volume_group = {
-        docker => {
-            ensure           => present,
-            physical_volumes => $physical_volumes,
-            logical_volumes  => $logical_volumes,
-        }
-    }
-
-    class { 'lvm':
-        manage_pkg    => true,
-        volume_groups => $volume_group,
-    }
-
-    file { '/etc/lvm/profile/':
-        ensure => directory,
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0555',
-    }
-
-    file { '/etc/lvm/profile/docker-thinpool.profile':
-        ensure => present,
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0444',
-        source => 'puppet:///modules/profile/docker/lvm.profile',
-    }
-
-    exec { 'Attach profile to docker thinpool':
-        command => '/sbin/lvchange --metadataprofile docker-thinpool docker/thinpool',
-        unless  => '/sbin/lvs -o lv_profile docker/thinpool | grep -q docker',
-        require => [
-            File['/etc/lvm/profile/docker-thinpool.profile'],
-            Logical_volume['thinpool']
-        ],
-    }
-
-    $docker_storage_options = {
-        'storage-driver' => 'devicemapper',
-        'storage-opts'   =>  [
-            'dm.thinpooldev=/dev/mapper/docker-thinpool-tpool',
-            'dm.use_deferred_removal=true',
-            'dm.use_deferred_deletion=true'
-        ]
-
-    # Docker config
BREAKS HERE
-  $backspace    = "2"
-    debian: {
-    redhat: {
-    freebsd: {
-    suse: {
-    gentoo: {
-    solaris: {
-    
BREAKS HERE
-    file { $mountat:
-        ensure => directory,
-        owner  => $mountowner,
-        group  => $mountgroup,
-        mode   => $mountmode,
-            File[$mountat],
BREAKS HERE
-        branch    => $node_version,
BREAKS HERE
-  $service = $::operatingsystem ? {
-    /(?i:Debian|Ubuntu|Mint)/ => 'iptables-persistent',
-    default                   => 'iptables',
-  }
-
BREAKS HERE
-# === Copyright
-#
-# Copyright 2014, Deutsche Telekom AG
-#
BREAKS HERE
-          require => Oradb::Utils::Dbstructure["oracle structure ${version}"],
-        require   => Oradb::Utils::Dbstructure["oracle structure ${version}"],
BREAKS HERE
-  $server_config = $mcollective::common_config + $server_collectives + $mcollective::server_config
-  $client_config = $mcollective::common_config + $client_collectives + $mcollective::client_config
BREAKS HERE
-    'libgdbm-dev' ])
BREAKS HERE
-    class {'::standard': }
-    class {'::base::firewall': }
-
-}
BREAKS HERE
-  include ::mysql::python
-
-    require     => Class['mysql::python'],
BREAKS HERE
-  $real_non_torified_users = uniq_flatten($tor_user, $non_torified_users)
BREAKS HERE
-      rule => "NFLOG mod limit limit ${log_rate} limit-burst ${log_burst};",
BREAKS HERE
-      $service = 'iptables-persistent'
BREAKS HERE
-  Optional[String]]                   $password             = undef,
BREAKS HERE
-    class { '::nova' :
-    include ::nova::config
-    class { '::nova::cache':
-      enabled          => true,
-      backend          => 'oslo_cache.memcache_pool',
-      memcache_servers => $memcache_servers,
-    }
-    include ::nova::placement
-
-  if $step >= 4 {
-    if $manage_migration {
-      class { '::nova::migration::libvirt':
-        configure_libvirt => $libvirt_enabled,
-        configure_nova    => $nova_compute_enabled,
-      }
-    }
-  }
-
BREAKS HERE
-        command     => '/usr/local/bin/refinery-sqoop-mediawiki',
BREAKS HERE
-
BREAKS HERE
-    mode   => '0644',
BREAKS HERE
-		ensure => '0.6.1-1',
BREAKS HERE
-    eplite_version => '56dbad41ada0e1d848fb8fca4a1608d34b372b36',
BREAKS HERE
-        resolver             => join($::nameservers, ' '),
BREAKS HERE
-        command => '/usr/bin/timeout 3500s /usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/rebuildTermSqlIndex.php --wiki wikidatawiki --entity-type=item --batch-size 500 --sleep 40 --from-id $(/bin/ls -t /var/log/wikidata/rebuildTermSqlIndex.log /var/log/wikidata/rebuildTermSqlIndex.log*[0-9] | /usr/bin/xargs -d "\n" /usr/bin/tac | /usr/bin/awk \'/Processed up to page (\d+?)/ { print $5 }\' | head -n1) >> /var/log/wikidata/rebuildTermSqlIndex.log 2>&1',
BREAKS HERE
-        file { "${$phabdir}/phabricator/src/extensions":
-            path    => "${$phabdir}/phabricator/src/extensions",
-            require => File["${$phabdir}/phabricator/src/extensions"],
BREAKS HERE
-    $zookeeper_clusters                            = hiera('zookeeper_clusters'),
-    $hiveserver_host                               = hiera('profile::hive::client::server_host'),
-    $hiveserver_port                               = hiera('profile::hive::client::server_port'),
-    $metastore_host                                = hiera('profile::hive::client::hive_metastore_host'),
-    $zookeeper_cluster_name                        = hiera('profile::hive::client::zookeeper_cluster_name', undef),
-    $hive_server_opts                              = hiera('profile::hive::client::hive_server_opts', undef),
-    $hive_metastore_opts                           = hiera('profile::hive::client::hive_metastore_opts', undef),
-    $ensure_hive_site_in_hdfs                      = hiera('profile::hive::client::ensure_hive_site_in_hdfs', false),
-    $java_home                                     = hiera('profile::hive::client::java_home', '/usr/lib/jvm/java-8-openjdk-amd64/jre'),
-    $hive_metastore_sasl_enabled                   = hiera('profile::hive::client::hive_metastore_sasl_enabled', undef),
-    $hive_metastore_kerberos_keytab_file           = hiera('profile::hive::client::hive_metastore_kerberos_keytab_file', undef),
-    $hive_metastore_kerberos_principal             = hiera('profile::hive::client::hive_metastore_kerberos_principal', undef),
-    $hive_server2_authentication                   = hiera('profile::hive::client::hive_server2_authentication', undef),
-    $hive_server2_authentication_kerbero_principal = hiera('profile::hive::client::hive_server2_authentication_kerbero_principal', undef),
-    $hive_server2_authentication_kerberos_keytab   = hiera('profile::hive::client::hive_server2_authentication_kerberos_keytab', undef),
-        hive_server2_authentication_kerbero_principal => $hive_server2_authentication_kerbero_principal,
BREAKS HERE
-  package { ['php5-mysql', 'php5-curl', 'php5-gd', 'php5-xmlrpc', 'php5-intl']:
BREAKS HERE
-            reload     => "sudo -u ${deployment_user} -i /usr/local/apply-config-${title}",
BREAKS HERE
-            source => "puppet://$server/$real_source",
BREAKS HERE
-        }
BREAKS HERE
-    require     => Package['git'],
BREAKS HERE
-file { 'ocf-ns_apache':
-  path   => '/usr/lib/ocf/resource.d/fuel/ocf-ns_apache',
-  source => 'puppet:///modules/lma_infra_alerting/ocf-ns_apache',
BREAKS HERE
-	service { "munin":
BREAKS HERE
-  $service_names = hiera('service_names', [])
-    include ::collectd
BREAKS HERE
-#   The hostname to put in the .pgpass file.
-#   The user to put in the .pgpass file.
-#   The password to put in the .pgpass file.
-#   The port to put in the .pgpass file.
BREAKS HERE
-  if ($::os_package_type == 'debian') {
-    class { '::neutron::agents::l3':
-      interface_driver => $driver,
-      debug            => true,
-    }
-  } else {
-    class { '::neutron::agents::l3':
-      interface_driver => $driver,
-      debug            => true,
-      extensions       => 'fwaas',
-    }
BREAKS HERE
-        physical: { munin::plugins::physical }
BREAKS HERE
-          content => epp("oradb/dbca_vars.epp", { 'vars' => $template_variables }),
-        $command_var = ""
-        $command_init = ""
-        $command_nodes = ""
BREAKS HERE
-        $extraopts = ''
-        $extraopts = "-n ${instance_name}"
-        instance  => $inst,
-        directors => $backend_caches,
-        extraopts => $extraopts,
-        before    => [
-    # The defaults file is also parsed by /usr/share/varnish/reload-vcl,
-    #   even under systemd where the init part itself does not.  This
-    #   situation should be cleaned up later after all varnishes are on
-    #   systemd.
-    file { "/etc/default/varnish${instancesuffix}":
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
-        content => template("${module_name}/varnish-default.erb"),
-    }
-
-        command     => "/usr/share/varnish/reload-vcl ${extraopts} || (touch ${vcl_failed_file}; false)",
-        command => "/usr/share/varnish/reload-vcl ${extraopts} && (rm ${vcl_failed_file}; true)",
BREAKS HERE
-        origin   => 'ceph.com',
BREAKS HERE
-    $jmx_port             = $this_instance['jmx_port']
-    $rpc_address          = $this_instance['rpc_address']
-    $rpc_interface        = $this_instance['rpc_interface']
-    $jmx_exporter_enabled = $this_instance['jmx_exporter_enabled']
-    if $rpc_interface {
BREAKS HERE
-     environment => 'PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin',
-     command     => "poudriere bulk -f /usr/local/etc/poudriere.d/${jail}.list -j ${jail} -J ${paralleljobs}",
-     user        => 'root',
-     minute      => $cron_interval['minute'],
-     hour        => $cron_interval['hour'],
-     monthday    => $cron_interval['monthday'],
-     month       => $cron_interval['month'],
-     weekday     => $cron_interval['weekday'],
BREAKS HERE
-        ensure  => 'directory',
-        owner   => 'stats',
-        group   => 'wikidev',
-        mode    => '0775',
BREAKS HERE
-        use_proxy => $use_apt_proxy,
BREAKS HERE
-  # apache http server
-  include apache
-
-  # askbot
-  class { 'askbot':
-    redis_enabled        => $redis_enabled,
-    db_provider          => 'pgsql',
-    require              => Postgresql::Server::Db[$db_name],
-  }
-
-  # custom askbot theme from openstack-infra/askbot-theme repo
-
-  vcsrepo { "/srv/askbot-sites/${slot_name}/themes":
-    ensure   => latest,
-    provider => git,
-    revision => 'master',
-    source   => 'https://git.openstack.org/openstack-infra/askbot-theme',
-    require  => [
-      Class['askbot'], File["/srv/askbot-sites/${slot_name}"],
-      Package['git']
-    ],
-    notify   => [
-      Exec["theme-bundle-install-${slot_name}"],
-      Exec["theme-bundle-compile-${slot_name}"],
-    ],
-  }
-
-  askbot::compass { $slot_name:
-  }
-
-  askbot::site { $site_name:
-    slot_name                    => $slot_name,
-    askbot_debug                 => false,
-    custom_theme_enabled         => true,
-    custom_theme_name            => 'os',
-    redis_enabled                => $redis_enabled,
-    redis_port                   => $redis_port,
-    redis_max_memory             => $redis_max_memory,
-    redis_bind                   => $redis_bind,
-    redis_password               => $redis_password,
-    site_ssl_enabled             => true,
-    site_ssl_cert_file_contents  => $site_ssl_cert_file_contents,
-    site_ssl_key_file_contents   => $site_ssl_key_file_contents,
-    site_ssl_chain_file_contents => $site_ssl_chain_file_contents,
-    site_ssl_cert_file           => $site_ssl_cert_file,
-    site_ssl_key_file            => $site_ssl_key_file,
-    site_ssl_chain_file          => $site_ssl_chain_file,
-    db_provider                  => 'pgsql',
-    db_name                      => $db_name,
-    db_user                      => $db_user,
-    db_password                  => $db_password,
-    require                      => [ Class['redis'], Class['askbot'] ],
-  }
BREAKS HERE
-  nodejs::version { 'v0.6': }
-  nodejs::version { 'v0.8': }
-  nodejs::version { 'v0.10': }
BREAKS HERE
-    diamond::collector { 'Httpd': }
BREAKS HERE
-  include git
BREAKS HERE
-define phabricator::redirector($mysql_user, $mysql_pass, $mysql_host, $rootdir='/', $field_index='', $phab_host='phabricator.wikimedia.org') {
-        content => template('phabricator/preamble.php.erb'),
BREAKS HERE
-            components => 'thirdparty',
BREAKS HERE
-#    Type of API v2 service. Optional. Defaults to 'volume2'.
BREAKS HERE
-# FIXME: This class needs better documentation as per https://docs.puppetlabs.com/guides/style_guide.html#puppet-doc
BREAKS HERE
-
BREAKS HERE
-                           'urlfixer']
BREAKS HERE
-  $template_to_import      = undef,
BREAKS HERE
-        # pin a recent delorean but will be current-passed-ci later when RDO will be ready
-          'mitaka-current' => {
-            'baseurl'  => 'http://trunk.rdoproject.org/centos7/ec/f9/ecf9888afcfccabdbb1d4c2f04f5ccd96ffa2f3d_0294440f/',
-            'descr'    => 'Mitaka trunk',
-          'delorean-deps'  => {
BREAKS HERE
-        exec {'install_naggen':
-            command => "/bin/cp ${program_dir}/external/puppet/modules/puppetmaster/files/naggen /usr/local/bin/naggen",
-            creates => '/usr/local/bin/naggen',
-
-            require => [Exec['install_puppet_repositories'],Exec['install_naggen']]
BREAKS HERE
-      $netmask = '64'
-      $netmask = '32'
-      ip_address    => $ip_address,
-      cidr_netmask  => $netmask,
-      location_rule => $location_rule,
-      tries         => $pcs_tries,
BREAKS HERE
-        file_glob     => '/var/log/eventlogging_*.log',
-        $command = "/usr/bin/flock --verbose -n /var/lock/eventlogging_cleaner ${eventlogging_cleaner_command} >> /var/log/eventlogging_cleaner.log"
-            ensure  => present,
-            command => $command,
-            user    => 'eventlogcleaner',
-            hour    => 1,
-            require => [
BREAKS HERE
-    default: {}
BREAKS HERE
-# [*user*]
-#   Run tcpircbot instances as this system user (default: 'tcpircbot').
-#
-# [*group*]
-#   Run tcpircbot under this gid (default: 'tcpircbot').
-#
-class tcpircbot {
-        home       => '/srv/tcpircbot',
-        owner  => $user,
-        group  => $group,
BREAKS HERE
-  include logstash::client::service
-  file { '/etc/logstash/logstash-client/mongodb.conf':
-    source  => 'puppet:///modules/mongodb/etc/logstash/logstash-client/mongodb.conf',
-    notify  => Service['logstash-client']
-  }
-
-
BREAKS HERE
-  if $step >= 1 and hiera('veritas_hyperscale_controller_enabled', false) {
BREAKS HERE
-  gerrit::plugin { 'javamelody': version       => '3fefa35' }
BREAKS HERE
-# SSH profile for tripleo
-#   The text used within SSH Banner
-  if $bannertext {
-    $action = 'set'
-  } else {
-    $action = 'rm'
-  }
-
-  package {'openssh-server':
-    ensure => installed,
-  }
-  augeas { 'sshd_config_banner':
-    context => '/files/etc/ssh/sshd_config',
-    changes => [ "${action} Banner /etc/issue"  ],
-    notify  => Service['sshd']
-  }
-
-  file { '/etc/issue':
-    ensure  => file,
-    backup  => false,
-    content => $bannertext,
-    owner   => 'root',
-    group   => 'root',
-    mode    => '0600'
-  service { 'sshd':
-    ensure    => 'running',
-    enable    => true,
-    hasstatus => false,
-    require   => Package['openssh-server'],
BREAKS HERE
-    command => "/usr/bin/php ${dir}/tracking-category-count.php >> ${log_dir}/tracking-category-count.log 2>&1",
BREAKS HERE
-class heat::db::sync {
-    command     => $::heat::params::dbsync_command,
BREAKS HERE
-class profile::docker::storage::loopback {
-    $dm_target_dir = '/var/lib/docker/devicemapper'
-    $dm_source_dir = hiera('profile::docker::storage::loopback::source_dir', $dm_target_dir)
-    file { $dm_target_dir:
-    if $dm_source_dir != $dm_target_dir {
-        file { $dm_source_dir:
-            ensure => directory,
-            owner  => 'root',
-            group  => 'root',
-            mode   => '0755',
-        }
-
-        mount { $dm_target_dir:
-            device  => $dm_source_dir,
-            fstype  => 'none',
-            options => 'rw,bind',
BREAKS HERE
-        ensure => 'link',
-        target => '/srv/composer/vendor/bin/composer',
-        owner  => 'root',
-        group  => 'root',
BREAKS HERE
-      'pypi.bhs1.openstack.org',
-      'pypi.dfw.openstack.org',
-      'pypi.gra1.openstack.org',
-      'pypi.iad.openstack.org',
-      'pypi.nyj01.openstack.org',
-      'pypi.ord.openstack.org',
-      'pypi.region-b.geo-1.openstack.org',
-      'pypi.regionone.openstack.org',
BREAKS HERE
-        ensure  => present,
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0555',
-        source  => 'puppet:///modules/labstore/set-stripe-cache',
-        ensure => present,
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0400',
BREAKS HERE
-define sysctl ( $value = undef, $ensure = undef ) {
-  # Parent purged directory
-  file { "/etc/sysctl.d/${title}.conf":
BREAKS HERE
-    $memcached_servers = suffix(hiera('memcache_node_ips_v6'), ':11211')
-    $memcached_servers = suffix(hiera('memcache_node_ips'), ':11211')
-  if $step >= 3 {
-    # TODO(emilien): once we merge https://review.openstack.org/#/c/325983/
-    # let's override the value this way.
-    warning('Overriding memcached_servers from puppet-tripleo until 325983 lands.')
-    Nova {
-      memcached_servers => $memcached_servers,
-    }
BREAKS HERE
-    include prometheus::node_exporter
BREAKS HERE
-      require => [Package['spamassassin'], User['spamd']];
-  user {
-    'spamd':
-      ensure  => present,
-      name    => 'spamd',
-      gid     => 'spamd',
-      groups  => ['sys'],
-      home    => '/var/lib/spamd',
-      shell   => '/bin/false',
-      system  => true,
-      require => Group['spamd'];
-  }
-  group {
-    'spamd':
-      ensure  => present,
-      name    => 'spamd',
-      system  => true;
-  }
-    '/etc/default/spamassassin':
-      source  => 'puppet:///modules/ocf_mail/spam/spamass/spamassassin',
-      notify  => Service['spamassassin'],
-      require => Package['spamassassin'];
-    '/var/lib/spamd':
-      ensure  => directory,
-      owner   => spamd,
-      mode    => '0755',
-      require => User['spamd'];
-    '/etc/default/spamass-milter':
-      source  => 'puppet:///modules/ocf_mail/spam/spamass/spamass-milter',
-      notify  => Service['spamass-milter'],
-      require => Package['spamass-milter'];
BREAKS HERE
-    include apache
-    apache::vhost { $vhost_name:
BREAKS HERE
-  class { '::redis':
-    bind           => $::openstack_integration::config::host,
-    service_enable => $service_enable
BREAKS HERE
-    command     => 'elastic-recheck-graph /opt/elastic-recheck/queries.yaml -o /srv/static/status/elastic-recheck/graph-new.json && mv /srv/static/status/elastic-recheck/graph-new.json /srv/static/status/elastic-recheck/graph.json',
BREAKS HERE
-  $zuul_ssh_private_key = hiera('zuul_ssh_private_key_contents')
BREAKS HERE
-class munin::plugins::openbsd inherits munin::plugins::base {
-    munin::plugin {
-        [ df, cpu, interrupts, load, memory, netstat, open_files,
-            processes, swap, users, vmstat
-        ]:
-            ensure => present,
-    }
-    munin::plugin {
-        [ memory_pools, memory_types ]:
-            ensure => present,
-    }
-
BREAKS HERE
-            File[$whitelist_path],
BREAKS HERE
-            baseurl => "${centos_mirror}${operatingsystemrelease}/extras/${architecture}/",
BREAKS HERE
-        puppet_cmd     => '/usr/local/bin/puppet',
-        agent_service  => 'puppetd',
-        master_package => 'puppet',
-        master_service => 'puppetmasterd',
-        puppet_logdir  => '/var/puppet/log',
-        puppet_vardir  => '/var/puppet',
-        puppet_ssldir  => '/etc/puppet/ssl',
-        puppet_rundir  => '/var/puppet/run',
-        default_method => 'service',
-        puppet_user    => '_puppet',
-        puppet_group   => '_puppet',
BREAKS HERE
-        date => { timezone => 'UTC' },
-        hhvm => {
-            include_path             => '.:/usr/share/php',
BREAKS HERE
-class apache::mod::version         { apache::mod_conf { 'version':        } }
BREAKS HERE
-# [*pki*]
-#   Provides multiple sources for the certificate, key and ca. Valid parameters are 'puppet' or 'none'.
-#   'puppet' copies the key, cert and CAcert from the Puppet ssl directory to the cert directory
-#   /var/lib/icinga2/certs on Linux and C:/ProgramData/icinga2/var/lib/icinga2/certs on Windows.
-#   'none' does nothing and you either have to manage the files yourself as file resources
-#   or use the ssl_key, ssl_cert, ssl_cacert parameters. Defaults to puppet.
-#
-#   Location of the private key. Default depends on platform:
-#   /var/lib/icinga2/certs/InfluxdbWriter_influxdb.key on Linux
-#   C:/ProgramData/icinga2/var/lib/icinga2/certs/InfluxdbWriter_influxdb.key on Windows
-#   Location of the certificate. Default depends on platform:
-#   /var/lib/icinga2/certs/InfluxdbWriter_influxdb.crt on Linux
-#   C:/ProgramData/icinga2/var/lib/icinga2/certs/InfluxdbWriter_influxdb.crt on Windows
-#   Location of the CA certificate. Default is:
-#   /var/lib/icinga2/certs/InfluxdbWriter_influxdb_ca.crt on Linux
-#   C:/ProgramData/icinga2/var/lib/icinga2/certs/InfluxdbWriter_influxdb_ca.crt on Windows
-#   The private key in a base64 encoded string to store in cert directory, file is stored to
-#   path spicified in ssl_key_path. This parameter requires pki to be set to 'none'.
-#   The certificate in a base64 encoded string to store in cert directory, file is  stored to
-#   path spicified in ssl_cert_path. This parameter requires pki to be set to 'none'.
-#   The CA root certificate in a base64 encoded string to store in cert directory, file is stored
-#   to path spicified in ssl_cacert_path. This parameter requires pki to be set to 'none'.
-  Enum['none', 'puppet']                   $pki                    = 'puppet',
-    if $ssl_key_path {
-      $_ssl_key_path = $ssl_key_path }
-    else {
-      $_ssl_key_path = "${ssl_dir}/InfluxdbWriter_influxdb.key" }
-    if $ssl_cert_path {
-      $_ssl_cert_path = $ssl_cert_path }
-    else {
-      $_ssl_cert_path = "${ssl_dir}/InfluxdbWriter_influxdb.crt" }
-    if $ssl_cacert_path {
-      $_ssl_cacert_path = $ssl_cacert_path }
-    else {
-      $_ssl_cacert_path = "${ssl_dir}/InfluxdbWriter_influxdb_ca.crt" }
-
-    case $pki {
-      'puppet': {
-        file { $_ssl_key_path:
-          ensure => file,
-          mode   => $_ssl_key_mode,
-          source => $::icinga2_puppet_hostprivkey,
-          tag    => 'icinga2::config::file',
-        }
-
-        file { $_ssl_cert_path:
-          ensure => file,
-          source => $::icinga2_puppet_hostcert,
-          tag    => 'icinga2::config::file',
-        }
-
-        file { $_ssl_cacert_path:
-          ensure => file,
-          source => $::icinga2_puppet_localcacert,
-          tag    => 'icinga2::config::file',
-        }
-      } # puppet
-
-      'none': {
-        if $ssl_key {
-          $_ssl_key = $::osfamily ? {
-            'windows' => regsubst($ssl_key, '\n', "\r\n", 'EMG'),
-            default   => $ssl_key,
-          }
-
-          file { $_ssl_key_path:
-            ensure  => file,
-            mode    => $_ssl_key_mode,
-            content => $_ssl_key,
-            tag     => 'icinga2::config::file',
-          }
-        }
-
-        if $ssl_cert {
-          $_ssl_cert = $::osfamily ? {
-            'windows' => regsubst($ssl_cert, '\n', "\r\n", 'EMG'),
-            default   => $ssl_cert,
-          }
-
-          file { $_ssl_cert_path:
-            ensure  => file,
-            content => $_ssl_cert,
-            tag     => 'icinga2::config::file',
-          }
-        }
-
-        if $ssl_cacert {
-          $_ssl_cacert = $::osfamily ? {
-            'windows' => regsubst($ssl_cacert, '\n', "\r\n", 'EMG'),
-            default   => $ssl_cacert,
-          }
-
-          file { $_ssl_cacert_path:
-            ensure  => file,
-            content => $_ssl_cacert,
-            tag     => 'icinga2::config::file',
-          }
-        }
-      } # none
-    } # case pki
BREAKS HERE
-    'DEFAULT/bind_host': value => $bind_host
BREAKS HERE
-    file { [$instance_data_file_directories,
-            $commitlog_directory,
-            $saved_caches_directory]:
-        ensure  => directory,
-        owner   => 'cassandra',
-        group   => 'cassandra',
-        mode    => '0750',
-        require => File[$data_directory_base],
-            File[$instance_data_file_directories],
BREAKS HERE
-    content => template('oradb/dbora.erb'),
BREAKS HERE
-    notify  => Service[postfix]
BREAKS HERE
-    'rsnapshot-daily':
BREAKS HERE
-        prefix     => '/jenkins',
BREAKS HERE
-import "classes/*.pp"
-import "definitions/*.pp"
BREAKS HERE
-  include ocf::firewall::pre
-  include ocf::firewall::post
-
BREAKS HERE
-    # NOTE: scap will manage the deploy user
-    scap::target { 'librenms/librenms':
-        deploy_user => 'deploy-librenms',
-        before      => Class['::librenms'],
-    }
-
BREAKS HERE
-        baseurl       => "https://download.newrelic.com/infrastructure_agent/linux/yum/el/$operatingsystemmajrelease/x86_64",
-  or ($::operatingsystem == 'Amazon' and $::operatingsystemmajrelease == '2015') {
BREAKS HERE
-  class {'::cassandra::run':
-    seeds              => $cassandra_servers,
-    seed_address       => $cassandra_ip,
-    conf_dir           => '/etc/cassandra/default.conf',
-    pid_dir            => '/var/run/cassandra',
-    service_path       => '/sbin',
-    storage_port       => $storage_port,
-    ssl_storage_port   => $ssl_storage_port,
-    client_port        => $client_port,
-    client_port_thrift => $client_port_thrift
BREAKS HERE
-    "openafs-dbserver",
BREAKS HERE
-    prefix  => 'nginx',
-    check_command       => "check_graphite_metric_since!keepLastValue(${::fqdn_underscore}.nginx.http_5xx)!3minutes!1!5",
BREAKS HERE
-    # OLD: to be removed from here so the ops/dns repo can control it
-    file { '/etc/gdnsd/config':
-        ensure  => 'present',
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
-        content => template("${module_name}/config.erb"),
-        require => File['/etc/gdnsd'],
-    }
-    # NEW: we have to coordinate this switch with changes in ops/dns!
-                File['/etc/gdnsd/config'],
BREAKS HERE
-      location /report-a-problem {
BREAKS HERE
-#   Defaults to 'cinder.openstack.common.rpc.impl_kombu'
-  $rpc_backend                        = 'cinder.openstack.common.rpc.impl_kombu',
-  if $rpc_backend == 'cinder.openstack.common.rpc.impl_kombu' {
-  if $rpc_backend == 'cinder.openstack.common.rpc.impl_qpid' {
BREAKS HERE
-  $autoteam = false,
-) {
BREAKS HERE
-  # Workaround to purge Keystone vhost that is provided & activated by default with running
-  # Canonical packaging (called 'keystone').
-      'ensure'  => 'absent',
-      'ensure'  => 'absent',
BREAKS HERE
-    class {'mysql::server':
-      config_hash =>  {
-        'root_password'  => 'insecure_slave',
-        'default_engine' => 'MyISAM',
-        'bind_address'   => '127.0.0.1',
BREAKS HERE
-            command   => "/usr/bin/timeout -k 5s 10s /bin/mkdir ${mount_path}",
-            unless    => "/usr/bin/timeout -k 5s 30s /usr/bin/test -d ${mount_path}",
BREAKS HERE
-    require     => [Service[$service_name], Class['gitlab::install']],
BREAKS HERE
-    service_description => 'reboot required by apt',
BREAKS HERE
-  $facter_version = '1.7.2-1puppetlabs1',
BREAKS HERE
-    ensure => 'present',
-    source => $st2::params::nginx_st2_conf,
BREAKS HERE
-        description   => 'spamassassin',
-        nrpe_command  => '/usr/lib/nagios/plugins/check_procs -w 1:20 -c 1:40 -a spamd',
BREAKS HERE
-    source  => "puppet:///drbd/drbd.conf.d/",
BREAKS HERE
-            User[$spamd_user],
BREAKS HERE
-    command     => 'bandersnatch mirror >>/var/log/bandersnatch/mirror.log 2>&1',
BREAKS HERE
-  $pypi_root = "${mirror_root}/pypi"
BREAKS HERE
-    path    => 'C:/shares/',
BREAKS HERE
-        command  => "${env} && /usr/bin/python3 ${profile::analytics::refinery::path}/bin/sqoop-mediawiki-tables --job-name sqoop-mediawiki-monthly-$(/bin/date --date=\"$(/bin/date +\\%Y-\\%m-15) -1 month\" +'\\%Y-\\%m') --labsdb --jdbc-host ${labs_db_host} --output-dir ${$output_directory_labs} --wiki-file  ${wiki_file_labs} --tables archive,ipblocks,logging,page,pagelinks,redirect,revision,user,user_groups --jar-file ${orm_jar_file} --user ${labs_db_user} --password-file ${db_password_labs} --from-timestamp 20010101000000 --to-timestamp \$(/bin/date '+\\%Y\\%m01000000') --partition-name snapshot --partition-value \$(/bin/date --date=\"$(/bin/date +\\%Y-\\%m-15) -1 month\" +'\\%Y-\\%m') --mappers ${num_mappers} --processors ${num_processors} --log-file ${labs_log_file}",
-        command  => "${env} && /usr/bin/python3 ${profile::analytics::refinery::path}/bin/sqoop-mediawiki-tables --job-name sqoop-mediawiki-monthly-private-$(/bin/date --date=\"$(/bin/date +\\%Y-\\%m-15) -1 month\" +'\\%Y-\\%m') --jdbc-host ${private_db_host} --output-dir ${$output_directory_private} --wiki-file  ${wiki_file_private} --tables cu_changes --jar-file ${orm_jar_file} --user ${private_db_user} --password-file ${db_password_private} --from-timestamp \$(/bin/date --date=\"$(/bin/date +\\%Y-\\%m-15) -1 month\" +'\\%Y\\%m01000000') --to-timestamp \$(/bin/date '+\\%Y\\%m01000000') --partition-name month --partition-value \$(/bin/date --date=\"$(/bin/date +\\%Y-\\%m-15) -1 month\" +'\\%Y-\\%m') --mappers ${num_mappers} --processors ${num_processors} --log-file ${private_log_file}",
BREAKS HERE
-    $master_ip = ipresolve($master_host, 4, $::nameservers[0])
BREAKS HERE
-            dynamic_extension_path   => '/usr/lib/hphp/extensions/current',
BREAKS HERE
-    admin_token         => 'admin_token',
BREAKS HERE
-    require_package('hive-hcatalog')
BREAKS HERE
-# basic infrastructure for netmapper json files
-class varnish::netmapper_update_common {
-    group { 'netmap':
-        ensure => present,
-    }
-
-    user { 'netmap':
-        home       => '/var/netmapper',
-        gid        => 'netmap',
-        system     => true,
-        managehome => false,
-        shell      => '/bin/false',
-        require    => Group['netmap'],
-    }
-
-    file { '/var/netmapper':
-        ensure  => directory,
-        owner   => 'netmap',
-        group   => 'netmap',
-        require => User['netmap'],
-        mode    => '0755',
-    }
-}
-
BREAKS HERE
-  $dry_run_on_unkown        = false,
-    dry_run_on_unkown        => $dry_run_on_unkown,
BREAKS HERE
-                  match => '([Bb]ug|[Ll][Pp])\\s*[#:]?\\s*(\\d+)',
-                  match => '([Bb]lue[Pp]rint|[Bb][Pp])\\s*[#:]?\\s*([A-Za-z0-9\\-]+)',
BREAKS HERE
-    Integer $port = hiera('profile::mediawiki::mcrouter_wancache::port'),
-    Boolean $has_ssl = hiera('profile::mediawiki::mcrouter_wancache::has_ssl'),
-    Integer $ssl_port = hiera('profile::mediawiki::mcrouter_wancache::ssl_port', $port + 1),
BREAKS HERE
-    $dc_dirs = prefix($datacenters, "${root_dir}/")
BREAKS HERE
-# [*whitelist_format*]
-#   Switch to a different whitelist format to test the new yaml file format.
-#   Default: 'tsv'
-#
-    $whitelist_format = hiera('profile::mariadb::misc::eventlogging::sanitization::whitelist_format', 'tsv')
-    $etc_directory_path = '/etc/eventlogging_cleaner'
-    file { $etc_directory_path:
-        ensure => 'directory',
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0755',
-    }
-
-    file { "${etc_directory_path}/whitelist.yaml":
-        ensure  => 'present',
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
-        source  => 'puppet:///modules/profile/mariadb/misc/eventlogging/eventlogging_purging_whitelist.yaml',
-        require => File[$etc_directory_path],
-    }
-
-    file { "${etc_directory_path}/whitelist.tsv":
-        ensure  => 'present',
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
-        source  => 'puppet:///modules/profile/mariadb/misc/eventlogging/eventlogging_purging_whitelist.tsv',
-        require => File[$etc_directory_path],
-    }
-
-    $eventlogging_cleaner_command = "/usr/local/bin/eventlogging_cleaner --whitelist ${etc_directory_path}/whitelist.${whitelist_format} --older-than 90 --start-ts-file /var/run/eventlogging_cleaner --batch-size 10000 --sleep-between-batches 2 ${extra_parameters}"
-            File["${etc_directory_path}/whitelist.${whitelist_format}"],
BREAKS HERE
-        super_username        => 'cassandra',
-        super_password        => 'cassandra',
BREAKS HERE
-    base::service_unit { 'carbon/frontend-relay':
-        ensure        => present,
-        upstart       => true,
-        template_name => 'frontend-relay',
-        provider => 'upstart',
-        notify  => Service['carbon/frontend-relay'],
-    base::service_unit { 'carbon/local-relay':
-        notify  => Service['carbon/local-relay'],
BREAKS HERE
-  Class['ocf::ssl::default'] ~> Class['Postgresql::Server']
BREAKS HERE
-  file { '/usr/local/bin/check_icinga':
-    ensure => $file_ensure,
-    mode   => '0755',
-    owner  => 'root',
-    group  => 'root',
-    source => 'puppet:///modules/govuk_unattended_reboot/usr/local/bin/check_icinga.rb',
-  } ->
-  } ->
-  } ->
-  } ->
BREAKS HERE
-  $set_as_default   = $vim::params::set_as_default,
-  if $set_as_default {
BREAKS HERE
-      $keepalived_vrrp_script     = 'test -S /var/lib/haproxy/stats && echo "show info" | socat /var/lib/haproxy/stats stdio'
BREAKS HERE
-        path    => "${configdir}/plugin.d/${config_name}.conf",
BREAKS HERE
-      'set-header X-Forwarded-Proto http if !{ ssl_fc }'],
BREAKS HERE
-        source  => 'puppet:///modules/gerrit/its/templates/DraftPublished.vm',
-        owner   => 'gerrit2',
-        group   => 'gerrit2',
-        mode    => '0755',
-        require => File['/var/lib/gerrit2/review_site/etc/its/templates'],
BREAKS HERE
-  $carbon = "carbon-${::graphite::gr_carbon_ver}-py${::graphite::params::pyver}.egg-info"
-  $gweb = "graphite_web-${::graphite::gr_graphite_ver}-py${::graphite::params::pyver}.egg-info"
-
-    create_resources('file', {
-        path   => "${::graphite::params::libpath}/${carbon}",
-        target => "${::graphite::base_dir_REAL}/lib/${carbon}"
-        path   => "${::graphite::params::libpath}/${gweb}",
-        target => "${::graphite::base_dir_REAL}/webapp/${gweb}"
-      ensure  => 'link',
-      require => Package['carbon', 'graphite-web', 'whisper'],
BREAKS HERE
-    rabbitmq_user_password => $rabbitmq_password
BREAKS HERE
-    ['/opt/graphite/storage',
-     '/opt/graphite/storage/lists',
-     '/opt/graphite/storage/log',
-     '/opt/graphite/storage/rrd',
-     '/opt/graphite/storage/run']:
BREAKS HERE
-            'dm.thinpooldev=/dev/mapper/docker-thinpool',
BREAKS HERE
-        check_command => "check_http_url_for_regexp_on_port!${::fqdn}:5001!5001!/debug/health!{}",
BREAKS HERE
-  asterisk::config_dotd { '/etc/asterisk/queues': }
-
BREAKS HERE
-    mode   => '0640',
BREAKS HERE
-  Enum['mysqldump', 'rsync', 'skip', 'xtrabackup'] $wsrep_sst_method,
-    $additional_packages_real = lookup("${module_name}::sst::${wsrep_sst_method}::${vendor_type}::${vendor_version_internal}::additional_packages", {default_value => undef}) ? {
-      undef => lookup("${module_name}::sst::${wsrep_sst_method}::additional_packages", {default_value => undef}),
-      default => lookup("${module_name}::sst::${wsrep_sst_method}::${vendor_type}::${vendor_version_internal}::additional_packages")
BREAKS HERE
-  $sysadmins = [],
-  class { 'openstack_project::server':
-    iptables_public_tcp_ports => [22, 80, 443],
-    sysadmins                 => $sysadmins,
-  }
-
BREAKS HERE
-    # move files to module?
-    # lint:ignore:puppet_url_without_modules
BREAKS HERE
-  String $courseware_source = $classroom::params::courseware_source,
-    owner   => $showoff::user,
BREAKS HERE
-        require => Package['prometheus-mysqld-exporter'],
BREAKS HERE
-        "${nagios::params::config_dir}/services_nagios2.cfg"]
BREAKS HERE
-    onlyif   => 'if (((New-Object -ComObject hnetcfg.fwpolicy2).rules | Where-Object {$_.Name -like "Remote Desktop*User*TCP*"}).enabled) { exit 1 }',
BREAKS HERE
-        ensure => absent
BREAKS HERE
-      fail("Unsupported platform: ${::operatingsystem}")
BREAKS HERE
-  $realname,
-  $uid,
-  $home       = "/home/${title}",
-  $managehome = true
BREAKS HERE
-    notify  => Class['Govuk_jenkins::Safe_restart'],
BREAKS HERE
-    case $operatingsystem {
-        /(Ubuntu|Debian)/: {
-            $package_name = 'ntp'
-            $config_file = '/etc/ntp.conf'
-            $service_name = 'ntp'
-        }
BREAKS HERE
-        before      => "extract ${downloadDir}/${file}",
BREAKS HERE
-        if ( $opversion < '12.2.0.1.5') {
BREAKS HERE
-    ensure => directory,
-    mode  => 0777,
BREAKS HERE
-  if ($::osfamily == "RedHat") and ($operatingsystemmajrelease == '6') {
-      path        => '/usr/bin:/usr/sbin:/bin:/sbin',
-      command     => 'easy_install-2.7 pip',
-      require     => Package['python27']
BREAKS HERE
-      value => 128;
BREAKS HERE
-        'mw2017.codfw.wmnet' => 'mwdebug2002.codfw.wmnet',
-        backend_regexp  => '^((mwdebug1001|mwdebug1002)\.eqiad\.wmnet|(mwdebug2002)\.codfw\.wmnet)',
BREAKS HERE
-        file { 'remove_old':
-          path    => $patchDir,
-        exec { "extract opatch ${patchFile}":
-          exec { "exec emocmrsp ${opversion}":
-          package { 'expect':
-            ensure  => present,
-          file { "${downloadDir}/opatch_upgrade_${opversion}.ksh":
-          exec { "ksh ${downloadDir}/opatch_upgrade_${opversion}.ksh":
-            require   => [File["${downloadDir}/opatch_upgrade_${opversion}.ksh"],
-                          Exec["extract opatch ${patchFile}"],
BREAKS HERE
-  if $::root_encrypted == false {
BREAKS HERE
-  $host_agent_name           = $dynatrace::host_agent_name,
-  notify{"install_all": message => "executing dynatrace::role::install_all"; }
-    host_agent_name           => $host_agent_name,
-    host_collector_name       => $host_agent_collector_name,
BREAKS HERE
-        memory_limit => '300M',
BREAKS HERE
-#   Defaults to false
BREAKS HERE
-        before => Base::Service_Unit['thumbor@'],
BREAKS HERE
-  nginx::log { [
-               ]:
-                 logpath   => $logpath,
-                 logstream => true;
BREAKS HERE
-    munin::register { $fqdn: }
BREAKS HERE
-  file { "/etc/apparmor.d/usr.sbin.mysqld":
-    owner => 'root',
-    group => 'root',
-    mode => 0644,
-    notify => Service['apparmor'],
-  exec { "dpkg-reconfigure mysql-server":
-    command => "/bin/sleep 30; /usr/sbin/dpkg-reconfigure -fnoninteractive ${package_name}",
-    require => [File["/etc/apparmor.d/usr.sbin.mysqld"]],
-    tries => 2,
-    subscribe => File['/etc/mysql/my.cnf']
-# This is handled by a separate class in case we want to just
-# install the package and configure elsewhere.
-class mysql::server::package (
-  $package_name     = $mysql::params::server_package_name,
-) {
-  if $package_name =~ /mariadb/ {
-    file { "/etc/apt/sources.list.d/wikimedia-mariadb.list":
-      owner => root,
-      group => root,
-      mode => 0444,
-      source => "puppet:///modules/coredb_mysql/wikimedia-mariadb.list"
-    }
-    exec { "update_mysql_apt":
-      subscribe => File['/etc/apt/sources.list.d/wikimedia-mariadb.list'],
-      command => "/usr/bin/apt-get update",
-      refreshonly => true;
-    }
-  }
-
-  package { 'mysql-server':
-    ensure   => $package_ensure,
-    name     => $package_name,
-    require  => $package_name ? {
-      "mariadb-server-5.5" => File["/etc/apt/sources.list.d/wikimedia-mariadb.list"],
-      default => undef
-    }
-  }
-}
BREAKS HERE
-  if nfs::server::debian::nfs_v4 == true {
BREAKS HERE
-class profile::toolforge::grid::hba (
-    $sysdir = hiera('profile::toolforge::sysdir'),
-    ){
BREAKS HERE
-			notify => Service["munin"],
BREAKS HERE
-    if ($::operatingsystem != 'Fedora') {
-      $no_postgresql_version = 'Unsupported OS!  Please check `postgres_default_version` fact.'
-      if $::postgres_default_version == $no_postgresql_version {
-        # Have a default postgres version if the postgresql module can't decide
-        # on a sane default for itself.
-        $postgresql_version = '9.1'
-      }
-      else {
-        $postgresql_version = $::postgres_default_version
-      }
-      class { 'postgresql::params':
-        version => $postgresql_version,
-      }
-    }
-
-      config_hash => {
-        'postgres_password'      => 'insecure_slave',
-        'manage_redhat_firewall' => false,
-        'listen_addresses'       => '127.0.0.1',
-      },
-      require     => Class['postgresql::params'],
-    class { 'postgresql::devel':
-    postgresql::database_user { 'openstack_citest':
-      password_hash => 'openstack_citest',
-    postgresql::db { 'openstack_citest':
-      password => 'openstack_citest',
-        Postgresql::Database_user['openstack_citest'],
-      subscribe   => Postgresql::Db['openstack_citest'],
BREAKS HERE
-    if $socket == '/run/mysqld/mysqld.sock' {
-            content => 'd /run/mysqld root mysql',
BREAKS HERE
-    require => Class['apache'],
BREAKS HERE
-  # Clean docker garbage on jenkins more frequently as it tends to fill up quickly.
-  # The time is chosen to be before jenkins builds new Debian images.
-    command => 'chronic docker system prune -af',
-    hour    => 20,
-    minute  => 55,
BREAKS HERE
-      $ticket_id = icinga2_ticket_id($::fqdn, $ticket_salt)
-        command => "icinga2 pki new-cert --cn '${::fqdn}' --key '${_ssl_key_path}' --cert '${_ssl_cert_path}'",
BREAKS HERE
-            #required for Log::Report
-            'http://chorny.net/strawberry/Unicode-LineBreak-2016.003.tar.gz', #https://github.com/hatukanezumi/Unicode-LineBreak/pull/3
-
BREAKS HERE
-        content => template('passenger/passenger-conf.erb'),
BREAKS HERE
-        pattern       => '%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg - MDC:{%mdc}%n%rEx{1,QUERY_TIMEOUT,SYNTAX_ERROR}',
BREAKS HERE
-  $slack_team_domain = 'govuk'
-  $slack_room = 'govuk-infrastructure'
-  $slack_build_server_url = "https://deploy.${app_domain}/"
-
BREAKS HERE
-  Optional[String] $vendor_version = undef,
-  Optional[String] $bootstrap_command = undef,
-  Optional[String] $client_package_name = undef,
-  Optional[String] $galera_package_name = undef,
-  Optional[String] $libgalera_location = undef,
-  Optional[String] $mysql_service_name = undef,
-  Optional[String] $mysql_package_name = undef,
BREAKS HERE
-    package { $php_cli:
-        ensure => present,
-    }
-        command => "/usr/bin/python ${clone_dir}/nightly.py --all",
-        command => "/usr/bin/python ${clone_dir}/nightly.py --all --skins",
BREAKS HERE
-            'baseurl'  => 'https://trunk.rdoproject.org/centos7/f1/32/f132dea0b534b75815439431dc2d9a927ade2030_c08cc25a/',
BREAKS HERE
-        $repotype = "Amazon Linux"
-      } elsif ( $operatingsystemrelease =~ /^5.*/ ) {
-        $repotype = "RHEL5"
-        $repotype = "RHEL > 5"
BREAKS HERE
-  $host_name  = $::fqdn
BREAKS HERE
-  $govuk_frontend_servers,
-      servers       => $govuk_frontend_servers;
BREAKS HERE
-
BREAKS HERE
-  validate_array($import)
-  validate_array($assign)
-  validate_array($ignore)
-  $_attrs = merge($attrs, {
-    'assign where' => $assign,
-    'ignore where' => $ignore,
BREAKS HERE
-  $url_path    = false,
-  $baseurl     = absent,
-  $cron_hour   = 2,
-  $cron_minute = 0,
BREAKS HERE
-          'redis-cfg-files'                  => {
-          'redis-cfg-data-redis'             => {
-            'source-dir' => '/var/lib/config-data/redis/etc/redis',
-            'target-dir' => '/etc/redis',
-          'redis-cfg-data-redis-conf'        => {
-            'source-dir' => '/var/lib/config-data/redis/etc/redis.conf',
-            'target-dir' => '/etc/redis.conf',
-            'options'    => 'ro',
-          },
-          'redis-cfg-data-redis-conf-puppet' => {
-            'source-dir' => '/var/lib/config-data/redis/etc/redis.conf.puppet',
-            'target-dir' => '/etc/redis.conf.puppet',
-            'options'    => 'ro',
-          },
-          'redis-cfg-data-redis-sentinel'    => {
-            'source-dir' => '/var/lib/config-data/redis/etc/redis-sentinel.conf',
-            'target-dir' => '/etc/redis-sentinel.conf',
-            'options'    => 'ro',
-          },
-          'redis-hosts'                      => {
-          'redis-localtime'                  => {
-          'redis-lib'                        => {
-          'redis-log'                        => {
-          'redis-run'                        => {
-          'redis-pki-extracted'              => {
-          'redis-pki-ca-bundle-crt'          => {
-          'redis-pki-ca-bundle-trust-crt'    => {
-          'redis-pki-cert'                   => {
-          'redis-dev-log'                    => {
BREAKS HERE
-  $controller_management_address,
-      'RABBITMQ_NODE_IP_ADDRESS' => $controller_management_address,
-    }
-    rabbit_host         => $controller_management_address,
-    rabbit_host     => $controller_management_address,
-    rabbit_host         => $controller_management_address,
BREAKS HERE
-        source           => 'puppet:///modules/profile/druid/jvm_prometheus_coordinator_jmx_exporter.yaml',
BREAKS HERE
-        service { 'diamond':
-            ensure => stopped,
-            before => Package['diamond'],
-        }
-
BREAKS HERE
-  if $yum::source_dir {
-  if $yum::my_class {
BREAKS HERE
-  # drop from internal zone exceptions: tsunami, werewolves, death, and dev- versions
-  # hard code the addresses in case of DNS malfunction
-
-    ocf::firewall::firewall46 { "997 drop internal zone exception, (${s})":
-        proto  => ['tcp', 'udp'],
-
-      proto     => ['tcp', 'udp'],
-      proto     => ['tcp', 'udp'],
-
-        proto     => ['tcp', 'udp'],
-        proto     => ['tcp', 'udp'],
BREAKS HERE
-    hour        => 2,
BREAKS HERE
-      exec{ "exec-setfacl-${cephfs_auth_id}}":
-        path    => ['/bin', '/usr/bin' ],
-        command => "setfacl -m u:manila:r-- ${keyring_path}",
-        unless  => "getfacl ${keyring_path} | grep -q \"user:manila:r--\"",
-      }
-      Ceph::Key<||> -> Exec["exec-satfacl-openstack-${cephfs_auth_id}"]
-
-      manila::backend::cephfs { $manila_cephfsnative_backend :
BREAKS HERE
-        $php_module = 'php7'
BREAKS HERE
-      password => 'a_big_secret',
-      keystone_identity_uri => 'http://127.0.0.1:35357/',
-      keystone_auth_uri     => 'http://127.0.0.1:35357/',
-      workers => 2,
-      ssl     => false,
BREAKS HERE
-      command => "/sbin/sysctl -w ${title}=${value}",
BREAKS HERE
-  $server_ssl_dir  = $ssldir
-  $server_package     = undef
-  $server_version     = undef
-    if (versioncmp($::puppetversion, '5.0') > 0) {
-      $client_package = ['puppet5']
-    } else {
-      $client_package = ['puppet4']
-    }
BREAKS HERE
-# parameters that may need to be added
-# $state_path = /opt/stack/data/cinder
-# $osapi_volume_extension = cinder.api.openstack.volume.contrib.standard_extensions
-# $root_helper = sudo /usr/local/bin/cinder-rootwrap /etc/cinder/rootwrap.conf
BREAKS HERE
-        $backend_package = $::manila::params::psycopg_package_name
BREAKS HERE
-  $controller_management_address   = undef,
-  $controller_public_address       = $::fqdn,
-  $glance_ssl_cert_file_contents   = undef,
-  $glance_ssl_key_file_contents    = undef,
-  $keystone_ssl_cert_file_contents = undef,
-  $keystone_ssl_key_file_contents  = undef,
-  $neutron_ssl_cert_file_contents  = undef,
-  $neutron_ssl_key_file_contents   = undef,
-  $nova_ssl_cert_file_contents     = undef,
-  $nova_ssl_key_file_contents      = undef,
-  # Non-functional parameters
-  # TODO(crinkle): remove
-  $ssl_cert_file_contents          = undef, # TODO(crinkle): make required
-  $ssl_chain_file_contents         = undef,
-  $ssl_key_file_contents           = undef, # TODO(crinkle): make required
BREAKS HERE
-  $region,
-    content => template("infracloud/bifrost/bifrost_global_vars.${region}.erb"),
-    content => template("infracloud/bifrost/inventory.${region}.json.erb"),
BREAKS HERE
-
-    oslo::messaging::notifications { 'manila_config':
-      driver => $notification_driver
-    }
-    control_exchange => $control_exchange
BREAKS HERE
-                wsgi-file   => '/usr/local/bin/invisible-unicorn.py',
BREAKS HERE
-  $ensure     = present,
-  $command    = undef,
-  $env        = undef,
-  $vars       = undef,
-  $timeout    = undef,
-  $arguments  = undef,
-  $template   = false,
-  $import     = ['plugin-notification-command'],
-  $order      = '25',
-  $target     = undef,
-  validate_array($command)
-    'command' => $command,
-    'env' => $env,
-    'vars' => $vars,
-    'timeout' => $timeout,
-    object_name => $name,
BREAKS HERE
-    stage { 'second': before => Stage['main'] }
BREAKS HERE
-    # Temporarily disable Nova API deployed in WSGI
-    # https://bugs.launchpad.net/nova/+bug/1661360
-    if hiera('nova_wsgi_enabled', false) {
-      if $enable_internal_tls {
-        if $generate_service_certificates {
-          ensure_resources('tripleo::certmonger::httpd', $certificates_specs)
-        }
-        if !$nova_api_network {
-          fail('nova_api_network is not set in the hieradata.')
-        }
-        $tls_certfile = $certificates_specs["httpd-${nova_api_network}"]['service_certificate']
-        $tls_keyfile = $certificates_specs["httpd-${nova_api_network}"]['service_key']
-      } else {
-        $tls_certfile = undef
-        $tls_keyfile = undef
-    include ::nova::network::neutron
BREAKS HERE
-    include contint::hhvm
BREAKS HERE
-        'python3-numpy=1:1.12.0-2~bpo8+1',
BREAKS HERE
-  tidy { "empty-fastd-folder":
-    path    => "/etc/fastd",
-    recurse => true,
-    matches => [ '*' ],
-    rmdirs  => true,
-  } ->
BREAKS HERE
-    exec {'init_building_repo':
-      path        => '/bin:/usr/bin',
-      command     => "/home/${agent_username}/reprepro-updater/scripts/setup_repo.py ubuntu_building -c",
-      environment => ["PYTHONPATH=/home/${agent_username}/reprepro-updater/src"],
-      user  => $agent_username,
-      group  => $agent_username,
-      unless      => "/home/${agent_username}/reprepro-updater/scripts/setup_repo.py ubuntu_building -q",
-      logoutput   => on_failure,
-      require     => [
-        Vcsrepo["/home/${agent_username}/reprepro-updater"],
-        File["/home/${agent_username}/.buildfarm/reprepro-updater.ini"],
-      ]
-    }
-
-    exec {'init_testing_repo':
-      path        => '/bin:/usr/bin',
-      command     => "/home/${agent_username}/reprepro-updater/scripts/setup_repo.py ubuntu_testing -c",
-      environment => ["PYTHONPATH=/home/${agent_username}/reprepro-updater/src"],
-      user  => $agent_username,
-      group  => $agent_username,
-      unless      => "/home/${agent_username}/reprepro-updater/scripts/setup_repo.py ubuntu_testing -q",
-      logoutput   => on_failure,
-      require     => [
-        Vcsrepo["/home/${agent_username}/reprepro-updater"],
-        File["/home/${agent_username}/.buildfarm/reprepro-updater.ini"],
-      ]
-    exec {'init_main_repo':
-      path        => '/bin:/usr/bin',
-      command     => "/home/${agent_username}/reprepro-updater/scripts/setup_repo.py ubuntu_main -c",
-      environment => ["PYTHONPATH=/home/${agent_username}/reprepro-updater/src"],
-      user  => $agent_username,
-      group  => $agent_username,
-      unless      => "/home/${agent_username}/reprepro-updater/scripts/setup_repo.py ubuntu_testing -q",
-      logoutput   => on_failure,
-      require     => [
-        Vcsrepo["/home/${agent_username}/reprepro-updater"],
-        File["/home/${agent_username}/.buildfarm/reprepro-updater.ini"],
-      ]
-    }
BREAKS HERE
-# default file permissions, follow symlinks when serving files, backup existing files to puppetmaster
BREAKS HERE
-# [*apache_postsave_cmd*]
-#   (Optional) If set, it overrides the default way to restart apache when the
-#   certificate is renewed.
-#   Defaults to undef
-#
-  $apache_postsave_cmd        = undef,
-    ensure_resources('tripleo::certmonger::httpd', $apache_certificates_specs_filtered,
-                      {'postsave_cmd' => $apache_postsave_cmd})
BREAKS HERE
-    include classroom::master::hiera
BREAKS HERE
-        cluster_name       => 'elasticsearch',
BREAKS HERE
-        include mysql::python
BREAKS HERE
-        ensure    => running,
-        require   => Package['rsyslog'],
BREAKS HERE
-    require => File["/etc/zuul"],
-    owner => 'jenkins'
-    owner => 'jenkins'
-    owner => 'jenkins'
-    owner => 'jenkins'
BREAKS HERE
-#   PECL: there currently is a hack to allow prepending `pecl-` to avoid duplicate package declarations
-    $real_package = $title
-  $title_without_prefix = regsubst($title, 'pecl-', '')
-    'pecl'  => concat(["set .anon/extension '${title_without_prefix}.so'"], $config),
BREAKS HERE
-    mysql_user { 'clustercheckuser@localhost':
-      ensure        => 'present',
-      password_hash => mysql_password('clustercheckpassword!'), # can not change password in clustercheck script
-      provider      => 'mysql',
-      require       => [ File['/root/.my.cnf'], Service['mysqld']],
-    }
-
BREAKS HERE
-  #FIXME publicapi to be removed when we ditch ec2 -- ppotter 2012-10-12
-    include govuk::apps::publicapi
BREAKS HERE
-            mode      => '0600', # Only $owner:$group can read/write
BREAKS HERE
-        match => '\\bbug:? #?(\\d+)',
-        match => '\\bstory:? #?(\\d+)',
BREAKS HERE
-  $jvm_tuning_profile = $classroom::params::jvm_tuning_profile,
-  if $jvm_tuning_profile != false {
-  }
-  # The tuning file will be installed no matter what because
-  # there are 1+ Hiera keys that remain whatever the tuning
-  # profile is set to.
-  file { "${classroom::params::confdir}/hieradata/tuning.yaml":
-    ensure        => file,
-    owner         => 'root',
-    group         => 'root',
-    mode          => '0644',
-    content       => template('classroom/tuning.yaml.erb'),
-    notify        => Class['puppet_enterprise::profile::master',
-                           'puppet_enterprise::profile::console',
-                           'puppet_enterprise::profile::orchestrator',
-                           'puppet_enterprise::profile::amq::broker'],
BREAKS HERE
-        letsencrypt_host => $letsencrypt_host
BREAKS HERE
-        luahandler => 'urlproxy.lua',
BREAKS HERE
-        $min_spare = ceilingi($num_workers * 0.1)
BREAKS HERE
-  $rabbit_hosts                = undef,
-    if size($rabbit_hosts) > 1 {
-      cinder_config { 'DEFAULT/rabbit_ha_queues': value => 'true' }
-    } else {
-      cinder_config { 'DEFAULT/rabbit_ha_queues': value => 'false' }
-    }
-
-      cinder_config { 'DEFAULT/rabbit_hosts': value => join($rabbit_hosts, ',') }
-    } elsif $rabbit_host {
-      cinder_config { 'DEFAULT/rabbit_host': value => $rabbit_host }
-      cinder_config { 'DEFAULT/rabbit_port': value => $rabbit_port }
-      cinder_config { 'DEFAULT/rabbit_hosts': value => "${rabbit_host}:${rabbit_port}" }
-    }
-  }
BREAKS HERE
-  $sshkeys    = '',
BREAKS HERE
-    apache::mod_conf { 'status':
-        ensure => 'absent',
-    }
-
BREAKS HERE
-  if ( $::hostname == "graphite02" ) {
BREAKS HERE
-    file { "${classroom::codedir}/hiera.yaml":
-      file { "${classroom::codedir}/hiera.yaml":
BREAKS HERE
-    file { ['/etc/libvirt/qemu/networks/autostart/default.xml',
-      '/etc/libvirt/qemu/networks/default.xml']:
-      ensure => absent,
-      before => Service['libvirt'],
-    }
-
-    # in case libvirt has been already running before the Puppet run, make
-    # sure the default network is destroyed
-    exec { 'libvirt-default-net-destroy':
-      command => '/usr/bin/virsh net-destroy default',
-      onlyif  => '/usr/bin/virsh net-info default | /bin/grep -i "^active:\s*yes"',
-      before  => Service['libvirt'],
-    }
-
BREAKS HERE
-    ssl_ca         => $server_foreman_ssl_ca,
-    ssl_cert       => $server_foreman_ssl_cert,
-    ssl_key        => $server_foreman_ssl_key,
BREAKS HERE
-  $application = 'kafka'
-
-  $actual_kafka_settings = prefix(merge($kafka_default_settings, $config), "${application}/")
-    'KAFKA_HEAP_OPTS' => {
-    'KAFKA_OPTS'      => {
-    'GC_LOG_ENABLED'  => {
-    'LOG_DIR'         => {
-  $actual_java_settings = prefix(merge($java_default_settings, $environment_settings), "${application}/")
BREAKS HERE
-            ensure  => 'directory',
-            mode    => '0755',
-            owner   => 'root',
-            group   => 'root',
-        before => File['/etc/init/eventlogging'],
-        ensure  => directory,
-        owner   => 'eventlogging',
-        group   => 'eventlogging',
-        mode    => '0664',
-            ensure  => 'link',
-            target  => $log_dir,
BREAKS HERE
-  file { "${title}_sshdir":
-    ensure  => directory,
-    name    => "${home}/.ssh",
-    owner   => $title,
-    group   => $title,
-    mode    => '0700',
-    require => User[$title],
-  }
-
-  file { "${title}_keyfile":
-    ensure  => present,
-    mode    => '0600',
-    name    => "${home}/.ssh/authorized_keys",
-    require => File["${title}_sshdir"],
-  }
-
-    require => File["${title}_keyfile"],
-  }
-
-  ssh_authorized_key { "${title}_keys":
-    ensure => absent,
-    user   => $title,
BREAKS HERE
-class openstack_integration::nova {
BREAKS HERE
-    # Creates the ssl directory and the CA file
-    class { 'etcd::ssl::base':
-        ssldir => $ssldir
-    # $::etcd::ssl::cert can be used by other classes
-    # to make sure they are using the proper
-    # cert file when connecting to etcd.
-    $cert = '/var/lib/etcd/ssl/certs/cert.pem'
-    file { $cert:
BREAKS HERE
-        source => 'puppet:///modules/prometheus/usr/local/bin/prometheus-puppet-agent-stats',
BREAKS HERE
-
BREAKS HERE
-  $app_name = 'authenticating-proxy'
BREAKS HERE
-        before   => Base::Service_unit[$service_name],
BREAKS HERE
-    nagios_cpu_warning    => $nagios_cpu_warning,
-    nagios_cpu_critical   => $nagios_cpu_critical,
BREAKS HERE
-  $python_version = '2.7'
BREAKS HERE
-  include collectd::plugin::postgresql
-  collectd::plugin::tcpconn { 'postgresql':
-    incoming => 5432,
-    outgoing => 5432,
-  }
-
-  $warning_conns = $max_connections * 0.8
-  $critical_conns = $max_connections * 0.9
-  @@icinga::check::graphite { "check_postgres_conns_used_${::hostname}":
-    target    => "${::fqdn_metrics}.postgresql-global.pg_numbackends",
-    desc      => 'postgres high connections used',
-    warning   => $warning_conns,
-    critical  => $critical_conns,
-    host_name => $::fqdn,
BREAKS HERE
-      $status = "https://${zuul::vhost_name}/status.json"
-      $status = "http://${zuul::vhost_name}/status.json"
BREAKS HERE
-  ufw::allow { "allow-ssh-from-all":
BREAKS HERE
-    undef => '50',
-    undef => '0',
-    undef => 'absent',
-    undef => 'absent',
-    undef => 'absent',
BREAKS HERE
-      if length($driver_devices) == 1 {
BREAKS HERE
-  $description = "Created and managed by Puppet",
-    'present' => 'true',
-    default   => 'false',
-    'refreshonly'     => 'true',
BREAKS HERE
-          require      => File["check_${title}-needs-merge"]
BREAKS HERE
-    file { "${::php::params::fpm_pool_dir}/${pool}.conf":
-    file { "${::php::params::fpm_pool_dir}/${pool}.conf":
BREAKS HERE
-        command => "/usr/bin/find ${runtime_properties['druid.indexer.logs.directory']} -mtime +${indexer_log_retention_days} -exec /bin/rm {} \\;",
-        command => "/usr/bin/find /var/log/druid -mtime +${request_log_retention_days} | /bin/grep -E '2.*(Z|.log)$' | /usr/bin/xargs /bin/rm -f",
BREAKS HERE
-# Sets up a collectd plugin to monitor RabbitMQ.
-#   The password to a user which can access monitoring information from RabbitMQ.
-  include collectd::plugin::python
-  @file { '/usr/lib/collectd/python/rabbitmq.py':
-    ensure => present,
-    source => 'puppet:///modules/collectd/usr/lib/collectd/python/rabbitmq.py',
-    tag    => 'collectd::plugin',
-    notify => File['/etc/collectd/conf.d/rabbitmq.conf'],
-  @file { '/usr/lib/collectd/python/rabbitmq.pyc':
-    ensure => undef,
-    tag    => 'collectd::plugin',
-    require => Class['collectd::plugin::python'],
BREAKS HERE
-        port   => $port,
-        proto  => 'tcp',
-        desc   => 'API for adding / removing proxies from dynamicproxy domainproxy'
-        ensure  => present,
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
-        source  => 'puppet:///modules/dynamicproxy/upstart.conf',
-        before  => Service['dynamicproxy-api'],
-        notify  => Service['dynamicproxy-api'],
BREAKS HERE
-  class { 'staging':
-    path    => 'C:/shares',
-  }
-  staging::file { 'Brackets.msi':
-    require => Class['staging'],
-    require => Class['staging'],
BREAKS HERE
-  govuk_rabbitmq::check_rabbitmq_consumers {'email-alert-service_rabbitmq-consumers':
BREAKS HERE
-        '/vat/log/ircecho/irc-wmt.log'      => '##wmt',
BREAKS HERE
-  class {'graphite':
-    require => Govuk::Mount['/opt/graphite'],
-  }
-
BREAKS HERE
-#    (optional) Defaults to 'daily'.
-#    (optional) Defaults to 14.
-  $rotation         = 'daily',
-  $rotate           = 14,
BREAKS HERE
-    $pybal = {
-        'bgp' => hiera('lvs::configuration::bgp', 'yes'),
-        'bgp-peer-address' => $::hostname ? {
-            /^lvs100[1-3]$/ => '208.80.154.196', # cr1-eqiad
-            /^lvs100[4-6]$/ => '208.80.154.197', # cr2-eqiad
-            /^lvs100[789]$/ => '208.80.154.196', # cr1-eqiad
-            /^lvs101[012]$/ => '208.80.154.197', # cr2-eqiad
-            /^lvs200[1-3]$/ => '208.80.153.192', # cr1-codfw
-            /^lvs200[4-6]$/ => '208.80.153.193', # cr2-codfw
-            /^lvs300[12]$/  => '91.198.174.244',  # cr2-esams
-            /^lvs300[34]$/  => '91.198.174.245',  # cr1-esams
-            /^lvs400[12]$/  => '198.35.26.192',   # cr1-ulsfo
-            /^lvs400[34]$/  => '198.35.26.193',   # cr2-ulsfo
-            default         => '(unspecified)'
-            },
-        'bgp-nexthop-ipv4' => $facts['ipaddress'],
-        'bgp-nexthop-ipv6' => inline_template("<%= require 'ipaddr'; (IPAddr.new(@ipaddress6).mask(64) | IPAddr.new(\"::\" + @ipaddress.gsub('.', ':'))).to_s() %>"),
-        'instrumentation' => 'yes',
-    }
-
BREAKS HERE
-  $puppetdb_version = '1.3.0-1puppetlabs1'
BREAKS HERE
-    printhost:     { class { 'ocf::common::auth': login => 'printing', sudo => 'printing' } }
-  class { 'ocf::services::kvm':      octet      => 225 }
-  class { 'ocf::common::networking': octet => 203 }
BREAKS HERE
-        exec { "test -f ${real_htpasswd_file} || OPT='-c'; htpasswd -bp \${OPT} ${real_htpasswd_file} ${username} '${crypt_password}'":
-        exec { "test -f ${real_htpasswd_file} || OPT='-c'; htpasswd -b \$OPT ${real_htpasswd_file} ${username} ${clear_password}":
BREAKS HERE
-    $graphite_metric_prefix = "${labsproject}.${hostname}"
-        logster_options => "-o statsd --statsd-host=logmon1001.eqiad.wmnet:8125 --metric-prefix=${graphite_metric_prefix}",
BREAKS HERE
-    require_packages 'python-yaml', 'python-urllib3'
BREAKS HERE
-  ad_domainname           = 'CLASSROOM.local'
-  ad_netbiosdomainname    = 'CLASSROOM'
-  ad_dsrmpassword         = 'Puppetlabs1'
BREAKS HERE
-    file { ['/etc/libvirt/qemu/networks/autostart/default.xml',
-      '/etc/libvirt/qemu/networks/default.xml']:
-      ensure  => absent,
-      require => Package['libvirt'],
-      before  => Service['libvirt'],
BREAKS HERE
-    java { 'java-default': }
BREAKS HERE
-  # needed by python-keystoneclient, has system bindings
-  # Zuul and Nodepool both need it, so make it conditional
-  if ! defined(Package['python-lxml']) {
-    package { 'python-lxml':
-      ensure => present,
-    }
-  }
-
-      Package['python-lxml'],
BREAKS HERE
-            $package_prefix      = 'php-'
BREAKS HERE
-  keystone_service { $auth_name:
-    keystone_endpoint { "${region}/${auth_name}":
BREAKS HERE
-        require => File['usr/local/sbin/puppet-run'],
BREAKS HERE
-#   grant    => ['SELECT', 'INSERT', 'UPDATE', 'DELETE', 'DROP', 'CREATE VIEW', 'INDEX', 'EXECUTE'],
BREAKS HERE
-  #$methods                             = undef, Need to get more details about this attribute
-  $refresh_icinga2_service = true
-  #Do some validation of the class' parameters:
-  if $checkcommand_template == 'object_checkcommand.conf.erb' {
-    validate_array($templates)
-    if ! is_string($command) {
-      validate_array($command)
-    }
-    validate_string($cmd_path)
-    
-    validate_hash($env)
-    
-    validate_hash($vars)
-    if $timeout {
-      validate_re($timeout, '^\d+$')
-    }
BREAKS HERE
-    ensure => $carbon_packagge_ensure,
BREAKS HERE
-    content => "[Unit]\nDescription=Launch game server\n\n[Service]\nExecStart=/usr/bin/java -jar ${jinteki::home}/target/netrunner-0.1.0-SNAPSHOT-standalone.jar\nType=idle\n\n[Install]\nWantedBy=multi-user.target\n",
BREAKS HERE
-  exec { '::php::pear::auto_discover':
-    command => 'pear config-set auto_discover 1 system',
-    unless  => 'pear config-get auto_discover system | grep -q 1',
-    path    => ['/bin/', '/sbin/' , '/usr/bin/', '/usr/sbin/',
-                '/usr/local/bin', '/usr/local/sbin'],
-    require => Package[$package_name],
-  }
BREAKS HERE
-  $desired_virtualenv = '13.1.0'
BREAKS HERE
-    require    => [Package["firmware-addon-dell"], File["/etc/pki/rpm-gpg/RPM-GPG-KEY-dell"], File["/etc/pki/rpm-gpg/RPM-GPG-KEY-libsmbios"]],
BREAKS HERE
-  $relay_method                              = $graphite::params::relay_method,
BREAKS HERE
-        ensure  => 'directory',
-        mode    => '0755',
-        owner   => 'root',
-        group   => 'root',
BREAKS HERE
-$va_version = "1.3"
BREAKS HERE
-  exec { 'update_composer':
-    command => "composer update",
-    require => Exec['composer', 'install_moodle'],
BREAKS HERE
-    $userexists = "/usr/bin/psql --tuples-only -c \'SELECT rolname FROM pg_catalog.pg_roles;\' | /bin/grep \'^ ${user}\'"
BREAKS HERE
-  
BREAKS HERE
-    sysadmins => hiera('sysadmins'),
BREAKS HERE
-# Document parameters here.
-#
-#   Set to present enables the feature mainlog, absent disabled it. Default to present.
-#   Absolute path to the log file. Default depends on plattform, /var/log/icinga2/debug.log
-#   on Linux and C:/ProgramData/icinga2/var/log/icinga2/debug.log on Windows.
BREAKS HERE
-    '/opt/share/docker':
BREAKS HERE
-      manila::backend::cephfsnative { $manila_cephfsnative_backend :
BREAKS HERE
-		"${::graphite::params::apache_pkg}": ensure => installed;
-		before      => Exec['Chown graphite for apache'];
-        '/opt/graphite/conf/graphite.wsgi':
-            ensure  => file,
-            owner   => $::graphite::params::web_user,
-            group   => $::graphite::params::web_user,
-            mode    => '0644',
-            content => template("graphite/opt/graphite/conf/graphite.wsgi.erb"),
-            require => Package["${::graphite::params::apache_pkg}"];
-				Exec['Initial django db creation']
BREAKS HERE
-  file { "${conf_dir}/conf.d/90.hardening.conf":
BREAKS HERE
-        source => "puppet:///dell/etc/pki/rpm-gpg/RPM-GPG-KEY-dell",
-        source => "puppet:///dell/etc/pki/rpm-gpg/RPM-GPG-KEY-libsmbios",
BREAKS HERE
-            '/var/lib/icinga/rw',
-    file { '/var/lib/nagios/rw':
-        owner => $icinga_user,
-        group => 'www-data',
-        mode  => '2710', # The sgid bit means new files inherit guid
BREAKS HERE
-    release           => "${lsbdistcodename}-backports",
BREAKS HERE
-
-  # filter out many of the useless interfaces that show up
-  $real_ifs = reject(split($::interfaces, ' |,'), 'eth\d+_\d+|sit0|virbr\d+_nic|vif\d+_\d+|veth\d+|__tmp\d+')
-  $ifs = regsubst($real_ifs, '(.+)', 'if_\1')
-  $if_errs = regsubst($real_ifs, '(.+)', "${if_err_plugin}\1")
BREAKS HERE
-  $drushdsdtar     = 'https://github.com/mkissam/drush-dsd/archive/v0.9.tar.gz',
-  $basedrushdsdtar = 'drush-dsd-0.9.tar.gz',
BREAKS HERE
-#   ├── php.ini      # Settings for CLI mode
-#   └── fcgi.ini     # Settings for FastCGI mode
-#   ├── error.log
-#   └── stacktrace.NNN.log.YYYYMMDD, ...
BREAKS HERE
-  haproxy::balancermember { 'horizon':
-    listening_service => 'horizon',
-    ports             => $backend_port,
-    ipaddresses       => $ip_addresses,
-    server_names      => $server_names,
-    options           => union($member_options, ["cookie ${::hostname}"]),
BREAKS HERE
-  # install nodejs default version
-        ensure  => present,
-        content => template('openstackid/.env.erb'),
-        owner   => 'root',
-        group   => 'www-data',
-        mode    => '0640',
-        require => [
-          File['/etc/openstackid'],
-        ]
-        File['/opt/deploy/conf.d/openstackid.conf'],
-        Apache::Vhost::Custom[$vhost_name],
-        File['/etc/openstackid/.env'],
-        Package['curl'],
-        Package[$php_packages] ,
-        Class['::nodejs'],
BREAKS HERE
-  if $step == 2 and $swift_ring_get_tempurl != '' {
-  if $step == 5 and $build_ring and $swift_ring_put_tempurl != '' {
-    exec{'create_swift_ring_tarball':
-      path    => ['/bin', '/usr/bin'],
-      command => 'tar cvzf /tmp/swift-rings.tar.gz /etc/swift/*.builder /etc/swift/*.ring.gz /etc/swift/backups/',
-      unless  => 'swift-recon --md5 | grep -q "doesn\'t match"'
-    } ~>
BREAKS HERE
-        apt::repository{ 'component/kube2proxy':
BREAKS HERE
-      ensure                 => $ensure,
-      vhost                  => $vhost_full,
-      aliases                => $vhost_aliases_real,
-      protected              => $vhost_protected,
-      app_port               => $port,
-      ssl_only               => $vhost_ssl_only,
-      nginx_extra_config     => $nginx_extra_config,
-      nginx_extra_app_config => $nginx_extra_app_config,
-      intercept_errors       => $intercept_errors,
-      deny_framing           => $deny_framing,
-      logstream              => $logstream,
-      asset_pipeline         => $asset_pipeline,
-      asset_pipeline_prefix  => $asset_pipeline_prefix,
-      hidden_paths           => $hidden_paths,
-      read_timeout           => $read_timeout,
BREAKS HERE
-include ::openstack_integration::sahara
-  sahara  => true,
BREAKS HERE
-  $npm_root = "${mirror_root}/npm"
-  file { "${www_root}/npm":
-    ensure  => link,
-    target  => "${npm_root}",
-    owner   => root,
-    group   => root,
-    require => [
-      File["${www_root}"],
-    ]
-  }
-
BREAKS HERE
-      path    => $path,
BREAKS HERE
-    require ::role::analytics_cluster::hadoop::client
-    include ::role::analytics_cluster::hive::client
BREAKS HERE
-    class { '::hhvm::admin': }
BREAKS HERE
-      ensure => absent,
-      before => Service['libvirt'],
BREAKS HERE
-  postfix::postmapfile { 'sasl_passwd': name           => 'sasl_passwd' }
-  postfix::postmapfile { 'outbound_rewrites': name     => 'outbound_rewrites' }
BREAKS HERE
-    mode    => 0644,
-    mode    => 0644,
BREAKS HERE
-        ensure => present,
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0555',
-        source => template('profile/toolforge/dologmsg.erb'),
BREAKS HERE
-        command => '/usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki --max-time 540 --batch-size 420 --dispatch-interval 25 --lock-grace-interval 200 >/dev/null 2>&1',
-        weekday => '*'
BREAKS HERE
-    package { [ 'google-perftools', 'graphviz', 'gv' ]:
BREAKS HERE
-      $alternatives = undef
-      $alternatives = 'cluster'
BREAKS HERE
-    class { '::mysql::server':
-        package_name => 'mariadb-server',
-        config_hash  => {
-            'datadir'      => '/srv/mysql/data',
-            'bind_address' => '0.0.0.0',
-        },
BREAKS HERE
-	case $operatingsystem {
-		darwin: { include munin::client::darwin }
-		debian: {
-			include munin::client::debian
-			include munin::plugins::debian
-		}
-		ubuntu: {
-			info ( "Trying to configure Ubuntu's munin with Debian class" )
-			include munin::client::debian
-			include munin::plugins::debian
-		}
-		gentoo: {
-			include munin::client::gentoo
-			include munin::plugins::gentoo
-		}
-		centos: {
-			include munin::client::centos
-			include munin::plugins::centos
-		}
-		default: { fail ("Don't know how to handle munin on $operatingsystem") }
-	}
-
-	case $kernel {
-		linux: {
-			case $vserver {
-				guest: { include munin::plugins::vserver }
-				default: {
-					include munin::plugins::linux
-				}
-			}
-		}
-		default: {
-			err( "Don't know which munin plugins to install for $kernel" )
-		}
-	}
-	case $virtual {
-        physical: { include munin::plugins::physical }
-	    xen0: { include munin::plugins::dom0 }
-        xenu: { include munin::plugins::domU }
-class munin::client::darwin 
-{
-class munin::client::debian 
-{
-	package { "munin-node": ensure => installed }
-	file {
-		"/etc/munin/":
-			ensure => directory,
-			mode => 0755, owner => root, group => 0;
-		"/etc/munin/munin-node.conf":
-			content => template("munin/munin-node.conf.${operatingsystem}.${lsbdistcodename}"),
-			mode => 0644, owner => root, group => 0,
-			# this has to be installed before the package, so the postinst can
-			# boot the munin-node without failure!
-			before => Package["munin-node"],
-			notify => Service["munin-node"],
-	}
-
-	service { "munin-node":
-		ensure => running, 
-
-	munin::register { $fqdn: }
-
-class munin::client::gentoo 
-{
-    $acpi_available = "absent"
-    package { 'munin-node':
-                name => 'munin',
-                ensure => present,
-                category => $operatingsystem ? {
-                        gentoo => 'net-analyzer',
-                        default => '',
-                },
-    }
-
-	file {
-		"/etc/munin/":
-			ensure => directory,
-			mode => 0755, owner => root, group => 0;
-		"/etc/munin/munin-node.conf":
-			content => template("munin/munin-node.conf.Gentoo."),
-			mode => 0644, owner => root, group => 0,
-			# this has to be installed before the package, so the postinst can
-			# boot the munin-node without failure!
-			before => Package["munin-node"],
-	    #		notify => Service["munin"],
-	}
-
-	service { "munin-node":
-		ensure => running, 
-	}
-	munin::register { $fqdn: }
-}
-
-class munin::client::centos 
-{
-    package { 'munin-node':
-                ensure => present,
-	file {
-		"/etc/munin/":
-			ensure => directory,
-			mode => 0755, owner => root, group =>0;
-		"/etc/munin/munin-node.conf":
-			content => template("munin/munin-node.conf.CentOS."),
-			mode => 0644, owner => root, group => 0,
-			# this has to be installed before the package, so the postinst can
-			# boot the munin-node without failure!
-			before => Package["munin-node"],
-			notify => Service["munin-node"],
-	}
-
-	service { "munin-node":
-		ensure => running, 
-	}
-
-	munin::register { $fqdn: }
-
BREAKS HERE
-      $carbin_pip_hack_source = "/usr/lib/python2.7/dist-packages/carbon-${carbonVersion}-py2.7.egg-info"
-      $carbin_pip_hack_target = "/opt/graphite/lib/carbon-${carbonVersion}-py2.7.egg-info"
-          $carbin_pip_hack_source     = "/usr/lib/python2.6/site-packages/carbon-${carbonVersion}-py2.6.egg-info"
-          $carbin_pip_hack_target     = "/opt/graphite/lib/carbon-${carbonVersion}-py2.6.egg-info"
-          $carbin_pip_hack_source     = "/usr/lib/python2.7/site-packages/carbon-${carbonVersion}-py2.7.egg-info"
-          $carbin_pip_hack_target     = "/opt/graphite/lib/carbon-${carbonVersion}-py2.7.egg-info"
BREAKS HERE
-    # RAID checks
-    class { 'raid':
-        write_cache_policy => $raid_write_cache_policy,
-        check_interval     => $raid_check_interval,
-        retry_interval     => $raid_retry_interval,
BREAKS HERE
-            content => $source,
BREAKS HERE
-      # </Workaround> 
-    ensure_packages(['gcc','zlib', 'zlib-devel'], {
-      })
-      package { ['serverspec', 'puppetlabs_spec_helper']:
-        ensure   => present,
-        provider => gem,
-        require  => Package['puppet'],
-      }
-      # lol, this is great.
-      package { 'puppet':
-        ensure          => present,
-        provider        => gem,
-        install_options => { '--bindir' => '/tmp' },
-      }
-      class { 'puppetfactory::profile::showoff':
-        password => $session_id,
-      }
-      class { 'puppetfactory':
-        prefix               => false,
-        map_environments     => true,
-        puppetcode           => '/var/opt/puppetcode',
-        map_modulepath       => false,
-        readonly_environment => true,
-        dashboard            => "${showoff::root}/courseware/_files/tests",
-        session_id           => $session_id,
-        gitlab_enabled       => false,
-      }
-      class { 'puppetfactory::facts':
-        coursename => 'puppetizing',
-      }
-      # Because PE writes a default, we have to do tricks to see if we've already managed this.
-      # We don't want to stomp on instructors doing demonstrations.
-      unless defined('$puppetlabs_class') {
-        file { '/etc/puppetlabs/code/hiera.yaml':
-          ensure  => file,
-          source => 'puppet:///modules/puppetfactory/puppetizing/hiera.yaml',
-        }
-    } else {
-      if $::osfamily == 'windows' {
-        # Windows Agents
-        include chocolatey
-        include classroom::windows::disable_esc
-        include classroom::windows::geotrust
-        windows_env { 'PATH=C:\Program Files\Puppet Labs\Puppet\sys\ruby\bin': }
-      } else {
-        # Linux Agents
-        class { 'puppetfactory::facts':
-          coursename => 'puppetizing',
-        }
-      }
BREAKS HERE
-    $app_domain = hiera('app_domain_internal')
-  } else {
-    $app_domain = hiera('app_domain')
BREAKS HERE
-        source  => 'puppet:///modules/labs_bootstrapvz/labs-jessie.manifest.yaml',
BREAKS HERE
-    notify => Class['::icinga2::service']
-  -> class { '::icinga2::repo': }
-    subscribe => Class['::icinga2::config']
BREAKS HERE
-        prefix     => '/ci',
-        prefix    => '/ci',
BREAKS HERE
-  if $categories { validate_array($categories) }
-    categories            => $categories,
BREAKS HERE
-    $ensure='present',
-    $pgversion = $::lsbdistcodename ? {
-        jessie  => '9.4',
-        precise => '9.1',
-        trusty  => '9.3',
-    ) {
-                "postgresql-${pgversion}-postgis",
-                'postgis',
-            ]:
BREAKS HERE
-    if $zuul::proxy_ssl_cert_file_contents != '' {
-      $status = "https://${zuul::vhost_name}/status"
-      $status = "http://${zuul::vhost_name}/status"
-  file { '/var/lib/zuul/www/static':
-    ensure  => absent,
BREAKS HERE
-# $puppetserver_metrics::      For Puppetserver 5, enable metrics? Defaults to true
-# $puppetserver_experimental:: For Puppetserver 5, enable metrics? Defaults to true
BREAKS HERE
-        error("Variable ${::nameservers} is not defined!")
BREAKS HERE
-  $image_log_document_root = '/var/log/nodepool/image',
-  $image_log_periodic_cleanup = false,
-  $enable_image_log_via_http = false,
-  $upload_log_document_root = '/var/log/nodepool/upload',
-  $upload_log_periodic_cleanup = false,
-  # note : not currently supported
-  $enable_upload_log_via_http = false,
-  if $image_log_document_root == $upload_log_document_root {
-    # It makes no sense to ask to not export build or upload logs, but
-    # then have them log to the same directory that will be exported.
-    if (($enable_image_log_via_http and !$enable_upload_log_via_http) or
-        ($enable_upload_log_via_http and !$enable_image_log_via_http)
-    ) {
-        fail('Unexported logs in same directory as exported logs!')
-    }
-  }
-
-  # we only need to create the upload log dir if it is separate to the
-  # image log.
-  $separate_upload_log_dir =
-    $image_log_document_root != $upload_log_document_root
-
-  if $enable_image_log_via_http == true or
-    $enable_upload_log_via_http == true {
-    # Setup apache for log access
-    include ::httpd
-
-    ::httpd::vhost { $vhost_name:
-      port     => 80,
-      priority => '50',
-      docroot  => 'MEANINGLESS_ARGUMENT',
-      template => 'nodepool/nodepool-log.vhost.erb',
-    }
-    if ! defined(Httpd::Mod['rewrite']) {
-      httpd::mod { 'rewrite': ensure => present }
-    }
-    if ! defined(Httpd::Mod['proxy']) {
-      httpd::mod { 'proxy': ensure => present }
-    }
-    if ! defined(Httpd::Mod['proxy_http']) {
-      httpd::mod { 'proxy_http': ensure => present }
-    }
-  }
-
-  if $image_log_document_root != '/var/log/nodepool' {
-    file { $image_log_document_root:
-      ensure  => directory,
-      mode    => '0755',
-      owner   => 'nodepool',
-      group   => 'nodepool',
-      require => [
-        User['nodepool'],
-        File['/var/log/nodepool'],
-      ],
-    }
-  }
-
-  # we only need this if it is different to the image_log
-  if $separate_upload_log_dir
-  {
-    file { $upload_log_document_root:
-      ensure  => directory,
-      mode    => '0755',
-      owner   => 'nodepool',
-      group   => 'nodepool',
-      require => [
-        User['nodepool'],
-        File['/var/log/nodepool'],
-      ],
-    }
-  }
-
-  # run a cleanup on the image log directory to cleanup logs for
-  # images that are no longer being built
-  if $image_log_periodic_cleanup == true {
-    cron { 'image_log_cleanup':
-      user        => 'nodepool',
-      hour        => '1',
-      minute      => '0',
-      command     => "find ${image_log_document_root} \\( -name '*.log' -o -name '*.log.*' \\) -mtime +7 -execdir rm {} \\;",
-      environment => 'PATH=/usr/bin:/bin:/usr/sbin:/sbin',
-    }
-  }
-
-  # run a cleanup on the upload log directory to cleanup logs for
-  # providers that are no long uploading
-  if $upload_log_periodic_cleanup == true {
-    cron { 'upload_log_cleanup':
-      user        => 'nodepool',
-      hour        => '1',
-      minute      => '0',
-      command     => "find ${upload_log_document_root} \\( -name '*.log' -o -name '*.log.*' \\) -mtime +7 -execdir rm {} \\;",
-      environment => 'PATH=/usr/bin:/bin:/usr/sbin:/sbin',
-    }
-  }
-
BREAKS HERE
-    war => 'http://ci.openstack.org/tarballs/gerrit-2.4-12-gfed0b72.war',
BREAKS HERE
-    class { '::contint::browsers':
-    }
BREAKS HERE
-        require => Package['python-redis'] # Is provided by the dynamicproxy class
BREAKS HERE
-    sysadmins               => hiera('sysadmins', []),
-    zmq_event_receivers     => ['logstash.openstack.org',
-                                'nodepool.openstack.org',
-    ],
-    sysadmins               => hiera('sysadmins', []),
-    zmq_event_receivers     => ['logstash.openstack.org',
-                                'nodepool.openstack.org',
-    ],
-    sysadmins                => hiera('sysadmins', []),
BREAKS HERE
-        $subject_alt_names = join($altnames, ', ')
BREAKS HERE
-        srange => "(@resolve((${metrics_allowed_hosts})) @resolve((${metrics_allowed_hosts}), AAAA))",
BREAKS HERE
-    command => "puppi deploy ${name}; [ $? -le "1" ] && touch ${puppi::params::archivedir}/puppirun_${name}",
BREAKS HERE
-        $init_template = 'phabricator/initscripts/sshd-phab.conf.erb'
-        $init_template = 'phabricator/initscripts/sshd-phab.service.erb'
BREAKS HERE
-      'hadoop.http.authentication.cookie.domain' => downcase($hadoop::features['realm']),
-      'hadoop.http.authentication.kerberos.principal' => 'HTTP/_HOST@ZCU.CZ',
BREAKS HERE
-        source => 'puppet:///modules/graphite/archive-instances',
BREAKS HERE
-    ensure   => present,
-    content  => template('bandersnatch/bandersnatch.conf.erb'),
BREAKS HERE
-      {rewrite_rule => '^/callinkapi$ https://orapps.berkeley.edu/StudentGroupServiceV2/service.asmx?op=CalLinkOrganizations [R]'},
BREAKS HERE
-    package { 'awscli':
-      ensure   => 'present',
-      provider => 'pip',
-    }
BREAKS HERE
-        ensure    => $package_ensure,
-        name      => $package_name,
-        require   => $package_source,
BREAKS HERE
-        notify          => Exec['rabbitmq-ready'],
-        path        => '/usr/sbin:/usr/bin:/sbin:/bin',
-        command     => 'rabbitmqctl status | grep -F "{rabbit,"',
-        timeout     => 30,
-        tries       => 180,
-        try_sleep   => 10,
-        refreshonly => true,
-        tag         => 'rabbitmq_ready',
BREAKS HERE
-class cinder::db::sync {
-    command     => $::cinder::params::db_sync_command,
BREAKS HERE
-  firewall { "102 allow IPA master UDP serivces (kerberos,kpasswd,ntp)":
-    dspw       => $ipa::master::dspw,
BREAKS HERE
-    purge_apt_sources         => true,
BREAKS HERE
-    file { "${sysdir}/gridengine":
-        require => File[$toollabs::sysdir],
BREAKS HERE
-      'pecl'  => "pecl-${title}",
-        name     => $title,
BREAKS HERE
-  # because of bug 1356053
-  service_type => 'data_processing',
BREAKS HERE
-    munin::plugins::djbdns
-	
BREAKS HERE
-  validate_hash($glocal_hooks)
-  class { '::gitlab::install': } ->
-  class { '::gitlab::config': } ~>
-  class { '::gitlab::service': }
- 
BREAKS HERE
-    require_package('build-essential')
BREAKS HERE
-    ){
-    class { '::geoip':
-    class { '::mediawiki':
-    class { '::tmpreaper':
BREAKS HERE
-  # Windows update service.
-  case $::kernelmajversion {
-    '6.3', '10.0' : {
-      service { $service:
-        enable => true,
-      }
-    default: {
-      service { $service:
-        ensure => 'running',
-        enable => true,
-      }
-   }
BREAKS HERE
-  a2mod { 'rewrite':
-    ensure => present,
-  a2mod { 'proxy':
-    ensure => present,
-  a2mod { 'proxy_http':
-    ensure => present,
BREAKS HERE
-                $git = 'umask 002; /usr/bin/git'
-                $git = '/usr/bin/git'
BREAKS HERE
-  file { "/etc/default/rsync":
-    mode    => 0444,
-    owner   => root,
-    group   => root,
-    content => template("rsync/rsync.default.erb"),
BREAKS HERE
-            mode    => '755',
BREAKS HERE
-    release      => $::lsbdistcodename,
-    repos        => 'stable',
BREAKS HERE
-    command => "/bin/echo -n '${counter_basename}.http_500:0|c' > /dev/udp/localhost/8125",
BREAKS HERE
-  # ----
-  # collect the puppet.conf fragments
-  concat { $puppet::params::puppet_conf:
-    mode => '0644',
-    gnu  => $kernel ? {
-      'SunOS' => 'false',
-      default => 'true',
-    }
-  }
BREAKS HERE
-  $arguments         = {},
-  $vars              = {},
-  $target_dir        = '/etc/icinga2/conf.d',
-  validate_hash($vars)
BREAKS HERE
-  # we use this package in the le_cert_info fact, to gather information about
-  # whatever certs are currently present
-  package { 'python3-cryptography':; }
-
BREAKS HERE
-      before  => Apache::Vhost[$vhost_name],
-      before  => Apache::Vhost[$vhost_name],
-      before  => Apache::Vhost[$vhost_name],
-    notify  => Service['apache2'],
-  include apache
-  include apache::ssl
-  include apache::php
-  a2mod { 'rewrite':
-  apache::vhost { $vhost_name:
BREAKS HERE
-    ensure   => '2.7.0',
BREAKS HERE
-      apt::source { "${module_name} ${vendor_type} repository":
-      yumrepo { "${module_name} ${vendor_type} repository":
-        yumrepo { "${module_name} epel repository":
BREAKS HERE
-    include ::redis
BREAKS HERE
-# [*ssl*]
-#   (optional) Boolean to enable or not SSL.
-#   Defaults to false.
-#
-  $ssl         = false,
-  if $ssl {
-    $rabbit_port = '5671'
-  } else {
-    $rabbit_port = '5672'
-  }
-    rabbit_port             => $rabbit_port,
-    rabbit_use_ssl          => $ssl,
BREAKS HERE
-include ::openstack_integration::trove
-  trove   => true,
BREAKS HERE
-	  
-	  create_resources( ::syncthing::device, $devices )
-	  create_resources( ::syncthing::folder, $folders )
BREAKS HERE
-        event_type => 'patchset-created, change-restored',
BREAKS HERE
-      $certtype = "www"
-      $certtype = "www"
-      $certtype = "wildcard_alphagov"
-    content => extlookup("${certtype}_crt", ''),
-    content => extlookup("${certtype}_key", ''),
BREAKS HERE
-  $statsd_hosts = ['git.openstack.org',
-                   'firehose01.openstack.org',
-                   'logstash.openstack.org',
-                   'nodepool.openstack.org',
-                   'nl01.openstack.org',
-                   'nl02.openstack.org',
-                   'zuul.openstack.org',
-                   'zuulv3.openstack.org',
-                   'zm01.openstack.org',
-                   'zm02.openstack.org',
-                   'zm03.openstack.org',
-                   'zm04.openstack.org',
-                   'zm05.openstack.org',
-                   'zm06.openstack.org',
-                   'zm07.openstack.org',
-                   'zm08.openstack.org',
-                   'ze01.openstack.org',
-                   'ze02.openstack.org',
-                   'ze03.openstack.org',
-                   'ze04.openstack.org',
-                   'ze05.openstack.org',
-                   'ze06.openstack.org',
-                   'ze07.openstack.org',
-                   'ze08.openstack.org',
-                   'ze09.openstack.org',
-                   'ze10.openstack.org',
-                   ]
-
-  # Turn a list of hostnames into a list of iptables rules
-  $rules = regsubst ($statsd_hosts, '^(.*)$', '-m udp -p udp -s \1 --dport 8125 -j ACCEPT')
-
-    iptables_rules6           => $rules,
-    iptables_rules4           => $rules,
BREAKS HERE
-# This module was automatically generated on 2017-08-28 11:59:04
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['cloudbees-folder'], Jenkins::Plugin['matrix-project'], Jenkins::Plugin['workflow-durable-task-step'] ]
-  ::jenkins::plugin { 'authentication-tokens':
-    version => '1.3',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'] ]
-  }
-
-  ::jenkins::plugin { 'credentials-binding':
-    version => '1.13',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'], Jenkins::Plugin['plain-credentials'], Jenkins::Plugin['ssh-credentials'], Jenkins::Plugin['structs'], Jenkins::Plugin['workflow-step-api'] ]
-  }
-
-  ::jenkins::plugin { 'docker-commons':
-    version => '1.8',
-    require => [ Jenkins::Plugin['authentication-tokens'], Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials'], Jenkins::Plugin['credentials-binding'], Jenkins::Plugin['icon-shim'] ]
-  }
-
-  ::jenkins::plugin { 'docker-workflow':
-    version => '1.12',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['docker-commons'], Jenkins::Plugin['workflow-cps'], Jenkins::Plugin['workflow-durable-task-step'] ]
-  }
-
-  ::jenkins::plugin { 'git-server':
-    version => '1.7',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['git-client'] ]
-  }
-
-  ::jenkins::plugin { 'handlebars':
-    version => '1.1.1',
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-  }
-
-  ::jenkins::plugin { 'momentjs':
-    version => '1.1.1',
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-  }
-
-  ::jenkins::plugin { 'pipeline-build-step':
-    version => '2.5.1',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-step-api'], Jenkins::Plugin['workflow-support'] ]
-  }
-
-  ::jenkins::plugin { 'pipeline-graph-analysis':
-    version => '1.5',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['pipeline-input-step'], Jenkins::Plugin['pipeline-stage-step'], Jenkins::Plugin['structs'], Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-cps'], Jenkins::Plugin['workflow-job'], Jenkins::Plugin['workflow-step-api'], Jenkins::Plugin['workflow-support'] ]
-  }
-
-  ::jenkins::plugin { 'pipeline-input-step':
-    version => '2.8',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-step-api'], Jenkins::Plugin['workflow-support'] ]
-  }
-
-  ::jenkins::plugin { 'pipeline-milestone-step':
-    version => '1.3.1',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-step-api'] ]
-  }
-
-  ::jenkins::plugin { 'pipeline-model-api':
-    version => '1.1.9',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['structs'], Jenkins::Plugin['workflow-step-api'] ]
-  }
-
-  ::jenkins::plugin { 'pipeline-model-declarative-agent':
-    version => '1.1.1',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['pipeline-model-extensions'] ]
-  }
-
-  ::jenkins::plugin { 'pipeline-model-definition':
-    version => '1.1.9',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['credentials-binding'], Jenkins::Plugin['docker-workflow'], Jenkins::Plugin['pipeline-model-api'], Jenkins::Plugin['pipeline-model-declarative-agent'], Jenkins::Plugin['pipeline-model-extensions'], Jenkins::Plugin['pipeline-stage-step'], Jenkins::Plugin['pipeline-stage-tags-metadata'], Jenkins::Plugin['scm-api'], Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-basic-steps'], Jenkins::Plugin['workflow-cps'], Jenkins::Plugin['workflow-cps-global-lib'], Jenkins::Plugin['workflow-durable-task-step'], Jenkins::Plugin['workflow-multibranch'], Jenkins::Plugin['workflow-scm-step'], Jenkins::Plugin['workflow-support'] ]
-  }
-
-  ::jenkins::plugin { 'pipeline-model-extensions':
-    version => '1.1.9',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['pipeline-model-api'], Jenkins::Plugin['workflow-cps'], Jenkins::Plugin['workflow-job'] ]
-  }
-
-  ::jenkins::plugin { 'pipeline-rest-api':
-    version => '2.8',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['pipeline-graph-analysis'], Jenkins::Plugin['pipeline-input-step'], Jenkins::Plugin['pipeline-stage-step'], Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-job'], Jenkins::Plugin['workflow-step-api'], Jenkins::Plugin['workflow-support'] ]
-  }
-
-  ::jenkins::plugin { 'pipeline-stage-step':
-    version => '2.2',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-step-api'] ]
-  }
-
-  ::jenkins::plugin { 'pipeline-stage-tags-metadata':
-    version => '1.1.9',
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-  }
-
-  ::jenkins::plugin { 'pipeline-stage-view':
-    version => '2.8',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['handlebars'], Jenkins::Plugin['jquery-detached'], Jenkins::Plugin['momentjs'], Jenkins::Plugin['pipeline-rest-api'], Jenkins::Plugin['workflow-job'] ]
-  }
-
-    version => '1.33',
-    require => [ Jenkins::Plugin['bouncycastle-api'] ]
-    version => '2.2',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['workflow-aggregator'], Jenkins::Plugin['workflow-step-api'] ]
-  ::jenkins::plugin { 'workflow-aggregator':
-    version => '2.5',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['pipeline-build-step'], Jenkins::Plugin['pipeline-input-step'], Jenkins::Plugin['pipeline-milestone-step'], Jenkins::Plugin['pipeline-model-definition'], Jenkins::Plugin['pipeline-stage-step'], Jenkins::Plugin['pipeline-stage-view'], Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-basic-steps'], Jenkins::Plugin['workflow-cps'], Jenkins::Plugin['workflow-cps-global-lib'], Jenkins::Plugin['workflow-durable-task-step'], Jenkins::Plugin['workflow-job'], Jenkins::Plugin['workflow-multibranch'], Jenkins::Plugin['workflow-scm-step'], Jenkins::Plugin['workflow-step-api'], Jenkins::Plugin['workflow-support'] ]
-  }
-
-  ::jenkins::plugin { 'workflow-basic-steps':
-    version => '2.6',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['mailer'], Jenkins::Plugin['structs'], Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-step-api'] ]
-  }
-
-    version => '2.39',
-  ::jenkins::plugin { 'workflow-cps-global-lib':
-    version => '2.8',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['cloudbees-folder'], Jenkins::Plugin['git-client'], Jenkins::Plugin['git-server'], Jenkins::Plugin['scm-api'], Jenkins::Plugin['script-security'], Jenkins::Plugin['workflow-cps'], Jenkins::Plugin['workflow-scm-step'] ]
-  }
-
-  ::jenkins::plugin { 'workflow-durable-task-step':
-    version => '2.14',
-    require => [ Jenkins::Plugin['bouncycastle-api'], Jenkins::Plugin['durable-task'], Jenkins::Plugin['script-security'], Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-step-api'], Jenkins::Plugin['workflow-support'] ]
-  }
-
-    version => '2.12.2',
-    require => [ Jenkins::Plugin['workflow-api'], Jenkins::Plugin['workflow-step-api'], Jenkins::Plugin['workflow-support'] ]
BREAKS HERE
-                        pin      => 'release a=jessie-wikimedia c=backports',
BREAKS HERE
-            description  => 'analytics-meta MySQL instance',
-            nrpe_command => '/usr/lib/nagios/plugins/check_procs -c 1:1 -C mysqld',
-            require      => Service['mysql'],
BREAKS HERE
-        command     => "${env} && ${refinery_path}/bin/refinery-drop-druid-deep-storage-data -d ${druid_webrequest_sampled_retention_days} webrequest >> ${druid_webrequest_log_file}",
BREAKS HERE
-    owner  => 'assets',
-    group  => 'assets',
BREAKS HERE
-  $fluentd_syslog_port = 42185
-          'source' => $fluentd_sources,
BREAKS HERE
-    unless  => "/bin/echo counters | /bin/nc localhost 8126 | /bin/grep -q ${counter_basename}.http_500",
BREAKS HERE
-#   OpenTSDB host address. Defaults to '127.0.0.1'.
-#   OpenTSDB port. Defaults to 4242.
-  Enum['absent', 'present'] $ensure               = present,
-  String                    $host                 = '127.0.0.1',
-  Integer[1,65535]          $port                 = 4242,
BREAKS HERE
-            require => Git::Install['phabricator/extensions'],
BREAKS HERE
-        ensure      => present,
-        ensure      => file,
-        source      => 'puppet:///modules/labs_lvm/make-instance-vg',
-        require     => Package['lvm2'],
-        mode        => 0544,
-        owner       => 'root',
-        group       => 'root',
-        ensure      => file,
-        source      => 'puppet:///modules/labs_lvm/make-instance-vol',
-        require     => Package['lvm2'],
-        mode        => 0544,
-        owner       => 'root',
-        group       => 'root',
-        ensure      => file,
-        source      => 'puppet:///modules/labs_lvm/extend-instance-vol',
-        require     => Package['lvm2'],
-        mode        => 0544,
-        owner       => 'root',
-        group       => 'root',
-        logoutput   => 'on_failure',
-        unless      => '/sbin/vgdisplay -c vd',
-        require     => File['/usr/local/sbin/make-instance-vg'],
-        command     => "/usr/local/sbin/make-instance-vg '${disk}'",
BREAKS HERE
-  file { '/var/run/whitehall-assets':
-    ensure => 'directory',
-    owner  => 'assets',
-    group  => 'assets',
-  }
-  $assets_sync_frequency_minutes = 30
-  cron { 'sync-assets-from-master':
-    user    => 'assets',
-    minute  => "*/${assets_sync_frequency_minutes}",
-    command => '/usr/bin/setlock -n /var/run/whitehall-assets/sync.lock /usr/local/bin/sync-assets.sh /data/master-uploads /mnt/uploads whitehall/clean whitehall/incoming whitehall/infected',
-  }
-  cron { 'sync-assets-from-master-draft':
-    user    => 'assets',
-    minute  => "*/${assets_sync_frequency_minutes}",
-    command => '/usr/bin/setlock -n /var/run/whitehall-assets/sync-draft.lock /usr/local/bin/sync-assets.sh /data/master-uploads /mnt/uploads whitehall/draft-clean whitehall/draft-incoming whitehall/draft-infected',
-  @@icinga::passive_check { "sync_assets_from_master_on_${::hostname}":
-    service_description => 'Local assets sync from master to slave',
-    host_name           => $::fqdn,
-    freshness_threshold => ($assets_sync_frequency_minutes * 2) * 60,
BREAKS HERE
-  $dboraLocation = lookup('oradb::dbora_dir')
-  file { "${dboraLocation}/${service_name}" :
-                        'dboraLocation' => $dboraLocation,
-        require   => File['/tmp/oradb_smf.xml',"${dboraLocation}/${service_name}"],
BREAKS HERE
-        content => "ARGS=\"-statsd.mapping-config=${config} -statsd.relay-address=${relay_address} -web.listen-address=${listen_address} ${arguments}\"",
BREAKS HERE
-	plugin { apt_all: ensure => present; }
-	plugin {
-    munin::plugin::deploy { "gentoo_lastupdated": }
-define munin::plugin::deploy ($source = '', $enabled = 'true') {
-    $real_source = $source ? {
-        ''  =>  "munin/plugins/$name",
-        default => $source
-    }
-    include munin::plugin::scriptpaths
-	debug ( "munin_plugin_${name}: name=$name, source=$source, script_path=$munin::plugin::scriptpaths::script_path" )
-    file { "munin_plugin_${name}":
-            path => "$munin::plugin::scriptpaths::script_path/${name}",
-            source => "puppet://$servername/$real_source",
-            ensure => file,
-            mode => 0755, owner => root, group => 0;
-    }
-    if $enabled {
-        plugin{$name: ensure => present }
-    }
-}
-    munin::plugin::deploy { "xen": }
-    munin::plugin::deploy { "xen-cpu": }
-    munin::plugin::deploy { "xen_memory": }
-    munin::plugin::deploy { "xen_vbd": }
BREAKS HERE
-    to        => ['graphite.cluster'],
-    aliases   => ['graphite.*', 'grafana', 'grafana.*'],
-    ssl_only  => true,
-    protected => false,
-    root      => '/dev/null',
BREAKS HERE
-    target     => 'sumSeries(transformNull(stats.bouncer*.nginx_logs.*.http_501,0))',
-    warning    => 0.000001,
-    critical   => 0.000002,
-    from       => '1hour',
-    desc       => 'bouncer 501s: indicates bouncer misconfiguration',
-    host_name  => $::fqdn,
-    notes_url  => 'https://github.gds/pages/gds/opsmanual/2nd-line/nagios.html#bouncer-501s',
-    action_url => kibana2_url($kibana_url, $kibana_search),
BREAKS HERE
-  case $type {
-    'script': {
-      file { "/etc/facter/facts.d/system_facts_${var}.sh":
-        owner    => 'root',
-        group    => 'root',
-        mode     => '0744',
-        content  => $value,
-      }
-      if $ttl {
-        file { "/etc/facter/facts.d/system_facts_${var}.sh.ttl":
-          content  => "${ttl}\n",
-    }
-    default: {
-      concat::fragment { "system_facts_${var}":
-        target   => '/etc/facter/facts.d/system_facts.yaml',
-        content  => "${var}: ${value}\n",
-        order    => '02',
BREAKS HERE
-            query           => "scalar(avg_over_time(jvm_memory_bytes_used{hadoop_cluster=\"${cluster_name}\",instance=\"${::hostname}:8141\",area=\"heap\"}[60])/avg_over_time(jvm_memory_bytes_max{hadoop_cluster=\"${cluster_name}\",instance=\"${::hostname}:8141\",area=\"heap\"}[60m]))",
BREAKS HERE
-  $config               = { },
-  $environment_settings = { },
-    'log.dirs' => {
-  $actual_kafka_settings = merge($kafka_default_settings, $config)
-  $actual_java_settings = merge($java_default_settings, $environment_settings)
-    file { [$log_path, $data_path]:
-      ensure  => directory,
-      owner   => $user,
-      group   => $user,
-      recurse => true,
-      tag     => 'confluent'
-    }
-
-  $ensure_kafka_settings_defaults = {
-    'ensure'      => 'present',
-    'path'        => $config_path,
-  }
-
-  ensure_resources(
-    'confluent::java_property',
-    prefix($actual_kafka_settings, "${application}/"),
-    $ensure_kafka_settings_defaults
-  )
-
-  $ensure_java_settings_defaults = {
-    'path'        => $environment_file,
-    'application' => 'kafka'
-  ensure_resources('confluent::kafka_environment_variable', $actual_java_settings, $ensure_java_settings_defaults)
-
BREAKS HERE
-  file { '/var/lib/zuul/www/backup':
-    require => File['/var/lib/zuul/www'],
-      command => "timeout -k 5 10 curl ${status} -o /var/lib/zuul/www/backup/status_$(date +\\%s).json 2>/dev/null",
-                  File['/var/lib/zuul/www/backup']],
-      command => 'flock -n /var/run/status_prune.lock ls -dt -1 /var/lib/zuul/www/backup/* |sed -e "1,120d" |xargs rm -f',
-    ensure  => directory,
-    require => File['/var/lib/zuul/www'],
-  file { '/var/lib/zuul/www/static/js':
-    require => File['/var/lib/zuul/www/static'],
-  file { '/var/lib/zuul/www/static/js/jquery.min.js':
-    ensure  => link,
-    target  => '/usr/share/javascript/jquery/jquery.min.js',
-    require => [File['/var/lib/zuul/www/static/js'],
-                Package['libjs-jquery']],
-  file { '/var/lib/zuul/www/static/bootstrap':
-    ensure  => link,
-    target  => '/opt/twitter-bootstrap/dist',
-    require => [File['/var/lib/zuul/www/static'],
-                Package['libjs-jquery'],
-                Vcsrepo['/opt/twitter-bootstrap']],
-  exec { 'install-jquery-visibility-zuul-web':
-    command     => 'yui-compressor -o /var/lib/zuul/www/static/js/jquery-visibility.js /opt/jquery-visibility/jquery-visibility.js',
-    path        => 'bin:/usr/bin',
-    subscribe   => Vcsrepo['/opt/jquery-visibility'],
-    require     => [File['/var/lib/zuul/www/static/js'],
-                    Package['yui-compressor'],
-                    Vcsrepo['/opt/jquery-visibility']],
-  }
-
-  file { '/var/lib/zuul/www/static/js/jquery.graphite.js':
-    ensure  => link,
-    target  => '/opt/graphitejs/jquery.graphite.js',
-    require => [File['/var/lib/zuul/www/static/js'],
-                Vcsrepo['/opt/graphitejs']],
-  }
-
-  # Download angular
-  # NOTE: This is using a hardcoded URL because soon this will shift to being
-  # based on a more javascript-native toolchain.
-  exec { 'get-angular-zuul-web':
-    command => 'curl https://code.angularjs.org/1.5.8/angular.min.js -z /var/lib/zuul/www/static/js/angular.min.js -o /var/lib/zuul/www/static/js/angular.min.js',
-    path    => '/bin:/usr/bin',
-    require => [Package[curl],
-                File['/var/lib/zuul/www/static/js']],
-    onlyif  => "curl -I https://code.angularjs.org/1.5.8/angular.min.js -z /var/lib/zuul/www/static/js/angular.min.js | grep '200 OK'",
-    creates => '/var/lib/zuul/www/static/js/angular.min.js',
-  # For now, symlink in the static parts of zuul-web which are not
-  # tenant-scoped since they share a URL space with the external
-  # dependencies.
-  file { '/var/lib/zuul/www/static/javascripts':
-    ensure  => link,
-    target  => '/opt/zuul/zuul/web/static/javascripts',
-    require => [File['/var/lib/zuul/www/static'],
-                Vcsrepo['/opt/zuul']],
-  }
-  file { '/var/lib/zuul/www/static/images':
-    ensure  => link,
-    target  => '/opt/zuul/zuul/web/static/images',
-    require => [File['/var/lib/zuul/www/static'],
-                Vcsrepo['/opt/zuul']],
-  }
-  file { '/var/lib/zuul/www/static/styles':
-    ensure  => link,
-    target  => '/opt/zuul/zuul/web/static/styles',
-    require => [File['/var/lib/zuul/www/static'],
-                Vcsrepo['/opt/zuul']],
-  }
BREAKS HERE
-    require_package(['python3-requests', 'python3-redis', 'python3-yaml'])
BREAKS HERE
-        settings       => {
-    $graphite_metric_prefix = "${labsproject}.${hostname}.reqstats"
BREAKS HERE
-  include pip
-    ensure  => present,
-    source  => 'puppet:///modules/elastic_recheck/er_safe_run.sh',
-    mode    => '0755',
-    owner   => 'root',
-    group   => 'root',
BREAKS HERE
-  include nginx::server
-      Nginx::Unicorn['puppetmaster'],
-  $unicorn_socket = "${puppet::params::puppet_rundir}/puppetmaster_unicorn.sock"
-  nginx::unicorn { 'puppetmaster':
-    servername        => $servername,
-    path              => $::puppet::params::puppet_confdir,
-    unicorn_socket    => $unicorn_socket,
-    ssl               => true,
-    sslonly           => true,
-    ssl_port          => '8140',
-    ssl_cert          => "${::puppet::ssldir}/certs/${servername}.pem",
-    ssl_key           => "${::puppet::ssldir}/private_keys/${servername}.pem",
-    ssl_ca            => "${::puppet::ssldir}/certs/ca.pem",
-    ssl_crl_path      => "${::puppet::ssldir}/crl.pem",
-    ssl_ciphers       => $::puppet::server::ssl_ciphers,
-    ssl_protocols     => $::puppet::server::ssl_protocols,
-    ssl_verify_client => 'optional',
-    magic             => "proxy_connect_timeout 300s;\n  proxy_read_timeout 300s;",
-    approot         => $::puppet::params::puppet_confdir,
-    config_file     => "${::puppet::params::puppet_confdir}/unicorn.conf",
-    pidfile         => "${::puppet::params::puppet_rundir}/puppetmaster_unicorn.pid",
-    socket          => $unicorn_socket,
-    logdir          => $::puppet::params::puppet_logdir,
-    user            => 'puppet',
-    group           => 'puppet',
-    before          => Service['nginx'],
-    subscribe       => Concat["${::puppet::params::puppet_confdir}/config.ru"],
BREAKS HERE
-
-      # Automatic restart
-      ::systemd::dropin_file { 'memcached.conf':
-        unit    => 'memcached.service',
-        content => "[Service]\nRestart=always\n",
-      }
BREAKS HERE
-
BREAKS HERE
-      $web_server_package_require = [Package[$::graphite::params::web_server_pkg]]
-      $web_server_package_require = [Package[$::graphite::params::web_server_pkg]]
BREAKS HERE
-#   Defaults to hiera('bootstrap_nodeid')
-  $bootstrap_node      = hiera('bootstrap_nodeid', undef),
BREAKS HERE
-      # for tempest
-      $aodh_enabled = false
-      # for tempest
-      $aodh_enabled = true
BREAKS HERE
-                'eqiad' => { 'dns_rec' => "208.80.154.239", 'dns_rec6' => "2620:0:861:ed1a::f" },
BREAKS HERE
-
-    ensure => present
-    ensure => directory
-    ensure => directory
-    ensure => directory
-
BREAKS HERE
-  $devs = split($::ocf_dev, ',')
BREAKS HERE
-    httpd_maxwait                       => '5000min',
BREAKS HERE
-    $vcl_config,
-    $backend_options,
BREAKS HERE
-  $app_domain = extlookup('app_domain')
BREAKS HERE
-        directory => "${libdir}/puppet",
-        directory => "${libdir}/puppet",
-        user        => $user,
BREAKS HERE
-      $user
-      source => 'puppet:///modules/gerrit/gerritbot',
-      source => 'puppet:///modules/gerrit/gerritbot.init',
-      source  => 'puppet:///modules/gerrit/gerritbot_channel_config.yaml',
-      content => template('gerrit/gerritbot.config.erb'),
BREAKS HERE
-        }
-        $ssl_certificate_chained = $certificate_name ? {
-            'ssl-cert-snakeoil' => '/etc/ssl/certs/ssl-cert-snakeoil.pem',
-            default             => "/etc/acme/cert/${certificate_name}.chained.crt",
-        $ssl_certificate_key = "/etc/acme/key/${certificate_name}.key"
-            [
-                "ssl_certificate     ${ssl_certificate_chained};",
-                "ssl_certificate_key ${ssl_certificate_key};",
-            ],
BREAKS HERE
-# [*default_volume_type*]
-#   (optional) default volume type to use.
-#   This should contain the name of the default volume type to use.
-#   If not configured, it produces an error when creating a volume
-#   without specifying a type.
-#   Defaults to 'false'.
-#
-    cinder_config {
-      'DEFAULT/default_volume_type': value => $default_volume_type;
-    }
-  } else {
-    cinder_config {
-      'DEFAULT/default_volume_type': ensure => absent;
-    }
BREAKS HERE
-    class { '::python':
BREAKS HERE
-    include profile::toolforge::apt_pinning
-
BREAKS HERE
-			$munin_node_service = "munin" 
BREAKS HERE
-    args => "NginxGangliaLogster /var/log/nginx/lb-access.log",
BREAKS HERE
-define ntp::daemon($servers=[], $peers=[], $query_acl=[], $time_acl=[], $servers_opt='', $ensure='present') {
BREAKS HERE
-          exec { "remove oracle db file2 ${file2} ${title}":
-            command => "rm -rf ${download_dir}/${file2}",
-            user    => 'root',
-            group   => 'root',
-            path    => $exec_path,
-            cwd     => $oracle_base,
-            require => [Exec["install oracle database ${title}"],
-                        Exec["run root.sh script ${title}"],],
BREAKS HERE
-  $bind_socket = undef,
-      ensure            => file,
-      mode              => '0755',
-      content           => epp('tripleo/neutron/neutron-keepalived-state-change.epp', {
BREAKS HERE
-  include ocf::common::packages
-  class { 'ocf::local::packages':    extra => true, login => true }
BREAKS HERE
-  $ensure       = present,
-  $display_name = $title,
-  $groups       = [],
-  $assign       = [],
-  $ignore       = [],
-  $import       = [],
-  $template     = false,
-  $target       = undef,
-  $order        = '80',
-    object_name => $name,
BREAKS HERE
-
-    case $::init_type{
BREAKS HERE
-    mirror    => 'http://apache.mesi.com.ar/lucene/solr',
BREAKS HERE
-  $service_name       = $vmwaretools::params::service_name,
-  $service_hasstatus  = false,
-            gpgkey   => "${vmwaretools::params::yum_server}${vmwaretools::params::yum_path}/VMWARE-PACKAGING-GPG-KEY.pub",
-            before   => Package['vmware-tools'],
-        before => Package['vmware-tools'],
-        before  => [ Package['vmware-tools'], Package['VMwareTools'], ],
-        before  => [ Package['vmware-tools'], Package['VMwareTools'], ],
-      package { 'vmware-tools':
-        name    => $package,
-      service { 'vmware-tools':
-        name       => $service_name,
-        hasstatus  => false,
-        require    => Package['vmware-tools'],
BREAKS HERE
-	plugin { "postfix_mailvolume": ensure => absent }
BREAKS HERE
-        basedir => $basedir,
-                'Origin' => 'MediaWiki',
-                'Label'  => 'MediaWiki',
-                'Suite'  => 'precise-mediawiki',
-                'Codename' => 'precise-mediawiki',
-                'Version' => '12.04',
-                'Components' => 'main',
-                'Description' => 'MediaWiki packages for Ubuntu Precise Pangolin',
-                'SignWith' => 'default',
-                'Log' => "precise-mediawiki\n  log",
-            'trusty' => {
-                'Origin' => 'MediaWiki',
-                'Label'  => 'MediaWiki',
-                'Suite'  => 'trusty-mediawiki',
-                'Codename' => 'trusty-mediawiki',
-                'Version' => '14.04',
-                'Components' => 'main',
-                'Description' => 'MediaWiki packages for Ubuntu Trusty Tahr',
-                'SignWith' => 'default',
-                'Log' => "trusty-mediawiki\n  log",
-    admin::sudo { "releases_dput":
BREAKS HERE
-  $user                = $::barman::settings::user,
-  $group               = $::barman::settings::group,
-  $ensure              = 'present',
-  $conf_template       = 'barman/barman.conf.erb',
-  $logrotate_template  = 'barman/logrotate.conf.erb',
-  $home                = $::barman::settings::home,
-  $logfile             = '/var/log/barman/barman.log',
-  $compression         = 'gzip',
-  $pre_backup_script   = false,
-  $post_backup_script  = false,
-  $pre_archive_script  = false,
-  $post_archive_scirpt = false,
-  $custom_lines        = undef,
-  $barman_fqdn         = $::fqdn,
-  $autoconfigure       = $::barman::settings::autoconfigure,
-  $manage_package_repo = $::barman::settings::manage_package_repo,
BREAKS HERE
-  include gerrit::remotes
BREAKS HERE
-        source  => 'puppet:///modules/swift/swift-dispersion-stats',
BREAKS HERE
-  ::apt::ppa { "ppa:${version_repo}": }
BREAKS HERE
-  # where the agent installer tarball for secondary masters should go.
-  $publicdir = '/opt/puppetlabs/server/data/packages/public/classroom'
BREAKS HERE
-  php::cli::config { 'php-cli':
BREAKS HERE
-    create_db_schema        => true,
BREAKS HERE
-    require_pacakge('openjdk-8-jdk')
BREAKS HERE
-    warning   => 100, # milliseconds
-    critical  => 200, # milliseconds
BREAKS HERE
-  $influxdb_wal_size = min(4 * 1024 * 1024 * 1024, $::memorysize_mb * 1024 * 0.1)
BREAKS HERE
-  Ipa::Serverinstall[$::fqdn] -> Class['ipa::service'] ->  File['/etc/ipa/primary'] -> Ipa::Hostadd <<| |>> -> Ipa::Replicareplicationfirewall <<| tag == "ipa-replica-replication-firewall-${ipa::master::domain}" |>> -> Ipa::Replicaprepare <<| tag == "ipa-replica-prepare-${ipa::master::domain}" |>> -> Ipa::Createreplicas[$::fqdn]
-
-  include ipa::service
BREAKS HERE
-define backup::mysqlset($method='bpipe',
-                        $xtrabackup=true,
-                        $per_db=false,
-                        $innodb_only=false,
-                        $local_dump_dir=undef,
-                        $password_file=undef,
-                        $mysql_binary=undef,
-                        $mysqldump_binary=undef,
-                        $jobdefaults=$role::backup::host::jobdefaults,
-            ensure  => 'present',
-        $extras = undef
BREAKS HERE
-  anchor { 'munin::client::installed': }
-    openbsd: {
-      class { 'munin::client::openbsd':
-        before => Anchor['munin::client::installed']
-      }
-    }
-    darwin: {
-      class { 'munin::client::darwin':
-        before => Anchor['munin::client::installed']
-      }
-    }
-    debian,ubuntu: {
-      class { 'munin::client::debian':
-        before => Anchor['munin::client::installed']
-      }
-    }
-    gentoo: {
-      class { 'munin::client::gentoo':
-        before => Anchor['munin::client::installed']
-      }
-    }
-    centos: {
-      class { 'munin::client::base':
-        before => Anchor['munin::client::installed']
-      }
-    }
-    default: {
-      class { 'munin::client::base':
-        before => Anchor['munin::client::installed']
-      }
-    }
BREAKS HERE
-        ip           => ipresolve($active_redis, $::nameservers[0]),
BREAKS HERE
-  $yum_repo = 'remi-php56',
BREAKS HERE
-  if !defined(Class['postgresql::server']) {
-
-      # Ugly hack, but sometimes this data directory is created (empty) before
-      # initdb is run, causing the postgres-server service to fail to start
-      # (only on CentOS 6).
-      # The same thing is present in the bootstrap-el6.sh script from
-      # st2 base.
-      exec { 'Move postgres data directory on first install':
-        command     => '/bin/mv /var/lib/pgsql/9.4/data /var/lib/pgsql/9.4/data.bck',
-        refreshonly => true,
-        subscribe   => Class['::postgresql::server::install'],
-        before      => Class['::postgresql::server::initdb'],
-      }
BREAKS HERE
-      rabbit_hosts => $rabbit_hosts,
BREAKS HERE
-	$gr_timezone                  = 'GMT'
BREAKS HERE
-        group  => 'wwww-data',
BREAKS HERE
-
BREAKS HERE
-        '2.2' => hiera('cassandra::version', '2.2.6-wmf5'),
BREAKS HERE
-  file { "${hieradata}/defaults.yaml":
-    source  => 'puppet:///modules/classroom/hiera/data/defaults.yaml',
BREAKS HERE
-
-      Exec { 
-        path       => $execPath,
-        logoutput  => true,
-      }
-
BREAKS HERE
-    ensure => file,
-    notify => Service['icinga2'],
BREAKS HERE
-    driver        => 'neutron_fwaas.services.firewall.drivers.linux.iptables_fwaas_v2.IptablesFwaasDriver',
BREAKS HERE
-  include logstash
BREAKS HERE
-# [*template*]
-#   Set to true creates a template instead of an object. Defaults to false.
-#
-  $groups            = [],
-  $template          = false,
-  validate_array($import)
-  validate_array ( $groups )
-    'groups'        => $groups,
BREAKS HERE
-      $apache_service = 'apache2'
-      $apache_service = 'httpd'
BREAKS HERE
-
-    package { yum-priorities:
-    yumrepo { dlutter-rhel4:
-        descr => 'Unsupported RHEL4 packages (lutter)',
-        baseurl => 'http://people.redhat.com/dlutter/yum/rhel/4/$basearch',
-        enabled => 0,
-        gpgcheck => 0,
-        priority => 15,
-    }
-
-    yumrepo { dlutter-fedora:
-        descr => 'Additional Fedora packages (lutter)',
-        baseurl => 'http://people.redhat.com/dlutter/yum/fedora/$releasever/$basearch',
-        enabled => 0,
-        gpgcheck => 0,
-        priority => 15,
-    }
-    yumrepo { dlutter-fedora-development:
-        descr => 'Additional Fedora packages (lutter)',
-        baseurl => 'http://people.redhat.com/dlutter/yum/development/$basearch/',
-        enabled => 0,
-        gpgcheck => 0,
-        priority => 15,
-    }
-
-        enabled => 0,
-	    enabled => 0,
-		gpgcheck => 0,
-	    enabled => 0,
-	    enabled => 0,
-	    enabled => 0,
-	    enabled => 0,
-    	enabled => 0,
-	    enabled => 0,
-	    enabled => 0,
-	    enabled => 0,
-	    enabled => 0,
BREAKS HERE
-            Exec[concat_routestopped], 
BREAKS HERE
-  $step = Integer(hiera('step')),
-      coordination_url => join(['redis://:', hiera('aodh_redis_password'), '@', normalize_ip_for_uri(hiera('redis_vip')), ':6379/']),
BREAKS HERE
-    config_hash => {
-      'root_password'  => $mysql_root_password,
-      'default_engine' => 'InnoDB',
-      'bind_address'   => '127.0.0.1',
-    }
BREAKS HERE
-            gpgkey   => "${vmwaretools::params::yum_server}${vmwaretools::params::yum_path}/VMWARE-PACKAGING-GPG-KEY.pub",
BREAKS HERE
-# [*volume_version*]
-#    Cinder API version. Optional. Defaults to 'v1'.
-#
-#    Protocol for public endpoint. Optional. Defaults to 'http'.
-#    Protocol for internal endpoint. Optional. Defaults to 'http'.
-#    Protocol for admin endpoint. Optional. Defaults to 'http'.
-  $email                 = 'cinder@localhost',
-  $public_address        = '127.0.0.1',
-  $admin_address         = '127.0.0.1',
-  $internal_address      = '127.0.0.1',
-  $port                  = '8776',
-  $volume_version        = 'v1',
-  $public_protocol       = 'http',
-  $admin_protocol        = 'http',
-  $internal_protocol     = 'http'
-  if $service_name {
-    $real_service_name = $service_name
-  } else {
-    $real_service_name = $auth_name
-  if $service_name_v2 {
-    $real_service_name_v2 = $service_name_v2
-  } else {
-    $real_service_name_v2 = $auth_name_v2
-    public_url          => "${public_protocol}://${public_address}:${port}/${volume_version}/%(tenant_id)s",
-    admin_url           => "${admin_protocol}://${admin_address}:${port}/${volume_version}/%(tenant_id)s",
-    internal_url        => "${internal_protocol}://${internal_address}:${port}/${volume_version}/%(tenant_id)s",
-    public_url          => "${public_protocol}://${public_address}:${port}/v2/%(tenant_id)s",
-    admin_url           => "${admin_protocol}://${admin_address}:${port}/v2/%(tenant_id)s",
-    internal_url        => "${internal_protocol}://${internal_address}:${port}/v2/%(tenant_id)s",
BREAKS HERE
-# This module manages rbenv dependencies.
-#
-# === Variables
-#
-# === Requires
-#
-# === Examples
BREAKS HERE
-        descr => "Unsupported RHEL5 packages (lutter)",
-        descr => "RPMForge RHEL5 packages",
-	    descr => "CentOS $releasever - $basearch - ATrpms",
-	    descr => "CentOS-$releasever - Plus",
-	    descr => "Extra Packages for Enterprise Linux $releasever - $basearch",
-	    descr => "Extra Packages for Enterprise Linux $releasever - $basearch - Debug",
-	    descr => "Extra Packages for Enterprise Linux $releasever - $basearch - Source",
-	    descr => "Extra Packages for Enterprise Linux $releasever - Testing - $basearch",
-	    descr => "Extra Packages for Enterprise Linux $releasever - Testing - $basearch - Debug",
-	    descr => "Extra Packages for Enterprise Linux $releasever - Testing - $basearch - Source",
-	    descr => "CentOS.Karan.Org-EL$releasever - Stable",
-	    descr => "CentOS.Karan.Org-EL$releasever - Testing",
-	    descr => "CentOS.Karan.Org-EL$releasever - Stable",
-	    descr => "CentOS.Karan.Org-EL$releasever - Testing",
-        path => "/etc/yum.repos.d/",
-	    path => "/etc/pki/rpm-gpg/",
BREAKS HERE
-    $script_path_default =  "/usr/share/munin/plugins"
-
-    $script_path_default =  "/usr/libexec/munin/plugins"
-    package { 'munin':
-                alias => munin-node,
-    # link
-    # mh: really needed?
-#    file{
-#        "/etc/init.d/munin":
-#            ensure => "/etc/init.d/munin-node",
-#    }
-
-
-
-    $script_path_default =  "/usr/share/munin/plugins"
BREAKS HERE
-		hasstatus => true,
BREAKS HERE
-    known_hosts_content => "review.openstack.org,23.253.232.87,2001:4800:7815:104:3bc3:d7f6:ff03:bf5d ${gerrit_ssh_host_key}",
BREAKS HERE
-  plugin { 'postfix_mailvolume': ensure => absent }
BREAKS HERE
-#   You can also specify it in minutes with the letter m or in seconds with s. Defaults to '30s'
-  $update_interval = '30s',
BREAKS HERE
-        command     => 'service procps start',
BREAKS HERE
-  include ::drbd
BREAKS HERE
-    sysadmins    => hiera('sysadmins', []),
-    version      => '3.6.',
BREAKS HERE
-      priority            => 700,
BREAKS HERE
-  $vhost_name           = $::fqdn,
-  $phab_dir             = '/phabricator',
-  $instance             = 'dev',
-  $mysql_host           = 'localhost',
-  $mysql_port           = 3306,
-  $mysql_database       = 'phabricator',
-  $mysql_user           = 'phabricator',
-  $ssl_cert_file = "/etc/ssl/certs/${::fqdn}.pem",
-  $ssl_key_file = "/etc/ssl/private/${::fqdn}.key",
-  $ssl_chain_file = undef,
-  $ssl_cert_file_contents = undef, # If left empty puppet will not create file.
-  $ssl_key_file_contents = undef,  # If left empty puppet will not create file.
-  $ssl_chain_file_contents = undef # If left empty puppet will not create file.
BREAKS HERE
-# [sql_idle_timeout]
-  $sql_connection,
-  $sql_idle_timeout            = '3600',
-  $mysql_module                = '0.9'
-    'DEFAULT/sql_connection':      value => $sql_connection, secret => true;
-    'DEFAULT/sql_idle_timeout':    value => $sql_idle_timeout;
BREAKS HERE
-      'review.openstack.org,23.253.232.87,2001:4800:7815:104:3bc3:d7f6:ff03:bf5d b8:3c:72:82:d5:9e:59:43:54:11:ef:93:40:1f:6d:a5'),
BREAKS HERE
-# Node-OS: precise
-# Node-OS: precise
-# Node-OS: precise
-# Node-OS: precise
BREAKS HERE
-$ldap_protocol              = $elasticsearch_kibana['ldap_protocol']
BREAKS HERE
-    # The name is not smart, but please forgive me for now...
-    file { '/srv/ssd':
-        ensure => 'directory',
-        owner  => 'root',
-        group  => 'root',
-    }
-
-    if $::hostname == 'gallium' {
-        # gallium received a SSD drive (T82401) mount it
-        mount { '/srv/ssd':
-            ensure  => mounted,
-            device  => '/dev/sdb1',
-            fstype  => 'xfs',
-            options => 'noatime,nodiratime,nobarrier,logbufs=8',
-            require => File['/srv/ssd'],
-        }
-    }
-
BREAKS HERE
-    if hiera('nova_wsgi_enabled', true) {
BREAKS HERE
-      rabbit_hosts => suffix($rabbit_hosts, ":${rabbit_port}")
BREAKS HERE
-                owner   => 'root',
-                group   => 'root',
-                mode    => '0555',
-                source  => 'puppet:///modules/base/resolv/resolvconf.dummy',
BREAKS HERE
-
-    # FIXME this is a temporary solution to fix ongoing connect errors before
-    # we find the real resolution
-    cron::crondotdee { 'dhclient_reload':
-      command => '/usr/bin/host puppet >/dev/null || /sbin/dhclient -r; /sbin/dhclient',
-      hour    => '*',
-      minute  => '*/2',
-      user    => 'root',
-      mailto  => '""',
-    }
BREAKS HERE
-  if hiera('nova::use_ipv6', false) {
-    $memcache_servers = suffix(hiera('memcached_node_ips_v6'), ':11211')
-    $memcache_servers = suffix(hiera('memcached_node_ips'), ':11211')
BREAKS HERE
-node 'openstackid.org' {
-node /^openstackid-dev\d*.openstack\.org$/ {
BREAKS HERE
-  file { $fragments_dir:
BREAKS HERE
-  Ipa::Serverinstall[$::fqdn] -> Class['ipa::service'] ->  File['/etc/ipa/primary'] -> Ipa::Hostadd <<| |>> -> Ipa::Replicareplicationfirewall <<| tag == "ipa-replica-replication-firewall-${ipa::master::domain}" |>> -> Ipa::Replicaprepare <<| tag == "ipa-replica-prepare-${ipa::master::domain}" |>> -> Ipa::Createreplicas[$::fqdn]
-  include ipa::service
-
-      require => [Ipa::Serverinstall[$::fqdn],Class['ipa::service']]
-      require => [Ipa::Serverinstall[$::fqdn],Class['ipa::service']]
-      require    => [Ipa::Serverinstall[$::fqdn],Class['ipa::service']]
BREAKS HERE
-        source => template('scap/scap.cfg.erb'),
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0444',
BREAKS HERE
-  $manage_log_conf = false,
BREAKS HERE
-        command => "/usr/bin/pg_dumpall | gzip > ${path}/psql-all-dbs-$(date \"+%Y%m%d\").sql.gz",
BREAKS HERE
-        file { '/etc/puppet/auth.conf':
-            owner   => 'root',
-            group   => 'root',
-            mode    => '0444',
-            content => template('puppetmaster/auth.conf.erb'),
-        }
BREAKS HERE
-      # the ssl-cert package creates the ssl-cert group
-      ensure  => directory,
-      owner   => ocfletsencrypt,
-      group   => ssl-cert,
-      require => Package['ssl-cert'];
BREAKS HERE
-  Optional[String]                           $host_name             = $title,
BREAKS HERE
-  package { $::graphite::params::graphitepkgs :
-    ensure   => 'installed',
-    provider => undef, # default to package provider auto-discovery
-  }
-
BREAKS HERE
-        dashboard_links => ["https://grafana.wikimedia.org/dashboard/file/swift.json?panelId=8&fullscreen&orgId=1&var-DC=${cluster}"],
-        dashboard_links => ["https://grafana.wikimedia.org/dashboard/file/swift.json?panelId=8&fullscreen&orgId=1&var-DC=${cluster}"],
-        dashboard_links => ["https://grafana.wikimedia.org/dashboard/file/swift.json?panelId=9&fullscreen&orgId=1&var-DC=${cluster}"],
BREAKS HERE
-        # Require the global etcd config file
-        require ::etcd::client::globalconfig
-
BREAKS HERE
-  file { "/etc/nginx/ssl/$name.crt":
-  file { "/etc/nginx/ssl/$name.key":
BREAKS HERE
-        provider   => 'upstart',
-        require    => [
BREAKS HERE
-    $tls_cluster_name = $cassandra_settings['tls_cluster_name']
-    if $instances != {} {
-    # Cassandra intra-node SSL messaging
-    ferm::service { 'cassandra-intra-node-ssl':
-        proto  => 'tcp',
-        port   => '7001',
-        srange => "@resolve((${cassandra_hosts_ferm}))",
BREAKS HERE
-            '<package_url>/kmx/perl-modules-patched/PathTools-3.60_patched.tar.gz', #XXX-CHECK CVE-2015-8607 https://metacpan.org/release/PathTools
BREAKS HERE
-      source  => 'puppet:///modules/govuk_postgresql/ssl/ssl-cert-snakeoil.pem',
-      source  => 'puppet:///modules/govuk_postgresql/ssl/ssl-cert-snakeoil.key',
BREAKS HERE
-  enabled_drivers           => ['fuel_ssh', 'fuel_ipmitool'],
BREAKS HERE
-  contain ::hadoop::common::config
-  contain ::hadoop::common::hdfs::config
-  contain ::hadoop::common::hdfs::daemon
-  contain ::hadoop::nfs::user
BREAKS HERE
-    'application' => 'kafka'
-  ensure_resources('confluent::java_property', $actual_kafka_settings, $ensure_kafka_settings_defaults)
BREAKS HERE
-    class { 'wikistats::db': }
BREAKS HERE
-    war => 'http://ci.openstack.org/tarballs/gerrit-2.3-5-gaec571e.war',
BREAKS HERE
-    sysadmins           => hiera('sysadmins', []),
BREAKS HERE
-  class { 'openstack_project::storyboard':
BREAKS HERE
-        nrpe::monitor_service { 'check_eventstreams_endpoint':
BREAKS HERE
-    bundler_version => '1.14.5',
BREAKS HERE
-    File<| title == '/var/log/swift' |> {
-      owner => 'syslog',
-      group => 'adm'
BREAKS HERE
-  if $::aws_migration {
-    $s3_artefact_bucket = "govuk-${::aws_environment}-artefact"
-    $s3_url = "s3://${s3_artefact_bucket}/templates/${title}.html.erb"
-    $cmd = "aws --region eu-west-1 s3 cp ${s3_url} ${filename}"
-  } else {
-    $static_url = "https://static.${app_domain}/templates/${title}.html.erb"
-    $cmd = "curl --connect-timeout 1 -sf ${static_url} -o ${filename}"
-  }
BREAKS HERE
-    if $vg_to_remove {
BREAKS HERE
-    # Using require here is ok, because the icinga class is not parameterized.
-    # if it was we would do Class['icinga'] -> Class['icinga::web'].
-    require icinga
BREAKS HERE
-    war => 'http://tarballs.openstack.org/ci/test/gerrit-2.4.2-13-g69c8fa6.war',
BREAKS HERE
-    $use_puppetmaster = true
-  # Be absolutely certain we have a bool as strings are weird
BREAKS HERE
-  $bundle_sub_patch_id              = undef,
-  $bundle_sub_folder                = undef,
-          mode   => '0775',
-          owner  => $user,
-          group  => $group,
BREAKS HERE
-    command => "/bin/echo -n '${counter_basename}.http_500:0|c > /dev/udp/localhost/8125",
-    unless  => "/bin/echo counters | /bin/nc localhost 8126 | /bin/grep -qF ${counter_basename}.http_500",
BREAKS HERE
-        command     => '/usr/local/bin/manage-projects',
BREAKS HERE
-# By default deep storage is disabled.  Set druid.metadata.storage.type to
-# Set druid.metadata.storage.type to 'hdfs' to configure HDFS based deep
-# default when druid.metadata.storage.type is 'hdfs'.
-#   make sure to include the druid::cdh::hadoop::setup class on your
-            # passed in more than once.  Note that you'll have to override
-            # this if you want to change the database name.
-                'jdbc:mysql://<%= @properties.fetch("druid.metadata.storage.connector.host", "localhost") %>:<%= @properties.fetch("druid.metadata.storage.connector.port", "3306") %>/druid'
-                'jdbc:derby://<%= @properties.fetch("druid.metadata.storage.connector.host", "localhost") %>:<%= @properties.fetch("druid.metadata.storage.connector.port", "1527") %>/var/lib/druid/metadata.db;create=true'
-                # Make sure these directories exists in HDFS by including
-                # druid::cdh::hadoop::setup on your Hadoop NameNodes.
BREAKS HERE
-class munin::client:: base {
BREAKS HERE
-    warning             => 0.5,
BREAKS HERE
-  $watcher_enabled = true
BREAKS HERE
-  if $ido_mysql_package {
-    package { $ido_mysql_package:
-      ensure => installed,
-      before => [
-        Exec['idomysql-import-schema'],
-        Icinga2::Feature['ido-mysql']
-      ]
-    }
-  }
-
-  if $import_schema {
-    exec { 'idomysql-import-schema':
-      user    => 'root',
-      path    => $::path,
-      command => "mysql -h '${host}' -u '${user}' -p'${password}' '${database}' < '/usr/share/icinga2-ido-mysql/schema/mysql.sql'",
-      unless  => "mysql -h '${host}' -u '${user}' -p'${password}' '${database}' -Ns -e 'select version from icinga_dbversion'",
-    }
-  }
-
BREAKS HERE
-  $client_cert_path               = "${::ssldir}/certs/${certname}.pem",
-  $client_key_path                = "${::ssldir}/private_keys/${certname}.pem",
BREAKS HERE
-  case $tor_dns_host {
-    '': { $tor_dns_host = '127.0.0.1' }
-  }
-  case $tor_dns_port {
-    '': { $tor_dns_port = '8853' }
-  }
BREAKS HERE
-        before    => [
-          File[$www_root_subdir],
-          File["${mrepo::params::src_root}/${name}"],
-        ],
BREAKS HERE
-#       name  => 'Unresponsive nodes',
-#       type  => 'danger',
-#       query => '#node.report-timestamp < @"now - 2 hours"'
-#       name  => 'Nodes in production env',
-#       type  => 'success',
-#       query => '#node.catalog-environment = production'
-#       name  => 'Nodes in non-production env',
-#       type  => 'warning',
-#       query => '#node.catalog-environment != production'
-      name  => 'Unresponsive nodes',
-      type  => 'danger',
-      query => '#node.report-timestamp < @"now - 2 hours"'
-      name  => 'Nodes in production env',
-      type  => 'success',
-      query => '#node.catalog-environment = production'
-      name  => 'Nodes in non-production env',
-      type  => 'warning',
-      query => '#node.catalog-environment != production'
BREAKS HERE
-#   other hosts the user is allowd to connect from.
BREAKS HERE
-  file_line { 'sudo_rule_command':
-    path => '/etc/sudoers',
-    line => 'Cmnd_Alias BACKUP=/usr/local/bin/govuk_env_sync.sh',
-  }
-
-  file_line { 'sudo_rule_govuk_backup':
-    path => '/etc/sudoers',
-    line => 'deploy ALL=(govuk-backup) NOPASSWD:BACKUP',
-  }
-
BREAKS HERE
-	if $manage_ipv6 {
-	if $manage_ipv6 {
BREAKS HERE
-            ensure      => present,
-            comment     => 'This is the WAZUH Ubuntu repository for Ossec',
-            location    => 'http://ossec.wazuh.com/repos/apt/ubuntu',
-            release     => $::lsbdistcodename,
-            repos       => 'main',
-            include     => {
-            ensure      => present,
-            comment     => 'This is the WAZUH Debian repository for Ossec',
-            location    => 'http://ossec.wazuh.com/repos/apt/debian',
-            release     => $::lsbdistcodename,
-            repos       => 'main',
-            include     => {
BREAKS HERE
-    file { $filename:
-        ensure  => $ensure,
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0440',
-        content => template('sudo/sudoers.erb'),
-    }
-
BREAKS HERE
-            show_diff => false,
BREAKS HERE
-      target  => $target,
-      content => template('icinga2/object.conf.erb'),
BREAKS HERE
-			$munin_node_service = "munin" 
BREAKS HERE
-  $s3_bucket  = 'govuk-mongodb-backup-s3',
-  $user = mongodb::s3backup::backup::user,
-}
BREAKS HERE
-  if $caller_module_name != $module_name {
-    warning('php::fpm::pool is private')
-  }
-
BREAKS HERE
-    include ::base::puppet::params # In order to be able to use some variables
-
-    $warninginterval = $base::puppet::params::freshnessinterval
-    $criticalinterval = $base::puppet::params::freshnessinterval * 2
BREAKS HERE
-  validate_array($features)
-  include prefix($features, '::icinga2::feature::')
BREAKS HERE
-			notify => Service["munin"],
BREAKS HERE
-    minute   => '*',
BREAKS HERE
-# [*netapp_eseries_host_type*]
-#   (optional) This option is used to define how the controllers in the
-#   E-Series storage array will work with the particular operating system on
-#   the hosts that are connected to it.
-#   Defaults to 'linux_dm_mp'
-  $netapp_eseries_host_type     = 'linux_dm_mp',
-    "${name}/netapp_eseries_host_type":     value => $netapp_eseries_host_type;
BREAKS HERE
-        restart    => '/usr/sbin/service apache2 reload',
-        command     => '/usr/sbin/service apache2 restart',
BREAKS HERE
-			before => Package["munin"],
-                category => $operatingsystem ? {
-                        gentoo => 'net-analyzer',
-                        default => '',
-                },
-			before => Package["munin"],
BREAKS HERE
-    'source' => 'http://www.dotdeb.org/dotdeb.gpg'
BREAKS HERE
-			before => Package["munin"],
-                category => $operatingsystem ? {
-                        gentoo => 'net-analyzer',
-                        default => '',
-                },
-			before => Package["munin"],
BREAKS HERE
-# Class: pmacct
-# This installs and mangages pmacct configuraiton
-# http://www.pmacct.net/
-# Will initially be added to node 'netmon1001'
-class pmacct (
-        $pmacct_database,
-        $pmacct_agents
-) {
-    # Install package and make sure user and directories are set
-    include pmacct::install
-    # Iterate over the device list to create new configs
-    # FIXME: Review daniel's different method for iterating over a hash..
-    create_resources(pmacct::configs, $pmacct_agents)
-    service {'pmacct':
-        ensure => running;
BREAKS HERE
-  $git_data_dirs = {},
BREAKS HERE
-    include profile::kafka::broker
BREAKS HERE
-        check_command => $check_command,
BREAKS HERE
-                ensure => file,
BREAKS HERE
-
-  if $manage_httpd {
-    include graphite::web::service
-  }
BREAKS HERE
-    require => Package[$update_locale_pkg],
BREAKS HERE
-
-
-  $object_name = $name,
-  $endpoints = undef,
-  $parent = undef,
-  $global = false,
-  $target_file_name        = "${name}.conf",
-  $target_file_owner       = 'root',
-  $refresh_icinga2_service = true,
-){
-
-
-      notify  => Service['icinga2'],
-
-
BREAKS HERE
-                'job_name'              => 'k8s',
-                # keep metrics coming from apiserver or node kubernetes roles
-                # and map kubernetes node labels to prometheus metric labels
-                'relabel_configs'       => [
-                        'source_labels' => ['__meta_kubernetes_role'],
-                        'action'        => 'keep',
-                        'regex'         => '(?:apiserver|node)',
-                        'source_labels' => ['__meta_kubernetes_role'],
-                        'action'        => 'replace',
-                        'target_label'  => 'kubernetes_role',
BREAKS HERE
-        exec {'apt_update_php':
-            command     => '/usr/bin/apt-get update',
-            refreshonly => true,
-            logoutput   => true,
-        }
-
-    }
-    require_package($php_package)
-        source => 'puppet:///modules/profile/files/doc/httpd_worker.conf'
BREAKS HERE
-      location /report-a-problem {
BREAKS HERE
-#   Host the certificates were signed on
BREAKS HERE
-  $warning_threshold   = undef,
-  $critical_threshold  = undef,
BREAKS HERE
-    file { '/etc/dnsmasq.d/bifrost.dhcp-hosts.vlan${vlan}.d':
-        File['/etc/dnsmasq.d/bifrost.dhcp-hosts.vlan${vlan}.d'],
BREAKS HERE
-#
-# [*package_name*]
-#   Default: 'gitlab-ce'
-#   The internal packaging system's name for the package
-#   This name will automatically be changed by the gitlab::edition parameter
-#   Can be overridden for the purposes of installing custom compiled version of gitlab-omnibus
-#
-# [*manage_package*]
-#   Default: true
-#   Should the GitLab package be managed?
-#
-  Optional[String] $package_name = undef,
-  Boolean $manage_package = true,
-      fail('gitlab::install::package_name required when gitlab::manage_upstream_edition is `disabled`')
BREAKS HERE
-    release           => ${lsbdistcodename}'-backports',
BREAKS HERE
-          File['/usr/local/bin/etcd-cluster-health'],
BREAKS HERE
-        ensure => 'present',
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0444',
BREAKS HERE
-    class { '::httpd':
-        modules => [
-            'ssl',
-            'headers',
-            'rewrite',
-            'alias',
-            'setenvif',
-            'auth_digest',
-            ],
-    }
-
BREAKS HERE
-# [*users*]
-#   List of users that have "2ndline" permissions in Jenkins.
-#
-  $users = [],
-  validate_array($users)
BREAKS HERE
-        groups     => [ 'wikistats' ],
BREAKS HERE
-      } elsif ( $version == '12.2') {
-	$command_pre = "${elevation_prefix}${oracle_home}/bin/dbca -silent -createDatabase -templateName ${templatename} -gdbname ${globaldb_name} -sid ${db_name} -characterSet ${character_set} -responseFile NO_VALUE -sysPassword ${sys_password} -systemPassword ${system_password} -dbsnmpPassword ${db_snmp_password} -asmsnmpPassword ${asm_snmp_password} -storageType ${storage_type} -datafileDestination ${data_file_destination} -emConfiguration ${em_configuration} "
-#        $command_pre = "${elevation_prefix}${oracle_home}/bin/dbca -silent -createDatabase -templateName ${templatename} -gdbname ${globaldb_name} -sid ${db_name} -characterSet ${character_set} -createAsContainerDatabase ${container_database} -responseFile NO_VALUE -sysPassword ${sys_password} -systemPassword ${system_password} -dbsnmpPassword ${db_snmp_password} -asmsnmpPassword ${asm_snmp_password} -storageType ${storage_type} -datafileDestination ${data_file_destination} -emConfiguration ${em_configuration} "
-        $command_pre = "${elevation_prefix}${oracle_home}/bin/dbca -silent -createDatabase -templateName ${templatename} -gdbname ${globaldb_name} -sid ${db_name} -characterSet ${character_set} -createAsContainerDatabase ${container_database} -responseFile NO_VALUE -sysPassword ${sys_password} -systemPassword ${system_password} -dbsnmpPassword ${db_snmp_password} -asmsnmpPassword ${asm_snmp_password} -storageType ${storage_type} -emConfiguration ${em_configuration} "
BREAKS HERE
-  # Run ceilometer-upgrade in step 5 so gnocchi resource types
-  # are created safely.
BREAKS HERE
-            Exec["concat_/var/lib/puppet/modules/shorewall/zones], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/interfaces], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/hosts], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/policy], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/rules], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/masq], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/proxyarp], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/nat], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/blacklist], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/rfc1918], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/routestopped] 
BREAKS HERE
-        content => epp('oradb/oradb_smf.xml.epp',
-                      { 'dboraLocation'=> $dboraLocation,
-                        'service_name' => $service_name } ),
BREAKS HERE
-    file { "${logging_config_file}":
-        ensure         => 'present',
-        owner          => 'root',
-        group          => 'root',
-        mode           => '0644',
BREAKS HERE
-  $relay_destinations                = undef,
BREAKS HERE
-#   - rmstore: resource manager recovery using state-store
BREAKS HERE
- include ffnord::firewall
-
- file { "/etc/iptables.d/800-${chain}-forward-ACCEPT-${name}":
-   ensure => file,
-   owner => 'root',
-   group => 'root',
-   mode => '0644',
-   content => inline_template("# Process packages from device <%=@name%>
-   require => [File['/etc/iptables.d/']];
- }
- file { "/etc/iptables.d/000-file-value-${name}": 
-   ensure => file,
-   owner => 'root',
-   group => 'root',
-   mode => '0644',
-   content => inline_template("set_value ${path} ${value}\n"),
-   require => [File['/etc/iptables.d/']];
- }
BREAKS HERE
-
-
-  ensure_resource('keystone_domain', 'heat_domain', {
-    'ensure'  => 'present',
-    'enabled' => true,
-    'name'    => $domain_name
-  })
BREAKS HERE
-  file { '/etc/storyboard.conf':
-    command     => 'storyboard-db-manage --config-file /etc/storyboard.conf upgrade head',
-      File['/etc/storyboard.conf'],
-      File['/etc/storyboard.conf'],
BREAKS HERE
-#   Host Format template for the performance data file. Defaults to a template that's suitable for use with PNP4Nagios.
-#   Service Format template for the performance data file. Defaults to a template that's suitable for use with
-#   PNP4Nagios.
-#   i.e. 1m or 15s. Defaults to 30s.
-  Enum['absent', 'present'] $ensure                  = present,
-  Stdlib::Absolutepath      $host_perfdata_path      = "${::icinga2::params::spool_dir}/perfdata/host-perfdata",
-  Stdlib::Absolutepath      $service_perfdata_path   = "${::icinga2::params::spool_dir}/perfdata/service-perfdata",
-  Stdlib::Absolutepath      $host_temp_path          = "${::icinga2::params::spool_dir}/tmp/host-perfdata",
-  Stdlib::Absolutepath      $service_temp_path       = "${::icinga2::params::spool_dir}/tmp/service-perfdata",
-  Optional[String]          $host_format_template    = undef,
-  Optional[String]          $service_format_template = undef,
-  Pattern[/^\d+[ms]*$/]     $rotation_interval       = '30s',
BREAKS HERE
-			$munin_node_service = "munin-munin" 
BREAKS HERE
-        ensure    => 'running',
BREAKS HERE
-
-
BREAKS HERE
-
BREAKS HERE
-  icinga2::object::graphitewriter { 'graphite':
BREAKS HERE
-    version                    => '0.9.12',
-  # Remove this fix when upgrading from 0.9.12:
-  # https://github.com/graphite-project/graphite-web/issues/423
-  $util_py          = "${graphite_path}/webapp/graphite/util.py"
-  $util_patch       = '/tmp/graphite_util.patch'
-  $util_patched_md5 = 'aa6b5e9234dfc705fa01cb871f8eec38'
-  file { $util_patch:
-    ensure => file,
-    source => 'puppet:///modules/govuk/node/s_graphite/graphite_carbonlink.patch',
-  }
-  exec { 'patch graphite 0.9.12':
-    command => "/usr/bin/patch -b ${util_py} ${util_patch}",
-    unless  => "/usr/bin/md5sum ${util_py} | /bin/grep -qsw ${util_patched_md5}",
-    notify  => Class['graphite::service'],
-    require => [
-      Class['graphite::install'],
-      File[$util_patch],
-    ],
-  }
-
BREAKS HERE
-		dir => $NODESDIR,
-
-class munin::host::cgi {
-    exec{'set_modes_for_cgi':
-        command => 'chgrp apache /var/log/munin /var/log/munin/munin-graph.log && chmod g+w /var/log/munin /var/log/munin/munin-graph.log && find /var/www/html/munin/* -maxdepth 1 -type d -exec chgrp -R apache {} \; && find /var/www/html/munin/* -maxdepth 1 -type d -exec chmod -R g+w {} \;',
-        refreshonly => true,
-        subscribe => File['/etc/munin/munin.conf.header'],
-    }
-
-    file{'/etc/logrotate.d/munin':
-        source => [ "puppet://$server/files/munin/config/host/${fqdn}/logrotate",
-                    "puppet://$server/files/munin/config/host/logrotate.$operatingsystem",
-                    "puppet://$server/files/munin/config/host/logrotate",
-                    "puppet://$server/munin/config/host/logrotate.$operatingsystem",
-                    "puppet://$server/munin/config/host/logrotate" ],
-        owner => root, group => 0, mode => 0644;
-    }
-}
-
-class munin::snmp_collector
-{
-
-	file { 
-		"/var/lib/puppet/modules/munin/create_snmp_links":
-			source => "puppet://$server/munin/create_snmp_links.sh",
-			mode => 755, owner => root, group => 0;
-	}
-
-	exec { "create_snmp_links":
-		command => "/var/lib/puppet/modules/munin/create_snmp_links $NODESDIR",
-		require => File["snmp_links"],
-		timeout => "2048",
-		schedule => daily
-	}
-}
BREAKS HERE
-      $so_name = $multifile_settings ? {
-        true  => downcase($settings_name),
-        false => pick(downcase($so_name), downcase($name), downcase($settings_name)),
BREAKS HERE
-  $updates_file,
-  file { "${confdir}/updates":
-    ensure => present,
-    owner  => 'root',
-    group  => 'root',
-    mode   => '0755',
-    source => $updates_file,
BREAKS HERE
-    statusbot_channels      => 'congress, edeploy, fuel-dev, heat, kolla, midonet, murano, openstack, openstack-101, openstack-ansible, openstack-anvil, openstack-bacon, openstack-barbican, openstack-bareon, openstack-blazar, openstack-board, openstack-chef, openstack-cinder, openstack-cloudkeep, openstack-community, openstack-containers, openstack-defcore, openstack-dev, openstack-dns, openstack-doc, openstack-entropy, openstack-foundation, openstack-gantt, openstack-gate, openstack-glance, openstack-heat-translator, openstack-horizon, openstack-hyper-v, openstack-i18n, openstack-infra, openstack-infra-incident, openstack-ironic, openstack-keystone, openstack-manila, openstack-meeting, openstack-meeting-3, openstack-meeting-4, openstack-meeting-alt, openstack-meniscus, openstack-merges, openstack-metering, openstack-monasca, openstack-neutron, openstack-neutron-ovn, openstack-nova, openstack-opw, openstack-oslo, openstack-qa, openstack-raksha, openstack-rally, openstack-rating, openstack-release, openstack-sahara, openstack-sdks, openstack-searchlight, openstack-solar, openstack-sprint, openstack-stable, openstack-state-management, openstack-swauth, openstack-swift, openstack-telemetry, openstack-trove, openstack-zaqar, openstack-zephyr, packstack-dev, puppet-openstack, refstack, senlin, storyboard, syscompass, tripleo',
BREAKS HERE
-    $ensure = 'present',
-    $outfile = '/var/lib/prometheus/node.d/puppet_agent.prom',
-    validate_re($outfile, '\.prom$')
-    validate_ensure($ensure)
BREAKS HERE
-  include '::jenkins'
-  include '::jenkins::master'
-  # required by workflow-cps
-  jenkins::plugin {
-    'ace-editor': ;
-  }
-
-  # required by warnings
-  jenkins::plugin {
-    'analysis-core': ;
-  }
-
-  jenkins::plugin {
-    'audit-trail': ;
-  }
-  jenkins::plugin {
-    'bazaar': ;
-  }
-
-  jenkins::plugin {
-    'build-timeout': ;
-  }
-
-  jenkins::plugin {
-    'collapsing-console-sections': ;
-  }
-
-  jenkins::plugin {
-    'copyartifact': ;
-  }
-
-
-  jenkins::plugin {
-    'dashboard-view': ;
-  }
-
-  jenkins::plugin {
-    'description-setter': ;
-  }
-
-  jenkins::plugin {
-    'disable-failed-job': ;
-  }
-
-  # required by groovy-postbuild
-  jenkins::plugin {
-    'durable-task': ;
-  }
-
-  jenkins::plugin {
-    'email-ext': ;
-  }
-
-  jenkins::plugin {
-    'embeddable-build-status': ;
-  }
-
-  jenkins::plugin {
-    'extra-columns': ;
-  }
-
-  jenkins::plugin {
-    'ghprb': ;
-  }
-  # required by ghprb
-  jenkins::plugin {
-    'git': ;
-  }
-
-  jenkins::plugin {
-    'git-client': ;
-  }
-
-  # required by ghprb
-  jenkins::plugin {
-    'github': ;
-  }
-
-  jenkins::plugin {
-    'github-api': ;
-  }
-
-  jenkins::plugin {
-    'greenballs': ;
-  }
-
-  jenkins::plugin {
-    'groovy': ;
-  }
-
-  jenkins::plugin {
-    'groovy-postbuild': ;
-  }
-
-  jenkins::plugin {
-    'jobConfigHistory': ;
-  }
-
-  jenkins::plugin {
-    'jobrequeue': ;
-  }
-
-  # required by groovy-postbuild
-  jenkins::plugin {
-    'jquery-detached': ;
-  }
-
-  # required by subversion
-  jenkins::plugin {
-    'mapdb-api': ;
-  }
-
-  # required by ghprb and groovy-postbuild
-  jenkins::plugin {
-    'matrix-project': ;
-  }
-
-  jenkins::plugin {
-    'mercurial': ;
-  }
-
-  jenkins::plugin {
-    'monitoring': ;
-  }
-
-  jenkins::plugin {
-    'parameterized-trigger': ;
-  }
-
-  # required by ghprb
-  jenkins::plugin {
-    'plain-credentials': ;
-  }
-
-  jenkins::plugin {
-    'pollscm': ;
-  }
-
-  jenkins::plugin {
-    'PrioritySorter': ;
-  }
-  jenkins::plugin {
-    'publish-over-ssh': ;
-  }
-  jenkins::plugin {
-    'purge-build-queue-plugin': ;
-  }
-
-  # required by mercurial
-  jenkins::plugin {
-    'scm-api': ;
-  }
-
-  # required by groovy-postbuild
-  jenkins::plugin {
-    'script-security': ;
-  }
-
-  jenkins::plugin {
-    'ssh-agent': ;
-  }
-
-  # required by ssh-agent
-  jenkins::plugin {
-    'ssh-credentials': ;
-  }
-
-  jenkins::plugin {
-    'subversion': ;
-  }
-  jenkins::plugin {
-    'systemloadaverage-monitor': ;
-  }
-
-  jenkins::plugin {
-    'timestamper': ;
-  }
-
-  # required by build-timeout
-  jenkins::plugin {
-    'token-macro': ;
-  }
-
-  jenkins::plugin {
-    'warnings': ;
-  }
-  # required by workflow-cps
-  jenkins::plugin {
-    'workflow-api': ;
-  }
-
-  # required by groovy-postbuild
-  jenkins::plugin {
-    'workflow-cps': ;
-  }
-
-  # required by workflow-cps
-  jenkins::plugin {
-    'workflow-support': ;
-  }
-
-  # required by workflow-cps
-  jenkins::plugin {
-    'workflow-scm-step': ;
-  }
-
-  # required by ssh-agent and workflow-cps
-  jenkins::plugin {
-    'workflow-step-api': ;
-  }
-
-  jenkins::plugin {
-    'writable-filesystem-monitor': ;
-  }
-
-  jenkins::plugin {
-    'xunit': ;
-  }
BREAKS HERE
-  include ::icinga2::params
-
BREAKS HERE
-    puppetmaster_server => 'puppetmaster.openstack.org',
-    puppetmaster_server => 'puppetmaster.openstack.org',
BREAKS HERE
-            logo     => '/tool-labs-logo.png',
-            logo_2x  => '/tool-labs-logo-2x.png',
-            favicon  => '/favicon.ico',
BREAKS HERE
-    admin::sudo { "releases_dput_${upload_host}":
-        user => $sudo_user,
BREAKS HERE
-# FIXME: This class needs better documentation as per https://docs.puppetlabs.com/guides/style_guide.html#puppet-doc
-class govuk::apps::support_api($port = 3075, $enable_procfile_worker = true) {
BREAKS HERE
-  file { '/srv/static/specs/robots.txt':
-    ensure  => present,
-    owner   => 'root',
-    group   => 'root',
-    mode    => '0444',
-    source  => 'puppet:///modules/openstack_project/disallow_robots.txt',
-    require => File['/srv/static/specs'],
-  }
-
BREAKS HERE
-      ensure => present,
-      key => extlookup('mazz_key', ''),
-      type => 'ssh-rsa',
-      user => 'deploy',
-    comment    => "Mazz Mosley <mazz.mosley@digital.cabinet-office.gov.uk>",
BREAKS HERE
-  } else {
-    $cron_ensure = "absent"
-    $cron_offset = "00:00"
-    $cron_minutes = "0"
-    $creates = undef # always run via puppet when opted out of cron option
-  }
-  if $server {
BREAKS HERE
-            'libvips-dev', # This is our own custom package, doesn't work on trusty yet.
BREAKS HERE
-    include ::cinder::api
BREAKS HERE
-        notify  => Service['eventlogging/init'],
BREAKS HERE
-  blacklist_files{ $final_blacklist: }
BREAKS HERE
-  $step                    = Integer(hiera('step')),
-  $oslomsg_rpc_proto       = hiera('oslo_messaging_rpc_scheme', 'rabbit'),
-  $oslomsg_rpc_hosts       = any2array(hiera('oslo_messaging_rpc_node_names', undef)),
-  $oslomsg_rpc_password    = hiera('oslo_messaging_rpc_password'),
-  $oslomsg_rpc_port        = hiera('oslo_messaging_rpc_port', '5672'),
-  $oslomsg_rpc_username    = hiera('oslo_messaging_rpc_user_name', 'guest'),
-  $oslomsg_rpc_use_ssl     = hiera('oslo_messaging_rpc_use_ssl', '0'),
-  $oslomsg_notify_proto    = hiera('oslo_messaging_notify_scheme', 'rabbit'),
-  $oslomsg_notify_hosts    = any2array(hiera('oslo_messaging_notify_node_names', undef)),
-  $oslomsg_notify_password = hiera('oslo_messaging_notify_password'),
-  $oslomsg_notify_port     = hiera('oslo_messaging_notify_port', '5672'),
-  $oslomsg_notify_username = hiera('oslo_messaging_notify_user_name', 'guest'),
-  $oslomsg_notify_use_ssl  = hiera('oslo_messaging_notify_use_ssl', '0'),
BREAKS HERE
-    options          => $listen_options_real,
BREAKS HERE
-    command => '/usr/local/bin/pagerduty_nagios.pl flush',
BREAKS HERE
-            cmd => '/usr/sbin/dpkg-divert --divert /etc/init.d/ipsec-disabled /etc/init.d/ipsec',
BREAKS HERE
-    $nrpe_allowed_hosts = hiera('profile::base::nrpe_allowed_hosts', '127.0.0.1,208.80.154.14,208.80.153.74,208.80.155.119'),
BREAKS HERE
-  if $::aws_migration {
-    $app_domain_internal = hiera('app_domain_internal')
-
-    govuk::app::envvar { "${title}-PLEK_SERVICE_ROUTER_API_URI":
-      varname => 'PLEK_SERVICE_ROUTER_API_URI',
-      value   => "https://router-api.${app_domain_internal}",
-    }
-  }
-
BREAKS HERE
-    location    => 'http://pkg.jenkins-ci.org/debian-stable',
-      'source' => 'http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key',
-    ensure  => present,
BREAKS HERE
-#   Default: $::os_service_default
-  $ec2api_workers                     = $::os_service_default,
BREAKS HERE
-    $deploy_groups = []
-    $deploy_groups = ['assets']
BREAKS HERE
-    "${::graphite::params::apacheconf_dir}/graphite.conf":
-      file { '/etc/apache2/sites-enabled/graphite.conf':
-        require => File['/etc/apache2/sites-available/graphite.conf'],
BREAKS HERE
-        srange => "(@resolve((${prometheus_nodes_ferm})), @resolve((${prometheus_nodes_ferm}), AAAA))",
BREAKS HERE
-  include apache
-  a2mod { 'rewrite':
-  a2mod { 'proxy':
-  a2mod { 'proxy_http':
-  apache::vhost { 'status.openstack.org':
BREAKS HERE
-      $package = 'vim-lite'
BREAKS HERE
-  $real_non_torified_users = uniq_flatten([ $tor_user, $non_torified_users ])
BREAKS HERE
-                'gc-interval' => '20m',
BREAKS HERE
-    $murano_enabled  = true
BREAKS HERE
-        values => {
-            'vm.overcommit_memory' => 1,
-        },
-            line    => 'latency-monitor-threshold 100',
-            match   => '^latency-monitor-threshold',
-            path    => '/etc/redis/redis.conf',
BREAKS HERE
-#   Default: false
-  $suppress_draft_store_502_error = false,
BREAKS HERE
-        ensure  => directory,
-        recurse => true,
-        force   => true,
-        mode    => '0775',
-        owner   => 'root',
-        group   => 'prometheus',
BREAKS HERE
-            monitoring::check_prometheus { 'hadoop-hdfs-namenode-heap-usaage':
-                query           => "scalar(quantile_over_time(0.6,jvm_memory_bytes_used{instance=\"${::hostname}:10080\",area=\"heap\"}[60m]))",
-                query           => "scalar(quantile_over_time(0.6,jvm_memory_bytes_used{instance=\"${::hostname}:10083\",area=\"heap\"}[60m]))",
BREAKS HERE
-    target    => "transformNull(stats.${::fqdn_underscore}.nginx_logs.bouncer_*.http_501,0)",
-    warning   => 0.000001,
-    critical  => 0.000002,
-    from      => '1hour',
-    desc      => 'bouncer 501s: indicates bouncer misconfiguration',
-    host_name => $::fqdn,
-    notes_url => 'https://github.gds/pages/gds/opsmanual/2nd-line/nagios.html#bouncer-501s',
BREAKS HERE
-        command => "echo \"\$\$: Starting dispatcher\" >> ${dispatch_log_file}; /usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki --max-time 540 --batch-size 420 --dispatch-interval 25 --randomness 10 >> ${dispatch_log_file} 2>&1; echo \"\$\$: Dispatcher exited with $?\" >> ${dispatch_log_file}",
BREAKS HERE
-class profile::ci::worker_localhost() {
-    class { '::contint::worker_localhost':
-        owner => 'jenkins-deploy',
BREAKS HERE
-    ensure  => $ensure,
-    owner   => $real_user,
-    group   => $real_group,
-    mode    => '0400',
-    content => template('googleauthenticator/google-authenticator.erb'),
BREAKS HERE
-          package{'deltarpms':
BREAKS HERE
-    ensure   => '1.5.0',
-    provider => 'pip',
-    require  => Package['update-notifier-common'],
BREAKS HERE
-    source  => 'puppet:///modules/mongodb/nagios_check_mongodb.py',
BREAKS HERE
-# Installs cron job to drop old hive partitions,
-    # Shortcut var to DRY up cron commands.
-    # cron runs once a month
-    # cron runs once a month
-    # cron runs once a day
-    # cron runs once a day, at midnight, to coincide with salt rotation time
-    # Cron job runs once an hour.  EventLoggingSanitization is a Refine job wrapper with
-    # cron runs once a month
-    # cron runs once a month
-    # cron runs once a day
BREAKS HERE
-  if $default_domain {
-    $default_domain_real = $default_domain
-  } else {
-    $default_domain_real = 'default'
-  }
-    project_domain => $default_domain_real,
-    user_domain    => $default_domain_real,
BREAKS HERE
-# [*odl_api_ips*]
-#   (Optional) List of OpenStack Controller IPs for ODL API
-#   Defaults to hiera('opendaylight_api_node_ips')
-#
-  $odl_api_ips  = hiera('opendaylight_api_node_ips'),
-    $ml2_odl_params = {
-      'odl_username' => $odl_username,
-      'odl_password' => $odl_password,
-      'odl_url'      => "${conn_proto}://${odl_url_ip}:${odl_port}/controller/nb/v2/neutron",
-    }
-
-    validate_array($odl_api_ips)
-    if size($odl_api_ips) > 2 {
-      $odl_features = 'False'
-    } else {
-      $odl_features = $::os_service_default
-    }
-
-      odl_features => $odl_features;
BREAKS HERE
-    root_rsa_key => hiera('puppetmaster_root_rsa_key', 'XXX'),
BREAKS HERE
-  # FIXME: Remove noop when we have ruled out false-positives.
-    noop               => true,
BREAKS HERE
-            command                   => '/etc/dns-floating-ip-updater.py',
BREAKS HERE
-# 
-# 
-# 
-# 
-# 
BREAKS HERE
-# Full description of class puppetboard here.
-# [*sample_parameter*]
-#   Explanation of what this parameter affects and what it defaults to.
-#   e.g. "Specify one or more upstream ntp servers as an array."
-#
-# === Variables
-# Here you should define a list of variables that this module would require.
-#
-# [*sample_variable*]
-#   Explanation of how this variable affects the funtion of this class and if it
-#   has a default. e.g. "The parameter enc_ntp_servers must be set by the
-#   External Node Classifier as a comma separated list of hostnames." (Note,
-#   global variables should not be used in preference to class parameters  as of
-#   Puppet 2.6.)
-#  class { puppetboard:
-#    servers => [ 'pool.ntp.org', 'ntp.local.company.com' ]
-# === Authors
-#
-# Author Name <author@domain.com>
-#
-# === Copyright
-#
-# Copyright 2013 Your name here, unless otherwise noted.
-#
-  $user = 'puppetboard',  # The user to run puppetboard as
-  $mode = 'dev',          # also can run it under mod_wsgi
-  $listen = '127.0.0.1',  # listen locally or globally
-  $experimental = 'true', # enable experimental features
-  $port = '5000',
-  $manage_packages = 'true',
-  $manage_apache_service = 'true',
-) {
-  class { 'python':
-    version    => 'system',
-    dev        => true,
-    virtualenv => true,
-  }
-
-  if $manage_packages == 'true' {
-    package { 'dtach':
-      ensure => present,
-    }
-  }
-
-  group { 'puppetboard':
-    home       => "/home/${user}",
-    gid        => 'puppetboard',
-    require    => Group['puppetboard'],
-  if $experimental == 'true' {
-  if $mode == 'dev' {
-    
-    notify { "not starting puppetboard in dev mode": }
-
-  }
-
-  if $mode == 'wsgi' {
-
-    case $::osfamily { 
-      'Debian': { 
-         $apache_root = '/etc/apache2/sites-enabled'
-         $apache_service = 'apache2'
-       }
-      'RedHat': {
-         $apache_root = '/etc/httpd/conf.d'
-         $apache_service = 'httpd'
-      }
-      default: { fail("This module is not supported on ${::osfamily}") }
-    }
-
-    if $manage_packages == 'true' {
-      package { 'libapache2-mod-wsgi': 
-        ensure => present,
-      }
-    }
-
-
-    file { "/home/${user}/puppetboard/wsgi.py":
-      ensure  => present,
-      content => template('puppetboard/wsgi.py.erb'),
-      owner   => $user,
-      group   => 'puppetboard',
-      notify  => Service[$apache_service],
-    }
-
-
-    file { "${apache_root}/puppetboard":
-      ensure  => present,
-      content => template('puppetboard/puppetboard.erb'),
-      owner   => $user,
-      group   => 'puppetboard',
-      notify  => Service[$apache_service],
-    }
-
-    if $manage_apache_service == 'true' {
-       service { $apache_service:
-         ensure => running, 
-       }
-    }
- 
-  }
-
BREAKS HERE
-# $server_reports                  List of report types to include on the puppetmaster
-# $server_reports::                List of report types to include on
-#                                  the puppetmaster
-#
BREAKS HERE
-    path    => [ "/bin/", "/sbin/" , "/usr/bin/", "/usr/sbin/" ]
BREAKS HERE
-      'apache2-nagios'
-      'nagios3'
BREAKS HERE
-    xen0: { include "munin::plugins::dom0" }
BREAKS HERE
-        source  => 'puppet:///modules/icinga/icinga-init',
-        source => 'puppet:///modules/icinga/icinga-downtime',
BREAKS HERE
-    order       => '10',
BREAKS HERE
-    include ::apache::mod::uwsgi # lint:ignore:wmf_styleguide
BREAKS HERE
-      subscribe => [ File["/etc/zuul/layout.yaml"], File["/etc/zuul/logging.conf"], ],
BREAKS HERE
-      arguments => "-m $document_suffix -mc $config_suffix -mj $jar_suffix" ,
BREAKS HERE
-    revision => 'origin/v0.6.16-release',
BREAKS HERE
-        datanode_mounts => [
-            "${hadoop_data_directory}/a",
-            "${hadoop_data_directory}/b",
-        ],
BREAKS HERE
-  class { 'postfix':
-    smarthost       => extlookup('postfix_smarthost', ''),
-    smarthost_user  => extlookup('postfix_smarthost_user', ''),
-    smarthost_pass  => extlookup('postfix_smarthost_pass', ''),
-  }
-
BREAKS HERE
-  # START bouncer
-
-  $kibana_url = "https://kibana.${app_domain}"
-
-  $kibana_search = {
-    'search'    => '@fields.status:501 AND @source_host:bouncer*',
-    'fields'    => ['@fields.http_host', '@fields.request', '@fields.http_referrer'],
-    'timeframe' => 14400,
-  }
-
-  icinga::check::graphite { 'check_bouncer_501s':
-    target         => 'sumSeries(transformNull(stats.bouncer*.nginx_logs.*.http_501,0))',
-    warning        => 0.000001,
-    critical       => 0.000002,
-    from           => '1hour',
-    desc           => 'bouncer 501s: indicates bouncer misconfiguration',
-    host_name      => $::fqdn,
-    notes_url      => 'https://github.gds/pages/gds/opsmanual/2nd-line/nagios.html#bouncer-501s',
-    action_url     => kibana2_url($kibana_url, $kibana_search),
-    contact_groups => 'transition_members',
-  }
-
-  # END bouncer
-
BREAKS HERE
-        ensure  => 'directory',
-        owner   => 'root',
-        group   => 'wikidev',
-        mode    => '0750',
BREAKS HERE
-    $log_dir = '/var/log/eventlogging'
BREAKS HERE
-  $relay_carbon_metirc_interval              = $::graphite::params::relay_carbon_metirc_interval,
BREAKS HERE
-    sysadmins => $sysadmins
-    ensure => present
-  file { "/usr/local/share/cacti/resource/snmp_queries":
-    owner  => "root",
-  }	
-  file { "/usr/local/share/cacti/resource/snmp_queries/net-snmp_devio.xml":
-    source  => "puppet:///modules/openstack_project/cacti/net-snmp_devio.xml",
-    mode    => 644,
-    owner   => "root",
-    group   => "root",
-    require => File["/usr/local/share/cacti/resource/snmp_queries"],
-  file { "/var/lib/cacti/linux_host.xml":
-    source  => "puppet:///modules/openstack_project/cacti/linux_host.xml",
-    mode    => 644,
-    owner   => "root",
-    group   => "root",
-    require => File["/usr/local/share/cacti/resource/snmp_queries/net-snmp_devio.xml"],
-  file { "/usr/local/bin/create_graphs.sh":
-    source  => "puppet:///modules/openstack_project/cacti/create_graphs.sh",
-    mode    => 744,
-    owner   => "root",
-    group   => "root",
-  exec { "cacti_import_xml":
-    command      => "/usr/bin/php -q /usr/share/cacti/cli/import_template.php \
-                       --filename=/var/lib/cacti/linux_host.xml \
-                       --with-template-rras",
-    cwd          => "/usr/share/cacti/cli",
-    require      => File["/var/lib/cacti/linux_host.xml"],
-  class {'cacti_device': hostname=> 'community.openstack.org'}
-  class {'cacti_device': hostname=> 'eavesdrop.openstack.org'}
-  class {'cacti_device': hostname=> 'etherpad.openstack.org'}
-  class {'cacti_device': hostname=> 'jenkins-dev.openstack.org'}
-  class {'cacti_device': hostname=> 'jenkins.openstack.org'}
-  class {'cacti_device': hostname=> 'lists.openstack.org'}
-  class {'cacti_device': hostname=> 'paste.openstack.org'}
-  class {'cacti_device': hostname=> 'planet.openstack.org'}
-  class {'cacti_device': hostname=> 'pypi.openstack.org'}
-  class {'cacti_device': hostname=> 'review-dev.openstack.org'}
-  class {'cacti_device': hostname=> 'review.openstack.org'}
-  class {'cacti_device': hostname=> 'static.openstack.org'}
-  class {'cacti_device': hostname=> 'wiki.openstack.org'}
-}
-class cacti_device(
-  $hostname
-){
-  exec { "cacti_create_$hostname":
-    command      => "/usr/local/bin/create_graphs.sh $hostname",
-    require      => Exec["cacti_import_xml"]
-  }
-
BREAKS HERE
-      content => template("/etc/sysctl.d/routing.conf");
BREAKS HERE
-    require => Class[mongodb::s3backup::package],
BREAKS HERE
-    eplite_version => 'cc9f88e7ed4858b72feb64c99beb3e13445ab6d9',
BREAKS HERE
-        modules => ['rewrite'],
BREAKS HERE
-  if ! ($certtype in [
-      'www',
-      'ci_alphagov',
-      'wildcard_alphagov',
-      'wildcard_alphagov_mgmt'
-    ]) {
-    fail "${certtype} is not a valid certtype"
-  }
-
-  if $certtype == 'wildcard_alphagov_mgmt' {
-    # The below two lines are hard to mentally parse, but if the certtype is set to
-    # 'wildcard_alphagov_mgmt' then it will first look for certs and keys for that.
-    # If they don't exist in hiera, it will fall back to looking for 'wildcard_alphagov'
-    # and if that fails, will return the empty string.
-    #FIXME: chomp() is to maintain md5 between previous extlookup - can be removed once deployed
-    $cert = chomp(hiera("${certtype}_crt", hiera('wildcard_alphagov_crt', '')))
-    $key = chomp(hiera("${certtype}_key", hiera('wildcard_alphagov_key', '')))
-  } else {
-    $cert = chomp(hiera("${certtype}_crt", ''))
-    $key = chomp(hiera("${certtype}_key", ''))
BREAKS HERE
-        require => [ Package['smokeping'], File['/etc/smokeping/config.d'] ],
-        ensure => running;
BREAKS HERE
-        target    => "scale(${::fqdn_metrics}.processes-app-worker-${title_underscore}.ps_count.processes,-1)",
-        warning   => -1, # WARN if there are 0 processes (more than -1, with the negative metric)
-        critical  => 0, # Don't use the CRITICAL status for now
BREAKS HERE
-        owner       => $user,
BREAKS HERE
-  exec {'set_superuser':
-    command => "echo \"from django.db import DEFAULT_DB_ALIAS as database; from django.contrib.auth.models import User; User.objects.db_manager(database).create_superuser('admin', 'admins@adblockplus.org', '${admin_password}')\" | ./manage.py shell",
-    cwd => "${rietveld_home}",
-    require => Exec['install_rietveld'],
-  }
-
BREAKS HERE
-  cron { 'openstackwatch':
-    ensure  => present,
-    command => '/usr/local/bin/openstackwatch /home/openstackwatch/openstackwatch.ini',
-    minute  => $minute,
-    hour    => $hour,
-    user    => 'openstackwatch',
-    require => [
-      File['/home/openstackwatch/openstackwatch.ini'],
-      User['openstackwatch'],
-      Class['jeepyb'],
-    ],
BREAKS HERE
-      path   => '/bin:/sbin:/usr/bin:/usr/sbin',
-      unless => "update-alternatives --display java | grep -e /usr/java/${longversion}/bin/java.*${priority}\$"
BREAKS HERE
-        owner  => 'root',
BREAKS HERE
-        ensure  => $ensure,
BREAKS HERE
-#   Enable or disable auto migrations. undef keeps the current state on the system.
-#    edition           => 'ee',
-#    external_url      => 'https://gitlab.mydomain.tld',
-  Optional[Boolean]              $skip_auto_migrations          = undef,
-  class { '::gitlab::install': }
-  -> class { '::gitlab::config': }
-  ~> class { '::gitlab::service': }
-  -> class { '::gitlab::backup': }
-
BREAKS HERE
-#   default: "${::graphite::gr_python_binary} manage.py syncdb --noinput"
-  $gr_django_init_provider                = "${::graphite::params::gr_python_binary} manage.py syncdb --noinput",
-  $gr_django_init_command                 = $::graphite::params::django_init_command,
BREAKS HERE
-    require       => Package[$ipa::master::svrpkg]
BREAKS HERE
-    default              => '/etc/powerdns/pdns.d/pdns.local.gpgsql'
-    default              => '/etc/powerdns/pdns.d/pdns.local.mysql'
BREAKS HERE
-  $path    = "$ver/main/installer-$arch/current/images/netboot/$os-installer/$arch"
BREAKS HERE
-  $vhost_full = "${vhost_real}.${app_domain}"
BREAKS HERE
-    $metal_resolver = '/etc/powerdns/metaldns.lua'
-    $lua_hooks = [$alias_file, $metal_resolver]
-    class { '::dnsrecursor::metalresolver':
-        metal_resolver => $metal_resolver,
-        tld            => $tld
-    }
-
BREAKS HERE
-class hosts::development {
-  host { 'puppet.cluster':      ip => '127.0.0.1' }
-  host { 'frontend.cluster':    ip => '127.0.0.1' }
-  host { 'backend.cluster':     ip => '127.0.0.1' }
-  host { 'support.cluster':     ip => '127.0.0.1' }
-  host { 'data.cluster':        ip => '127.0.0.1' }
-  host { 'mysql.cluster':       ip => '127.0.0.1' }
-  host { 'mongodb.cluster':     ip => '127.0.0.1' }
-  host { 'monitoring.cluster':  ip => '127.0.0.1' }
-  host { 'cache.cluster':       ip => '127.0.0.1' }
-  host { 'router.cluster':      ip => '127.0.0.1' }
-  host { 'graylog.cluster':     ip => '127.0.0.1' }
-  host { 'whitehall.cluster':   ip => '127.0.0.1' }
-
-  host { 'static.dev.gov.uk':           ip => '127.0.0.1' }
-  host { 'smartanswers.dev.gov.uk':     ip => '127.0.0.1' }
-  host { 'licencefinder.dev.gov.uk':    ip => '127.0.0.1' }
-  host { 'publisher.dev.gov.uk':        ip => '127.0.0.1' }
-  host { 'private-frontend.dev.gov.uk': ip => '127.0.0.1' }
-  host { 'panopticon.dev.gov.uk':       ip => '127.0.0.1' }
-  host { 'needotron.dev.gov.uk':        ip => '127.0.0.1' }
-  host { 'imminence.dev.gov.uk':        ip => '127.0.0.1' }
-  host { 'contactotron.dev.gov.uk':     ip => '127.0.0.1' }
-  host { 'search.dev.gov.uk':           ip => '127.0.0.1' }
-  host { 'tariff-api.dev.gov.uk':       ip => '127.0.0.1' }
-  host { 'tariff.dev.gov.uk':           ip => '127.0.0.1' }
-  host { 'efg.dev.gov.uk':              ip => '127.0.0.1' }
-  host { 'migratorator.dev.gov.uk':     ip => '127.0.0.1' }
-  host { 'reviewomatic.dev.gov.uk':     ip => '127.0.0.1' }
-  host { 'contentapi.dev.gov.uk':       ip => '127.0.0.1' }
-  host { 'designprinciples.dev.gov.uk': ip => '127.0.0.1' }
-}
BREAKS HERE
-  package { ['php5.6', 'php5.6-cli', 'php5.6-mysql', 'php5.6-pgsql', 'php5.6-curl', 'php5.6-gd', 'php5.6-xmlrpc', 'php5.6-intl', 'php5.6-xml', 'php5.6-mbstring', 'php5.6-zip', 'php5.6-ldap']:
BREAKS HERE
-  $listen_port        = 80
-  $influxdb_host      = undef
-  $influxdb_script    = '/usr/local/bin/configure_influxdb.sh'
-  $influxdb_grafanadb = 'grafana'
-  $grafana_dir        = '/opt/grafana'
-  $grafana_conf       = "${grafana_dir}/config.js"
-  $grafana_dash       = "${grafana_dir}/app/dashboards/lma.json"
BREAKS HERE
-    $auth_secret
-    include shinken::shinkengen
BREAKS HERE
-  } ->
BREAKS HERE
-# Should only include other roles.
-    include standard
-    include base::firewall
-    include role::etcd::common
BREAKS HERE
-  package {
-    [$asterisk::package_name,
-    'asterisk-core-sounds-en',
-    'asterisk-core-sounds-en-gsm']:
-    ensure => installed,
-  }
BREAKS HERE
-class icinga {
-        source  => 'puppet:///modules/icinga/icinga.cfg',
BREAKS HERE
-class { '::openstack_health::frontend':
-  source_dir   => '/opt/openstack-health',
-  serveradmin  => 'webmaster@localhost',
BREAKS HERE
-  class {'::dumps::web::htmldumps': htmldumps_server => 'francium.eqiad.wmnet'}
BREAKS HERE
-        source => 'puppet:///modules/cassandra-ca-manager',
BREAKS HERE
-    require => [ Package['build-essential'], Rbenv::Plugin['sstephenson/ruby-build'] ],
BREAKS HERE
-        owner   => 'root',
-        group   => 'root', # this is wrong, this should be its own group/user
BREAKS HERE
-    $labweb_ips_ferm = inline_template("@resolve((<%= @labweb_hosts.join(' ') %>))")
-    $labweb_ip6s_ferm = inline_template("@resolve((<%= @labweb_hosts.join(' ') %>), AAAA)")
-        srange => "${labweb_ips_ferm} ${labweb_ip6s_ferm}"
BREAKS HERE
-    include ::eventlogging
BREAKS HERE
-            source => "puppet://$server/modlues/$real_source",
BREAKS HERE
-	include hadoop::common::config
-	include hadoop::common::hdfs::config
-	include hadoop::common::mapred::config
-	include hadoop::common::yarn::config
BREAKS HERE
-class profile::recommendation_api {
-
-    include ::recommendation_api
BREAKS HERE
-      require      => Service['mysqld'],
BREAKS HERE
-    source => concat_output('puppet.conf'),
BREAKS HERE
-        owner   => $title,
-        group   => $title,
BREAKS HERE
-        command     => "/usr/bin/puppet module install zack-catalog_diff",
BREAKS HERE
-#   Salt to use for ticket generation. Defaults to icinga2 constant TicketSalt.
-    ticket_salt     => $ticket_salt,
BREAKS HERE
-            dynamic_extension_path   => '/usr/lib/hphp/extensions/20140727',
-    file { '/usr/local/sbin/hhvm-debug-dump':
-        source => 'puppet:///modules/hhvm/hhvm-debug-dump',
BREAKS HERE
-  include jeepyb
-  include pip
BREAKS HERE
-class { '::openstack_integration::neutron':
-  lbaasv2 => true
-}
BREAKS HERE
-#     The networking hardware type.  qeth, lcs or ctc.  
BREAKS HERE
-    '/etc/kubernetes/manifests/ingress':
-    '/etc/kubernetes/manifests/ingress/ingress-expose.yaml':
-    command     => 'kubectl apply -f /etc/kubernetes/manifests/ingress/ingress-expose.yaml',
-    subscribe   => File['/etc/kubernetes/manifests/ingress/ingress-expose.yaml'],
-    refreshonly => true,
-    require     => Package['kubectl'];
BREAKS HERE
-  class { 'ocf::packages::docker::apt':
-    stage => first,
-  }
-
BREAKS HERE
-    $letsencrypt_sh_git_url = 'https://github.com/lukas2511/dehydrated.git',
-    $challengetype = 'dns-01',
-    $letsencrypt_host = pick($::servername, $::puppetmaster),
-    $letsencrypt_ca = 'https://acme-v01.api.letsencrypt.org/directory',
-    $dh_param_size = 2048,
-    $manage_packages = true,
-){
-    require ::letsencrypt::params
-
-
-
BREAKS HERE
-    class { 'icinga::monitor::elasticsearch': }
BREAKS HERE
-    if $monitoring_enabled {
-        include ::profile::hadoop::monitoring::datanode
-        $datanode_jmx_exporter_config_file = $::profile::hadoop::monitoring::datanode::jmx_exporter_config_file
-        $prometheus_jmx_exporter_datanode_port = $::profile::hadoop::monitoring::datanode::prometheus_jmx_exporter_datanode_port
-
-        include ::profile::hadoop::monitoring::nodemanager
-        $nodemanager_jmx_exporter_config_file = $::profile::hadoop::monitoring::nodemanager::jmx_exporter_config_file
-        $prometheus_jmx_exporter_nodemanager_port = $::profile::hadoop::monitoring::nodemanager::prometheus_jmx_exporter_nodemanager_port
-    }
-
BREAKS HERE
-        require         => Class['::mysql::server'],
BREAKS HERE
-  package { ['console2', 'putty', 'devbox-common.extension']:
- 
-  # The Chocolatey Unzip package is broken; use pget and a package resource.
-  pget { 'unzip':
-    source         => 'http://iweb.dl.sourceforge.net/project/gnuwin32/unzip/5.51-1/unzip-5.51-1.exe',
-    target         => 'C:/Windows/Temp',
-    targetfilename => 'unzip.exe',
-    before         => Package['GnuWin32: UnZip version 5.51'],
-  }
-  package { 'GnuWin32: UnZip version 5.51':
-    ensure          => present,
-    provider        => 'windows',
-    source          => 'C:/Windows/Temp/unzip.exe',
-    install_options => '/VERYSILENT',
-    require         => Package['devbox-common.extension'],
-  }
BREAKS HERE
-  # translate system architecture to expected value
-  case $::architecture {
-    'x86_64' : { $arch = 'x64' }
-    'x86'    : { $arch = 'i586' }
-    default  : { fail("Unsupported architecture ${arch}") }
-  }
-        default : { fail("Unexisting update number ${min_version}") }
-        default : { fail("Unexisting update number ${min_version}") }
-        default : { fail("Unexisting update number ${min_version}") }
-      fail("Unsupported or unexisting version ${version}")
-  # required packages
-  if !defined(Package['wget']) {
-    package { 'wget': ensure => present }
-  }
-
-   else {
-    # sed is required
-    if !defined(Package['sed']) {
-      package { 'sed': ensure => present }
-    }
-
-    } ->
-    package { $type:
-      ensure   => latest,
-      source   => "/usr/java/${filename_extract}",
-      provider => rpm
BREAKS HERE
-        ensure  => present,
-        source  => 'puppet:///modules/pybal/check_pybal',
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0555',
BREAKS HERE
-    include ::role::salt::minions
BREAKS HERE
-    lvm::volume_group { 'docker':
-        ensure           => present,
-        physical_volumes => $physical_volumes,
-        logical_volumes  => $logical_volumes,
BREAKS HERE
-      cinder_config { 'DEFAULT/rabbit_ha_queues': value => 'true' }
-       cinder_config { 'DEFAULT/rabbit_ha_queues': value => 'false' }
BREAKS HERE
-    $ensure='present',
BREAKS HERE
-      case $::operatingsystemmajrelease {
-        default: { fail("${::operatingsystemmajrelease} is not a supported Ubuntu release version!") }
BREAKS HERE
-  file { '/etc/openstack/infracloud_vanilla_cacert.pem':
-    ensure  => present,
-    owner   => 'root',
-    group   => 'root',
-    mode    => '0444',
-    content => hiera('infracloud_vanilla_ssl_cert_file_contents'),
-    require => Class['::openstack_project::puppetmaster'],
-  }
-  file { '/etc/openstack/infracloud_chocolate_cacert.pem':
-    ensure  => present,
-    owner   => 'root',
-    group   => 'root',
-    mode    => '0444',
-    content => hiera('infracloud_chocolate_ssl_cert_file_contents'),
-    require => Class['::openstack_project::puppetmaster'],
-  }
-  $infracloud_vanilla_username    = hiera('nodepool_infracloud_vanilla_username', 'username')
-  $infracloud_vanilla_password    = hiera('nodepool_infracloud_vanilla_password')
-  $infracloud_vanilla_project     = hiera('nodepool_infracloud_vanilla_project', 'project')
-  $infracloud_chocolate_username  = hiera('nodepool_infracloud_chocolate_username', 'username')
-  $infracloud_chocolate_password  = hiera('nodepool_infracloud_chocolate_password')
-  $infracloud_chocolate_project   = hiera('nodepool_infracloud_chocolate_project', 'project')
-  file { '/home/nodepool/.config/openstack/infracloud_vanilla_cacert.pem':
-    ensure  => present,
-    owner   => 'nodepool',
-    group   => 'nodepool',
-    mode    => '0600',
-    content => hiera('infracloud_vanilla_ssl_cert_file_contents'),
-    require => Class['::openstackci::nodepool'],
-  }
-  file { '/home/nodepool/.config/openstack/infracloud_chocolate_cacert.pem':
-    ensure  => present,
-    owner   => 'nodepool',
-    group   => 'nodepool',
-    mode    => '0600',
-    content => hiera('infracloud_chocolate_ssl_cert_file_contents'),
-    require => Class['::openstackci::nodepool'],
-  }
-  $infracloud_vanilla_username    = hiera('nodepool_infracloud_vanilla_username', 'username')
-  $infracloud_vanilla_password    = hiera('nodepool_infracloud_vanilla_password')
-  $infracloud_vanilla_project     = hiera('nodepool_infracloud_vanilla_project', 'project')
-  $infracloud_chocolate_username  = hiera('nodepool_infracloud_chocolate_username', 'username')
-  $infracloud_chocolate_password  = hiera('nodepool_infracloud_chocolate_password')
-  $infracloud_chocolate_project   = hiera('nodepool_infracloud_chocolate_project', 'project')
-  file { '/home/nodepool/.config/openstack/infracloud_vanilla_cacert.pem':
-    ensure  => present,
-    owner   => 'nodepool',
-    group   => 'nodepool',
-    mode    => '0600',
-    content => hiera('infracloud_vanilla_ssl_cert_file_contents'),
-    require => Class['::openstackci::nodepool_launcher'],
-  }
-  file { '/home/nodepool/.config/openstack/infracloud_chocolate_cacert.pem':
-    ensure  => present,
-    owner   => 'nodepool',
-    group   => 'nodepool',
-    mode    => '0600',
-    content => hiera('infracloud_chocolate_ssl_cert_file_contents'),
-    require => Class['::openstackci::nodepool_launcher'],
-  }
-  $infracloud_vanilla_username   = hiera('nodepool_infracloud_vanilla_username', 'username')
-  $infracloud_vanilla_password   = hiera('nodepool_infracloud_vanilla_password')
-  $infracloud_vanilla_project    = hiera('nodepool_infracloud_vanilla_project', 'project')
-  $infracloud_chocolate_username = hiera('nodepool_infracloud_chocolate_username', 'username')
-  $infracloud_chocolate_password = hiera('nodepool_infracloud_chocolate_password')
-  $infracloud_chocolate_project  = hiera('nodepool_infracloud_chocolate_project', 'project')
-  file { '/home/nodepool/.config/openstack/infracloud_vanilla_cacert.pem':
-    ensure  => present,
-    owner   => 'nodepool',
-    group   => 'nodepool',
-    mode    => '0600',
-    content => hiera('infracloud_vanilla_ssl_cert_file_contents'),
-    require => Class['::openstackci::nodepool_builder'],
-  }
-
-  file { '/home/nodepool/.config/openstack/infracloud_chocolate_cacert.pem':
-    ensure  => present,
-    owner   => 'nodepool',
-    group   => 'nodepool',
-    mode    => '0600',
-    content => hiera('infracloud_chocolate_ssl_cert_file_contents'),
-    require => Class['::openstackci::nodepool_builder'],
-  }
-# Node-OS: trusty
-node 'controller00.vanilla.ic.openstack.org' {
-  $group = 'infracloud'
-  class { '::openstack_project::server':
-    iptables_public_tcp_ports => [80,5000,5671,8774,9292,9696,35357], # logs,keystone,rabbit,nova,glance,neutron,keystone
-    sysadmins                 => hiera('sysadmins', []),
-    enable_unbound            => false,
-    purge_apt_sources         => false,
-  }
-  class { '::openstack_project::infracloud::controller':
-    keystone_rabbit_password         => hiera('keystone_rabbit_password'),
-    neutron_rabbit_password          => hiera('neutron_rabbit_password'),
-    nova_rabbit_password             => hiera('nova_rabbit_password'),
-    root_mysql_password              => hiera('infracloud_mysql_password'),
-    keystone_mysql_password          => hiera('keystone_mysql_password'),
-    glance_mysql_password            => hiera('glance_mysql_password'),
-    neutron_mysql_password           => hiera('neutron_mysql_password'),
-    nova_mysql_password              => hiera('nova_mysql_password'),
-    keystone_admin_password          => hiera('keystone_admin_password'),
-    glance_admin_password            => hiera('glance_admin_password'),
-    neutron_admin_password           => hiera('neutron_admin_password'),
-    nova_admin_password              => hiera('nova_admin_password'),
-    keystone_admin_token             => hiera('keystone_admin_token'),
-    ssl_key_file_contents            => hiera('ssl_key_file_contents'),
-    ssl_cert_file_contents           => hiera('infracloud_vanilla_ssl_cert_file_contents'),
-    br_name                          => hiera('bridge_name'),
-    controller_public_address        => $::fqdn,
-    neutron_subnet_cidr              => '15.184.64.0/19',
-    neutron_subnet_gateway           => '15.184.64.1',
-    neutron_subnet_allocation_pools  => [
-                                          'start=15.184.65.2,end=15.184.65.254',
-                                          'start=15.184.66.2,end=15.184.66.254',
-                                          'start=15.184.67.2,end=15.184.67.254'
-                                        ],
-    mysql_max_connections            => hiera('mysql_max_connections'),
-  }
-}
-
-node /^compute\d{3}\.vanilla\.ic\.openstack\.org$/ {
-  $group = 'infracloud'
-  class { '::openstack_project::server':
-    sysadmins                 => hiera('sysadmins', []),
-    enable_unbound            => false,
-    purge_apt_sources         => false,
-  }
-  class { '::openstack_project::infracloud::compute':
-    nova_rabbit_password             => hiera('nova_rabbit_password'),
-    neutron_rabbit_password          => hiera('neutron_rabbit_password'),
-    neutron_admin_password           => hiera('neutron_admin_password'),
-    ssl_key_file_contents            => hiera('ssl_key_file_contents'),
-    ssl_cert_file_contents           => hiera('infracloud_vanilla_ssl_cert_file_contents'),
-    br_name                          => hiera('bridge_name'),
-    controller_public_address        => 'controller00.vanilla.ic.openstack.org',
-  }
-}
-
-# Node-OS: trusty
-node 'controller00.chocolate.ic.openstack.org' {
-  $group = 'infracloud'
-  class { '::openstack_project::server':
-    iptables_public_tcp_ports => [80,5000,5671,8774,9292,9696,35357], # logs,keystone,rabbit,nova,glance,neutron,keystone
-    sysadmins                 => hiera('sysadmins', []),
-    enable_unbound            => false,
-    purge_apt_sources         => false,
-  }
-  class { '::openstack_project::infracloud::controller':
-    keystone_rabbit_password         => hiera('keystone_rabbit_password'),
-    neutron_rabbit_password          => hiera('neutron_rabbit_password'),
-    nova_rabbit_password             => hiera('nova_rabbit_password'),
-    root_mysql_password              => hiera('infracloud_mysql_password'),
-    keystone_mysql_password          => hiera('keystone_mysql_password'),
-    glance_mysql_password            => hiera('glance_mysql_password'),
-    neutron_mysql_password           => hiera('neutron_mysql_password'),
-    nova_mysql_password              => hiera('nova_mysql_password'),
-    keystone_admin_password          => hiera('keystone_admin_password'),
-    glance_admin_password            => hiera('glance_admin_password'),
-    neutron_admin_password           => hiera('neutron_admin_password'),
-    nova_admin_password              => hiera('nova_admin_password'),
-    keystone_admin_token             => hiera('keystone_admin_token'),
-    ssl_key_file_contents            => hiera('infracloud_chocolate_ssl_key_file_contents'),
-    ssl_cert_file_contents           => hiera('infracloud_chocolate_ssl_cert_file_contents'),
-    br_name                          => 'br-vlan2551',
-    controller_public_address        => $::fqdn,
-    neutron_subnet_cidr              => '15.184.64.0/19',
-    neutron_subnet_gateway           => '15.184.64.1',
-    neutron_subnet_allocation_pools  => [
-                                          'start=15.184.68.2,end=15.184.68.254',
-                                          'start=15.184.69.2,end=15.184.69.254',
-                                          'start=15.184.70.2,end=15.184.70.254'
-                                        ]
-  }
-}
-
-node /^compute\d{3}\.chocolate\.ic\.openstack\.org$/ {
-  $group = 'infracloud'
-  class { '::openstack_project::server':
-    sysadmins                 => hiera('sysadmins', []),
-    enable_unbound            => false,
-    purge_apt_sources         => false,
-  }
-  class { '::openstack_project::infracloud::compute':
-    nova_rabbit_password             => hiera('nova_rabbit_password'),
-    neutron_rabbit_password          => hiera('neutron_rabbit_password'),
-    neutron_admin_password           => hiera('neutron_admin_password'),
-    ssl_key_file_contents            => hiera('infracloud_chocolate_ssl_key_file_contents'),
-    ssl_cert_file_contents           => hiera('infracloud_chocolate_ssl_cert_file_contents'),
-    br_name                          => 'br-vlan2551',
-    controller_public_address        => 'controller00.chocolate.ic.openstack.org',
-  }
-}
-
-# Node-OS: trusty
-# Upgrade-Modules
-node /^baremetal\d{2}\.vanilla\.ic\.openstack\.org$/ {
-  $group = 'infracloud'
-  class { '::openstack_project::server':
-    iptables_public_udp_ports => [67,69],
-    sysadmins                 => hiera('sysadmins', []),
-    enable_unbound            => false,
-    purge_apt_sources         => false,
-  }
-
-  class { '::openstack_project::infracloud::baremetal':
-    ironic_inventory          => hiera('ironic_inventory', {}),
-    ironic_db_password        => hiera('ironic_db_password'),
-    mysql_password            => hiera('bifrost_mysql_password'),
-    ipmi_passwords            => hiera('ipmi_passwords'),
-    ssh_private_key           => hiera('bifrost_vanilla_ssh_private_key'),
-    ssh_public_key            => hiera('bifrost_vanilla_ssh_public_key'),
-    bridge_name               => hiera('bridge_name'),
-    vlan                      => hiera('vlan'),
-    gateway_ip                => hiera('gateway_ip'),
-    default_network_interface => hiera('default_network_interface'),
-    dhcp_pool_start           => hiera('dhcp_pool_start'),
-    dhcp_pool_end             => hiera('dhcp_pool_end'),
-    network_interface         => hiera('network_interface'),
-    ipv4_nameserver           => hiera('ipv4_nameserver'),
-    ipv4_subnet_mask          => hiera('ipv4_subnet_mask'),
-  }
-}
-
BREAKS HERE
-#  [*size*]
-#    (optional) Defaults to '10M'.
-#    Configures the logrotate size parameter.
-#
-#  [*rotate*]
-#    (optional) Defaults to 14.
-#    Configures the logrotate rotate parameter.
-#
-  $delaycompress    = true,
-  $compress         = true,
-  $size             = '10M',
BREAKS HERE
-        require_package('mpt-status')
BREAKS HERE
-        # halfak wants make to manage dependencies
-        'make',
-        # for checking up on eventlogging
-        'zpubsub',
-        # libwww-perl for wikistats stuff
-        'libwww-perl',
-        'libboost-regex-dev',  # Ironholds wants these
-        'openjdk-7-jdk'
-        'r-base',
-        'r-cran-rmysql',
BREAKS HERE
-              };
BREAKS HERE
-  include ::icinga2::params
BREAKS HERE
-    # Starts a dispatcher instance every 3 minutes
-    # They will run for a maximum of about 10 minutes, so we can only have 4 concurrent instances.
-    # This handles inserting jobs into client job queue, which then process the changes
-    # This will process up to --batch-size * (60 / --dispatch-interval) changes per minute,
-    # to a single wiki (only counting changes that affect the wiki).
BREAKS HERE
-  $hiera_version = '1.3.1-1puppetlabs1',
BREAKS HERE
-        $php_module = 'php7'
BREAKS HERE
-  validate_array($assign)
-  validate_array($ignore)
-  if $groups { validate_array($groups) }
-    groups         => $groups,
BREAKS HERE
-      command     => "find ${image_log_document_root} -name '*.log' -mtime +7 -execdir rm {} \\;",
BREAKS HERE
-    $maintenance_work_mem = hiera('profile::maps::postgresql_common::maintenance_work_mem', '4GB')
-    file { '/etc/postgresql/9.4/main/tuning.conf':
-    file { '/var/log/postgresql/postgresql-9.4-main.log':
BREAKS HERE
-  exec { "/var/lib/cacti/linux_host.xml":
BREAKS HERE
-    websocket_port         => true,
BREAKS HERE
-        /(^8\..*|^14\.04.*|^16\.04.*)/ : {
BREAKS HERE
-  
-  # The new nokogiri won't run on RHEL or CentOS. Because reasons.
-  
BREAKS HERE
-    home   => $home_path,
-    root   => $root_path,
BREAKS HERE
-    include sysctlfile::high-http-performance
BREAKS HERE
-  $home    = "/home/$user",
BREAKS HERE
-# Automagically sets RPS (and optionally, RSS) for an interface
-#   Optional RSS IRQ name pattern
-#   If set (to hw-specific value), RSS will be enabled as well
-#   Must contain a single "%d" format character for the queue number
-#   (on bnx2x, this would be "eth0-fp-%d")
BREAKS HERE
-  $path     = "${log_dir}/debug.log",
BREAKS HERE
-      $web_server_package_require = [Package["${::graphite::params::web_server_pkg}"]]
-      $web_server_package_require = [Package["${::graphite::params::web_server_pkg}"]]
BREAKS HERE
-  include ::infracloud::veth
BREAKS HERE
-    include contint::proxy_zuul
-
BREAKS HERE
-
-      $graphitepkgs = [
-        'Django14',
-        'MySQL-python',
-        'bitmap',
-        'bitmap-fonts-compat',
-        'gcc',
-        'pyOpenSSL',
-        'pycairo',
-        'python-crypto',
-        'python-ldap',
-        'python-memcached',
-        'python-psycopg2',
-        'python-sqlite2',
-        'python-zope-interface',
-      ]
BREAKS HERE
-    check_command       => 'check_graphite_metric_since!hitcount(sumSeries(stats.govuk.app.frontend.*.request.exit.404),"5minutes")!5minutes!50!100',
BREAKS HERE
-    # Set up aliases for Tools database server.
-    host { 'tools.labsdb':
-        ensure       => present,
-        host_aliases => 'tools-db',
-        ip           => '10.64.37.9',
-    }
-
-    host { 'tools-redis':
-        ensure       => present,
-        host_aliases => 'tools-redis.eqiad.wmflabs',
-        ip           => ipresolve($active_redis, 4, $::nameservers[0]),
-    }
BREAKS HERE
-    include role::backup::host
BREAKS HERE
-  vcsrepo { '/srv/askbot-site/themes':
-    ensure   => latest,
-    provider => git,
-    revision => 'feature/development',
-    source   => 'https://git.openstack.org/openstack-infra/askbot-theme',
-    require  => [
-    before   => Exec['askbot-syncdb'],
-    notify   => [
-    require => Vcsrepo['/srv/askbot-site/themes'],
BREAKS HERE
-  Optional[Stdlib::Ensure::Service]     $port          = undef,
BREAKS HERE
-          $apache_24          = false
-          $graphitepkgs       = union($common_os_pkgs, ['python-cairo',])
-          $libpath            = "/usr/lib/python${pyver}/dist-packages"
-          $apache_24          = true
-          $graphitepkgs       = union($common_os_pkgs, ['python-cairo',])
-          $libpath            = "/usr/lib/python${pyver}/dist-packages"
-          $apache_24          = true
-          $graphitepkgs       = union($common_os_pkgs, ['python-cairo',])
-          $libpath            = "/usr/local/lib/python${pyver}/dist-packages"
BREAKS HERE
-			source => "puppet://$servername/munin/empty",
BREAKS HERE
-  # FIXME Please remove resource once merged
-  file { '/var/lock/mongodb-s3backup':
-    ensure => absent,
-  }
-
BREAKS HERE
-    include ::statistics::web
-    include ::statistics::sites::metrics
-    include ::statistics::sites::stats
-    include ::statistics::sites::analytics
-    include ::statistics::sites::yarn
-    include ::statistics::sites::pivot
-    include ::statistics::sites::hue
BREAKS HERE
-  include puppet::params
-  $servername     = pick($::puppet::server::servername, $::clientcert, $::fqdn)
-  $unicorn_socket = "unix:${puppet::params::puppet_rundir}/puppetmaster_unicorn.sock"
-    server_name          => [$servername],
-    ssl_cert             => "${::puppet::ssldir}/certs/${servername}.pem",
-    ssl_key              => "${::puppet::ssldir}/private_keys/${servername}.pem",
-    ssl_ciphers          => $::puppet::server::ssl_ciphers,
-    ssl_protocols        => $::puppet::server::ssl_protocols,
-      ssl_crl                => "${::puppet::ssldir}/crl.pem",
-      ssl_client_certificate => "${::puppet::ssldir}/certs/ca.pem",
-        proxy_pass            => $::puppet::server::external_ca,
-    approot     => $::puppet::params::puppet_confdir,
-    config_file => "${::puppet::params::puppet_confdir}/unicorn.conf",
-    pidfile     => "${::puppet::params::puppet_rundir}/puppetmaster_unicorn.pid",
-    logdir      => $::puppet::params::puppet_logdir,
-    user        => 'puppet',
-    group       => 'puppet',
BREAKS HERE
-    # TODO(ccamacho): remove sprintf once we properly type the port, needs
-    # to be a string for the os_transport_url function.
BREAKS HERE
-    gerrit_server                  => 'review.openstack.org',
-    gerrit_user                    => 'jenkins',
-    gerrit_ssh_host_key            => hiera('gerrit_ssh_rsa_pubkey_contents'),
-    zuul_ssh_private_key           => hiera('zuul_ssh_private_key_contents'),
-    url_pattern                    => 'http://logs.openstack.org/{build.parameters[LOG_PATH]}',
-    swift_authurl                  => 'https://identity.api.rackspacecloud.com/v2.0/',
-    swift_user                     => 'infra-files-rw',
-    swift_key                      => hiera('infra_files_rw_password'),
-    swift_tenant_name              => 'openstackjenkins',
-    swift_region_name              => 'DFW',
-    swift_default_container        => 'infra-files',
-    swift_default_logserver_prefix => 'http://logs.openstack.org/',
-    zuul_url                       => 'http://zuul.openstack.org/p',
-    sysadmins                      => hiera('sysadmins'),
-    statsd_host                    => 'graphite.openstack.org',
-    gearman_workers                => [
BREAKS HERE
-            command     => "${env} && ${refinery_path}/bin/refinery-drop-druid-snapshots -d ${mediawiki_history_reduced_basename} -t ${public_druid_host} -s ${keep_snapshots} -f ${public_druid_snapshots_log_file}",
BREAKS HERE
-        # we need kilo repo to be installed for dependencies
-        'rdo-kilo'    => {
-          'baseurl'  => 'https://repos.fedorapeople.org/repos/openstack/openstack-kilo/el7/',
-          'descr'    => 'RDO kilo',
-        'rdo-liberty' => {
-          'baseurl'  => 'http://trunk.rdoproject.org/centos7/current/',
-          'descr'    => 'RDO trunk',
BREAKS HERE
-        ensure => running,
BREAKS HERE
-    git::clone { 'mediawiki/core':
-        require => Git::Clone['mediawiki/core'],
-        require => Git::Clone['mediawiki/core'],
-        subscribe   => Git::Clone['mediawiki/core'],
-        before      => Git::Clone['mediawiki/extensions'],
-    git::clone { 'mediawiki/extensions':
-        require            => Git::Clone['mediawiki/core'],
-        require => Git::Clone['mediawiki/core'],
-    git::clone { 'mediawiki/skins':
-        require   => Git::Clone['mediawiki/core'],
BREAKS HERE
-		debian: {	$munin_node_service = "munin-node"; }
-		gentoo: {	$munin-node_service = "munin"; }
-		gentoo: {	$munin_node_service = "munin"; }
-		debian: {	$munin_node_service = "munin-node"; }
-				mode => 0755, owner => root, group => root;
-				mode => 0644, owner => root, group => root;
BREAKS HERE
-      gpgkey         => 'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL',
-      gpgkey         => 'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL',
-      gpgkey         => 'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL',
-      gpgkey         => 'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL',
-      gpgkey         => 'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL',
-      gpgkey         => 'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL',
-  if versioncmp($::operatingsystemmajrelease,'6') < 0 {
-    $osversion_repos = {
-      'addons' => {
-        descr         => 'CentOS-$releasever - Addons',
-        mirrorlist    => 'http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=addons',
-        enabled       => 1,
-        gpgcheck      => 1,
-        gpgkey        => "file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-${::operatingsystemmajrelease}",
-        manage_gpgkey => false,
-        priority      => 1 ,
-      },
-    }
-    # sometimes yum-cron does not clean up things properly on EL5,
-    # so we enforce some cleanup here
-    tidy {
-      '/var/lock':
-        age     => '2d',
-        recurse => 1,
-        matches => ['yum-cron.lock'],
-        rmdirs  => true,
-        type    => ctime,
-    }
-  } else {
-    $osversion_repos = {
-      'nux-dextop' => {
-        descr    => 'Nux.Ro RPMs for general desktop use',
-        baseurl  => 'http://li.nux.ro/download/nux/dextop/el$releasever/$basearch/ http://mirror.li.nux.ro/li.nux.ro/nux/dextop/el$releasever/$basearch/',
-        enabled  => 1,
-        gpgcheck => 1,
-        gpgkeyid => '85C6CD8A',
-        gpgkey   => 'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-nux.ro',
-        protect  => 0,
-        priority => 30,
-      },
-      'nux-dextop-testing' => {
-        descr    => 'Nux.Ro RPMs for general desktop use - testing',
-        baseurl  => 'http://li.nux.ro/download/nux/dextop-testing/el$releasever/$basearch/',
-        enabled  => 0,
-        gpgcheck => 1,
-        gpgkey   => 'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-nux.ro',
-        protect  => 0,
-        priority => 30,
-      },
-    }
-  }
-
BREAKS HERE
-
-  # Ensure the loopback device and volume group are restored if the system
-  # were to reboot.
-  -> exec { "losetup -f ${volume_path}/${volume_name} && udevadm settle && vgchange -a y ${volume_name}":
-    path   => ['/bin','/usr/bin','/sbin','/usr/sbin'],
-    unless => "losetup -l | grep ${volume_path}/${volume_name}",
-    before => Anchor['cinder::service::begin'],
-  }
BREAKS HERE
-        before    => Exec['generate varnish.pyconf'],
-
-    # Restart gmond if this varnish instance has been (re)started later
-    # than gmond was started
-    exec { "restart gmond for varnish${instancesuffix}":
-        path    => '/bin:/usr/bin',
-        command => 'true',
-        onlyif  => "test /var/run/varnishd${instancesuffix}.pid -nt /var/run/gmond.pid",
-        notify  => Service['gmond'],
-    }
BREAKS HERE
-        'puppetmaster',
-        'puppetmaster-common',
BREAKS HERE
-    # --randomness should always be roughly #processes + 2 (it needs to be > #processes,
-    # but making it too large will hinder the most lagged wikis from getting priority).
-        command => "echo \"\$\$: Starting dispatcher\" >> ${dispatch_log_file}; /usr/local/bin/mwscript extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki --max-time 540 --batch-size 420 --dispatch-interval 25 --randomness 15 >> ${dispatch_log_file} 2>&1; echo \"\$\$: Dispatcher exited with $?\" >> ${dispatch_log_file}",
BREAKS HERE
-  $router_nodes,
BREAKS HERE
-    fail '$director_server cannot be empty'
-    fail '$storage_server cannot be empty'
-      fail '$director_password cannot be empty'
-      fail '$console_password cannot be empty'
-    fail '$db_database cannot be empty'
-      fail '$db_host cannot be empty'
-      fail '$db_user cannot be empty'
-      fail '$db_port must be a port number'
-      fail '$db_password cannot be empty'
BREAKS HERE
-    sysadmins           => hiera('sysadmins', []),
BREAKS HERE
-    # google-perftools includes `pprof` (aliased as `google-pprof`),
-    # which can generate useful reports from jemalloc heap dumps.
-    # The gv and graphiz packages enable pprof to generate PDF and SVG
-    # reports of things like call graphs.
-    #
-    # `apache2-utils` provides `ab`, an HTTP server benchmarking tool.
-
-    package { [ 'google-perftools', 'graphviz', 'gv', 'apache2-utils' ]:
BREAKS HERE
-#   nodes.
-        resource_params => "set_policy='ha-all ^(?!amq\\.).* {\"ha-mode\":\"exactly\",\"ha-params\":${nr_ha_queues}}'",
BREAKS HERE
-            # Should the ssl_certificate use a chained cert?
-            $chained = $ca_name ? {
-                undef   => '',
-                default => '.chained'
-            }
-        }
-        else {
-            # Don't use a chained cert for snakeoil
-            $chained = ''
-        $ssl_certificate = $certificate_name ? {
-            default             => "/etc/ssl/localcerts/${certificate_name}${chained}.crt",
-                "ssl_certificate     ${ssl_certificate};",
-        content => template('nginx/sites/force-https.erb'),
BREAKS HERE
-        log_updates    => false,  # Don't log Whisper updates.
-        user           => undef,  # Don't suid; Upstart will do it for us.
-        conf_dir       => '/etc/carbon',
-        log_dir        => '/var/log/carbon',
-        pid_dir        => '/var/run/carbon',
-        storage_dir    => $storage_dir,
-        whitelists_dir => "${storage_dir}/lists",
-        local_data_dir => "${storage_dir}/whisper",
BREAKS HERE
-    require base::remote-syslog
-
-    file { '/etc/rsyslog.d/40-appserver.conf':
-        ensure  => present,
-        require => Package[rsyslog],
-        owner   => root,
-        group   => root,
-        content => template('rsyslog/40-appserver.conf.erb'),
-    file { '/usr/local/bin/apache-syslog-rotate':
-        ensure => present,
-        owner  => root,
-        group  => root,
-        mode   => '0555',
-        source => 'puppet:///files/misc/scripts/apache-syslog-rotate',
BREAKS HERE
-        command => "/usr/bin/python $clone_dir/nightly.py --all --skins",
BREAKS HERE
-	$binline = "deb $uri $dist $components\n"
-		true    => "deb-src $uri $dist $components\n",
-	file { "/etc/apt/sources.list.d/$name.list":
-		ensure	=> $ensure,
-		owner	=> root,
-		group	=> root,
-		mode 	=> '0444',
-		content	=> "${binline}${srcline}",
-		$binre = "deb(-src)?\s+$escuri\s+$dist\s+$components"
-		exec { "apt-$name-sources":
-			command => "/bin/sed -ri '/$binre/s/^deb/#deb/' /etc/apt/sources.list",
-			creates => "/etc/apt/sources.list.d/$name.list",
-			before  => File["/etc/apt/sources.list.d/$name.list"],
-		file { "/var/lib/apt/keys/$name.gpg":
-			ensure	=> present,
-			owner	=> root,
-			group	=> root,
-			mode	=> '0400',
-			source	=> $keyfile,
-			require	=> File['/var/lib/apt/keys']
-		exec { "/usr/bin/apt-key add /var/lib/apt/keys/$name.gpg":
-			subscribe => File["/var/lib/apt/keys/$name.gpg"],
BREAKS HERE
-    notice($send_logs_to_logstash)
BREAKS HERE
-    file { '/srv/ores':
-        ensure => directory,
-        owner  => 'www-data',
-        group  => 'www-data',
-        mode   => '0775',
-    }
-
-        before    => Class['ores::config'],
BREAKS HERE
-    "${::graphite::params::apacheconf_dir}/${::graphite::gr_apache_conf_prefix}graphite.conf":
-        require => File["/etc/apache2/sites-available/${::graphite::gr_apache_conf_prefix}graphite.conf"],
BREAKS HERE
-  rbenv::version { '2.1.10':
-    bundler_version => '1.15.1',
-  }
-    to_version => '2.1.10',
-  rbenv::version { '2.2.7':
-    bundler_version => '1.15.1',
-  }
-    to_version => '2.2.7',
-  rbenv::version { '2.3.4':
-    bundler_version => '1.15.1',
-  }
-    to_version => '2.3.4',
-  rbenv::version { '2.4.1':
-    bundler_version => '1.15.1',
-  }
-    to_version => '2.4.1',
BREAKS HERE
-  $gssapi_authentication          = $::ssh::params::gssapi_authentication 
BREAKS HERE
-        default => $package_name_4x,
BREAKS HERE
-        $patternslist = ['.*-pages-articles[0-9]+.xml.*(bz2|7z)',
-                        '.*-pages-meta-current[0-9]+.xml.*(bz2|7z)',
-                        '.*-pages-meta-history[0-9]+.xml.*(bz2|7z)',
BREAKS HERE
-# helper scripts for Labs openstack administration
-    file { '/root/cold-nova-migrate':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/cold-nova-migrate",
-    file { '/root/region-migrate':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/region-migrate",
-    file { '/root/region-migrate-security-groups':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/region-migrate-security-groups",
-    file { '/root/live-migrate':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/live-migrate",
-    file { '/root/nova-quota-sync':
-    file { '/root/nova-quota-sync/nova-quota-sync':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/nova-quota-sync/nova-quota-sync",
-    file { '/root/nova-quota-sync/readme.md':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/nova-quota-sync/readme.md",
-    file { '/root/prod-example.sh':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/prod.sh",
-    file { '/root/novastats':
-        ensure => 'directory',
-        owner  => 'root',
-    }
-
-    file { '/root/novastats/imagestats.py':
-        source  => "puppet:///modules/openstack/${version}/admin_scripts/novastats/imagestats.py",
-        require => File['/root/novastats'],
-    file { '/root/novastats/capacity.py':
-        source  => "puppet:///modules/openstack/${version}/admin_scripts/novastats/capacity.py",
-        require => File['/root/novastats'],
-    file { '/root/novastats/dnsleaks.py':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/novastats/dnsleaks.py",
-    file { '/root/novastats/proxyleaks.py':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/novastats/proxyleaks.py",
-    file { '/root/novastats/puppetleaks.py':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/novastats/puppetleaks.py",
-    file { '/root/novastats/flavorreport.py':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/novastats/flavorreport.py",
-    file { '/root/novastats/alltrusty.py':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/novastats/alltrusty.py",
-    file { '/usr/local/sbin/wikitech-grep':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/wikitech-grep.py",
-    file { '/root/cold-migrate':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/cold-migrate",
-    file { '/usr/local/sbin/wikireplica_dns':
-        source => 'puppet:///modules/openstack/util/wikireplica_dns.py',
-    file { '/root/makedomain':
-        source => "puppet:///modules/openstack/${version}/admin_scripts/makedomain",
-    file { '/usr/local/sbin/webproxy':
-        source => 'puppet:///modules/openstack/util/webproxy.py',
-    file { '/root/updateproxies':
-        source => 'puppet:///modules/openstack/util/updateproxies.py',
-    file { '/usr/local/sbin/openstack-cvps':
-        source => 'puppet:///modules/openstack/util/openstack-cvps.sh',
BREAKS HERE
-#                                  Example: {trusted_node_data => true, stringify_facts => true, ordering => 'manifest'}
BREAKS HERE
-  $enable_v6      = false ) {
-  iptables::debug{ "debug params $name":
-    true_port            => $true_port,
-    true_protocol        => $true_protocol,
-    array_source_v6      => $array_source_v6,
-    array_destination_v6 => $array_destination_v6, 
-    array_source         => $array_source,
-    array_destination    => $array_destination, 
BREAKS HERE
-        command     => '/usr/sbin/service procps start',
BREAKS HERE
-  }
BREAKS HERE
-    $centralauthdir           = '/data/xmldatadumps/private/centralauth'
-        owner  => $user,
-        group  => $group,
-        owner  => $user,
-        group  => $group,
-        owner  => $user,
-        group  => $group,
-        owner  => $user,
-        group  => $group,
-        owner  => $user,
-        group  => $group,
-        owner  => $user,
-        group  => $group,
-        owner  => $user,
-        group  => $group,
-        owner  => $user,
-        group  => $group,
-        owner  => $user,
-        group  => $group,
-    }
-
-    file { $centralauthdir:
-        ensure => 'directory',
-        mode   => '0755',
-        owner  => $user,
-        group  => $group,
BREAKS HERE
-        command => "/bin/cat /var/lib/puppet/ssl/certs/${::fqdn}.pem \
- /var/lib/puppet/ssl/private_keys/${::fqdn}.pem > \
BREAKS HERE
-      'DEFAULT/rabbit_password':     value => $rabbit_password, secret => true;
-      'DEFAULT/rabbit_userid':       value => $rabbit_userid;
-      'DEFAULT/rabbit_virtual_host': value => $rabbit_virtual_host;
-      'DEFAULT/rabbit_use_ssl':      value => $rabbit_use_ssl;
-      manila_config { 'DEFAULT/rabbit_hosts':     value => join($rabbit_hosts, ',') }
-      manila_config { 'DEFAULT/rabbit_ha_queues': value => true }
-      manila_config { 'DEFAULT/rabbit_host':      value => $rabbit_host }
-      manila_config { 'DEFAULT/rabbit_port':      value => $rabbit_port }
-      manila_config { 'DEFAULT/rabbit_hosts':     value => "${rabbit_host}:${rabbit_port}" }
-      manila_config { 'DEFAULT/rabbit_ha_queues': value => false }
-        manila_config { 'DEFAULT/kombu_ssl_ca_certs': value => $kombu_ssl_ca_certs; }
-        manila_config { 'DEFAULT/kombu_ssl_ca_certs': ensure => absent; }
-          'DEFAULT/kombu_ssl_certfile': value => $kombu_ssl_certfile;
-          'DEFAULT/kombu_ssl_keyfile':  value => $kombu_ssl_keyfile;
-          'DEFAULT/kombu_ssl_certfile': ensure => absent;
-          'DEFAULT/kombu_ssl_keyfile':  ensure => absent;
-        manila_config { 'DEFAULT/kombu_ssl_version':  value => $kombu_ssl_version; }
-        manila_config { 'DEFAULT/kombu_ssl_version':  ensure => absent; }
-        'DEFAULT/kombu_ssl_ca_certs': ensure => absent;
-        'DEFAULT/kombu_ssl_certfile': ensure => absent;
-        'DEFAULT/kombu_ssl_keyfile':  ensure => absent;
-        'DEFAULT/kombu_ssl_version':  ensure => absent;
BREAKS HERE
-            { module=>'Log::Report', ignore_testfailure=>1 },           #XXX_TODO fails on 5.19.11
BREAKS HERE
-  file { '/var/lib/zuul/www/jquery-visibility.min.js':
-    ensure  => link,
-    target  => '/opt/jquery-visibility/jquery-visibility.min.js',
-    require => [File['/var/lib/zuul/www'],
-                Vcsrepo['/opt/jquery-visibility']],
BREAKS HERE
-  
BREAKS HERE
-  internal_address => get_network_role_property('mgmt/corosync', 'ipaddr'),
-  corosync_nodes   => $corosync_nodes,
BREAKS HERE
-    file { '/usr/share/varnish/tests/':
BREAKS HERE
-        use_ipv6 => true,
BREAKS HERE
-    notify    => Service[$php::params::fpm_service_n]
BREAKS HERE
-  $admin_redirect = $app_domain ? {
-
-  nginx::config::vhost::redirect {
-    "backdrop-admin.${app_domain}" :
-    to => $admin_redirect
-
-
-
-
BREAKS HERE
-  include ::ssh::server
-
-  if $bannertext {
-  if $motd {
BREAKS HERE
-  $st2_client_packages = [
-    'python-st2client',
-  ]
BREAKS HERE
-        command     => "${env} && /usr/bin/python3 ${profile::analytics::refinery::path}/bin/sqoop-mediawiki-tables -j sqoop-mediawiki-monthly-$(/bin/date --date=\"$(/bin/date +\\%Y-\\%m-15) -1 month\" +'\\%Y-\\%m') -l -H ${labs_db_host} -d ${$output_directory_labs} -w ${wiki_file_labs} -t archive,ipblocks,logging,page,pagelinks,redirect,revision,user,user_groups -u ${labs_db_user} -p ${db_password_labs} -F 20010101000000 -T \$(/bin/date '+\\%Y\\%m01000000') -s snapshot -x \$(/bin/date --date=\"$(/bin/date +\\%Y-\\%m-15) -1 month\" +'\\%Y-\\%m') -m ${num_mappers} -a avrodata -k ${num_processors} -o ${labs_log_file}",
-        command     => "${env} && /usr/bin/python3 ${profile::analytics::refinery::path}/bin/sqoop-mediawiki-tables -j sqoop-mediawiki-monthly-private-$(/bin/date --date=\"$(/bin/date +\\%Y-\\%m-15) -1 month\" +'\\%Y-\\%m') -H ${private_db_host} -d ${$output_directory_private} -w ${wiki_file_private} -t cu_changes -u ${private_db_user} -p ${db_password_private} -F \$(/bin/date --date=\"$(/bin/date +\\%Y-\\%m-15) -1 month\" +'\\%Y\\%m01000000') -T \$(/bin/date '+\\%Y\\%m01000000') -s month -x \$(/bin/date --date=\"$(/bin/date +\\%Y-\\%m-15) -1 month\" +'\\%Y-\\%m') -m ${num_mappers} -a avrodata -k ${num_processors} -o ${private_log_file}",
BREAKS HERE
-  $ensure                 = present,
-  $parent_host_name       = undef,
-  $parent_service_name    = undef,
-  $child_host_name        = undef,
-  $child_service_name     = undef,
-  $disable_checks         = undef,
-  $disable_notifications  = undef,
-  $ignore_soft_states     = undef,
-  $period                 = undef,
-  $states                 = undef,
-  $apply                  = false,
-  $apply_target           = 'Host',
-  $assign                 = [],
-  $ignore                 = [],
-  $import                 = [],
-  $template               = false,
-  $target                 = undef,
-  $order                  = '70',
-  validate_string ( $parent_host_name )
-  validate_string ( $child_host_name )
-    'parent_host_name' => $parent_host_name,
-    'parent_service_name' => $parent_service_name,
-    'child_host_name' => $child_host_name,
-    'child_service_name' => $child_service_name,
-    'disable_checks' => $disable_checks,
-    'ignore_soft_states' => $ignore_soft_states,
-    'period' => $period,
-    'states' => $states,
-    object_name  => $name,
BREAKS HERE
-    # lint:ignore:arrow_alignment
-    # TODO: convert to systemd::service
-    base::service_unit { 'otrs-daemon':
-        ensure  => present,
-        systemd => systemd_template('otrs-daemon'),
-        refresh => true,
-            enable     => true,
-    # lint:endignore
BREAKS HERE
-        fail('having $gr_web_server => \'wsgionly\' requires use of $gr_web_user and $gr_web_group')
BREAKS HERE
-        ensure => 'present',
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0555',
-        source => "puppet:///modules/openstack/${version}/admin_scripts/wmcs-nova-quota-sync/readme.md",
-        ensure  => 'present',
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0755',
-        source  => "puppet:///modules/openstack/${version}/admin_scripts/novastats/wmcs-novastats-imagestats.py",
-        require => File['/usr/local/sbin/wmcs-novastats'],
-        ensure  => 'present',
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0755',
-        source  => "puppet:///modules/openstack/${version}/admin_scripts/novastats/wmcs-novastats-capacity.py",
-        require => File['/usr/local/sbin/wmcs-novastats'],
BREAKS HERE
-    shell   => '/sbin/nologin',
BREAKS HERE
-        $listen_options_real = merge($tls_listen_options, $listen_options)
-        $listen_options_real = $listen_options
-      $listen_options_real = $listen_options
-    $listen_options_real = $listen_options
BREAKS HERE
-  $node_name            = $::icinga2::_constants['NodeName']
BREAKS HERE
-    warning   => to_bytes('8 MB'),
-    critical  => to_bytes('16 MB'),
BREAKS HERE
-  include apache
-  include apache::mod::wsgi
-  if ! defined(A2mod['rewrite']) {
-    a2mod { 'rewrite':
-      ensure => present,
-  }
-  if ! defined(A2mod['proxy']) {
-    a2mod { 'proxy':
-      ensure => present,
-  }
-  if ! defined(A2mod['proxy_http']) {
-    a2mod { 'proxy_http':
-      ensure => present,
-  apache::vhost { "logs.${domain}":
-    port     => 80,
-    priority => '50',
-    docroot  => '/srv/static/logs',
-    require  => File['/srv/static/logs'],
-    template => 'openstackci/logs.vhost.erb',
-  }
-
-  apache::vhost { "logs-dev.${domain}":
-    port     => 80,
-    priority => '51',
-    docroot  => '/srv/static/logs',
-    require  => File['/srv/static/logs'],
-    template => 'openstackci/logs-dev.vhost.erb',
-  }
-
BREAKS HERE
-#  [*copytruncate*]
-#    (optional) Defaults to True.
-#    Configures the logrotate copytruncate parameter.
-#
-#    (optional) Defaults to 'hourly'.
-#    (optional) Defaults to 336 (corresponds to 14 days).
-  $copytruncate     = true,
-  $rotation         = 'hourly',
-  $rotate           = 336,
BREAKS HERE
-#   Username for Cinder v2 service. Optional. Defaults to 'cinder2'.
-  keystone::resource::service_identity { $auth_name:
-    service_name        => $auth_name,
-  keystone::resource::service_identity { $auth_name_v2:
-    service_name        => $auth_name_v2,
BREAKS HERE
-#  notify{"server": message => "executing dynatrace::role::server  do_pwh_connection=${do_pwh_connection}"; }
-    
-
-  $installation_info_step_1 = "copy_or_download_file=${installer_cache_dir}/${installer_file_name}"
-  if $install_server__copy_or_download =='not there' {
-    $executed_installation_step_1 = 'true'
-    notify {"STEP 1 : dynatrace::resource::copy_or_download_file": }
-    dynatrace::resource::copy_or_download_file { "Copy or download the ${role_name} installer":
-      ensure    => $ensure,
-      file_name => $installer_file_name,
-      file_url  => $installer_file_url,
-      path      => "${installer_cache_dir}/${installer_file_name}",
-      require   => File[$installer_cache_dir_tree],
-    }
-  } else {
-    $executed_installation_step_1 = ''
-  $installation_info_step_2 = "file_configure_and_copy_install_script=${installer_cache_dir}/${installer_script_name}"
-  if $install_server__configure_and_copy_install_script =='not there' {
-    $executed_installation_step_2 = 'true'
-    notify {"STEP 2 : install script file": }
-    file { "Configure and copy the ${role_name}'s install script":
-      ensure  => $ensure,
-      path    => "${installer_cache_dir}/${installer_script_name}",
-      content => template("dynatrace/server/${installer_script_name}"),
-      mode    => '0744',
-#      before  => Dynatrace_installation["Install the ${role_name}"]
-    }
-  } else {
-    $executed_installation_step_2 = ''
-  $installation_info_step_3 = "dynatrace_installation=${installer_prefix_dir}/dynatrace/server"
-  if $install_server__dynatrace_installation =='not there' {
-    $executed_installation_step_3 = 'true'
-    notify {"STEP 3 : dynatrace_installation": }
-#    $installation_info_step_3 = "dynatrace_installation=${installer_prefix_dir}/dynatrace/server"
-    dynatrace_installation { "Install the ${role_name}":
-      ensure                => $installation_ensure,
-      installer_prefix_dir  => $installer_prefix_dir,
-      installer_file_name   => $installer_file_name,
-      installer_file_url    => $installer_file_url,
-      installer_script_name => $installer_script_name,
-      installer_path_part   => 'server',
-      installer_path_detailed => '',
-      installer_owner       => $dynatrace_owner,
-      installer_group       => $dynatrace_group,
-      installer_cache_dir   => $installer_cache_dir
-    }
-  } else {
-    $executed_installation_step_3 = ''
-
-  if $executed_installation_step_1 != '' or $executed_installation_step_2 != '' or $executed_installation_step_3 != '' {
-    file { "${dynatrace_server_installation_info_file}":
-      ensure  => file,
-      content => '#initialize installation history file',
-    
-#    $installation_info_array.each |String $install_entry| {
-#      $key_val_array = split($install_entry, '=')
-#      $key = $key_val_array[0]
-#      
-#      file_line { "someline ${key_val_array}":
-#        path  => $dynatrace_server_installation_info_file,
-#        line  => $install_entry,
-#        match => "^${key}.*",
-#      }
-#    }
-    if $installation_info_step_1 != '' {
-      $key_val_array_1 = split($installation_info_step_1, '=')
-      $key_1 = $key_val_array_1[0]
-      file_line { "someline ${installation_info_step_1}":
-        ensure => present,
-        path  => $dynatrace_server_installation_info_file,
-        line  => $installation_info_step_1,
-        match => "^${key_1}.*",
-      }
-    }
-  
-    if $installation_info_step_2 != '' {
-      $key_val_array_2 = split($installation_info_step_2, '=')
-      $key_2 = $key_val_array_2[0]
-      file_line { "someline ${installation_info_step_2}":
-        ensure => present,
-        path  => $dynatrace_server_installation_info_file,
-        line  => $installation_info_step_2,
-        match => "^${key_2}.*",
-      }
-    }
-  
-    if $installation_info_step_3 != '' {
-      $key_val_array_3 = split($installation_info_step_3, '=')
-      $key_3 = $key_val_array_3[0]
-      file_line { "someline ${installation_info_step_3}":
-        ensure => present,
-        path  => $dynatrace_server_installation_info_file,
-        line  => $installation_info_step_3,
-        match => "^${key_3}.*",
-      }
-    }
-    
-  if $install_server__check_service =='not there' {
-  
-    service { "Start and enable the ${role_name}'s service: '${service}'":
-      ensure => $service_ensure,
-      name   => $service,
-      enable => true
-    }
-    
-    wait_until_port_is_open { $collector_port:
-      ensure  => $ensure,
-      require => Service["Start and enable the ${role_name}'s service: '${service}'"]
-    }
-  
-    wait_until_port_is_open { '2021':
-      ensure  => $ensure,
-      require => Service["Start and enable the ${role_name}'s service: '${service}'"]
-    }
-  
-    if $collector_port != '6699' {
-      wait_until_port_is_open { '6699':
-        ensure  => $ensure,
-        require => Service["Start and enable the ${role_name}'s service: '${service}'"]
-      }
-    }
-  
-    wait_until_port_is_open { '8021':
-      ensure  => $ensure,
-      require => Service["Start and enable the ${role_name}'s service: '${service}'"]
-    }
-  
-    wait_until_port_is_open { '9911':
-  
-    if $do_pwh_connection {     #TODO configure PHW connection will be run only when server will be started (it means that only when dynatrace server service is stopped)
-      notify{"server 2": message => "executing dynatrace::role::server  do_pwh_connection"; }
-    
-      wait_until_rest_endpoint_is_ready { 'https://localhost:8021/rest/management/pwhconnection/config':
-        ensure  => $ensure,
-        require => Service["Start and enable the ${role_name}'s service: '${service}'"]
-      }
-  
-      configure_pwh_connection { $pwh_connection_dbms:
-        ensure   => $ensure,
-        hostname => $pwh_connection_hostname,
-        port     => $pwh_connection_port,
-        database => $pwh_connection_database,
-        username => $pwh_connection_username,
-        password => $pwh_connection_password,
-        require  => Wait_until_rest_endpoint_is_ready['https://localhost:8021/rest/management/pwhconnection/config']
-      }
-    }
BREAKS HERE
-  $mesh_name,        # Name of your community, e.g.: Freifunk Entenhausen
-  $mesh_code,        # Code of your community, e.g.: ffeh
-  $mesh_prefix_ipv4, # ipv4 netmask of your mesh network, in cid
-  $mesh_prefix_ipv6, # ipv6 netmask of your mesh network, in cidr notation.
-  $mesh_ipv6,        # ipv6 address of mesh device
-  $mesh_ipv4,        # ipv4 address of mesh device
-    mesh_name => $mesh_name,
-    mesh_code => $mesh_code,
-    mesh_ipv4 => $mesh_ipv4,
-    mesh_ipv6 => $mesh_ipv6,
-    mesh_prefix_ipv6 => $mesh_prefix_ipv6,
-    mesh_prefix_ipv4 => $mesh_prefix_ipv4,
-    ipv4_address => $mesh_ipv4,
-    ipv4_netmask => $mesh_prefix_ipv4,
-    ipv6_address => $mesh_ipv6,
-    ipv6_prefix  => $mesh_prefix_ipv6;
-    mesh_ipv4_address => $mesh_ipv4,
-    mesh_ipv6_address => $mesh_ipv6,
-    site_ipv6_prefix => $mesh_prefix_ipv6,
BREAKS HERE
-  $constants = prefix($::icinga2::_constants, 'const ')
-  $conf_dir  = $::icinga2::params::conf_dir
-  $plugins   = $::icinga2::plugins
-  $confd     = $::icinga2::_confd
BREAKS HERE
-# FIXME: This class needs better documentation as per https://docs.puppetlabs.com/guides/style_guide.html#puppet-doc
-class mongodb::service {
-  service { 'mongodb':
BREAKS HERE
-    command => 'for host in $(cat /var/lib/cacti/devices); do /usr/local/bin/create_graphs.sh $host; done',
-
BREAKS HERE
-  # TODO: key exchange
BREAKS HERE
-    $puppet_certname = "",
-        ensure => present,
-            ensure => present,
-            before => Service['strongswan'],
-            unless => '/usr/bin/test -f /etc/init.d/ipsec-disabled',
-            before => Package['strongswan'],
-    file { "/etc/ipsec.d/cacerts/ca.pem":
-        ensure  => present,
-        source  => "/var/lib/puppet/ssl/certs/ca.pem",
-        ensure  => present,
-        ensure  => present,
-    file { "/usr/local/sbin/ipsec-global":
BREAKS HERE
-        notify => Service['apache2'],
BREAKS HERE
-        'libpng3-dev',
-        'libxslt-dev',
-        'libxslt1-dev', # -- same
BREAKS HERE
-  Optional[String]               $user                          = undef,
-  Optional[String]               $web_server                    = undef,
BREAKS HERE
-  if $carbon_cache_amount > 1 {
BREAKS HERE
-        name  => 'launchpad',
-        match => '(\\b[Bb]ug\\b|\\b[Ll][Pp]\\b)[ \\t#:]*(\\d+)',
-        link  => 'https://code.launchpad.net/bugs/$2',
BREAKS HERE
-# they could potentially contain non-integer values, so keep it consisent.
-#   The hour(s) to run. Default is 09:00.
-#   The minute(s) to run. Default is on the hour.
-  $hour = '9',
-  $minute = '0',
BREAKS HERE
-    $refinery_job_jar = "${refinery_path}/artifacts/refinery-job.jar"
BREAKS HERE
-    # Legacy workaround for a Jenkins security issue. No more needed since
-    # Jenkins 1.638 and 1.625.2
-    # https://jenkins.io/blog/2015/11/06/mitigating-unauthenticated-remote-code-execution-0-day-in-jenkins-cli/
-    # https://github.com/jenkinsci-cert/SECURITY-218
-        ensure => absent,
-        ensure => absent,
BREAKS HERE
-  vcsrepo { '/opt/grafyaml':
-    ensure   => latest,
-    provider => git,
-    revision => $git_revision,
-    source   => $git_source,
-    subscribe   => Vcsrepo['/opt/grafyaml'],
BREAKS HERE
-    include ::base::firewall
BREAKS HERE
-# Configures heat domain in Keystone.
-#
-# Note: Implementation is done by heat-keystone-setup-domain script temporarily
-#       because currently puppet-keystone does not support v3 API
-# [*domain_name*]
-#   Heat domain name. Defaults to 'heat'.
-#
-# [*domain_admin*]
-#   Keystone domain admin user which will be created. Defaults to 'heat_admin'.
-#
-# [*domain_password*]
-#   Keystone domain admin user password. Defaults to 'changeme'.
-#
-  $auth_url          = undef,
-  $keystone_admin    = undef,
-  $keystone_password = undef,
-  $keystone_tenant   = undef,
-  $domain_name       = 'heat',
-  $domain_admin      = 'heat_admin',
-  $domain_password   = 'changeme',
-  $cmd_evn = [
-    "OS_TENANT_NAME=${keystone_tenant}",
-    "OS_USERNAME=${keystone_admin}",
-    "OS_PASSWORD=${keystone_password}",
-    "OS_AUTH_URL=${auth_url}",
-    "HEAT_DOMAIN=${domain_name}",
-    "HEAT_DOMAIN_ADMIN=${domain_admin}",
-    "HEAT_DOMAIN_PASSWORD=${domain_password}"
-  ]
-  exec { 'heat_domain_create':
-    path        => '/usr/bin',
-    command     => 'heat-keystone-setup-domain',
-    environment => $cmd_evn,
-    require     => Package['heat-common'],
-    logoutput   => 'on_failure'
-
BREAKS HERE
-      $gweb_pip_hack_source = "/opt/graphite/webapp/graphite_web-${carbonVersion}-py2.7.egg-info"
-      case $::lsbmajdistrelease {
-        'MySQL-python',
-        'python-txamqp'
BREAKS HERE
-    include apache::status
BREAKS HERE
-    $active_redis_ip = '10.68.18.70'
-    File <| title == '/etc/exim4/exim4.conf' |> {
-        content => undef,
-        source  => ["${store}/mail-relay", 'puppet:///modules/toollabs/exim4-norelay.conf'],
-        notify  => Service['exim4'],
BREAKS HERE
-    include network::constants
-    include metrics
BREAKS HERE
-#         }
-#         }
-    if $version == '12.1.0.1' {
-      # db file 1 installer zip
-      file { "${path}/${file}_1of2.zip":
-        source        => "${mountPoint}/${file}_1of2.zip",
-        require       => File[$path],
-      }
-      exec { "extract ${path}/${file}_1of2.zip":
-        command       => "unzip -o ${path}/${file}_1of2.zip -d ${path}/${file}",
-        require       => File["${path}/${file}_1of2.zip"],
-        creates       => "${path}/${file}/database/install/addLangs.sh",
-      }
-      # db file 2 installer zip
-      file { "${path}/${file}_2of2.zip":
-        source        => "${mountPoint}/${file}_2of2.zip",
-        require       => File["${path}/${file}_1of2.zip"],
-      }
-      exec { "extract ${path}/${file}_2of2.zip":
-        command       => "unzip -o ${path}/${file}_2of2.zip -d ${path}/${file}",
-        require       => [ File["${path}/${file}_2of2.zip"], Exec["extract ${path}/${file}_1of2.zip"], ],
-        creates       => "${path}/${file}/database/stage/Components/oracle.rdbms/12.1.0.1.0/1/DataFiles/filegroup19.6.1.jar",
-    }
-    if $version == '11.2.0.1' {
-      # db file 1 installer zip
-      file { "${path}/${file}_1of2.zip":
-        source        => "${mountPoint}/${file}_1of2.zip",
-        require       => File[$path],
-      }
-      exec { "extract ${path}/${file}_1of2.zip":
-        command       => "unzip -o ${path}/${file}_1of2.zip -d ${path}/${file}",
-        require       => File["${path}/${file}_1of2.zip"],
-      }
-      # db file 2 installer zip
-      file { "${path}/${file}_2of2.zip":
-        source        => "${mountPoint}/${file}_2of2.zip",
-        require       => File["${path}/${file}_1of2.zip"],
-      }
-      exec { "extract ${path}/${file}_2of2.zip":
-        command       => "unzip -o ${path}/${file}_2of2.zip -d ${path}/${file}",
-        require       => File["${path}/${file}_2of2.zip"],
-    }
-    if ( $version == '11.2.0.3' or $version == '11.2.0.4' ) {
-      # db file 1 installer zip
-      file { "${path}/${file}_1of7.zip":
-        source        => "${mountPoint}/${file}_1of7.zip",
-        require       => File[$path],
-      }
-      exec { "extract ${path}/${file}_1of7.zip":
-        command       => "unzip -o ${path}/${file}_1of7.zip -d ${path}/${file}",
-        require       => File["${path}/${file}_1of7.zip"],
-      }
-      # db file 2 installer zip
-      file { "${path}/${file}_2of7.zip":
-        source        => "${mountPoint}/${file}_2of7.zip",
-        require       => File["${path}/${file}_1of7.zip"],
-      }
-      exec { "extract ${path}/${file}_2of7.zip":
-        command       => "unzip -o ${path}/${file}_2of7.zip -d ${path}/${file}",
-        require       => File["${path}/${file}_2of7.zip"],
-      }
-      # db file 3 installer zip
-      file { "${path}/${file}_3of7.zip":
-        source        => "${mountPoint}/${file}_3of7.zip",
-        require       => File["${path}/${file}_2of7.zip"],
-      }
-      exec { "extract ${path}/${file}_3of7.zip":
-        command       => "unzip -o ${path}/${file}_3of7.zip -d ${path}/${file}",
-        require       => File["${path}/${file}_3of7.zip"],
-      }
-      # db file 4 installer zip
-      file { "${path}/${file}_4of7.zip":
-        source        => "${mountPoint}/${file}_4of7.zip",
-        require       => File["${path}/${file}_3of7.zip"],
-      }
-      exec { "extract ${path}/${file}_4of7.zip":
-        command       => "unzip -o ${path}/${file}_4of7.zip -d ${path}/${file}",
-        require       => File["${path}/${file}_4of7.zip"],
-      }
-      # db file 5 installer zip
-      file { "${path}/${file}_5of7.zip":
-        source        => "${mountPoint}/${file}_5of7.zip",
-        require       => File["${path}/${file}_4of7.zip"],
-      }
-      exec { "extract ${path}/${file}_5of7.zip":
-        command       => "unzip -o ${path}/${file}_5of7.zip -d ${path}/${file}",
-        require       => File["${path}/${file}_5of7.zip"],
-      }
-      # db file 6 installer zip
-      file { "${path}/${file}_6of7.zip":
-        source        => "${mountPoint}/${file}_6of7.zip",
-        require       => File["${path}/${file}_5of7.zip"],
-      }
-      exec { "extract ${path}/${file}_6of7.zip":
-        command       => "unzip -o ${path}/${file}_6of7.zip -d ${path}/${file}",
-        require       => File["${path}/${file}_6of7.zip"],
-      }
-      # db file 7 installer zip
-      file { "${path}/${file}_7of7.zip":
-        source        => "${mountPoint}/${file}_7of7.zip",
-        require       => File["${path}/${file}_6of7.zip"],
-      }
-      exec { "extract ${path}/${file}_7of7.zip":
-        command       => "unzip -o ${path}/${file}_7of7.zip -d ${path}/${file}",
-        require       => File["${path}/${file}_7of7.zip"],
-      exec { "install oracle database ${title}":
-        command       => "/bin/sh -c 'unset DISPLAY;${path}/${file}/database/runInstaller -silent -waitforcompletion -responseFile ${path}/db_install_${version}.rsp'",
-        require       => [File ["${oraInstPath}/oraInst.loc"],File["${path}/db_install_${version}.rsp"],Exec["extract ${path}/${file}_2of2.zip"]],
-        creates       => $oracleHome,
-      exec { "install oracle database ${title}":
-        command       => "/bin/sh -c 'unset DISPLAY;${path}/${file}/database/runInstaller -silent -waitforcompletion -responseFile ${path}/db_install_${version}.rsp'",
-        require       => [File ["${oraInstPath}/oraInst.loc"],File["${path}/db_install_${version}.rsp"],Exec["extract ${path}/${file}_7of7.zip"]],
-        creates       => $oracleHome,
-      exec { "install oracle database ${title}":
-        command       => "/bin/sh -c 'unset DISPLAY;${path}/${file}/database/runInstaller -silent -waitforcompletion -responseFile ${path}/db_install_${version}.rsp'",
-        require       => [File ["${oraInstPath}/oraInst.loc"],File["${path}/db_install_${version}.rsp"],Exec["extract ${path}/${file}_2of2.zip"]],
-        creates       => $oracleHome,
BREAKS HERE
-          'newton-delorean-deps'   => {
BREAKS HERE
-      case $::operatingsystemelease {
BREAKS HERE
-    $letsencrypt_host = undef,
-    $letsencrypt_real_host = pick(
-        $letsencrypt_host,
-        $::servername,
-        $::puppetmaster
-    )
-
-    if ($::fqdn == $letsencrypt_real_host) {
-        letsencrypt_host => $letsencrypt_real_host,
BREAKS HERE
-        # Java heap space used alerts.
-        # The goal is to get alarms for long running memory leaks like T153951.
-        # Only include heap size alerts if heap size is configured.
-        $hadoop_datanode_heapsize = $::cdh::hadoop::hadoop_heapsize
-        if $hadoop_datanode_heapsize {
-            $dn_jvm_warning_threshold  = floor($hadoop_datanode_heapsize * 0.9 * 1000000)
-            $dn_jvm_critical_threshold = floor($hadoop_datanode_heapsize * 0.95 * 1000000)
-            monitoring::check_prometheus { 'analytics_hadoop_hdfs_datanode':
-                description     => 'HDFS DataNode JVM Heap usage',
-                dashboard_links => ['https://grafana.wikimedia.org/dashboard/db/analytics-hadoop?panelId=1&fullscreen&orgId=1'],
-                query           => "scalar(quantile_over_time(0.5,jvm_memory_bytes_used{hadoop_cluster=\"${cluster_name}\",instance=\"${::hostname}:51010\",area=\"heap\"}[120m]))",
-                warning         => $dn_jvm_critical_threshold,
-                critical        => $dn_jvm_critical_threshold,
-                contact_group   => 'analytics',
-                prometheus_url  => "http://prometheus.svc.${::site}.wmnet/analytics",
-            }
-        $hadoop_nodemanager_heapsize = $::cdh::hadoop::yarn_heapsize
-        if $hadoop_nodemanager_heapsize {
-            $nm_jvm_warning_threshold  = floor($hadoop_nodemanager_heapsize * 0.9 * 1000000)
-            $nm_jvm_critical_threshold = floor($hadoop_nodemanager_heapsize * 0.95 * 1000000)
-            monitoring::check_prometheus { 'analytics_hadoop_yarn_nodemanager':
-                description     => 'YARN NodeManager JVM Heap usage',
-                dashboard_links => ['https://grafana.wikimedia.org/dashboard/db/analytics-hadoop?orgId=1&panelId=17&fullscreen'],
-                query           => "scalar(quantile_over_time(0.5,jvm_memory_bytes_used{hadoop_cluster=\"${cluster_name}\",instance=\"${::hostname}:8141\",area=\"heap\"}[120m]))",
-                warning         => $nm_jvm_critical_threshold,
-                critical        => $nm_jvm_critical_threshold,
-                contact_group   => 'analytics',
-                prometheus_url  => "http://prometheus.svc.${::site}.wmnet/analytics",
-            }
BREAKS HERE
-  $user          = 'www-data'
-  $ssl           = true
-  $template      = 'httpd/vhost-default.conf.erb'
-  $servername    = undef
-  $serveraliases = undef
-  $auth          = false
-  $options       = 'Indexes FollowSymLinks MultiViews'
BREAKS HERE
-			before => Package["munin"],
-                category => $operatingsystem ? {
-                        gentoo => 'net-analyzer',
-                        default => '',
-                },
-			before => Package["munin"],
BREAKS HERE
-        ensure  => 'directory',
-        path    => "/usr/share/planet-venus/wikimedia/${title}",
-        mode    => '0755',
-        owner   => 'planet',
-        group   => 'planet',
BREAKS HERE
-    ensure     => $apache::manage_service_ensure,
-    name       => $apache::service,
-    enable     => $apache::manage_service_enable,
-    hasstatus  => $apache::service_status,
-    pattern    => $apache::process,
-    require    => $service_requires,
-      enable    => false,
-      priority  => '',
BREAKS HERE
-
-    # *.corp.wikiemdia.org (OIT)
-    @monitoring::host { 'https_directory-corp':
-        host_fqdn     => 'directory.corp.wikimedia.org',
-    }
-    monitoring::service { 'https_directory-corp':
-        description   => 'HTTPS-directory_corp',
-        check_command => 'check_ssl_http!directory.corp.wikimedia.org',
-        host          => 'directory.corp.wikimedia.org',
-    }
-
BREAKS HERE
-      require    => Pear::Package['PEAR'],
-    require              => Package['httpd'],
BREAKS HERE
-      'pecl'  => $title,
BREAKS HERE
-  file{'/etc/cront.d/munin_kill':
BREAKS HERE
-        swift_key                => $swift_account_keys['thumbor'],
BREAKS HERE
-
BREAKS HERE
-  $nodejs_version   = 'v0.10.21',
-  if ($nodejs_version != 'system') {
-    vcsrepo { "${base_install_dir}/nodejs":
-      ensure   => present,
-      provider => git,
-      source   => 'https://github.com/joyent/node.git',
-      revision => $nodejs_version,
-      require  => [
-          Package['git'],
-          File[$base_install_dir],
-      ],
-    }
-
-    package { [
-        'gzip',
-        'python',
-        'libssl-dev',
-        'pkg-config',
-        'build-essential',
-      ]:
-      ensure => present,
-    }
-    package { ['nodejs', 'npm']:
-      ensure => purged,
-    }
-
-    buildsource { "${base_install_dir}/nodejs":
-      timeout => 900, # 15 minutes
-      creates => '/usr/local/bin/node',
-      require => [
-        Package['gzip'],
-        Package['curl'],
-        Package['python'],
-        Package['libssl-dev'],
-        Package['pkg-config'],
-        Package['build-essential'],
-        Vcsrepo["${base_install_dir}/nodejs"],
-      ],
-      before  => Anchor['nodejs-anchor'],
-      before => Anchor['nodejs-anchor'],
-    file { '/usr/local/bin/node':
-      ensure  => link,
-      target  => '/usr/bin/nodejs',
-      before  => Anchor['nodejs-anchor'],
-      require => Package['nodejs'],
-    }
BREAKS HERE
-        zookeeper_hosts                               => $zookeeper_hosts,
-        support_concurrency                           => false,
-        variable_substitute_depth                     => 10000,
-        auxpath                                       => $auxpath,
-        parquet_compression                           => 'SNAPPY',
-        hive_server_opts                              => $hive_server_opts,
-        hive_metastore_opts                           => $hive_metastore_opts,
-        metastore_host                                => $metastore_host,
-        java_home                                     => $java_home,
-        hive_server_udf_blacklist                     => 'xpath,xpath_string,xpath_boolean,xpath_number,xpath_double,xpath_float,xpath_long,xpath_int,xpath_short',
-        hive_metastore_sasl_enabled                   => $hive_metastore_sasl_enabled,
-        hive_metastore_kerberos_keytab_file           => $hive_metastore_kerberos_keytab_file,
-        hive_metastore_kerberos_principal             => $hive_metastore_kerberos_principal,
-        hive_server2_authentication                   => $hive_server2_authentication,
-        hive_server2_authentication_kerbero_principal => $hive_server2_authentication_kerberos_principal,
-        hive_server2_authentication_kerberos_keytab   => $hive_server2_authentication_kerberos_keytab,
BREAKS HERE
-            bind           => '0.0.0.0',
-            dir            => '/srv/redis/queue',
-            maxmemory      => $queue_maxmemory,
-            tcp_keepalive  => 60,
BREAKS HERE
-    '/usr/local/bin',
BREAKS HERE
-        source  => 'puppet:///private/icinga/send_nsca.cfg',
BREAKS HERE
-        srange => "@resolve(($proxy_nodes))",
BREAKS HERE
-Subproject commit 4d96e95500cfbceb8fa552e503644d387e56e334
BREAKS HERE
-  $licensify_maintenance_mode = str2bool(extlookup('licensify_maintenance_mode',false))
BREAKS HERE
-# == Class scap
-
-class scap ($deployment_server = 'deployment') {
BREAKS HERE
-#   Defaults to hiera('rabbitmq_node_names')
-#   Defaults to hiera('rabbitmq_node_names')
-  $oslomsg_rpc_hosts       = any2array(hiera('rabbitmq_node_names', undef)),
-  $oslomsg_notify_hosts    = any2array(hiera('rabbitmq_node_names', undef)),
-  $memcached_ips            = hiera('memcached_node_ips'),
-        'hosts'     => $oslomsg_rpc_hosts,
-        'hosts'     => $oslomsg_notify_hosts,
BREAKS HERE
-    location     => "https://${apt_mirror_hostname}/percona",
-    key          => '1C4CBDCDCD2EFD2A',
BREAKS HERE
-    'vars' => $vars,
-    attrs        => delete_undef_values($attrs),
BREAKS HERE
-    if $keyfile {
BREAKS HERE
-    $phab_settings = merge($fixed_settings, $settings)
-    if ($libraries) {
-        phabricator::libext { $libraries:
-            rootdir => $phabdir,
-            require => $base_requirements,
-        }
-        $phab_settings['load-libraries'] = $libraries
-    }
-
BREAKS HERE
-        group   => 'root',
-        mode    => '0444',
BREAKS HERE
-    sysadmins               => hiera('sysadmins', []),
BREAKS HERE
-  file {'remove tmp dynatrace directory':
-  file {'remove tmp directory':
-   }
BREAKS HERE
-class { 'cluster':
-  internal_address         => get_network_role_property('mgmt/corosync', 'ipaddr'),
-  corosync_nodes           => $corosync_nodes,
-  cluster_recheck_interval => $cluster_recheck_interval,
BREAKS HERE
-  if $step >= 3 and $sync_db {
-    include ::manila::db::mysql
-  }
-
BREAKS HERE
-            origin  => '/srv/puppet',
BREAKS HERE
-    $::graphite::base_dir_REAL,
BREAKS HERE
-            'openstack/(?!ara$|ara-web$|ara-infra$).*',
BREAKS HERE
-#   Keystone domain admin user password. Defaults to 'changeme'.
-  $domain_password    = 'changeme',
BREAKS HERE
-        owner   => root,
-        group   => root,
-        owner   => root,
-        group   => root,
-        mode    => 0440,
-        content => template("monitoring/merge_sudoers.erb");
BREAKS HERE
-    prometheus::rule { 'rules_beta':
-    prometheus::rule { 'alerts_beta':
BREAKS HERE
-#   This is the directory where Icinga 2 stores it's object configuration by default. To disable this, set the parameter
-#   to false. It's also possible to assign your own directory. This directory is relative to etc/icinga2 and must be
-#   managed outside of this module as file resource with tag icinga2::config::file. By default this parameter is true.
-#
BREAKS HERE
-  $v6source       = '',
-  $v6destination  = '',
-  $enable         = true ) {
-      default => $source,
-      default => $destination,
-  notify{"test1":}
-#    content => "${command} ${chain} ${true_rule} -j ${target}\n",
-  if size(array_source) <= 0 and size(array_destination) <= 0 { 
-  #    content => "${command} ${chain} ${true_rule} -j ${target}\n",
BREAKS HERE
-      logstream     => true,
BREAKS HERE
-  $carbon_cache_query_interface              = '0.0.0.0'
-  $carbon_line_receiver_interface            = '0.0.0.0'
-  $carbon_udp_receiver_interface             = '0.0.0.0'
-  $$relay_method                             = 'rules',
BREAKS HERE
-    allow_change_user        => $allow_change_user,
-    passwdqc_enabled         => $passwdqc_enabled,
-    auth_retries             => $auth_retries,
-    auth_lockout_time        => $auth_lockout_time,
-    passwdqc_options         => $passwdqc_options,
-    allow_core_dumps         => $allow_core_dumps,
-    root_ttys                => $root_ttys,
-    whitelist                => $whitelist,
-    blacklist                => $blacklist,
-    remove_from_unknown      => $remove_from_unknown,
-    dry_run_on_unknown       => $dry_run_on_unknown,
-      enable_module_loading    => $enable_module_loading,
-      load_modules             => $load_modules,
-      cpu_vendor               => $cpu_vendor,
-      desktop_enabled          => $desktop_enabled,
-      enable_ipv4_forwarding   => $enable_ipv4_forwarding,
-      enable_ipv6              => $enable_ipv6,
-      enable_ipv6_forwarding   => $enable_ipv6_forwarding,
-      arp_restricted           => $arp_restricted,
-      enable_sysrq             => $enable_sysrq,
-      enable_core_dump         => $enable_core_dump,
BREAKS HERE
-                    File['/etc/default/yhsm-daemon'],
BREAKS HERE
-  file { "/etc/init.d/dbora" :
-    ensure         => present,
-    mode           => "0755",
-    owner          => 'root',
-    content        => template("oradb/dbora.erb"),
-  }
-
-  case $operatingsystem {
-    CentOS, RedHat, OracleLinux: {
-
-      exec { "chkconfig dbora":
-        command        => "chkconfig --add dbora",
-        require        => File["/etc/init.d/dbora"],
-        user           => 'root',
-        unless         => "chkconfig | /bin/grep 'dbora'",
-      }
-    }
-    Ubuntu, Debian, SLES:{
-      exec { "update-rc.d dbora":
-        command        => "update-rc.d dbora defaults",
-        require        => File["/etc/init.d/dbora"],
-        user           => 'root',
-        unless         => "ls /etc/rc3.d/*dbora | /bin/grep 'dbora'",
-      }      
-    }
-    default: {
-      fail("Unrecognized operating system")
-    }    
-  }
-}
BREAKS HERE
-    centos: { include shorewall::base }
BREAKS HERE
-        source => 'puppet:///modules/profile/mediawiki/nrpe_check_opcache.py',
-        nrpe_command => '/usr/local/lib/nagios/plugins/nrpe_check_opcache -w 50 -c 10',
BREAKS HERE
-        'max_connections'       => hiera('mysql_max_connections'),
-    if $generate_dropin_file_limit {
-          LimitNOFILE => 16384
BREAKS HERE
-        ensure => $ensure,
-        ensure => $ensure,
-        ensure => $ensure,
BREAKS HERE
-  
-  $user                = "puppet"
-  $dir                 = "/etc/puppet"
-  $modules_path        = "$dir/modules"
-  $common_modules_path = "$modules_path/common"
-  $environments        = ["development", "production"]
-  $app_root            = "$dir/rack"
-  $ssl_dir             = "/var/lib/puppet/ssl"
-  
BREAKS HERE
-            include apt, apt::backports
-            include apt
-        }
BREAKS HERE
-
-	# workaround bug in munin_node_configure
-	plugin { "postfix_mailvolume": ensure => absent }
BREAKS HERE
-				require => Package['munin-node'],
-            if $require {
-                File[$plugin]{
-                    require +> $require,
-                }
-            }
BREAKS HERE
-class puppet::agent::config {
BREAKS HERE
-  if ($::osfamily == 'RedHat' and $::operatingsystemrelease =~ /^7\.\d+/) or (
-  $::graphite::params::service_provider == 'systemd') {
-      $web_server_service_notify  = Service[$::graphite::params::apache_service_name]
-      $web_server_service_notify  = Service['gunicorn']
-        fail('Having $gr_web_server => \'none\' requires use of $gr_web_user and $gr_web_group to set correct file owner for your own webserver setup.')
-      $web_server_service_notify  = undef
-    ensure    => directory,
-    group     => $gr_web_group_REAL,
-    mode      => '0755',
-    owner     => $gr_web_user_REAL,
-    seltype   => 'httpd_sys_rw_content_t',
-
BREAKS HERE
-  $backup_dir = '/var/lib/mongodump',
BREAKS HERE
-            before => Class['::dynamicproxy'],
-            title    => "Wikimedia Tool Labs Error",
-            logo     => "/tool-labs-logo.png",
-            logo_2x  => "/tool-labs-logo-2x.png",
-            logo_alt => "Wikimedia Tool Labs",
-            favicon  => "/favicon.ico",
-        ensure => file,
-        source => '/data/project/admin/toollabs/www/favicon.ico',
-        ensure => file,
-        source => 'puppet:///modules/toollabs/tool-labs-logo.png',
-        ensure => file,
-        source => 'puppet:///modules/toollabs/tool-labs-logo-2x.png',
BREAKS HERE
-    }->
BREAKS HERE
-    kubeadm_extra_config      => {
-      apiServerExtraVolumes => [
-        {
-          name      => 'ocf-auth',
-          hostPath  => '/etc/ocf-kubernetes',
-          mountPath => '/etc/ocf-kubernetes',
-          writeable => false,
-        },
-      ],
BREAKS HERE
-    war => 'http://ci.openstack.org/tarballs/test/gerrit-2.4.1-10-g98fd9d8.war',
BREAKS HERE
-    CentOS, RedHat, OracleLinux: {
-    Ubuntu, Debian, SLES:{
BREAKS HERE
-  include apache
-  a2mod { 'rewrite':
-  a2mod { 'proxy':
-  a2mod { 'proxy_http':
-  apache::vhost { $vhost_name:
BREAKS HERE
-    command     => 'sleep 10',
BREAKS HERE
-  exec {'mount_cgroup':
-    command  => "service cpu-cgroup start",
BREAKS HERE
-	puppet::fact{
-		interfaces:
-			source => "puppet://$servername/munin/facter/interfaces.rb",
-			require => Package[iproute];
-	}
-	case $vserver {
-		guest: {}
-		'': {}
-		default: {
-			puppet::fact{
-				acpi_available:
-					source => "puppet://$servername/munin/facter/acpi_available.rb",
-					require => Package[acpi];
-			}
-		}
-	}
BREAKS HERE
-      content => template('profile/tagmail.conf.erb'),
BREAKS HERE
-    case $operatingsystem {
-        /(Ubuntu|Debian)/: {
-            $package_name = 'locales'
-            $locales_gen = '/etc/locale.gen'
-            $locale_gen_cmd = '/usr/sbin/locale-gen'
-        }
BREAKS HERE
-                'eqiad' => {'streamlb' => '208.80.154.248', 'streamlb6' => '2620:0:861:ed1a::3:14'}
BREAKS HERE
-          { 'source_labels' => ['columnfamily'],
-            'regex'  => '(.*)',
BREAKS HERE
-  $sessionKey    = '',
-  $dbType        = 'mysql',
-  include etherpad_lite
-  include logrotate
BREAKS HERE
-    projects => ["python-glanceclient"]
BREAKS HERE
-  ceilometer => true,
-  aodh       => true,
BREAKS HERE
-# $ipaddress::      IP address MySQL should listen to
-#    password => 'piwik',
-#    ipadress => '127.0.0.1',
-  $ipaddress     = $ipaddress_eth1
-  class { 'mysql': }
-  class { 'mysql::server':
-    config_hash => { 'root_password' => $root_password, 'bind_address' => $ipaddress }
-  database_user { 'root@%':
-  database_grant { 'root@%':
-  database_user { $username:
-  database_grant { $username:
-    require    => Database_user[$username],
BREAKS HERE
-    manage_common_zuul       => true,
BREAKS HERE
-  $ensure           = 'present',
-  $ca_file          = $::foreman_scap_client::params::ca_file,
-  $host_certificate = $::foreman_scap_client::params::host_certificate,
-  $host_private_key = $::foreman_scap_client::params::host_private_key,
BREAKS HERE
-# == Define: orautils::nodemanagerautostart
BREAKS HERE
-# class: OpenStack Infra Cloud
-  $keystone_rabbit_password,
-  $neutron_rabbit_password,
-  $nova_rabbit_password,
-  $root_mysql_password,
-  $keystone_mysql_password,
-  $glance_mysql_password,
-  $neutron_mysql_password,
-  $nova_mysql_password,
-  $keystone_admin_token,
-  $br_name,
-  $controller_public_address = $::fqdn,
-  $ssl_key_file_contents = undef, # TODO(crinkle): make required
-  $ssl_cert_file_contents = undef, # TODO(crinkle): make required
-  $ssl_chain_file_contents = undef,
-  $keystone_ssl_key_file_contents = undef,
-  $keystone_ssl_cert_file_contents = undef,
-  $neutron_ssl_key_file_contents = undef,
-  $neutron_ssl_cert_file_contents = undef,
-  $glance_ssl_key_file_contents = undef,
-  $glance_ssl_cert_file_contents = undef,
-  $nova_ssl_key_file_contents = undef,
-  $nova_ssl_cert_file_contents = undef,
-  $neutron_subnet_cidr,
-  $neutron_subnet_gateway,
-  $neutron_subnet_allocation_pools,
-  $controller_management_address = undef,
BREAKS HERE
-        'python-designateclient',
-        'python-novaclient'
BREAKS HERE
-        source  => 'puppet:///modules/scap/scap.cfg',
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
BREAKS HERE
-        require   => Package['burrow'],
BREAKS HERE
-    } 
BREAKS HERE
-        onlyif      => '/usr/sbin/service apache2 status',
-        require     => Service['apache2']
BREAKS HERE
-        midonet_stage          => "",
-      apt::source { 'MEM':
-        location    => "http://${mem_user}:${mem_password}@apt.midokura.com/midonet/${mem_version}/stable",
-        key_content => $key_content,
-        include_src => false,
-        midonet_stage          => "",
BREAKS HERE
-  }    
-  }    
BREAKS HERE
-#   Defaults to 'http://localhost:35357'
-  $auth_url                       = 'http://localhost:35357',
BREAKS HERE
-      'Debian'    => $::lsbdistcodename? {
-      'Wheezy'  => 'rpcbind',
-      default => 'portmap',
-    'Ubuntu'   => 'rpcbind',
BREAKS HERE
-    # Allow access from everywhere! Use certificates to
-    # control access
-    $allow_from = ['10.0.0.0/8']
-
-        server_name         => $::fqdn,
-        })
-    include ::puppetmaster::gitsync
BREAKS HERE
-        stopt => '/bin/kill `/bin/cat /var/run/munin/munin-node.pid`',
BREAKS HERE
-  $rabbit_hosts                       = false,
-      cinder_config { 'oslo_messaging_rabbit/rabbit_hosts':     value => join($rabbit_hosts, ',') }
-      cinder_config { 'oslo_messaging_rabbit/rabbit_ha_queues': value => true }
-      cinder_config { 'oslo_messaging_rabbit/rabbit_host':      ensure => absent }
-      cinder_config { 'oslo_messaging_rabbit/rabbit_port':      ensure => absent }
-      cinder_config { 'oslo_messaging_rabbit/rabbit_host':      value => $rabbit_host }
-      cinder_config { 'oslo_messaging_rabbit/rabbit_port':      value => $rabbit_port }
-      cinder_config { 'oslo_messaging_rabbit/rabbit_hosts':     value => "${rabbit_host}:${rabbit_port}" }
-      cinder_config { 'oslo_messaging_rabbit/rabbit_ha_queues': value => false }
BREAKS HERE
-			$command = "activate $title"
-				command => "/usr/bin/wp plugin install $title",
-				unless  => "/usr/bin/wp plugin is-installed $title",
-				before  => Wp::Command["$location plugin $title $ensure"],
-			$command = "deactivate $title"
-	wp::command { "$location plugin $title $ensure":
BREAKS HERE
-    default   => 'portmap'
BREAKS HERE
-# Machines in each region to run PyPI mirrors.
BREAKS HERE
-              command => "/usr/bin/mrepo -u",
-              command => "/usr/bin/mrepo -u",
BREAKS HERE
-    class { '::snapshot::cron::dump_global_block': user   => $user }
BREAKS HERE
-  exec { "download:${package_branch}.tar.gz":
-    command   => "/usr/bin/wget ${package_repository}/${package_branch}.tar.gz -O /srv/downloads/${package_branch}.tar.gz",
-    creates   => "/srv/downloads/${package_branch}.tar.gz",
-    require   => File['/srv/downloads'],
-  exec { "download:${package_branch}.md5":
-    command   => "/usr/bin/wget ${package_repository}/${package_branch}.md5 -O /srv/downloads/${package_branch}.md5",
-    creates   => "/srv/downloads/${package_branch}.md5",
-    logoutput => 'on_failure',
-    require   => [ Exec["download:${package_branch}.tar.gz"] ],
-    command   => "/usr/bin/drush dsd-init @${site_alias} /srv/downloads/${package_branch}.tar.gz",
-    logoutput => true,
-    timeout   => 600,
-    onlyif    => "/usr/bin/drush dsd-status @${site_alias} | /bin/grep -c 'NOT INSTALLED'",
-    require   => [
-    command   => "/usr/bin/drush dsd-update @${site_alias} /srv/downloads/${package_branch}.tar.gz",
-    logoutput => true,
-    timeout   => 600,
-    onlyif    => "/usr/bin/drush dsd-status @${site_alias} | /bin/grep -c 'UPDATE'",
-    require   => [
BREAKS HERE
-			mode => 755, owner => root, group => root;
BREAKS HERE
-  String $pagetitle,
-  String $menu,
-  String $hierarchy_parent,
-  String $probe,
-  String $host,
-  String $remark,
-            if $hierarchy_parent == '' {
BREAKS HERE
-    # Using trebuchet provider while scap service deployment is under
-    # development -- chicken and egg things
-    #
-    # This should be removed once scap3 is in a final state (i.e. packaged
-    # or deployed via another method)
-        ensure   => latest,
-        provider => 'trebuchet',
BREAKS HERE
-# Navigate to base-uri for post install setup
-    $phabdir    = '/srv/phab',
-    $timezone   = 'America/Los_Angeles',
-    $lock_file  = '',
-    $git_tag    = 'HEAD',
-    $settings   = {},
-    #Phabricator requires http:// syntax and Apache doesn't like it
-    $phab_fqdn = inline_template("<%= phab_settings['phabricator.base-uri'].gsub('http://','') %>")
-    apache::vhost { $phab_fqdn:
-        ensure              => present,
-        priority            => '000',
-        port                => '80',
-        docroot             => '/srv/phab/phabricator/webroot',
-        template           => 'phabricator/phabricator-default.conf.erb',
-        directory  => "${phabdir}/libphutil",
-        git_tag    => $git_tag,
-        lock_file  => $lock_file,
-        before     => Git::Install['phabricator/arcanist'],
-        directory  => "${phabdir}/arcanist",
-        git_tag    => $git_tag,
-        lock_file  => $lock_file,
-        before     => Git::Install['phabricator/phabricator'],
-        git_tag    => $git_tag,
-        lock_file  => $lock_file,
-        notify     => Exec["ensure_lock_${lock_file}"],
-        command     => "touch ${lock_file}",
-        unless      => "test -z ${lock_file} || test -e ${lock_file}",
-        path        => '/usr/bin:/bin',
-    file { '/etc/php5/apache2filter/php.ini':
-        content => template('phabricator/php.ini.erb'),
-    file { '/srv/phab/phabricator/conf/local/local.json':
-        ensure => directory,
-        owner  => www-data,
-        group  => www-data,
-        owner  => root,
-        group  => root,
-        mode   => '0500',
-    $phd = "/srv/phab/phabricator/bin/phd"
-        require => Git::Install['phabricator/phabricator'],
BREAKS HERE
-    }
BREAKS HERE
-define munin::plugin::deploy ($source = '', $enabled = 'true') {
-    if $enabled {
-        plugin{$name: ensure => present }
-    }
BREAKS HERE
-    cwd         => "${src_www_root}/refstack-ui",
BREAKS HERE
-        ensure => present,
-        require   => File['/etc/modprobe.d/nf_conntrack.conf'],
BREAKS HERE
-   govuk_user { 'fredericfrancois':
-     fullname => 'Frederic Francois',
-     email    => 'frederic.francois@digital.cabinet-office.gov.uk',
-     ssh_key  => [ 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDEQ4764qpZhFOgwxtP6EcG5WMP/AyPr9d98I/qaXf89cnmBHU58iSmHrDtZw/NxpDjKQu6yITXkRLiAzUmn8H0o3NLixH1yohx4BY/MbPVZjefj9FcbNsTr3ilxj1c8ITrGa+J5Uxds0lj9bgS7LIQPXDdO3IwpEf+zyX0tRPknYk8gBWcoVZ1JOQAudLbHVxN8ySFfalIafy5QNukoTRHozxHdJfNn8AOglSIIINqJA0uYyTxTUZ/ZLAPHVTA8lFWgICfc6RM/ajhFLP62bRSn448t9+aOZYBlHUULPyqX/saD2QV1KtHNDb/o50QBFPobbfTxIYbG9oDan6Muoo638Lhcrr2dzJIoJ6qF9EeNTa1BK7sIRd5/UrHMknmIdRVegDmAco7RpK9s6O3KYZ+JNI2FtIifADyXfW+VfgI8nNrefo6O7O6lM40kACNW/GU72iaaU0bj/KWEDSyCfIotzcXs3dl7j0jTf3cLdEqh9DomrKhr8R2Z+sfg+QZgH1MXnyYrgj+2xdFkzRdJnpgocSq6h0Jh7B/w272DtjV0yZGWrsHavmNa/KEjTXcNC6hR+TfeJTTGgPJBDH70U8YY/Igyt/ooJRqV7Ofjf3r9ZtxcxyHib+2dSZOLEaa85t36GBaZ1EhVwo8824OD2ZQK2d4TS82IcHCFFxoIM7FWQ== frederic.francois@digital.cabinet-office.gov.uk',
-     ],
-   }
BREAKS HERE
-          onlyif      => 'pcs property | grep -q "maintenance-mode.*true"',
BREAKS HERE
-        onlyif  => "/usr/bin/test -n \"\$(/usr/bin/find /data/project/.system/store -maxdepth 1 \\( -type d -or -type f -name submithost-\\* \\) -newer /etc/ssh/shosts.equiv~)\"",
-        onlyif  => "/usr/bin/test -n \"\$(/usr/bin/find /data/project/.system/store -maxdepth 1 \\( -type d -or -type f -name submithost-\\* \\) -newer /etc/security/access.conf~)\"",
BREAKS HERE
-  if hiera('step') >= 2 and $pacemaker_master {
-  if hiera('step') >= 4 or ( hiera('step') >= 3 and $pacemaker_master ) {
-  if hiera('step') >= 5 {
BREAKS HERE
-# [*contrail_config_hosts*]
-#  (optional) Specify the contrail config hosts ips.
-#  Defaults to hiera('contrail_config_node_ips')
-#
-# [*contrail_config_hosts_names*]
-#  (optional) Specify the contrail config hosts.
-#  Defaults to hiera('contrail_config_node_ips')
-#
-# [*contrail_config*]
-#  (optional) Switch to check that contrail config is enabled.
-#  Defaults to hiera('contrail_config_enabled')
-#
-# [*contrail_webui*]
-#  (optional) Switch to check that contrail config is enabled.
-#  Defaults to hiera('contrail_webui_enabled')
-#
-# [*contrail_analytics*]
-#  (optional) Switch to check that contrail config is enabled.
-#  Defaults to hiera('contrail_analytics_enabled')
-#
-  $contrail_config_hosts       = hiera('contrail_config_node_ips', undef),
-  $contrail_config_hosts_names = hiera('contrail_config_node_names', undef),
-  $contrail_analytics          = hiera('contrail_analytics_enabled', false),
-  $contrail_config             = hiera('contrail_config_enabled', false),
-  $contrail_webui              = hiera('contrail_webui_enabled', false),
-    contrail_config_port => 8082,
-    contrail_config_ssl_port => 18082,
-    contrail_discovery_port => 5998,
-    contrail_discovery_ssl_port => 15998,
-    contrail_analytics_port => 8090,
-    contrail_analytics_ssl_port => 18090,
-    contrail_analytics_rest_port => 8081,
-    contrail_analytics_ssl_rest_port => 18081,
-    contrail_webui_http_port => 8080,
-    contrail_webui_https_port => 8143,
-  if $contrail_config {
-    ::tripleo::haproxy::endpoint { 'contrail_config':
-      public_virtual_ip => $public_virtual_ip,
-      internal_ip       => hiera('contrail_config_vip', hiera('internal_api_virtual_ip')),
-      service_port      => $ports[contrail_config_port],
-      ip_addresses      => hiera('contrail_config_node_ips'),
-      server_names      => hiera('contrail_config_node_ips'),
-      public_ssl_port   => $ports[contrail_config_ssl_port],
-    }
-    ::tripleo::haproxy::endpoint { 'contrail_discovery':
-      public_virtual_ip => $public_virtual_ip,
-      internal_ip       => hiera('contrail_config_vip', hiera('internal_api_virtual_ip')),
-      service_port      => $ports[contrail_discovery_port],
-      ip_addresses      => hiera('contrail_config_node_ips'),
-      server_names      => hiera('contrail_config_node_ips'),
-      public_ssl_port   => $ports[contrail_discovery_ssl_port],
-    }
-  }
-  if $contrail_analytics {
-    ::tripleo::haproxy::endpoint { 'contrail_analytics':
-      public_virtual_ip => $public_virtual_ip,
-      internal_ip       => hiera('contrail_analytics_vip', hiera('internal_api_virtual_ip')),
-      service_port      => $ports[contrail_analytics_port],
-      ip_addresses      => hiera('contrail_config_node_ips'),
-      server_names      => hiera('contrail_config_node_ips'),
-      public_ssl_port   => $ports[contrail_analytics_ssl_port],
-    }
-    ::tripleo::haproxy::endpoint { 'contrail_analytics_rest':
-      public_virtual_ip => $public_virtual_ip,
-      internal_ip       => hiera('contrail_analytics_vip', hiera('internal_api_virtual_ip')),
-      service_port      => $ports[contrail_analytics_rest_port],
-      ip_addresses      => hiera('contrail_analytics_node_ips', $::contrail_analytics_node_ips),
-      server_names      => hiera('contrail_analytics_node_ips', $::contrail_analytics_node_ips),
-      public_ssl_port   => $ports[contrail_analytics_ssl_rest_port],
-    }
-  }
-  if $contrail_webui {
-    ::tripleo::haproxy::endpoint { 'contrail_webui_http':
-      public_virtual_ip => $public_virtual_ip,
-      internal_ip       => hiera('contrail_webui_vip', hiera('internal_api_virtual_ip')),
-      service_port      => $ports[contrail_webui_http_port],
-      ip_addresses      => hiera('contrail_config_node_ips'),
-      server_names      => hiera('contrail_config_node_ips'),
-      public_ssl_port   => $ports[contrail_webui_http_port],
-    }
-    ::tripleo::haproxy::endpoint { 'contrail_webui_https':
-      public_virtual_ip => $public_virtual_ip,
-      internal_ip       => hiera('contrail_webui_vip', hiera('internal_api_virtual_ip')),
-      service_port      => $ports[contrail_webui_https_port],
-      ip_addresses      => hiera('contrail_config_node_ips'),
-      server_names      => hiera('contrail_config_node_ips'),
-      public_ssl_port   => $ports[contrail_webui_https_port],
-      listen_options    => {
-          'balance'   => 'source',
-          'hash-type' => 'consistent',
-      }
-    }
-  }
BREAKS HERE
-        require => Package['python-redis']
BREAKS HERE
-    $components = $::lsbdistid ? {
-        'Debian' => 'main backports thirdparty',
-        'Ubuntu' => 'main universe thirdparty',
-        default  => fail('Unrecognized operating system'),
BREAKS HERE
-        command => "echo \"\$\$: Starting dispatcher\" >> ${dispatch_log_file}; PHP='hhvm -vEval.Jit=1' /usr/local/bin/mwscript extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki >> ${dispatch_log_file} 2>&1; echo \"\$\$: Dispatcher exited with $?\" >> ${dispatch_log_file}",
BREAKS HERE
-  if ($::lsbdistcodename == 'precise') {
-    file { '/etc/apache2/conf.d':
-      ensure  => directory,
-      owner   => 'root',
-      group   => 'root',
-      mode    => '0755',
-      require => File['/etc/apache2'],
-    }
-    file { '/etc/apache2/conf.d/connection-tuning':
-      ensure  => present,
-      owner   => 'root',
-      group   => 'root',
-      mode    => '0644',
-      source  => 'puppet:///modules/etherpad_lite/apache-connection-tuning',
-      notify  => Service['httpd'],
-      require => File['/etc/apache2/conf.d'],
-    }
-  } else {
-    file { '/etc/apache2/conf-available':
-      ensure  => directory,
-      owner   => 'root',
-      group   => 'root',
-      mode    => '0755',
-      require => File['/etc/apache2'],
-    }
-    file { '/etc/apache2/conf-available/connection-tuning':
-      ensure  => present,
-      owner   => 'root',
-      group   => 'root',
-      mode    => '0644',
-      source  => 'puppet:///modules/etherpad_lite/apache-connection-tuning',
-      require => File['/etc/apache2/conf-available'],
-    }
-    file { '/etc/apache2/conf-enabled':
-      ensure  => directory,
-      owner   => 'root',
-      group   => 'root',
-      mode    => '0755',
-      require => File['/etc/apache2'],
-    }
-    file { '/etc/apache2/conf-enabled/connection-tuning':
-      ensure  => link,
-      target  => '/etc/apache2/conf-available/connection-tuning.conf',
-      notify  => Service['httpd'],
-      require => [
-        File['/etc/apache2/conf-enabled'],
-        File['/etc/apache2/conf-available/connection-tuning'],
-      ],
-    }
BREAKS HERE
-    fail('You must configure how SSH is being managed, either yes or no.')
BREAKS HERE
-    -> class { '::icinga2::debian::dbconfig':
-      dbtype   => 'mysql',
-      dbserver => $host,
-      dbport   => $port,
-      dbname   => $database,
-      dbuser   => $user,
-      dbpass   => $password,
-    }
BREAKS HERE
-  if $rabbit_hosts {
-    heat_config { 'DEFAULT/rabbit_host': ensure => absent }
-    heat_config { 'DEFAULT/rabbit_port': ensure => absent }
-    heat_config { 'DEFAULT/rabbit_hosts':
-      value => join($rabbit_hosts, ',')
-    }
-  } else {
-    heat_config { 'DEFAULT/rabbit_host': value => $rabbit_host }
-    heat_config { 'DEFAULT/rabbit_port': value => $rabbit_port }
-    heat_config { 'DEFAULT/rabbit_hosts':
-      value => "${rabbit_host}:${rabbit_port}"
-  if size($rabbit_hosts) > 1 {
-    heat_config { 'DEFAULT/rabbit_ha_queues': value => true }
-  } else {
-    heat_config { 'DEFAULT/rabbit_ha_queues': value => false }
-    'DEFAULT/rabbit_userid'          : value => $rabbit_userid;
-    'DEFAULT/rabbit_password'        : value => $rabbit_password;
-    'DEFAULT/rabbit_virtualhost'     : value => $rabbit_virtualhost;
BREAKS HERE
-                5: { include yum::centos::5 }
BREAKS HERE
-    file { '/usr/local/bin/logstash_optimize_index.sh':
-        ensure => absent,
-    }
-
BREAKS HERE
-    environment => "MAILTO='' GOVUK_CRAWLER_AMQP_PASS='${amqp_pass}'",
BREAKS HERE
-    content => template('gerrit/github.secure.config.erb'),
BREAKS HERE
-define base::expose_puppet_certs(
-    $ensure          = 'present',
-    $provide_private = false,
-    $provide_keypair = false,
-    $user            = 'root',
-    $group           = 'root',
-    $ssldir          = puppet_ssldir(),
-    validate_absolute_path($ssldir)
BREAKS HERE
-  mysql_grant { 'whitehall@%whitehall_%.*':
BREAKS HERE
-        'lintian',
BREAKS HERE
-#   An object type on which to target the apply rule. Valid values are `Host` and `Service`. Defaults to `Host`.
BREAKS HERE
-  require  => Class['git'],
BREAKS HERE
-        scriptalias => '/smokeping/sm.cgi',
-        path        => '/usr/share/smokeping/cgi/smokeping_cgi',
-        scriptalias => '/smokeping/smokeping.cgi',
-        path        => '/usr/share/smokeping/cgi/smokeping_cgi',
-        scriptalias => '/smokeping.cgi',
-        path        => '/usr/share/smokeping/cgi/smokeping_cgi',
BREAKS HERE
-#    InfluxDB host address. Defaults to 127.0.0.1.
-#    InfluxDB HTTP port. Defaults to 8086.
-#    InfluxDB database name. Defaults to icinga2.
-#    InfluxDB user name. Defaults to undef.
-#    InfluxDB user password. Defaults to undef.
-#    Defaults to 'false'.
-#    The value of this is used for the measurement setting in host_template. Defaults to  '$host.check_command$'
-#    The value of this is used for the measurement setting in host_template. Defaults to  '$service.check_command$'
-#    Whether to send warn, crit, min & max tagged data. Defaults to false.
-#    Whether to send check metadata e.g. states, execution time, latency etc. Defaults to false.
-#    How long to buffer data points before transfering to InfluxDB. Defaults to 10s.
-#    How many data points to buffer before forcing a transfer to InfluxDB. Defaults to 1024.
-  Enum['absent', 'present']      $ensure                 = present,
-  String                         $host                   = '127.0.0.1',
-  Integer[1,65535]               $port                   = 8086,
-  String                         $database               = 'icinga2',
-  Optional[String]               $username               = undef,
-  Optional[String]               $password               = undef,
-  Boolean                        $enable_ssl             = false,
-  Enum['none', 'puppet']         $pki                    = 'puppet',
-  Optional[Stdlib::Absolutepath] $ssl_key_path           = undef,
-  Optional[Stdlib::Absolutepath] $ssl_cert_path          = undef,
-  Optional[Stdlib::Absolutepath] $ssl_cacert_path        = undef,
-  Optional[String]               $ssl_key                = undef,
-  Optional[String]               $ssl_cert               = undef,
-  Optional[String]               $ssl_cacert             = undef,
-  String                         $host_measurement       = '$host.check_command$',
-  Hash                           $host_tags              = { hostname => '$host.name$' },
-  String                         $service_measurement    = '$service.check_command$',
-  Hash                           $service_tags           = { hostname => '$host.name$', service => '$service.name$' },
-  Boolean                        $enable_send_thresholds = false,
-  Boolean                        $enable_send_metadata   = false,
-  Pattern[/^\d+[ms]*$/]          $flush_interval         = '10s',
-  Integer[1]                     $flush_threshold        = 1024
BREAKS HERE
-      statsd_metric => "${::fqdn_metrics}.nginx_logs.mhra_proxy.http_%{@fields.status}",
-                          value => '@fields.request_time'}];
BREAKS HERE
-  $owner = lookup('owner', undef)
BREAKS HERE
-#     In virtually all cases you should import the "plugin-event-command" template to take care of this setting.
-  Array                               $import            = ['plugin-event-command'],
BREAKS HERE
-  $command = "${ipa_installer} --password ${join_pw} ${realm} --unattended --force ${homedir} ${enroll} ${dom} ${user}"
BREAKS HERE
-  $status_password                = $galera::status_password
-  $status_allow                   = $galera::status_allow
-  $status_host                    = $galera::status_host
-  $status_user                    = $galera::status_user
-  $port                           = $galera::status_port
-  $available_when_donor           = $galera::status_available_when_donor
-  $available_when_readonly        = $galera::status_available_when_readonly
-  $status_log_on_success          = $galera::status_log_on_success
-  $status_log_on_failure          = $galera::status_log_on_failure
-  $create_status_user             = $galera::create_status_user
BREAKS HERE
-  $enabled           = true,
-  $keystone_host     = '127.0.0.1',
-  $keystone_port     = '35357',
-  $keystone_protocol = 'http',
-  $keystone_user     = 'heat',
-  $keystone_tenant   = 'services',
-  $keystone_password = 'password',
-  $bind_host         = '0.0.0.0',
-  $bind_port         = '8001',
-  $verbose           = false,
-  $debug             = false,
-  validate_string($keystone_password)
-
-  file { '/etc/heat/heat-engine.conf':
-    owner   => 'heat',
-    group   => 'heat',
-    mode    => '0640',
-  }
-
-    require    => [ File['/etc/heat/heat-engine.conf'],
-    command => 'sed -i "s/%ENCRYPTION_KEY%/`hexdump -n 16 -v -e \'/1 "%02x"\' /dev/random`/" /etc/heat/heat-engine.conf',
-    onlyif  => 'grep -c ENCRYPTION_KEY /etc/heat/heat-engine.conf',
-    }
-    'DEFAULT/debug'                  : value => $debug;
-    'DEFAULT/verbose'                : value => $verbose;
-    'DEFAULT/log_dir'                : value => $::heat::params::log_dir;
-    'DEFAULT/bind_host'              : value => $bind_host;
-    'DEFAULT/bind_port'              : value => $bind_port;
BREAKS HERE
-    $storage_parts = hiera('profile::cache::base::purge_host_not_upload_re'),
BREAKS HERE
-        source => 'puppet:///modules/diffscan/diffscanpy',
BREAKS HERE
-   #http://www.apache.org/licenses/LICENSE-2.0
-        variant  => 'extras',
-        ensure  => present,
-        owner   => root,
-        group   => root,
-        mode    => '0444',
-        source  => 'puppet:///modules/dynamicproxy/logrotate',
-        ensure => 'file',
-        content => template("dynamicproxy/nginx.conf"),
-        notify => Service['nginx']
-        ensure => 'file',
-        source => 'puppet:///modules/dynamicproxy/limits.conf',
-        notify => Service['nginx']
BREAKS HERE
-            replacement  => 'snmp-exporter.ocf.berkeley:4080',
BREAKS HERE
-  $smtp_host = '127.0.0.1:25',
-  if $_smtp_auth and (! $smtp_user or ! $smtp_password) {
-    fail("smtp_user and smtp_password must be provided with smtp_auth = ${smtp_auth}")
-    if ! defined(Package[$nagios::params::package_mailx_smtp]){
-      package { $nagios::params::package_mailx_smtp:
-        ensure => present,
-      }
-    }
-
-    if $properties['service_notification_commands'] == undef {
-      $opts['service_notification_commands'] = $nagios::params::service_notification_command
-    }
-    if $properties['host_notification_commands'] == undef {
-      $opts['host_notification_commands'] = $nagios::params::service_notification_command
-    }
-    file {"${path}/cmd_notify-service-by-email-with-long-service-output.cfg":
-      ensure => present,
-      source => 'puppet:///modules/nagios/cmd_notify_service_by_email.cfg',
-      owner  => 'root',
-      group  => 'root',
-      mode   => '0644',
-    }
BREAKS HERE
-    include phabricator::migration
-
BREAKS HERE
-#   (Optional) Defaults to 3600.
-#   (Optional) Defaults to 1.
-#   (Optional) Defaults to 10.
-#   (Optional) Defaults to 10.
-#   (Optional) Defaults to 10.
-#   (Optional) Defaults to 20.
-  $database_idle_timeout   = 3600,
-  $database_min_pool_size  = 1,
-  $database_max_pool_size  = 10,
-  $database_max_retries    = 10,
-  $database_retry_interval = 10,
-  $database_max_overflow   = 20,
-  if $database_connection_real {
-    case $database_connection_real {
-      /^mysql:\/\//: {
-        $backend_package = false
-        require 'mysql::bindings'
-        require 'mysql::bindings::python'
-      }
-      /^postgresql:\/\//: {
-        $backend_package = false
-        require 'postgresql::lib::python'
-      }
-      /^sqlite:\/\//: {
-        $backend_package = $::manila::params::sqlite_package_name
-      }
-      default: {
-        fail('Unsupported backend configured')
-      }
-
-    if $backend_package and !defined(Package[$backend_package]) {
-      package {'manila-backend-package':
-        ensure => present,
-        name   => $backend_package,
-        tag    => 'openstack',
-      }
-    manila_config {
-      'database/connection':     value => $database_connection_real, secret => true;
-      'database/idle_timeout':   value => $database_idle_timeout_real;
-      'database/min_pool_size':  value => $database_min_pool_size_real;
-      'database/max_retries':    value => $database_max_retries_real;
-      'database/retry_interval': value => $database_retry_interval_real;
-      'database/max_pool_size':  value => $database_max_pool_size_real;
-      'database/max_overflow':   value => $database_max_overflow_real;
BREAKS HERE
-  $carbon_package_ensure                     = 'absent',
BREAKS HERE
-    zanata_url                 => 'https://github.com/zanata/zanata-server/releases/download/server-3.9.6/zanata-3.9.6-wildfly.zip',
-    zanata_checksum            => 'cb7a477f46a118a337b59b9f4004ef7e6c77a1a8',
BREAKS HERE
-    # Will become a parameter in followup patch
-    $instances = {}
-
-            'default' => $settings
-        version                 => 5,
-        default_instance_params => $settings,
-        base_data_dir           => $base_data_dir,
-        logstash_host           => $logstash_host,
-        logstash_gelf_port      => $logstash_gelf_port,
-        rack                    => $rack,
-        row                     => $row,
BREAKS HERE
-        auto_sync   => false,
BREAKS HERE
-    # enable when we figure why mistral tempest tests are so unstable
-    $mistral_enabled = false
-# enable when we figure why mistral tempest tests are so unstable
-# include ::openstack_integration::mistral
BREAKS HERE
-  include ocf::ssl::default
-
BREAKS HERE
-    $alt_host    = 'phab.wmfusercontent.org'
BREAKS HERE
-        $ensure_rsync = true
-        $ensure_rsync = false
BREAKS HERE
-    revision => 'master',
-    source   => 'https://git.openstack.org/openstack-infra/elastic-recheck',
BREAKS HERE
-    Optional[Stdlib::HTTPUrl]  $uri         = undef,
-    Optional[String]           $dist        = undef,
-    Optional[String]           $components  = undef,
-    Boolean                    $source      = true,
-    Boolean                    $comment_old = false,
-    Optional[Stdlib::Unixpath] $keyfile     = undef,
-    Enum['present','absent']   $ensure      = present,
-    Boolean                    $trust_repo  = false,
BREAKS HERE
-      sync_db     => $sync_db,
-      sync_db_api => $sync_db,
BREAKS HERE
-  $aliases                      = ""
BREAKS HERE
-        user       => 'nagios',
-        privileges => ['ALL = NOPASSWD: /usr/local/lib/nagios/plugins/check_puppetrun'],
-            user       => 'nagios',
-            privileges => ['ALL = NOPASSWD: /usr/local/lib/nagios/plugins/check_long_procs'],
BREAKS HERE
-      command => "mysql -h '${host}' -u '${user}' -p'${password}' '${database}' < '${ido_mysql_schema_dir}/mysql.sql'",
-      unless  => "mysql -h '${host}' -u '${user}' -p'${password}' '${database}' -Ns -e 'select version from icinga_dbversion'",
BREAKS HERE
-            'swift_password'  => $swift_account_keys[$swift_account['docker_registry']],
BREAKS HERE
-    $vfdef_str = "${content_string}[ \"${interface}\" == \"\$1\" ] && echo ${count} > /sys/class/net/${interface}/device/sriov_numvfs\n"
BREAKS HERE
-      content => template($template),
BREAKS HERE
-    # sahara is broken for Ubuntu Trusty and Debian
-    # ConfigParser.NoSectionError: No section: 'alembic'
-    $sahara_enabled  = false
-    $sahara_enabled  = true
-if $sahara_enabled {
-  include ::openstack_integration::sahara
-}
-  sahara  => $sahara_enabled,
BREAKS HERE
-  file { '/etc/X11/Xresources/XScreenSaver':
-      content => "*newLoginCommand:\n*mode: blank\n",
BREAKS HERE
-        command => "/usr/bin/pg_dumpall | gzip > ${path}/psql-all-dbs-`date \"+%Y%m%d\"`.sql.gz",
BREAKS HERE
-      $version = '1.2.4-0ubuntu0ppa2~precise'
-      $version = '1.2.4-0ubuntu0ppa2~lucid'
BREAKS HERE
-        source => 'puppet:///modules/monitor/spreadcheck-tools.yaml',
BREAKS HERE
-    repo_url_suffix => '10.x',
BREAKS HERE
-    $mistral_enabled = true
BREAKS HERE
-    package { 'munin':
BREAKS HERE
-	service { shorewall: 
BREAKS HERE
-            logo_height => '157',
BREAKS HERE
-      Exec { path  => $execPath,
BREAKS HERE
-    control_exchange => $control_exchange
BREAKS HERE
-    ensure   => '1.2.1',
BREAKS HERE
-        user    => "www-data",
BREAKS HERE
-  Variant[Boolean, String] i                 $prefix            = false,
BREAKS HERE
-  $vhost_name,
BREAKS HERE
-        exec { "make ${grid_home}":
-          command   => "mkdir -p ${grid_home}",
-          timeout   => 0,
-          logoutput => false,
-          path      => $exec_path,
-          user      => $user,
-          group     => $group,
-          creates   => $grid_home,
-          require   => Db_directory_structure["grid structure ${version}"],
-          before    => Exec["install oracle grid ${title}"],
-        }
-        file { $grid_home:
-          ensure  => directory,
-          recurse => false,
-          replace => false,
-          mode    => '0775',
-          owner   => $user,
-          group   => $group_install,
-          require => [Db_directory_structure["grid structure ${version}"], Exec["make ${grid_home}"]],
-        }
-          require   => [Db_directory_structure["grid structure ${version}"], File[$grid_home]],
BREAKS HERE
-            systemd => systemd_template('eventlogging_sync'),
BREAKS HERE
-  include nginx, spawn-fcgi
BREAKS HERE
-class varnish::zero_update($site, $auth_content, $hour = '*', $minute = '*/5') {
-        hour    => $hour,
-        minute  => $minute,
BREAKS HERE
-  # Assign this locally so that it is in scope for the template below.
-  # Required for Puppet 4
-  $deb_sysmaint_password = $galera::deb_sysmaint_password
-
-      password_hash => mysql_password($deb_sysmaint_password),
BREAKS HERE
-  $ensure  = $php::dev::params::ensure,
BREAKS HERE
-    command     => 'sleep $((RANDOM\%600)) && find /var/lib/puppet/reports -name \'*.yaml\' -mtime +7 -execdir rm {} \;',
BREAKS HERE
-  $conf_dir = $::icinga2::params::conf_dir
BREAKS HERE
-  $url = '',
-  $base = '',
BREAKS HERE
-    $repositories = hiera('profile::eventschemas::repositories', {'mediawiki' => 'mediawiki/eventschemas'})
BREAKS HERE
-    recurse => true,
BREAKS HERE
-# - $default_route: Default landing page. You can specify files, scripts or
-#       default_route => '/dashboard/elasticsearch/default',
-    $default_route = '/dashboard/file/default.json'
-    package { 'kibana':
-        provider => 'trebuchet',
-    }
-
-    file { '/etc/kibana':
-        ensure => directory,
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0755',
-    }
-    file { '/etc/kibana/config.js':
-        ensure  => present,
-        content => template('kibana/config.js'),
-        mode    => '0644',
BREAKS HERE
-#   Absolute path to the log directory. Default depends on platform, /var/log/icinga2/compat on Linux
-#   Sets how often should the log file be rotated. Valid options are: HOURLY, DAILY, WEEKLY or MONTHLY.
-#   Defaults to DAILY.
-  Enum['absent', 'present']                    $ensure          = present,
-  Stdlib::Absolutepath                         $log_dir         = "${::icinga2::params::log_dir}/compat",
-  Enum['DAILY', 'HOURLY', 'MONTHLY', 'WEEKLY'] $rotation_method = 'DAILY',
BREAKS HERE
-        require      => Base::Service_unit[$service_name],
BREAKS HERE
-# Ensure that hiera is working. Now that we depend on it for config.
-if !hiera('HIERA_SAFETY_CHECK', false) {
-  fail('Hiera does not appear to be working. Update `vagrant-govuk` and/or `vagrant reload` your VM')
BREAKS HERE
-      $healthcheck_desc      = "${title} app health check not ok"
BREAKS HERE
-  $classification = classifier::classify($rules)
-
-    notice("Classification for ${trusted[certname]}: ${classifier::inspect($classification)}")
BREAKS HERE
-  if array_true($puphpet::params::hiera['apache']['settings'], 'version')
-    and $puphpet::params::hiera['apache']['settings']['version'] in ['2.2', '22', 2.2, 22]
-  {
-    $package_version = '2.2'
-
-    $package_name = $::osfamily ? {
-      'Debian' => $::apache::params::apache_name,
-      'Redhat' => 'httpd'
-    }
-
-    $module_prefix = $::osfamily ? {
-      'Debian' => 'mod',
-      'Redhat' => 'mod'
-    }
-
-    $system_modules = []
-  } else {
-    $package_version = '2.4'
-    $package_name = $::osfamily ? {
-      'Debian' => $::apache::params::apache_name,
-      'Redhat' => 'httpd24u'
-    }
-    $module_prefix = $::osfamily ? {
-      'Debian' => 'mod',
-      'Redhat' => 'mod24u'
-    }
-    $system_modules = $::osfamily ? {
-      'Debian' => [],
-      'Redhat' => [
-        'httpd24u-filesystem',
-        'httpd24-httpd-tools',
-        'httpd24-mod_ldap',
-        'httpd24-mod_proxy_html',
-        'httpd24-mod_session',
-      ]
-    }
-    and ! ($puphpet::params::hiera['php']['settings']['version'] in ['5.3', '53'])
BREAKS HERE
-        module  => '0644',
BREAKS HERE
-    file { '/usr/local/bin/dump_sections.py':
-        source => 'puppet:///modules/profile/mariadb/dump_sections.py',
-        command => '/usr/bin/python3 /usr/local/bin/dump_sections.py >/dev/null 2>&1',
-        require => [File['/usr/local/bin/dump_sections.py'],
BREAKS HERE
-    $cumin_masters = query_nodes('Class[Role::Cumin::Master]')
BREAKS HERE
-      srange => "@resolve(${maintenance_hosts})",
BREAKS HERE
-        owner   => root,
-        group   => root,
-        owner   => root,
-        group   => root,
-        owner   => root,
-        group   => root,
-        ensure  => file,
-        owner   => root,
-        group   => root,
-        mode    => '0444',
-        source  => 'puppet:///modules/elasticsearch/logrotate',
-            owner   => root,
-            group   => root,
BREAKS HERE
-#   Defaults to the value of auth_name, but must differ from the value
-#   Defaults to the value of auth_name_v2, but must differ from the value
-  $service_name           = undef,
-  $service_name_v2        = undef,
-  # TODO(mmagr): change default service names according to default_catalog in next (M) cycle
-  if !$service_name {
-    warning('Note that service_name parameter default value will be changed to "Volume Service" (according to Keystone default catalog) in a future release. In case you use different value, please update your manifests accordingly.')
-  }
-  if !$service_name_v2 {
-    warning('Note that service_name_v2 parameter default value will be changed to "Volume Service v2" in a future release. In case you use different value, please update your manifests accordingly.')
-  }
-
BREAKS HERE
-      file {"/usr/local/etc/va.lic":
BREAKS HERE
-        device      => "/dev/mapper/vd-$volname",
BREAKS HERE
-  $sahara_enabled    = true
-  # TODO(aschultz): Sahara disabled because it was broken by
-  # https://review.openstack.org/#/c/380082 and we probably need an updated
-  # package
-  $sahara_enabled    = false
-  sahara    => $sahara_disabled,
BREAKS HERE
-#   If nothing is given, it will default to: "systemctl restart ${service name}"
-  $postsave_cmd_real = pick($postsave_cmd, "systemctl restart ${::rabbitmq::params::service_name}")
-    postsave_cmd => $postsave_cmd_real,
BREAKS HERE
-  $log_dir_mode                = '0770'
-  file { '/etc/php5/fpm/pool.d':
BREAKS HERE
-    file {
-        '/etc/puppet/puppet.conf.d/20-master.conf':
-            require => File['/etc/puppet/puppet.conf.d'],
-            content => template('puppetmaster/20-master.conf.erb'),
-            notify  => Exec['compile puppet.conf'];
-        '/etc/puppet/fileserver.conf':
-            content => template('puppetmaster/fileserver.conf.erb');
-    }
BREAKS HERE
-
-    # dbconfig config for Debian or Ubuntu
-    if $::osfamily == 'debian' {
-      file_line { "dbc-${ido_mysql_package}-install":
-        path    => "/etc/dbconfig-common/${ido_mysql_package}.conf",
-        line  => "dbc_install='false'",
-        match => '^dbc_install\s*=',
-        require => Package[$ido_mysql_package];
-      }
-      file_line { "dbc-${ido_mysql_package}-dbtype":
-        path    => "/etc/dbconfig-common/${ido_mysql_package}.conf",
-        line  => "dbc_dbtype='mysql'",
-        match => '^dbc_dbtype\s*=',
-        require => Package[$ido_mysql_package];
-      }
-      file_line { "dbc-${ido_mysql_package}-dbuser":
-        path    => "/etc/dbconfig-common/${ido_mysql_package}.conf",
-        line  => "dbc_dbuser='${user}'",
-        match => '^dbc_dbuser\s*=',
-        require => Package[$ido_mysql_package];
-      }
-      file_line { "dbc-${ido_mysql_package}-dbpass":
-        path    => "/etc/dbconfig-common/${ido_mysql_package}.conf",
-        line  => "dbc_dbpass='${password}'",
-        match => '^dbc_dbpass\s*=',
-        require => Package[$ido_mysql_package];
-      }
-      file_line { "dbc-${ido_mysql_package}-dbname":
-        path    => "/etc/dbconfig-common/${ido_mysql_package}.conf",
-        line  => "dbc_dbname='${database}'",
-        match => '^dbc_dbname\s*=',
-        require => Package[$ido_mysql_package];
-      }
-      file_line { "dbc-${ido_mysql_package}-dbserver":
-        path    => "/etc/dbconfig-common/${ido_mysql_package}.conf",
-        line  => "dbc_dbserver='${host}'",
-        match => '^dbc_dbserver\s*=',
-        require => Package[$ido_mysql_package];
-      }
-      file_line { "dbc-${ido_mysql_package}-dbport":
-        path    => "/etc/dbconfig-common/${ido_mysql_package}.conf",
-        line    => "dbc_dbport='${port}'",
-        match   => '^dbc_dbport\s*=',
-        require => Package[$ido_mysql_package];
-      }
-    } # debian dbconfig
BREAKS HERE
-      entry       => "XDEBUG/${key}",
-      value       => $value,
-      php_version => $puphpet::php::params::version_match,
-      webserver   => $puphpet::php::params::service,
-      notify      => Service[$puphpet::php::params::service],
BREAKS HERE
-    mirror  => 'http://apache.mesi.com.ar/lucene/solr',
-    version => $solr_version,
-    cores   => [ 'core-default', 'core-en', 'core-zh' ],
-    source  => "/tmp/solr-${solr_version}/contrib/analysis-extras/lucene-libs/lucene-analyzers-smartcn-${solr_version}.jar",
BREAKS HERE
-	region => 'eu-west-1'
BREAKS HERE
-    enable_mqtt           => true,
BREAKS HERE
-    directory => '/opt/graphite/backup',
BREAKS HERE
-    $backup = true,
-  if ($backup) {
-    include govuk_postgresql::backup
-  }
BREAKS HERE
-    line => "restrict -6 ${ipv6_prefix} mask ${ipv6_netmask} nomodify notrap nopeer",
BREAKS HERE
-    upstream_path => 'archlinuxcn',
BREAKS HERE
-    xen0: { include munin::plugins::dom0 }
BREAKS HERE
-$grafana_link_data = "{\"title\":\"Grafana\",\
-\"description\":\"Dashboard for visualizing metrics\",\
-\"url\":\"http://${vip}:${grafana_port}/\"}"
-$grafana_link_created_file = '/var/cache/grafana_link_created'
-
-
-  grafana_url      => "http://${vip}:${grafana_port}",
BREAKS HERE
-    # Install HHVM's source files to /usr/local/src/hhvm.
BREAKS HERE
-    # need java before hadoop is installed
-    require_package('openjdk-7-jdk')
BREAKS HERE
-  # TODO: increase the comparison period to a week so alerts don't dissapear if they happen over the weekend
-  # and extend checks to other indices
-  icinga::check::graphite { 'check_rummager_govuk_index_size_increased':
-    target    => 'divideSeries(stats.gauges.govuk.app.rummager.govuk_index.docs.count, timeShift(stats.gauges.govuk.app.rummager.govuk_index.docs.count, "1d"))',
-    warning   => 110,
-    critical  => 125,
-    desc      => 'rummager govuk index size has increased by more than 10% over the last 3 days',
-    host_name => $::fqdn,
-  icinga::check::graphite { 'check_rummager_govuk_index_size_decreased':
-    target    => 'transformNull(divideSeries(timeShift(stats.gauges.govuk.app.rummager.govuk_index.docs.count, "1d"), stats.gauges.govuk.app.rummager.govuk_index.docs.count), 10000000)',
-    warning   => 101,
-    critical  => 101,
-    desc      => 'govuk index document count from 1 week ago exceeds current count',
-    host_name => $::fqdn,
BREAKS HERE
-  if $step >= 2 and $sync_db {
-    Exec<| title == 'galera-ready'|> -> Anchor['nova::db::begin']
BREAKS HERE
-          $client_idmapd_setting      = ['set NEED_IDMAPD yes']
-          $client_nfs_options         = 'tcp,nolock,rsize=32768,wsize=32768,intr,noatime,nfsvers=3,actimeo=3'
-          $client_services_enable     = true
-          $client_nfsv4_fstype        = 'nfs4'
-          $client_nfsv4_options       = 'tcp,nolock,rsize=32768,wsize=32768,intr,noatime,actimeo=3'
-          $client_idmapd_setting      = ['set NEED_IDMAPD yes']
-          $client_nfs_options         = 'tcp,nolock,rsize=32768,wsize=32768,intr,noatime,nfsvers=3,actimeo=3'
-          $client_services_enable     = true
-          $client_nfsv4_fstype        = 'nfs4'
-          $client_nfsv4_options       = 'tcp,nolock,rsize=32768,wsize=32768,intr,noatime,actimeo=3'
-          $client_idmapd_setting      = ['set NEED_IDMAPD yes']
-          $client_nfs_options         = 'tcp,nolock,rsize=32768,wsize=32768,intr,noatime,nfsvers=3,actimeo=3'
-          $client_services_enable     = true
-          $client_nfsv4_fstype        = 'nfs4'
-          $client_nfsv4_options       = 'tcp,nolock,rsize=32768,wsize=32768,intr,noatime,actimeo=3'
-          $server_service_name        = 'nfs-kernel-server'
BREAKS HERE
-      notify  => Service['httpd'],
-    service_name                         => 'httpd',
-  }
-  include ::apache
-  class { '::nova::wsgi::apache_api':
-    bind_host => $::openstack_integration::config::ip_for_url,
-    ssl_key   => "/etc/nova/ssl/private/${::fqdn}.pem",
-    ssl_cert  => $::openstack_integration::params::cert_path,
-    ssl       => $::openstack_integration::config::ssl,
-    workers   => '2',
BREAKS HERE
-        $listen_options_real = merge($tls_listen_options, $listen_options, $custom_options)
-        $listen_options_real = merge($listen_options, $custom_options)
-      $listen_options_real = merge($listen_options, $custom_options)
-    $listen_options_real = merge($listen_options, $custom_options)
-
-  haproxy::balancermember { "${name}":
-    listening_service => $name,
-    ports             => $service_port,
-    ipaddresses       => $ip_addresses,
-    server_names      => $server_names,
-    options           => $member_options,
BREAKS HERE
-        require     => Class['::k8s::kubelet']
BREAKS HERE
-  # download archive
-  Archive {
-    cookie  => 'oraclelicense=accept-securebackup-cookie',
-    source  => $oracle_java::downloadurl,
-    cleanup => false,
-    require => File['/usr/java']
-  }
-
-  # WITH checksum check
-    archive { "/usr/java/${oracle_java::filename}":
-    # WITHOUT checksum check
-    archive { "/usr/java/${oracle_java::filename}": }
-}
BREAKS HERE
-      value => 'https://licensify.production.alphagov.co.uk/',
BREAKS HERE
-  include logrotate
BREAKS HERE
-    Debian    => $::lsbdistcodename? {
-      Wheezy  => 'rpcbind',
-    Ubuntu   => 'rpcbind',
BREAKS HERE
-        notify  => Systemd::Service['librenms-ircbot'],
-        ensure  => $ircbot_ensure,
BREAKS HERE
-          ensure => present,
-          source => "${mountPoint}/${patchFile}",
-          mode   => '0775',
-          owner  => $user,
-          group  => $group,
BREAKS HERE
-#   If set to true, a Cinde Volume type will be created
BREAKS HERE
-  file { '/etc/nginx/sites-available/ukba.homeoffice.gov.uk':
-    ensure  => present,
-    require => Class['nginx::package'],
-    notify  => Class['nginx::service'],
-  file { '/etc/nginx/sites-enabled/ukba.homeoffice.gov.uk':
-    ensure  => link,
-    target  => '/etc/nginx/sites-available/ukba.homeoffice.gov.uk',
-    require => [Class['nginx::package'], File['/etc/nginx/sites-available/ukba.homeoffice.gov.uk']],
-    notify  => Class['nginx::service']
-  }
-
BREAKS HERE
-    systemd::slice::all_users { 'bastion-systemd-user-slice':
BREAKS HERE
-  $db_dir = $postgresql::globals::datadir,
BREAKS HERE
-    labs_lvm::volume { 'second-local-disk':
-        mountat => '/srv',
-    }
BREAKS HERE
-lma::influxdb::data_dir: "<%= @influxdb_grafana["data_dir"] %>"
BREAKS HERE
-    if $manual_register  {
-    # Support vip configuration
-    file { "krb5_fixed":
-        ensure      => present,
-        path        => "/etc/krb5.conf",
-        owner       => root,
-        group       => root,
-        mode        => 0644,
-        content     => template("ipaclient/krb5.erb"),
-        require     => Exec["ipa_installer"],
BREAKS HERE
-  if !defined(Mod['rewrite']) {
-    if !defined(Mod['auth_openid']) {
BREAKS HERE
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
-        content => template('varnish/device-detection.inc.vcl.erb'),
BREAKS HERE
-        rule => 'saddr @resolve((db1011.eqiad.wmnet)) proto tcp dport (3307) ACCEPT;',
BREAKS HERE
-        $reload = $auto_refresh ? {
-            true    => "/usr/local/apply-config-${title}",
-            default => undef,
-        }
-            reload     => $reload,
BREAKS HERE
-class apache::mod::ssl           { apache::mod_conf { 'ssl':           } <- package { 'libapache2-mod-ssl':       } }
BREAKS HERE
-    $zookeeper_cluster_name = hiera('zookeeper_cluster_name')
BREAKS HERE
-            source   => 'puppet:///modules/profile/mariadb/misc/eventloggign/eventlogging_sync_rsyslog.conf',
BREAKS HERE
-      locations => {'/government/uploads' => '/data/uploads/whitehall/clean'},
BREAKS HERE
-    'libapache2-mod-php5', 'mysql-client' ]
BREAKS HERE
-    lp_sync_consumer_key                => hiera('gerrit_lp_consumer_key'),
-    lp_sync_token                       => hiera('gerrit_lp_access_token'),
-    lp_sync_secret                      => hiera('gerrit_lp_access_secret'),
-    lp_sync_consumer_key                => hiera('gerrit_dev_lp_consumer_key'),
-    lp_sync_token                       => hiera('gerrit_dev_lp_access_token'),
-    lp_sync_secret                      => hiera('gerrit_dev_lp_access_secret'),
BREAKS HERE
-  # How to remove a user:
-  #user { "johndoefake":
-  #  ensure     => absent
-  #}
-
-    user    => "garethr",
BREAKS HERE
-  $package_name = $gitlab::package_name,
-
BREAKS HERE
-    baseurl        => "http://repo.vmware.com/pub/rhel${osver[0]}/vfabric/5.2/$basearch",
BREAKS HERE
-    check_command       => 'check_nrpe!check_proc_running!splunk',
BREAKS HERE
-			$munin_node_service = "munin-munin" 
BREAKS HERE
-	debug ( "munin_plugin: name=$name, ensure=$ensure, script_path=$munin::plugin::scriptpaths::script_path" )
-			debug ( "munin_plugin: suppressing $plugin" )
-			debug ( "munin_plugin: making $plugin using src: $plugin_src" )
-			debug("no config for $name")
-					debug("removing config for $name")
-					debug("creating $plugin_conf")
-	debug ( "munin_plugin_${name}: name=$name, source=$source, script_path=$munin::plugin::scriptpaths::script_path" )
BREAKS HERE
-#   Set logging level (default: 5, min: 0, max: 11).
-    $verbosity = 5,
BREAKS HERE
-    # XXX using a literal integer as the first argument results in
-    # Error 400 on SERVER: undefined method `match' for 8801:Fixnum at
-    # /etc/puppet/modules/thumbor/manifests/init.pp:62
-    $ports = range("${listen_port + 1}", $listen_port + $instance_count)
BREAKS HERE
-    line   => sprintf('export SENTRY_DSN="%s"', $::puppet::puppetserver::sentry_dsn),
-    match  => '^export SENTRY_DSN=',
BREAKS HERE
-    file { [
-        '/var/www/planet',
-        '/var/log/planet',
-        '/usr/share/planet-venus/wikimedia',
-        '/usr/share/planet-venus/theme/wikimedia',
-        '/usr/share/planet-venus/theme/common',
-        '/var/cache/planet',
-        ]:
-        ensure => 'directory',
-        owner  => 'planet',
-        group  => 'planet',
-        mode   => '0755',
-    }
BREAKS HERE
-    $bigwikis = ['dewiki', 'eswiki', 'frwiki', 'itwiki', 'jawiki',
-                'metawiki', 'nlwiki', 'plwiki', 'ptwiki', 'ruwiki', 'commonswiki',
-                'wikidatawiki', 'zhwiki']
BREAKS HERE
-  class { 'nodejs::global': version => 'v0.12.7' }
BREAKS HERE
-      source  => 'puppet:///modules/unbound/unbound.default',
-      owner   => 'root',
-      group   => 'root',
-      mode    => '0444',
-      source  => 'puppet:///modules/unbound/dhclient.conf.debian',
-      owner   => 'root',
-      group   => 'root',
-      mode    => '0444',
BREAKS HERE
-    munin::plugin {'uptime': ensure => present, }
-		[ df_abs, forks, memory, processes, cpu, df_inode, irqstats,
-		  netstat, open_files, swap, df, entropy, interrupts, load, open_inodes,
-		  vmstat
-		]:
-
-	include munin::plugins::interfaces
-     munin::plugin { iostat: }
BREAKS HERE
-
-  $archivedir = $::puppi_archivedir ? {
-    ''      => '/var/lib/puppi/archive',
-    undef   => '/var/lib/puppi/archive',
-    default => $::puppi_archivedir,
-  }
-
-  $workdir = $::puppi_workdir ? {
-    ''      => '/tmp/puppi',
-    undef   => '/tmp/puppi',
-    default => $::puppi_workdir,
-  }
-
-  $ntp = $::ntp_server ? {
-    ''    => 'pool.ntp.org' ,
-    default => is_array($::ntp_server) ? {
-      false   => $::ntp_server,
-      true  => $::ntp_server[0],
-      default => $::ntp_server,
-    }
-  }
BREAKS HERE
-  Anchor['graphite::begin'] ->
-  Class['graphite::install'] ~>
-  Class['graphite::config'] ->
-  Anchor['graphite::end']
BREAKS HERE
-# ####`hdfs_hostname` 'localhost'
-# ####`hdfs_hostname2` 'localhost'
-# ####`yarn_hostname` 'localhost'
-# ####`yarn_hostname2` 'localhost'
-# ####`slaves` 'localhost'
BREAKS HERE
-      app_type => 'rack',
BREAKS HERE
-  include ::archive
-  $require_extraction = $oracle_java::type ? {
-    cleanup      => true,
BREAKS HERE
-# [*primary_node*]
-#   (Optional) The hostname of the first node of this role type
-#   Defaults to hiera('bootstrap_nodeid', undef)
-  $primary_node = hiera('bootstrap_nodeid', undef),
-    # Configure ODL only on first node of the role where this service is
-    # applied
-    if $primary_node == downcase($::hostname) {
BREAKS HERE
-                   $action                  = 'create',
-  $preCommand      = "${downloadDir}/rcu_${version}/rcuHome/bin/rcu -silent"
BREAKS HERE
-        require => Package['libvirt-bin'],
BREAKS HERE
-  validate_array($import)
BREAKS HERE
-        ensure    => running;
BREAKS HERE
-    members => ['localhost:4200'];
BREAKS HERE
-    # we require Package['nagios3'] because it creates the 'nagios'
-    # on Class['nagios'] because that feels a bit too restrictive - we
-    # don't want to stop nsca starting before nagios3 has started.
-    require   => [Package['icinga'],Package['nsca']],
BREAKS HERE
-  $webclient_filename = 'storyboard-webclient-latest.tar.gz'
BREAKS HERE
-    'ROUTER_PUBADDR':
-      value   => "localhost:${port}";
-    'ROUTER_APIADDR':
-      value   => ":${api_port}";
-    'ROUTER_MONGO_DB':
-      value   => $mongodb_name;
-    'ROUTER_MONGO_URL':
-      value   => join($mongodb_nodes, ',');
-    'ROUTER_ERROR_LOG':
-      value   => $error_log;
-    'ROUTER_BACKEND_HEADER_TIMEOUT':
-      value   => '20s';
BREAKS HERE
-        before => Exec['extract_openbsd'],
BREAKS HERE
-  $send_to = $lma_infra_alerting::params::nagios_contact_email,
-  validate_string($send_to)
-
-  $alias = regsubst($send_to, '@', '_AT_')
-  if is_array($contact_groups){
-    $_contact_groups_string = join($contact_groups, '_')
-  }else{
BREAKS HERE
-			#$munin_node_service = "munin-node"
-			$munin_node_service = "munin"
BREAKS HERE
-
-    file { '/var/lib/tripleo/pacemaker-restarts':
-      ensure => directory,
-    } ~> Tripleo::Pacemaker::Resource_restart_flag<||>
BREAKS HERE
-#   Provides multiple sources for the certificate, key and ca. Valid parameters are 'puppet' or 'none'.
-#           or use the ssl_key, ssl_cert, ssl_cacert parameters. Defaults to puppet.
-  Enum['ca', 'icinga2', 'none', 'puppet']                 $pki                              = 'puppet',
BREAKS HERE
-  package { 'openjdk-7-jre-headless':
-    ensure => present,
-  }
BREAKS HERE
-  } ->
-  package { "6wind-openstack-extensions":
-    ensure   => 'installed',
-    install_options => ['--allow-unauthenticated'],
BREAKS HERE
-    eplite_version => '24b0712d77abb91ebea2d67f06f565861ec008f0',
BREAKS HERE
-          $gweb_pip_hack_target = "/opt/graphite/webapp/carbon-${graphiteVersion}-py2.6.egg-info"
-          $gweb_pip_hack_target = "/opt/graphite/webapp/carbon-${graphiteVersion}-py2.7.egg-info"
BREAKS HERE
-  $refresh_icinga2_service = true
BREAKS HERE
-            'baseurl'  => 'https://trunk.rdoproject.org/centos7-master/9e/28/9e2897e0e15115db73439d5c6e957333868a9d0e_a3ee549d/',
BREAKS HERE
-    $kafka_cluster = hiera('profile::mjolnir::kafka_cluster'),
BREAKS HERE
-        ensure => present,
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0444',
-        source => 'puppet:///modules/jenkins/etc_default_jenkins',
BREAKS HERE
-  cron { 'backup-clean':
-    command => "/usr/local/bin/memstore-backup.sh -d
-    /mnt/uploads/whitehall/clean -c /etc/govuk/memstore-credentials -f $fqdn -s $name -n nagios.cluster",
-    user    => 'root',
-    hour    => 5,
-    minute  => 13,
-    require => File['/usr/local/bin/memstore-backup.sh'],
-  }
-  cron { 'backup-asset-manager':
-    command => "/usr/local/bin/memstore-backup.sh -d /mnt/uploads/asset-manager -c /etc/govuk/memstore-credentials -f $fqdn -s $title -n nagios.cluster",
-    user    => 'root',
-    hour    => 4,
-    minute  => 13,
-    require => File['/usr/local/bin/memstore-backup.sh'],
-  }
-  cron { 'backup-incoming':
-    command => "/usr/local/bin/memstore-backup.sh -d /mnt/uploads/whitehall/incoming -c /etc/govuk/memstore-credentials -f $fqdn -s $title -n nagios.cluster",
-    user    => 'root',
-    hour    => 4,
-    minute  => 20,
-    require => File['/usr/local/bin/memstore-backup.sh'],
-  }
-  cron { 'backup-draft-clean':
-    command => "/usr/local/bin/memstore-backup.sh -d /mnt/uploads/whitehall/draft-clean -c /etc/govuk/memstore-credentials -f $fqdn -s $title -n nagios.cluster",
-    user    => 'root',
-    hour    => 4,
-    minute  => 31,
-    require => File['/usr/local/bin/memstore-backup.sh'],
-  }
-
-  cron { 'backup-draft-incoming':
-    command => "/usr/local/bin/memstore-backup.sh -d /mnt/uploads/whitehall/draft-incoming -c /etc/govuk/memstore-credentials -f $fqdn -s $title -n nagios.cluster",
-    user    => 'root',
-    hour    => 4,
-    minute  => 41,
-    require => File['/usr/local/bin/memstore-backup.sh'],
BREAKS HERE
-Subproject commit 2317b48cbdd5a38767ceb8f301ef4e1cd8d349a4
BREAKS HERE
-    ensure => '8:6.7.7.10-6ubuntu3',
BREAKS HERE
-                  'oslo_messaging_amqp/pre_settled' => { value => join(any2array($pre_settled),',') },
-                  'DEFAULT/rpc_backend' => { value => 'amqp' },
BREAKS HERE
-    domains => flatten($vfqdns),
BREAKS HERE
-    if $class_parameters {
-        $param_query = inline_template('{<%=  @class_parameters.map{ |k,v| "#{k} = \"#{v}\"" }.join(", ") %>}')
-    }
-    else {
BREAKS HERE
-      'message-ttl'  => 3600000, # one hour
BREAKS HERE
-  $group = $mrepo::params::group
-  if $mrepo::params::rhn == true {
-    package { "pyOpenSSL":
-    if $operatingsystem == 'CentOS' {
-        "/etc/sysconfig/rhn":
-          ensure  => directory,
-          owner   => "root",
-          group   => "root",
-          mode    => "0755",
-      exec { "Generate rhnuuid":
-        path      => [ "/usr/bin", "/bin" ],
-        user      => "root",
-        creates   => "/etc/sysconfig/rhn/up2date-uuid",
-      file { "/etc/sysconfig/rhn/up2date-uuid":
-        owner   => "root",
-        mode    => "0640",
-        require => Exec["Generate rhnuuid"],
-      file { "/etc/sysconfig/rhn/sources":
-        owner   => "root",
-        group   => "root",
-        mode    => "0644",
-        content => "up2date default",
-      file { "/usr/share/mrepo/rhn/RHNS-CA-CERT":
-        ensure  => present,
-        owner   => "root",
-        group   => "root",
-        mode    => "0644",
-        source  => "puppet:///modules/mrepo/RHNS-CA-CERT",
-        "/usr/share/rhn":
-          owner   => "root",
-          group   => "root",
-          mode    => "0755";
-        "/usr/share/rhn/RHNS-CA-CERT":
-          target  => "/usr/share/mrepo/rhn/RHNS-CA-CERT";
BREAKS HERE
-        cron { 'swift-dispersion-stats':
BREAKS HERE
-      $cluster_setup_extras = { '--token' => hiera('corosync_token_timeout', 1000), '--ipv6' => '' }
-      $cluster_setup_extras = { '--token' => hiera('corosync_token_timeout', 1000) }
BREAKS HERE
-    war => 'http://ci.openstack.org/tarballs/gerrit-2.4.1-8-g5bbcc7f.war',
BREAKS HERE
-
BREAKS HERE
-    ensure  => directory,
-    owner   => 'bacula',
-    group   => 'bacula',
-    mode    => '0750',
BREAKS HERE
-  ruby::all::gem {'vagrant':
-    ensure => absent,
BREAKS HERE
-        match => '(I?[0-9a-f]{8,40})',
-        link  => '#q,$1,n,z',
BREAKS HERE
-    git::clone { 'wikibase/wikibase.se-deploy':
BREAKS HERE
-      'option'       => [ 'forwardfor', 'httpchk' ],
-      'option' => [ 'forwardfor', 'httpchk' ],
-
-  $default_listen_options = {
-    'option'       => [ 'httpchk', ],
-    'http-request' => [
-      'set-header X-Forwarded-Proto https if { ssl_fc }',
-      'set-header X-Forwarded-Proto http if !{ ssl_fc }'],
-  }
-    listen_options              => $default_listen_options,
-      listen_options    => merge($default_listen_options, { 'option' => [ 'httpchk GET /v3' ] }),
-      $keystone_public_tls_listen_opts = {
-        'option' => [ 'httpchk GET /v3', ],
-      }
-      listen_options    => merge($default_listen_options, $keystone_public_tls_listen_opts),
-      listen_options    => merge($default_listen_options, { 'option' => [ 'httpchk GET /healthcheck', ]}),
-      listen_options  => {
-        'option'  => [ 'httpchk', ],
-      },
-      listen_options    => merge($default_listen_options, {
-        'option'  => [ 'tcpka' ],
-      }),
-      'option'         => [ 'httpchk GET /healthcheck', ],
-    $heat_options = merge($default_listen_options, $heat_ssl_options)
-    $heat_options = $default_listen_options
BREAKS HERE
-# === Deprecated Parameters
-#
-#   Deprecated: Moved to heat::keystone::auth, will be removed in a future release.
-    warning('configure_delegated_roles and trusts_delegated_roles are deprecated in this class')
BREAKS HERE
-    require ::profile::cache::kafka::webrequest
-    include ::standard
-
-    # Other includes - to fix
-    include ::nrpe
-    include lvs::configuration
-    include network::constants
-    include conftool::scripts
BREAKS HERE
-    custom_fragment => "
-      Header unset ETag
-      FileETag none
-    ",
-    custom_fragment   => "HeaderName README.html\nReadmeName FOOTER.html",
-    custom_fragment   => "HeaderName README.html\nReadmeName FOOTER.html",
BREAKS HERE
-    libvirt_virt_type     => $libvirt_virt_type,
-    libvirt_cpu_mode      => $libvirt_cpu_mode,
-    migration_support     => true,
-    vncserver_listen      => '0.0.0.0',
-    # TODO: enable it again when puppet 4.5 will be idempotent
-    # https://tickets.puppetlabs.com/browse/PUP-6370
-    virtlock_service_name => false,
-    virtlog_service_name  => false,
BREAKS HERE
-      service_description => $drug_service_description,
-      host_name           => $::fqdn,
-      freshness_threshold => 5400, # 90 minutes
-      action_url          => $drug_job_url,
-      notes_url           => monitoring_docs_url(email-alerts);
-      service_template    => 'govuk_urgent_priority',
-      service_description => $travel_advice_service_description,
-      host_name           => $::fqdn,
-      freshness_threshold => 5400, # 90 minutes
-      action_url          => $travel_advice_job_url,
-      notes_url           => monitoring_docs_url(email-alerts);
BREAKS HERE
-
-  # fix Fedora startup - launch under group yarn
-  file { '/etc/systemd/system/hadoop-nodemanager.service':
-    owner  => 'root',
-    group  => 'root',
-    alias  => 'hadoop-nodemanager.service',
-    source => 'puppet:///modules/hadoop/hadoop-nodemanager.service',
-  }
-  ~>
-  # fix Fedora startup - reload systemd after changes
-  exec { 'nodemanager-systemctl-daemon-reload':
-    command     => 'systemctl daemon-reload',
-    path        => '/sbin:/usr/sbin:/bin:/usr/bin',
-    refreshonly => true,
-  }
BREAKS HERE
-    # Red Hat 6.x requires us to use an OLD version of puppet/nodejs (1.3.0)
-    # In this old repo they hard-code some verifications about which versions
-    # are allowed to be installed (at the time the module was released).
-    # This has changed and NodeJS 4.x is supported and can be installed on
-    # RHEL 6.x. To fake this out we need to hard code the "repo_class"
-    # to the same thing they use internally but without the leading "::"
-    # to avoid their verification checks (ugh...).
-    class { '::nodejs':
-      repo_url_suffix     => $nodejs_version,
-      repo_class          => 'nodejs::repo::nodesource',
-      manage_package_repo => $manage_repo,
BREAKS HERE
-    /(Ubuntu|Debian)/ => 'bind9'
-    /(Ubuntu|Debian)/ => 'bind9'
BREAKS HERE
-    file { '/etc/ImageMagick-6/policy.xml':
BREAKS HERE
-	$ifs = gsub(split($interfaces, " "), "(.+)", "if_\\1")
-	$if_errs = gsub(split($interfaces, " "), "(.+)", "if_err_\\1")
BREAKS HERE
-#   Graphite Carbon host address. Defaults to '127.0.0.1'.
-#   Graphite Carbon port. Defaults to 2003.
-#   Template for metric path of hosts. Defaults to 'icinga2.$host.name$.host.$host.check_command$'.
-#   Template for metric path of services. Defaults to 'icinga2.$host.name$.services.$service.name$.$service.check_command$'.
-#   Send threholds as metrics. Defaults to false.
-#   Send metadata as metrics. Defaults to false.
-  Enum['absent', 'present'] $ensure                 = present,
-  String                    $host                   = '127.0.0.1',
-  Integer[1,65535]          $port                   = 2003,
-  String                    $host_name_template     = 'icinga2.$host.name$.host.$host.check_command$',
-  String                    $service_name_template  = 'icinga2.$host.name$.services.$service.name$.$service.check_command$',
-  Boolean                   $enable_send_thresholds = false,
-  Boolean                   $enable_send_metadata   = false,
BREAKS HERE
-  $_client_packages = $st2::params::st2_client_packages
BREAKS HERE
-    # /performance is temporarily (2014-11-07) blacklisted while we
-    # do something anout the PNG endpoint crawling it. Before taking
-    # /performance out of the list, please check with James Abley or
-    # Alex Muller
-      '/government/publications.atom', '/performance']
BREAKS HERE
-  $iscsi_helper        = 'tgtadm'
BREAKS HERE
-          'pîke-puppet-passed-ci' => {
BREAKS HERE
-          $yum_basearch = $::architecture ? {
-            'i386'  => 'i686',
-            default => $::architecture,
-          }
-          $yum_basearch = $::architecture ? {
-            'i386'  => 'i686',
-            default => $::architecture,
-          }
BREAKS HERE
-        postgresql::server::role { $user:
-    postgresql::server::db {$db_name:
-        govuk_postgresql::extension { $temp_extensions: }
BREAKS HERE
-  a2mod { 'rewrite':
-    ensure => present,
-  a2mod { 'proxy':
-    ensure => present,
-  a2mod { 'proxy_http':
-    ensure => present,
BREAKS HERE
-    '5.4' => 'ondrej/php5-oldstable',
-    '5.6' => 'ondrej/php',
-    '7.0' => 'ondrej/php'
BREAKS HERE
-    $deps = ['graphite-carbon', 'python-whisper']
-    require_package($deps)
BREAKS HERE
-    $prometheus_ferm_srange = "@resolve((${prometheus_ferm_nodes})) @resolve((${prometheus_ferm_nodes}), AAAA)"
BREAKS HERE
-        ensure => running,
BREAKS HERE
-    # Set umask for wikidev users so that newly-created files are g+w.
-    # This makes shared ownership of $install_directory easier
-    file { '/etc/profile.d/umask-wikidev.sh':
-        ensure => present,
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0444',
-        source => 'puppet:///modules/vagrant/umask-wikidev-profile-d.sh',
-    }
-
BREAKS HERE
-      content => template('govuk_postgresql/usr/local/bin/wal-e_env_sync'),
BREAKS HERE
-        }
BREAKS HERE
-  $ssl_cert      = "${::puppet::server_ssl_dir}/certs/${::fqdn}.pem"
-  $ssl_cert_key  = "${::puppet::server_ssl_dir}/private_keys/${::fqdn}.pem"
BREAKS HERE
-    # TODO: copied from classroom::windows; we should refactor both classes for reusability
-    user { 'Administrator':
-      ensure => present,
-      groups => ['Administrators'],
-    }
-
-    chocolateyfeature { 'allowEmptyChecksums':
-      ensure => enabled,
-    }
-    Chocolateyfeature['allowEmptyChecksums'] -> Package<| provider == 'chocolatey' |>
-
-    # Windows Agents
-    class {'chocolatey':
-      chocolatey_download_url => 'https://chocolatey.org/api/v2/package/chocolatey/0.10.3',
-    }
-
-    include classroom::windows::disable_esc
-    include classroom::windows::enable_rdp
-    include classroom::windows::geotrust
-    windows_env { 'PATH=C:\Program Files\Puppet Labs\Puppet\sys\ruby\bin': }
BREAKS HERE
-  $real_settings = hiera_hash('::php::settings', $settings)
BREAKS HERE
-    if os_version('debian >= jessie || ubuntu >= wily') {
-        # configuration directory changed since ImageMagick 8:6.8.5.6-1
-        $confdir = '/etc/ImageMagick-6'
-    } else {
-        $confdir = '/etc/ImageMagick'
-    }
-
-    file { "${confdir}/policy.xml":
BREAKS HERE
-  include apache
-    include apache::ssl
-        before  => Apache::Vhost[$site_name],
-        before  => Apache::Vhost[$site_name],
-        before  => Apache::Vhost[$site_name],
-  apache::vhost { $site_name:
-  a2mod { 'rewrite':
BREAKS HERE
-  if $classroom::managerepos {
BREAKS HERE
-    class { '::etcd::v3::monitoring': }
BREAKS HERE
-    $enable=true,
-        enable    => $enable,
BREAKS HERE
-  # FIXME: Fix to reset rubygems to Precise version
-  # Described in https://www.pivotaltracker.com/story/show/76786302
-
-  # This is purely to reset the stub, it doesn't seem to affect versioning
-  exec { 'reinstall correct ruby1.9.1 package':
-    user    => 'root',
-    command => 'apt-get -y --force-yes --reinstall install ruby1.9.1=1.9.3.0-1ubuntu2.8 libruby1.9.1=1.9.3.0-1ubuntu2.8 ruby1.9.1-dev=1.9.3.0-1ubuntu2.8',
-    unless  => 'echo "3afb14dbac5fb97eb505fa4f74469c19  /usr/bin/gem1.9.1" | /usr/bin/md5sum -c --status',
-    require => Exec['apt_update'],
-  }
-
-  # Once we have removed the excess rubygems.rb and rbconfig in /usr/local/lib, our
-  # gems will be in the wrong place. Ubuntu expects them to be in /var/lib/gems
-  exec { 'migrate /usr/lib/ruby/gems to /var/lib/gems':
-    user    => 'root',
-    command => 'mv /usr/lib/ruby/gems /var/lib/',
-    unless  => 'test -d /var/lib/gems',
-    require => Exec['reinstall correct ruby1.9.1 package'],
-  }
-
-  # The version of rubygems embedded in the system ruby (and rbconfig) are overridden
-  # by the copies in /usr/local/lib/site_ruby/1.9.1, by removing them we revert back
-  # to the version supplied in the ruby1.9.1 package (/usr/lib/ruby/1.9.1/rubygems.rb)
-  exec { 'remove weird rubygems in /usr/local/lib':
-    user    => 'root',
-    command => 'mv /usr/local/lib/site_ruby/1.9.1 /root/',
-    onlyif  => 'test -f /usr/local/lib/site_ruby/1.9.1/rubygems.rb',
-    require => Exec['migrate /usr/lib/ruby/gems to /var/lib/gems'],
-  }
-  # End Rubygems fix
-
BREAKS HERE
-    require_package('udp-filter')
-
BREAKS HERE
-lma::elasticsearch::vip: <%= @vip%>
-lma::elasticsearch::kibana_port: 80
-lma::elasticsearch::recover_after_time: <%= @recover_after_time %>
BREAKS HERE
-  class { '::mysql::server':
-    config_hash => {
-      'root_password'  => $mysql_root_password,
-      'default_engine' => 'InnoDB',
-      'bind_address'   => '127.0.0.1',
BREAKS HERE
-  $full_version = '2.46.0',
-  $major_version = '2.46',
-  package { ['openjdk-6-jre-headless', 'xvfb']:
-    ensure => '28.0+build2-0ubuntu2',
BREAKS HERE
-class toollabs::hba($store) {
-        require => File['/usr/local/sbin/project-make-shosts', $store],
-        require => File['/usr/local/sbin/project-make-access', $store],
BREAKS HERE
-    case $facts['os']['family'] {
-      'Debian': {
-        # Debian is a litte stupid: The pear package is called 'php-pear'
-        # even though others are called 'php5-fpm' or 'php5-dev'
-        $package_name = "php-${::php::params::pear_package_suffix}"
-      }
-      'Amazon': {
-        # On Amazon Linux the package name is also just 'php-pear'.
-        # This would normally not be problematic but if you specify a
-        # package_prefix other than 'php' then it will fail.
-        $package_name = "php-${::php::params::pear_package_suffix}"
-      }
-      'FreeBSD': {
-        # On FreeBSD the package name is just 'pear'.
-        $package_name = $::php::params::pear_package_suffix
-      }
-      default: {
-        # This is the default for all other architectures
-        $package_name = "${::php::package_prefix}${::php::params::pear_package_suffix}"
BREAKS HERE
-  $downcased_fqdn = downcase($fqdn)
-  $ca_file          = pick($::rh_certificate_repo_ca_file, "${ssl_dir}/certs/ca.pem")
-  $host_certificate = pick($::rh_certificate_consumer_host_cert, "${ssl_dir}/certs/${$downcased_fqdn}.pem")
-  $host_private_key = pick($::rh_certificate_consumer_host_key, "${ssl_dir}/private_keys/${$downcased_fqdn}.pem")
BREAKS HERE
-    $nova_controller = hiera('profile::openstack::base::nova_controller'),
-    $observer_user = hiera('profile::openstack::base::observer_user'),
-    $observer_pass = hiera('profile::openstack::base::observer_password'),
-    $observer_project = hiera('profile::openstack::base::observer_project'),
-        nova_controller                          => $nova_controller,
-        observer_user                            => $observer_user,
-        observer_pass                            => $observer_pass,
-        observer_project                         => $observer_project,
BREAKS HERE
-define extension_script($script = '') {
BREAKS HERE
-    global_version => '1.5.1',
-  goenv::version { ['1.3.3', '1.4.2', '1.4.3', '1.5.1']: }
BREAKS HERE
-    '/opt/share/xsession/lightdm-gtk-greeter.po':
-      source  => 'puppet:///modules/ocf_desktop/xsession/lightdm/lightdm-gtk-greeter.po';
-      command     => 'msgcat /opt/share/xsession/lightdm-gtk-greeter.po | msgfmt -o \
-                      /usr/share/locale/en_US/LC_MESSAGES/lightdm-gtk-greeter.mo -',
-      subscribe   => File['/opt/share/xsession/lightdm-gtk-greeter.po'],
BREAKS HERE
-			$munin_node_service = "munin-munin" 
BREAKS HERE
-      mode    => '0700',
-      mode   => '0500',
-      mode   => '0500',
BREAKS HERE
-    # For when we deploy the web nodes
-
-    # sonofgridengine::queue { 'webgrid-lighttpd':
-    #     config => 'profile/toolforge/grid/queue-webgrid.erb',
-    # }
-
-    # sonofgridengine::queue { 'webgrid-generic':
-    #     config => 'profile/toolforge/grid/queue-webgrid.erb',
-    # }
-
BREAKS HERE
-  $xdebug_package = $::osfamily ? {
-    'Debian' => 'php5-xdebug',
-    'Redhat' => 'php-pecl-xdebug'
-  }
-
BREAKS HERE
-    sysctl { 'kernel.sysrq': value => "${limited_sysrq}" }
-    sysctl { 'kernel.sysrq': value => "0" }
BREAKS HERE
-    package_name => 'libapache2-mod-php5.6',
-    path => '/usr/lib/apache2/modules/libphp5.6.so',
BREAKS HERE
-  package { $package:
-    ensure => $package_ensure,
BREAKS HERE
-    enable_module_loading   => $enable_module_loading,
-    load_modules            => $load_modules,
-    cpu_vendor              => $cpu_vendor,
-    desktop_enabled         => $desktop_enabled,
-    enable_ipv4_forwarding  => $enable_ipv4_forwarding,
-    enable_ipv6             => $enable_ipv6,
-    enable_ipv6_forwarding  => $enable_ipv6_forwarding,
-    arp_restricted          => $arp_restricted,
-    enable_sysrq            => $enable_sysrq,
-    enable_core_dump        => $enable_core_dump,
-    enable_stack_protection => $enable_stack_protection,
BREAKS HERE
-# $server_manifest_path::             Path to puppet site.pp manifest (only when
-#                                     $server_git_repo_path and $server_dynamic_environments
-#                                     are false)
-#                                     type:string
-#
-  $server_manifest_path            = $puppet::params::server_manifest_path,
BREAKS HERE
-  if ($::os_package_type == 'debian') {
-    $service_name = 'cinder-api'
-  } else {
-    $service_name = 'httpd'
-  }
-    service_name               => $service_name,
-  if ($::os_package_type != 'debian') {
-    include ::apache
-    class { '::cinder::wsgi::apache':
-      bind_host => $::openstack_integration::config::ip_for_url,
-      ssl       => $::openstack_integration::config::ssl,
-      ssl_key   => "/etc/cinder/ssl/private/${::fqdn}.pem",
-      ssl_cert  => $::openstack_integration::params::cert_path,
-      workers   => 2,
-    }
BREAKS HERE
-      Concat {
-        owner => 'Administrators',
-        group => 'NETWORK SERVICE',
-        mode  => '0770',
BREAKS HERE
-        match => '(I[0-9a-f]{8,40})',
BREAKS HERE
-        command => "echo \"\$\$: Starting dispatcher\" >> ${dispatch_log_file}; /usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki --max-time 540 --batch-size 420 --dispatch-interval 25 --randomness 15 >> ${dispatch_log_file} 2>&1; echo \"\$\$: Dispatcher exited with $?\" >> ${dispatch_log_file}",
BREAKS HERE
-    require_package('nodejs', 'firejail')
BREAKS HERE
-      $fpm_package_suffix      = 'php-fpm'
BREAKS HERE
-            ensure => 'present',
-            source => 'puppet:///modules/planet/theme/rawdog_style.css';
-            ensure => 'present',
-            source => template('planet/html/rd_page.html.tmpl.erb');
-            ensure => 'present',
-            source => template('planet/html/rd_item.html.tmpl.erb');
-            ensure => 'present',
-            source => template('planet/html/rd_feedlist.html.tmpl.erb');
BREAKS HERE
-        monitor_service { 'puppetmaster_https':
-            description     => 'puppetmaster https',
BREAKS HERE
-    remove_default_accounts => $pacemaker_master,
BREAKS HERE
-  rabbitmq_user { 'watcher':
-    admin    => true,
-    provider => 'rabbitmqctl',
-    require  => Class['rabbitmq'],
-  }
-  rabbitmq_user_permissions { 'watcher@/':
-    configure_permission => '.*',
-    write_permission     => '.*',
-    read_permission      => '.*',
-    provider             => 'rabbitmqctl',
-    require              => Class['rabbitmq'],
-  }
-
-  if $::openstack_integration::config::messaging_default_proto == 'amqp' {
-    qdr_user { 'watcher':
-      password => 'my_secret',
-      provider => 'sasl',
-      require  => Class['::qdr'],
-    }
BREAKS HERE
-  $package_ensure = 'latest',
BREAKS HERE
-    ensure  => present,
-    content => template('govuk/node/s_graphite/prune-whisper-files.erb'),
-    owner   => 'root',
-    group   => 'root',
-    mode    => '0755',
BREAKS HERE
-  path => "/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin"
-$extlookup_datadir = "/usr/share/puppet/production/current/extdata"
-$extlookup_precedence = ["%{fqdn}", "domain_%{domain}", "common"]
-import "modules.pp"
-import "classes/*"
-import "nodes.pp"
BREAKS HERE
-    requires => Exec["make_known_hosts"],
BREAKS HERE
-
-    file { '/etc/init/keyholder-agent.conf':
-        source => 'puppet:///modules/keyholder/keyholder-agent.conf',
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0444',
-        notify => Service['keyholder-agent'],
-    service { 'keyholder-agent':
-        ensure   => running,
-        provider => 'upstart',
-        require  => File['/run/keyholder'],
-    }
-
-
-
-    file { '/etc/init/keyholder-proxy.conf':
-        source => 'puppet:///modules/keyholder/keyholder-proxy.conf',
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0444',
-        notify => Service['keyholder-proxy'],
-    }
-
-    service { 'keyholder-proxy':
-        ensure   => running,
-        provider => 'upstart',
-        require  => Service['keyholder-agent'],
-
-
BREAKS HERE
-define munin::plugin::deploy ($source = '', $enabled = 'true') {
-    if $enabled {
-        plugin{$name: ensure => present }
-    }
BREAKS HERE
-  package { ['puppetdb-ruby', 'colorize']:
BREAKS HERE
-  Enum['FS', 'CFS', 'ASM'] $storage_type                          = lookup('oradb::database::storage_type'),
-  if ( $storage_type in lookup('oradb::instance_storage_type') == false ) {
-    fail('data_file_destination is required on version 12.2 when storage_type and templaten are defined')
-        $command_pre = "${elevation_prefix}${oracle_home}/bin/dbca -silent -createDatabase -templateName ${templatename} -gdbname ${globaldb_name} -sid ${db_name} -characterSet ${character_set} -responseFile NO_VALUE -sysPassword ${sys_password} -systemPassword ${system_password} -dbsnmpPassword ${db_snmp_password} -asmsnmpPassword ${asm_snmp_password} -storageType ${storage_type} -emConfiguration ${em_configuration} "
-        $command_pre = "${elevation_prefix}${oracle_home}/bin/dbca -silent -createDatabase -templateName ${templatename} -gdbname ${globaldb_name} -sid ${db_name} -characterSet ${character_set} -createAsContainerDatabase ${container_database} -responseFile NO_VALUE -sysPassword ${sys_password} -systemPassword ${system_password} -dbsnmpPassword ${db_snmp_password} -asmsnmpPassword ${asm_snmp_password} -storageType ${storage_type} -emConfiguration ${em_configuration} "
-      $command = "${command_pre} ${command_data_file} ${command_var} ${command_init} ${command_nodes} ${elevation_suffix}"
BREAKS HERE
-  $python_version         = '2.7',
-  # Create our install directory with a python-versioned name (because venv).
-  $install_api_root       = "/var/lib/refstack-py${python_version}"
-
BREAKS HERE
-    
BREAKS HERE
-        # yum-plugin-priorities is already managed by ::ceph::repo
-        manage_priorities => false,
-        manage_rdo        => false,
-        manage_epel       => false,
-        repo_hash         => {
-  class { '::ceph::repo': }
BREAKS HERE
-# Run the web portion of the coal service (provides metrics for
-# performance.wikimedia.org)
-class coal::web() {
-
-    # Include common things for coal
-}
BREAKS HERE
-    notify  => Service[$ossec::params::server_service]
BREAKS HERE
-    version => '3',
BREAKS HERE
-        class { 'ldap::client::openldap':
-        class { 'ldap::client::pam':
-            ldapconfig => $ldapconfig
-        class { 'ldap::client::nss':
-            ldapconfig => $ldapconfig
-        class { 'ldap::client::sudo':
-            ldapconfig => $ldapconfig
-        class { 'ldap::client::utils':
-            ldapconfig => $ldapconfig
BREAKS HERE
-    content => regsubst(epp("oradb/dbora_${::kernel}.epp",
BREAKS HERE
-    firewall { '100 allow traffic to/fro VMs':
BREAKS HERE
-  $domain = extlookup('app_domain_suffix', 'dev.gov.uk')
BREAKS HERE
-  include ::chromedriver
BREAKS HERE
-		debian: {	$munin_node_service = "munin-node"; }
-		gentoo: {	$munin-node_service = "munin"; }
-		gentoo: {	$munin_node_service = "munin"; }
-		debian: {	$munin_node_service = "munin-node"; }
-				mode => 0755, owner => root, group => root;
-				mode => 0644, owner => root, group => root;
BREAKS HERE
-  apache::vhost { 'local.moodle.dev':
BREAKS HERE
-class varnish::common::vcl {
BREAKS HERE
-    if os_version ( 'debian <= jessie || ubuntu <= precise') {
BREAKS HERE
-      ensure     => '1.0.13',
BREAKS HERE
-    $version = '3.7.2-1',
BREAKS HERE
-  if ("test -L /etc/init.d/${service}") {
-    notify {"Service ${service} exists ": }
-  }  
-  
-  service { "Service ${service} exists ":
-    ensure => 'stopped',
-    name   => $service,
-    enable => false
-  }
-
-  
-  if ("test -L /etc/init.d/${collectorService}") {
-    notify {"Service ${collectorService} exists ": }
-  }  
-  service { "Service ${collectorService} exists ":
-    ensure => 'stopped',
-    name   => $collectorService,
-    enable => false
-  }
-  
-    
-  if ("test -L /etc/init.d/${dynaTraceAnalysis}") {
-    notify {"Service ${dynaTraceAnalysis} exists ": }
-  }  
-  service { "Service ${dynaTraceAnalysis} exists ":
-    ensure => 'stopped',
-    name   => $dynaTraceAnalysis,
-    enable => false
-  }
-
-      
-  if ("test -L /etc/init.d/${dynaTraceWebServerAgent}") {
-    notify {"Service ${dynaTraceWebServerAgent} exists ": }
-  }  
-  service { "Service ${dynaTraceWebServerAgent} exists ":
-    ensure => 'stopped',
-    name   => $dynaTraceWebServerAgent,
-    enable => false
-  }
-  
-        
-  if ("test -L /etc/init.d/${dynaTraceHostagent}") {
-    notify {"Service ${dynaTraceHostagent} exists ": }
-  }  
-  service { "Service ${dynaTraceHostagent} exists ":
-    ensure => 'stopped',
-    name   => $dynaTraceHostagent,
-    enable => false
-  }
-      
-  exec {"Stop the ${role_name}'s service: '${dynaTraceHostagent}'":    #hack to ensure restart service (stop service then start it) [there is no possibility in puppet to use the same name of service in different stauses because of error 'Cannot alias Service']
-    command => "service ${dynaTraceHostagent} stop",
-    path    => ['/usr/bin', '/usr/sbin', '/bin', '/sbin'],
-    onlyif  => ["test -L /etc/init.d/${dynaTraceHostagent}"],
-  } ->
-  
-  dynatrace_installation { "Uninstall the ${role_name}":
-    installer_prefix_dir  => $installer_prefix_dir,
-    installer_file_name   => $installer_file_name,
-    installer_file_url    => $installer_file_url,
-    installer_script_name => 'install-server.sh',
-    installer_path_part   => 'server',
-    installer_path_detailed => '',
-    installer_owner       => $dynatrace_owner,
-    installer_group       => $dynatrace_group,
-    installer_cache_dir   => $installer_cache_dir,
-  } ->
-#    notify               => tidy ['clean /tmp folder from dynatrace files']
-#  }
-  
BREAKS HERE
-    statsd_prefix            => 'zuulv3-dev',
BREAKS HERE
-        srange => '$DOMAIN_NETWORKS',
BREAKS HERE
-  $user  = $::icinga2::params::user
-  $group = $::icinga2::params::group
-      owner  => $user,
-      group  => $group,
BREAKS HERE
-Subproject commit 59ff34a2157dea4ed27cc8aa1cef27a46a0948ea
BREAKS HERE
-    Exec<| tag == 'mistral' |> -> Service['mistral']
-    
BREAKS HERE
-        }
-        require => Apt::Source['newrelic_infra-agent'],
BREAKS HERE
-        owner     => $icinga::icinga_user,
-        group     => $icinga::icinga_group,
BREAKS HERE
-        <%- if @deny_framing -%>
-        # Avoid the asset being embedded in other pages[1]
-        # This header is already set in the outer virtual host config but the
-        # presence of additional `add_header` calls in this `location` block
-        # mean that the value from the outer block is not being inherited[2].
-        # [2]: http://nginx.org/en/docs/http/ngx_http_headers_module.html#add_header
-        add_header X-Frame-Options DENY;
-        <%- end -%>
-        <%- if @deny_framing -%>
-        # Avoid the asset being embedded in other pages[1]
-        # This header is already set in the outer virtual host config but the
-        # presence of additional `add_header` calls in this `location` block
-        # mean that the value from the outer block is not being inherited[2].
-        # [2]: http://nginx.org/en/docs/http/ngx_http_headers_module.html#add_header
-        add_header X-Frame-Options DENY;
-        <%- end -%>
BREAKS HERE
-        ensure => file,
-        owner  => root,
-        group  => letsencrypt,
-        mode   => '0755',
-        source => 'puppet:///modules/letsencrypt/letsencrypt_get_certificate_chain.sh',
BREAKS HERE
-    class { '::confluent::kafka::client':
BREAKS HERE
-    creates => $_ssl_key,
BREAKS HERE
-    to_version => '1.9.3-p392'
BREAKS HERE
-    include ::neutron::agents::bgp_dragent
BREAKS HERE
-#   A php.ini compatible timezone
-#   http://www.php.net//manual/en/datetime.configuration.php
-#   The path on disk to place a file for holding a tag
-#   in the repos until the phab_update_tag command is run by root.
-#   The tag in the Phabricator repos to maintain.
-#    install until the phab_update_tag command is run.  This needs to be an
-#   A hash of configuration options for the local settings json file.
-#   https://secure.phabricator.com/book/phabricator/article/advanced_configuration/#configuration-sources
-#   Specify to use a different user for schema upgrades and database maintenance
-#   Requires: mysql_admin_pass
-#   Specify to use a different password for schema upgrades and database maintenance
-#   Requires: mysql_admin_user
-#   Specify a template to match the provided login mechanisms
-#   Track extension revision
-#   Track extension revision
-#   Array of extensions to load
-#  class { 'phabricator':
-#    git_tag   => 'demo',
-#    lock_file => '/var/run/phab_repo_lock',
-#     settings  => {
-#      'phabricator.base-uri' => 'http://myurl.domain',
-#    },
-#  }
-        'local':  { $auth_template = 'auth_log_message_local.erb' }
-        'sul':  { $auth_template = 'auth_log_message_sul.erb' }
-        'dual': { $auth_template = 'auth_log_message_dual.erb'}
-        default: { fail ('please set an auth type for the login message') }
-        content => template("phabricator/${lsbdistcodename}_php.ini.erb"),
-            ensure  => directory,
-            owner   => 'www-data',
-            group   => 'www-data',
-            require => Git::Install['phabricator/phabricator'],
-        content => template('phabricator/phab_update_tag.erb'),
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0500',
-            command   => "${create_index} && touch ${phabdir}/needs_es_indexed_false",
-            creates   => "${phabdir}/needs_es_indexed_false",
-            logoutput => true,
-            require   => File["${phabdir}/phabricator/conf/local/local.json"],
BREAKS HERE
-#  # basic usage, accepting all defaults in ::st2::auth
-#  include ::st2::auth::flat_file
-#
-#  # advanced usage for overriding defaults in ::st2::auth
-#  class { 'st2::auth':
-#    backend        => 'flat_file',
-#    backend_config => {
BREAKS HERE
-$mido_repo = $operatingsystem ? {
-  'CentOS' => "http://repo.midonet.org/midonet/${m_version}/RHEL",
-  'Ubuntu' => "http://repo.midonet.org/midonet/${m_version}"
-}
-class {'::midonet::repository':
-  midonet_repo       => $mido_repo,
-  manage_distro_repo => false,
-  openstack_release  => 'juno'
-} ->
BREAKS HERE
-Subproject commit d6182892c5f71081306e4a616d012ed8687fb20b
BREAKS HERE
-Subproject commit 86786f792252b21fdfcc08d321d254c8758f868a
BREAKS HERE
-    include ::contint::package_builder
BREAKS HERE
-  $drushdsdtar     = 'https://github.com/mkissam/drush-dsd/archive/v0.10.tar.gz',
BREAKS HERE
-        command => "echo \"\$\$: Starting dispatcher\" >> ${dispatch_log_file}; /usr/local/bin/mwscript extensions/Wikidata/extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki --max-time 540 --batch-size 420 --dispatch-interval 25 --randomness 5 >> ${dispatch_log_file} 2>&1; echo \"\$\$: Dispatcher exited with $?\" >> ${dispatch_log_file}",
BREAKS HERE
-    ipa::loadbalanceconf { "master${::fqdn}":
BREAKS HERE
-  include nagios # to set up the 'nagios' user
-
-  package {'nsca':
-    ensure => installed,
-  }
BREAKS HERE
-
-  # This is required to allow Puppet to set the password hash for the ubuntu user
-  # TODO: Provide this under different rbenv versions?
-  package { 'libshadow':
-    ensure   => present,
-    provider => gem,
-    require  => Package['build-essential'],
-  }
BREAKS HERE
-      create_resources($resource_type, $resources, {tag => 'gitlab_omnibus_repository_resource'})
-
-    # ensure all repository configuration are in place before the gitlab omnibus package is installed
-    Resource <| tag == 'gitlab_omnibus_repository_resource' |> -> Package['gitlab-omnibus']
BREAKS HERE
-  $ensure       = present,
-  $display_name = $title,
-  $groups       = [],
-  $assign       = [],
-  $ignore       = [],
-  $template     = false,
-  $import       = [],
-  $order        = '65',
-  $target       = undef,
-
-  validate_string ( $display_name )
-    object_name => $name,
BREAKS HERE
-                    'host' => '127.0.0.1',
-                    'BROKER_URL'            => 'redis://127.0.0.1:6379',
-                    'CELERY_RESULT_BACKEND' => 'redis://127.0.0.1:6379',
BREAKS HERE
-      fail("Puppet version not supported")
-      fail("Puppet 2.7 version not supported")
-      fail("Puppet 2.7 version not supported")
-      content  => template('puppet/centos-puppetlabs.repo.erb'),
- }
BREAKS HERE
-    $pm_service = !$passenger and $service_fallback
-    $ps_service = undef
-    $pm_service = undef
-    $ps_service = true
BREAKS HERE
-    provider => $::icinga2::package_provider,
BREAKS HERE
-  -> Python::Pip['st2-auth-backend-ldap']
BREAKS HERE
-        command => "/usr/bin/hdfs dfsadmin -fetchImage ${destination} > /dev/null 2>&1 ",
BREAKS HERE
-    to_version => '2.3.0',
BREAKS HERE
-  # Deep merge global php settings
-  $real_settings = deep_merge($settings, lookup('php::settings', {value_type => Hash, merge => 'deep', default_value => {}}))
-
-  # Deep merge global php extensions
-  $real_extensions = deep_merge($extensions, lookup('php::extensions', {value_type => Hash, merge => 'deep', default_value => {}}))
-
-  # Deep merge fpm_pools
-  $real_fpm_pools = deep_merge($fpm_pools, lookup('php::fpm_pools', {value_type => Hash, merge => 'deep', default_value => {}}))
-
-  # Deep merge fpm_global_pool_settings
-  $real_fpm_global_pool_settings = deep_merge($fpm_global_pool_settings, lookup('php::fpm_global_pool_settings', {value_type => Hash, merge => 'deep', default_value => {}}))
BREAKS HERE
-  $config_dir   = $::graphite::web::config_dir
-  $http_config_dir = $::graphite::web::params::http_config_dir
-  $log_dir      = $::graphite::web::params::log_dir
-  $service_name = $::graphite::web::params::service_name
-  $django_root_dir = $::graphite::params::django_root_dir
-  $graphite_root = $::graphite::web::params::graphite_root
-  $whisper_dir = $::graphite::web::params::whisper_dir
-    ensure    => file,
-    path      => "${config_dir}/local_settings.py",
-    owner     => 'root',
-    group     => 'root',
-    mode      => '0644',
-    notify    => Service[$service_name],
-    content   => template('graphite/local_settings.py.erb'),
-    require   => Package['graphite-web'],
-      owner   => 'apache',
-      owner   => 'carbon',
-      owner   => 'root',
-      content => template("graphite/apache2.conf.${::osfamily}.erb");
-      owner   => 'root',
-      content => template("graphite/apache2.conf.${::osfamily}.erb");
BREAKS HERE
-        prometheus_url => "http://prometheus.svc.${::site}.wmnet/ops/",
-        prometheus_url => "http://prometheus.svc.${::site}.wmnet/ops/",
BREAKS HERE
-    include ::profile::analytics::database::meta
-
BREAKS HERE
-
-
BREAKS HERE
-# [*messaging_driver*]
-#   Driver for messaging service.
-#   Defaults to hiera('messaging_service_name', 'rabbit')
-# [*messaging_hosts*]
-#   list of the messaging host fqdns
-# [*messaging_password*]
-#   Password for messaging nova queue
-# [*messaging_port*]
-#   IP port for messaging service
-# [*messaging_username*]
-#   Username for messaging nova queue
-# [*messaging_use_ssl*]
-#   Flag indicating ssl usage.
-  $bootstrap_node       = hiera('bootstrap_nodeid', undef),
-  $libvirt_enabled      = false,
-  $manage_migration     = false,
-  $messaging_driver     = hiera('messaging_service_name', 'rabbit'),
-  $messaging_hosts      = any2array(hiera('rabbitmq_node_names', undef)),
-  $messaging_password   = hiera('nova::rabbit_password'),
-  $messaging_port       = hiera('nova::rabbit_port', '5672'),
-  $messaging_username   = hiera('nova::rabbit_userid', 'guest'),
-  $messaging_use_ssl    = hiera('nova::rabbit_use_ssl', '0'),
-  $nova_compute_enabled = false,
-  $step                 = hiera('step'),
-    $messaging_use_ssl_real = sprintf('%s', bool2num(str2bool($messaging_use_ssl)))
-      default_transport_url => os_transport_url({
-        'transport' => $messaging_driver,
-        'hosts'     => $messaging_hosts,
-        'port'      => sprintf('%s', $messaging_port),
-        'username'  => $messaging_username,
-        'password'  => $messaging_password,
-        'ssl'       => $messaging_use_ssl_real,
BREAKS HERE
-      before  => Httpd::Vhost[$name],
-      before  => Httpd::Vhost[$name],
-      before  => Httpd::Vhost[$name],
BREAKS HERE
-    include ::apache::mod::perl
-    include ::apache::mod::remoteip
-    include ::apache::mod::rewrite
-    include ::apache::mod::headers
-    class { '::apache::mpm':
-    apache::site { 'ticket.wikimedia.org':
BREAKS HERE
-include ::openstack_integration::sahara
BREAKS HERE
-  $grafana_home_dashboard = '/dashboard/db/logging-monitoring-and-alerting'
BREAKS HERE
-  $username,
-  $project_username,
BREAKS HERE
-    notify { "extenstions: '${extensions}'": }
-    $e = inline_template('extensions: "<%= @extensions %>" : <%= @extensions.class %>')
-    notify { "${e}": }
-    $e2 = inline_template('extensions to s: "<%= @extensions.to_s %>"')
-    notify { "${e2}": }
BREAKS HERE
-    create_resources(icinga2::object::apply_service_to_host,$hash_apply_service_to_host)
BREAKS HERE
-  # use exported ressources
-  @@nfs::export {"shared ${share} by ${server} for ${::fqdn}":
-  mount {"shared ${share} by ${server}":
-      Mount["shared ${share} by ${server}"] {
-        require => Mount["shared ${share} by ${server}"],
-      Mount["shared ${share} by ${server}"] {
BREAKS HERE
-    sriov_vf_config { $number_of_vfs: ensure => present }
BREAKS HERE
-class labstore::fileserver::exports {
-    $novaconfig = hiera_hash('novaconfig', {})
-    $observer_pass = $novaconfig['observer_password']
BREAKS HERE
-    $symlink_target = '/usr/bin/clamscan'
-  } else {
BREAKS HERE
-  $sysadmins = [],
-  class { 'openstack_project::afsfs':
-    sysadmins => $sysadmins,
-  }
-  class { 'openafs::dbserver':
BREAKS HERE
-          { 'files' => [ "${targets_path}/mysql-databases_*.yaml"] },
-        dest       => "${targets_path}/matomo_mysql_${::site}.yaml",
-        dest       => "${targets_path}/analyics_meta_mysql_${::site}.yaml",
BREAKS HERE
-  class { 'ocf_kubernetes::package::first_stage':
-    stage => first,
-  }
-
BREAKS HERE
-    $postsave_cmd_real = pick($postsave_cmd, 'systemctl reload haproxy')
BREAKS HERE
-      svrpkg      => $ipa::svrpkg,
-      dns         => $ipa::dns,
-      forwarders  => $ipa::forwarders,
-      domain      => downcase($ipa::domain),
-      realm       => upcase($ipa::realm),
-      adminpw     => $ipa::adminpw,
-      dspw        => $ipa::dspw,
-      loadbalance => $ipa::loadbalance,
-      ipaservers  => $ipa::ipaservers,
-      sudo        => $ipa::sudo,
-      sudopw      => $ipa::sudopw,
-      automount   => $ipa::automount,
-      autofs      => $ipa::autofs,
-      kstart      => $ipa::kstart,
-      sssd        => $ipa::sssd,
-      ntp         => $ipa::ntp
BREAKS HERE
-    target    => "${::fqdn_underscore}.nginx.nginx_connections-active",
BREAKS HERE
-) {
BREAKS HERE
-        '/var/log/puppet-post-merge.log':
-            ensure  => file,
-            replace => false,
-            owner   => $user,
-            group   => $group,
-            mode    => '0640';
BREAKS HERE
-            ]
BREAKS HERE
-        ensure  => absent,
-        notify  => Exec['apt-get update'],
BREAKS HERE
-#
-          line    => 'include /etc/cinder/volumes/*',
BREAKS HERE
-      class{'yum::centos::base':
BREAKS HERE
-  httpd_mod { 'wsgi': ensure => present; }
BREAKS HERE
-      $user  = $mrepo::params::user
-      $group = $mrepo::params::group
-
BREAKS HERE
-    ensure  => present,
-    owner   => 'jenkins',
-    group   => 'jenkins',
-    mode    => '0640',
-    source  => 'puppet:///modules/jenkins/pydistutils.cfg',
BREAKS HERE
-        match => '^([Cc]loses|[Pp]artial|[Rr]elated)-[Bb]ug:[\\s#]?(\\d+)$',
BREAKS HERE
-        server_name          => $server_name,
-        allow_from           => $allow_from,
-        secure_private       => false,
-        prevent_cherrypicks  => $prevent_cherrypicks,
-        extra_auth_rules     => $extra_auth_rules,
-        config               => $config,
-        puppet_major_version => $puppet_major_version,
BREAKS HERE
-  $cluster_servers          = undef,
-  $time_zone                = $::graphite::params::web_time_zone,
-  $whisper_dir              = $::graphite::params::whisper_dir,
-  $graphite_web_port        = $::graphite::params::web_port,
-  ) inherits ::graphite::params {
BREAKS HERE
-    command  => "java -jar $jarfile -s http://127.0.0.1:8080 groovy $groovyfile",
BREAKS HERE
-  file { '/usr/local/bin/process_reports.rb':
-    ensure => file,
-    source => 'puppet:///modules/classroom/process_reports.rb',
BREAKS HERE
-        command => "\"${icinga2_bin}\" pki save-cert --host ${ca_host} --port ${ca_port} --key ${_ssl_key_path} --cert ${_ssl_cert_path} --trustedcert ${trusted_cert}",
BREAKS HERE
-# [*keystone_password*]
-#   The password to use for authentication (keystone)
-#
-# [*keystone_tenant*]
-#   (optional) The tenant of the auth user
-#   Defaults to services
-#
-# [*keystone_user*]
-#   (optional) The name of the auth user
-#   Defaults to cinder
-#
-# [*auth_uri*]
-#   (optional) Public Identity API endpoint.
-#   Defaults to 'http://localhost:5000/'.
-#
-# [*identity_uri*]
-#   (optional) Complete admin Identity API endpoint.
-#   Defaults to: 'http://localhost:35357/'.
-#
-# [*validation_options*]
-#   (optional) Service validation options
-#   Should be a hash of options defined in openstacklib::service_validation
-#   If empty, defaults values are taken from openstacklib function.
-#   Default command list volumes.
-#   Require validate set at True.
-#   Example:
-#   glance::api::validation_options:
-#     glance-api:
-#       command: check_cinder-api.py
-#       path: /usr/bin:/bin:/usr/sbin:/sbin
-#       provider: shell
-#       tries: 5
-#       try_sleep: 10
-#   Defaults to {}
-#
-#   (optinal) a list of memcached server(s) to use for caching. If left
-#   undefined, tokens will instead be cached in-process.
-#   Defaults to $::os_service_default.
-  $keystone_password,
-  $keystone_enabled             = true,
-  $keystone_tenant              = 'services',
-  $keystone_user                = 'cinder',
-  $auth_uri                     = 'http://localhost:5000/',
-  $identity_uri                 = 'http://localhost:35357/',
-  $nova_catalog_info            = 'compute:Compute Service:publicURL',
-  $nova_catalog_admin_info      = 'compute:Compute Service:adminURL',
-  $os_region_name               = $::os_service_default,
-  $privileged_user              = false,
-  $os_privileged_user_name      = $::os_service_default,
-  $os_privileged_user_password  = $::os_service_default,
-  $os_privileged_user_tenant    = $::os_service_default,
-  $os_privileged_user_auth_url  = $::os_service_default,
-  $keymgr_api_class             = $::os_service_default,
-  $keymgr_encryption_api_url    = $::os_service_default,
-  $keymgr_encryption_auth_url   = $::os_service_default,
-  $service_workers              = $::processorcount,
-  $package_ensure               = 'present',
-  $bind_host                    = '0.0.0.0',
-  $enabled                      = true,
-  $manage_service               = true,
-  $ratelimits                   = $::os_service_default,
-  $default_volume_type          = $::os_service_default,
-  $validate                     = false,
-  $sync_db                      = true,
-  $public_endpoint              = $::os_service_default,
-  $osapi_volume_base_url        = $::os_service_default,
-  $osapi_max_limit              = $::os_service_default,
-  $service_name                 = $::cinder::params::api_service,
-  $enable_proxy_headers_parsing = $::os_service_default,
-  $use_ssl                      = false,
-  $cert_file                    = $::os_service_default,
-  $key_file                     = $::os_service_default,
-  $ca_file                      = $::os_service_default,
-  $memcached_servers            = $::os_service_default,
-  $validation_options         = {},
-    'keystone_authtoken/auth_uri':          value => $auth_uri;
-    'keystone_authtoken/identity_uri':      value => $identity_uri;
-    'keystone_authtoken/memcached_servers': value => join(any2array($memcached_servers), ',');
-    'keymgr/api_class':                     value => $keymgr_api_class;
-    'keymgr/encryption_api_url':            value => $keymgr_encryption_api_url;
-    'keymgr/encryption_auth_url':           value => $keymgr_encryption_auth_url;
-    cinder_config {
-      'DEFAULT/auth_strategy':                value => 'keystone' ;
-      'keystone_authtoken/admin_tenant_name': value => $keystone_tenant;
-      'keystone_authtoken/admin_user':        value => $keystone_user;
-      'keystone_authtoken/admin_password':    value => $keystone_password, secret => true;
-    }
-        'command'  => "cinder --os-auth-url ${auth_uri} --os-tenant-name ${keystone_tenant} --os-username ${keystone_user} --os-password ${keystone_password} list",
BREAKS HERE
-  if $::lsbdistcodename == 'precise' and !defined(Apt::Ppa['ppa:ondrej/php5']) {
BREAKS HERE
-          /^3.0/ => 'puppet:///modules/puppet/config.ru/99-run-3.0.rb',
BREAKS HERE
- #Whether to install the plugin packages when the icinga2::server class is applied:
- $server_install_nagios_plugins = true
-          $icinga2_server_plugin_packages = ["nagios-plugins-nrpe", "nagios-plugins-all", "nagios-plugins-openmanage", "nagios-plugins-check-updates"]
-          $icinga2_server_plugin_packages = ["nagios-plugins-nrpe", "nagios-plugins-all", "nagios-plugins-openmanage", "nagios-plugins-check-updates"]
-          $icinga2_server_plugin_packages = ["nagios-plugins", "nagios-plugins-basic", "nagios-plugins-standard", "nagios-snmp-plugins", "nagios-plugins-extra", "nagios-nrpe-plugin"]
-          $icinga2_server_plugin_packages = [ "nagios-plugins", "nagios-plugins-basic", "nagios-plugins-common", "nagios-plugins-standard", "nagios-snmp-plugins", "nagios-plugins-extra", "nagios-plugins-contrib", "nagios-nrpe-plugin"]
-          $icinga2_server_plugin_packages = ["nagios-plugins", "nagios-plugins-basic", "nagios-plugins-standard", "nagios-snmp-plugins", "nagios-plugins-contrib", "nagios-nrpe-plugin"]
-      $etc_icinga2_mode  = '750'
-      $etc_icinga2_icinga2_conf_mode  = '640'
-      $etc_icinga2_confd_mode  = '750'
-      $etc_icinga2_features_available_mode  = '750'
-      $etc_icinga2_features_enabled_mode  = '750'
-      $etc_icinga2_pki_mode  = '750'
-      $etc_icinga2_scripts_mode  = '750'
-      $etc_icinga2_zonesd_mode  = '750'
-      $etc_icinga2_obejcts_mode  = '750'
-      $etc_icinga2_obejcts_sub_dir_mode  = '750'
-      $etc_icinga2_mode  = '755'
-      $etc_icinga2_icinga2_conf_mode  = '644'
-      $etc_icinga2_confd_mode  = '755'
-      $etc_icinga2_features_available_mode  = '755'
-      $etc_icinga2_features_enabled_mode  = '755'
-      $etc_icinga2_pki_mode  = '755'
-      $etc_icinga2_scripts_mode  = '755'
-      $etc_icinga2_zonesd_mode  = '755'
-      $etc_icinga2_obejcts_mode  = '755'
-      $etc_icinga2_obejcts_sub_dir_mode  = '755'
-      $nrpe_config_basedir = "/etc/nagios"
-      $nrpe_plugin_libdir  = "/usr/lib64/nagios/plugins"
-      $nrpe_pid_file_path  = "/var/run/nrpe/nrpe.pid"
-      $nrpe_user           = "nrpe"
-      $nrpe_group          = "nrpe"
-      $nrpe_config_basedir  = "/etc/nagios"
-      $nrpe_plugin_libdir   = "/usr/lib/nagios/plugins"
-      $nrpe_pid_file_path   = "/var/run/nagios/nrpe.pid"
-      $nrpe_user            = "nagios"
-      $nrpe_group           = "nagios"
-      $nrpe_config_basedir  = "/etc/nagios"
-      $nrpe_plugin_libdir   = "/usr/lib/nagios/plugins"
-      $nrpe_pid_file_path   = "/var/run/nagios/nrpe.pid"
-      $nrpe_user            = "nagios"
-      $nrpe_group           = "nagios"
-          $icinga2_client_packages = ["nrpe", "nagios-plugins-nrpe", "nagios-plugins-all", "nagios-plugins-openmanage", "nagios-plugins-check-updates"]
-          $icinga2_client_packages = ["nrpe", "nagios-plugins-nrpe", "nagios-plugins-all", "nagios-plugins-openmanage", "nagios-plugins-check-updates"]
-          $icinga2_client_packages = ["nagios-nrpe-server", "nagios-plugins", "nagios-plugins-basic", "nagios-plugins-standard", "nagios-snmp-plugins", "nagios-plugins-extra", "nagios-nrpe-plugin"]
-          $icinga2_client_packages = ["nagios-nrpe-server", "nagios-plugins", "nagios-plugins-basic", "nagios-plugins-common", "nagios-plugins-standard", "nagios-snmp-plugins", "nagios-plugins-extra", "nagios-plugins-contrib", "nagios-nrpe-plugin"]
-          $icinga2_client_packages = ["nagios-nrpe-server", "nagios-plugins", "nagios-plugins-basic", "nagios-plugins-standard", "nagios-snmp-plugins", "nagios-plugins-contrib", "nagios-nrpe-plugin"]
BREAKS HERE
-  $l2gw_enabled = true
-  # Until https://review.rdoproject.org/r/#/c/11064/ is merged and
-  # in consistent repo.
-  $l2gw_enabled = false
-  l2gw_enabled   => true,
BREAKS HERE
-    'lucid'   => '5.3.0-ppa8~lucid1',
-    'precise' => '5.3.0-ppa8~precise1',
BREAKS HERE
-# Format Hadoop Filesystem on the second HDFS Name Node. The first Name Node needs to be already formatted.
BREAKS HERE
-# permissions = [ "*" ]
-# permissions = [ "objects/query/Host", "objects/query/Service" ]
-# permissions = [
-#   {
-#     permission = "objects/query/Host"
-#     filter = {{ regex("^Linux", host.vars.os) }}
-#   },
-#   {
-#     permission = "objects/query/Service"
-#     filter = {{ regex("^Linux", service.vars.os) }}
-#   }
-# ]
BREAKS HERE
-  $configfile = '',
-  $httproot = '',
-  $serveradmin = ''
BREAKS HERE
-  Optional[String]]                   $username             = undef,
BREAKS HERE
-# [*trusted_group*]
-#   The name or GID of the trusted user group with which the agent
-#   the group exists. An array of group identifiers can also be provided
-#   to allow access by multiple groups.
-    $trusted_group,
-        content => inline_template("---\n<% [*@trusted_group].each do |g| %><%= g %>: ['<%= @key_fingerprint %>']\n<% end %>"),
BREAKS HERE
-  $motd_from_nfs = str2bool($::ocf_nfs) and !hiera('staff_only')
-  $owner = hiera('owner', undef)
-  $classes_from_hiera = hiera('classes')
BREAKS HERE
-    $cnames,
-        'cnames'             => $cnames,
BREAKS HERE
-    $mistral_enabled = true
BREAKS HERE
-  $install_python_deps     = true,
-  $python_dep_ensure       = 'present',
-  if $install_python_deps {
-    # Name virtualenv instead of python-virtualenv for compat with puppet-python
-    package { 'virtualenv':
-      ensure => $python_dep_ensure,
-      name   => 'python-virtualenv',
-      before => Python::Virtualenv[$virtual_env],
-    }
-
-    package { 'python-dev':
-      ensure => $python_dep_ensure,
-      before => Python::Virtualenv[$virtual_env],
-    }
-  }
-
BREAKS HERE
-    exec { "hadoop-touch-${dir}":
BREAKS HERE
-    file { '/usr/local/bin/spreadcheck.py':
-        source => 'puppet:///modules/openstack/monitor/spreadcheck.py',
-    file { '/usr/local/etc/spreadcheck-tools.yaml':
-        source => 'puppet:///modules/openstack/monitor/spreadcheck-tools.yaml',
-        nrpe_command => '/usr/local/bin/spreadcheck.py --config /usr/local/etc/spreadcheck-tools.yaml',
-            '/usr/local/bin/spreadcheck.py',
-            '/usr/local/etc/spreadcheck-tools.yaml'
BREAKS HERE
-# [*debug*]
-#   Show debug messages
-#   Default: $::os_service_default
-#
-  # Debug
-  $debug                              = $::os_service_default,
-    'DEFAULT/debug':                                   value => $debug;
BREAKS HERE
-  cassandra_seeds => values($cass_hash)
-  tenant_name  => $tenant_name
BREAKS HERE
-        $should_run = hiera('active_proxy') ?{
BREAKS HERE
-#    'panko_api_ssl_port' (Defaults to 13779)
-    panko_api_ssl_port => 13779,
BREAKS HERE
-  include govuk_rbenv::all
BREAKS HERE
-    systemd::unit { 'update-etcd-mw-config-lastindex':
-        ensure  => present,
-        restart => true,
-        content => systemd_template('update-etcd-mw-config-lastindex.timer'),
BREAKS HERE
-    service { 'cassandra':
-        ensure     => 'running',
-        enable     => true,
-        hasstatus  => true,
-        hasrestart => true,
-        # This module does not subscribe to its config files,
-        # as we would like to manage service restarts manually.
-        require    => [
-            File['/etc/cassandra/cassandra-topology.properties'],
-            File['/etc/cassandra/cassandra-topology.yaml'],
BREAKS HERE
-            include_path             => '.:/usr/share/php:/usr/share/pear',
-                always_log_unhandled_exceptions => true,
-                header                          => true,
-                level                           => 'Error',
-                runtime_error_reporting_level   => 8191,  # bitmask; see hphp/runtime/base/runtime-error.h / http://git.io/jcNNFA
-                                                          # equivalent to (PHP_ALL | STRICT) & ~(PHP_DEPRECATED | USER_DEPRECATED)
-        ensure  => directory,
-        owner   => $user,
-        group   => $group,
-        mode    => '0750',
BREAKS HERE
-    file { [$vardir, $pubdir]:
BREAKS HERE
-    ensure  => present,
-    owner   => 'asterisk',
-    group   => 'asterisk',
-    mode    => '0660',
-    source  => $asterisk_conf_source,
-    ensure  => present,
-    owner   => 'asterisk',
-    group   => 'asterisk',
-    mode    => '0660',
-    source  => $modules_conf_source,
BREAKS HERE
-    command => "git clone git://github.com/sstephenson/ruby-build.git ${plugins}",
BREAKS HERE
-    $zaqar_enabled  = true
-include ::openstack_integration::zaqar
BREAKS HERE
-  $gw_control_ip     = '8.8.8.8',     # Control ip addr
-      gw_control_ip => $gw_control_ip,
BREAKS HERE
-# An 'eventloggingctl' shell script provides a convenient wrapper around
-# Upstart's initctl that is specifically tailored for managing
-    require ::eventlogging::package
-    $log_dir = '/srv/log/eventlogging'
-        ensure     => present,
-        shell      => '/bin/false',
-    # Instance definition files.
-    file { [
-        '/etc/eventlogging.d/reporters'
-    ]:
-        ensure  => directory,
-        recurse => true,
-        purge   => true,
-        force   => true,
-        before  => File['/etc/init/eventlogging'],
-    }
-    # Manage EventLogging services with 'eventloggingctl'.
-    # Usage: eventloggingctl {start|stop|restart|status|tail}
-    file { '/sbin/eventloggingctl':
-        source => 'puppet:///modules/eventlogging/eventloggingctl',
-        mode   => '0755',
-    }
-
-    # Upstart job definitions.
-    file { '/etc/init/eventlogging':
-        source  => 'puppet:///modules/eventlogging/init',
-    # 'eventlogging/init' is the master upstart task; it walks
-    # </etc/eventlogging.d> and starts a job for each instance
-    # definition file that it encounters.
-    service { 'eventlogging/init':
-        provider => 'upstart',
-        require  => [
-            File['/etc/init/eventlogging'],
-            User['eventlogging']
-        ],
-    }
-
-    file { [ $log_dir, "${log_dir}/archive" ]:
-        ensure => directory,
-    # Link logs to /var/log/eventlogging, so people can find it in a
-    # more prominent place too.
-    if ( $log_dir != '/var/log/eventlogging' ) {
-        file { '/var/log/eventlogging':
-            ensure => 'link',
-            target => $log_dir,
-        }
-    }
-
-        require => File["${log_dir}/archive"],
BREAKS HERE
-		source  => 'puppet:///modules/mediawiki_new/cgroup/mw-cgroup.conf',
-		source => 'puppet:///modules/mediawiki_new/cgroup/cgroup-mediawiki-clean',
BREAKS HERE
-    # T166126 Testing a different syslog method
-    logstash::input::udp { 'syslog-udp':
-        port  => 10515,
-        type  => 'syslog',
-        codec => 'plain',
-    }
-
-    ferm::service { 'logstash_syslog_udp-2':
-        proto   => 'udp',
-        port    => '10515',
-        notrack => true,
-        srange  => '$DOMAIN_NETWORKS',
-    }
-
BREAKS HERE
-) {
BREAKS HERE
-            source  => 'puppet:///modules/postresql/ssl.conf',
BREAKS HERE
-    'LMA' => {
BREAKS HERE
-      path => '/etc/yum.repos.d/',
-      ensure => directory,
-      recurse => true,
-      purge => true,
-      force => true,
-      require => Package[yum-priorities],
-      mode => 0755,
-      owner => root,
-      group => 0 ;
-      path => '/etc/pki/rpm-gpg/',
-      source => [
-      sourceselect => all,
-      recurse => true,
-      purge => true,
-      force => true,
-      owner => root,
-      group => 0,
-      mode => '600' ;
BREAKS HERE
-  concat_v6::fragment{ "iptables_rule_$name":
BREAKS HERE
-Subproject commit 8ba0a9fc953083301549d6f8bb15db2c871b90cd
BREAKS HERE
-    'content' => "#!/bin/sh\necho 'pup3665=workaround'\n",
BREAKS HERE
-      before => File[$pki_dir],
-  file { $pki_dir:
BREAKS HERE
-  include common::moduledir
-  module_dir { "shorewall": }
-
-  file {"/var/lib/puppet/modules/shorewall":
-    ensure => directory,
-    force => true,
-    owner => root, group => 0, mode => 0755; 
-  }
-
BREAKS HERE
-  $hostname            = $::ipaddress,
-    hostname            => $hostname
-  include ::refstack::apache::http
BREAKS HERE
-	if $manage_ipv6 {
BREAKS HERE
-  $minute = '0',
-  $hour = '0',
-  $day = '*',
-  $dest_dir = '/var/backups/mysql_backups',
-  $rotation = 'daily',
-  $num_backups = '30',
-  $defaults_file = '/etc/mysql/debian.cnf'
BREAKS HERE
-  validate_array($import)
-  if $display_name { validate_string ($display_name) }
-  validate_string($host_name)
-  if $groups { validate_array ($groups) }
-  validate_string($check_command)
-  if $max_check_attempts { validate_integer ($max_check_attempts) }
-  if $check_period { validate_string ($check_period) }
-  if $enable_notifications { validate_bool ($enable_notifications) }
-  if $enable_active_checks { validate_bool ($enable_active_checks) }
-  if $enable_passive_checks { validate_bool ($enable_passive_checks) }
-  if $enable_event_handler { validate_bool ($enable_event_handler) }
-  if $enable_flapping { validate_bool ($enable_flapping) }
-  if $enable_perfdata { validate_bool ($enable_perfdata) }
-  if $event_command { validate_string ($event_command) }
-  if $flapping_threshold { validate_integer ($flapping_threshold) }
-  if $volatile { validate_bool ($volatile) }
-  if $zone { validate_string ($zone) }
-  if $command_endpoint { validate_string ($command_endpoint) }
-  if $notes { validate_string ($notes) }
-  if $notes_url { validate_string ($notes_url) }
-  if $action_url { validate_string ($action_url) }
-  if $icon_image { validate_absolute_path ($icon_image) }
-  if $icon_image_alt { validate_string ($icon_image_alt) }
-    'groups'                => $groups ,
BREAKS HERE
-    include ::profile::druid::common
BREAKS HERE
-      centos  => "mod_wsgi",
BREAKS HERE
-        default => $name,
-            content => "dhcp-host=${mac},${add_real}\n",
BREAKS HERE
-  $web_package                               = "[bitmap-fonts-compat','graphite-web']",
BREAKS HERE
-    include profile::aptly::server
BREAKS HERE
-    'mkdir /opt/httpd':
-      creates => '/opt/httpd';
-    '/opt/httpd':
-      device  => 'www:/',
-      fstype  => 'nfs4',
-      options => 'ro,bg,noatime,nodev,noexec,nosuid',
-      require => Exec['mkdir /opt/httpd'];
BREAKS HERE
-  $first = fqdn_rand_fixed(30)
BREAKS HERE
-    # the patch used by the opatch
-    if ! defined(File["${path}/${patchFile}"]) {
-      file { "${path}/${patchFile}":
-        source       => "${mountPoint}/${patchFile}",
-      }
-    case $operatingsystem {
-      CentOS, RedHat, OracleLinux, Ubuntu, Debian, SLES: {
-        exec { "extract opatch ${patchFile} ${title}":
-          command    => "unzip -n ${path}/${patchFile} -d ${path}",
-          require    => File ["${path}/${patchFile}"],
-          creates    => "${path}/${patchId}",
BREAKS HERE
-    package { 'openssh-server'
BREAKS HERE
-    command     => "cd ${recheck_state_dir} && er_safe_run.sh ${graph_cmd}",
-    command     => "cd ${recheck_state_dir} && er_safe_run.sh ${uncat_cmd}",
BREAKS HERE
-    if hiera('nova::use_ipv6', false) {
-      $memcache_servers = suffix(any2array(normalize_ip_for_uri(hiera('memcached_node_ips_v6'))), ':11211')
-    } else {
-      $memcache_servers = suffix(any2array(normalize_ip_for_uri(hiera('memcached_node_ips'))), ':11211')
-    }
-
-    class { '::nova::keystone::authtoken':
-      memcached_servers => $memcache_servers
-    }
-
BREAKS HERE
-        # Periodic cron restarts, we need this to mitigate T145661
-        class { 'cacheproxy::cron_restart':
-            nodes         => $nodes,
-            cache_cluster => $cache_cluster,
-        }
BREAKS HERE
-  $full_node_name     = $fuel_settings['fqdn']
-
BREAKS HERE
-  package { 'nfs-utils':
-  }
BREAKS HERE
-      content => template("etc/envmgr/${title}.erb.conf";
BREAKS HERE
-  require packagecloud
-    require epel
BREAKS HERE
-  $mysql_user_password,
-  $mysql_root_password,
BREAKS HERE
- 
BREAKS HERE
-  # Where we store our puppet modules
-  $modules_path        = "${dir}/modules"
-  $common_modules_path = ["${modules_path}/common", '/usr/share/puppet/modules']
-  # Where to checkout the branches
-  $envs_dir            = "${dir}/environments"
BREAKS HERE
-    revision => "dfb1ea4289387bc38d7fc7c51cfa9b0f3439e66f",
-    command => "/usr/bin/make",
BREAKS HERE
-  $real_non_torified_users = uniq_flatten([ $tor_user, $non_torified_users ])
BREAKS HERE
-  package { 'ansible':
-    ensure   => '2.1.1.0',
-    provider => openstack_pip,
-    require  => Class['pip'],
BREAKS HERE
-    Boolean $use_git_deploy = true,
BREAKS HERE
-    ensure => file,
-    notify => Service['icinga2'],
BREAKS HERE
-        subscribe   => Exec["create-certificate-${domain}"],
BREAKS HERE
-  File {
-    owner => jenkins,
-    group => jenkins,
-  }
-
BREAKS HERE
-define oradb::opatch( $oracleProductHome       = undef,
-  if $remoteFile == true {
-    # the patch used by the opatch
-    if ! defined(File["${downloadDir}/${patchFile}"]) {
-      file { "${downloadDir}/${patchFile}":
-        ensure => present,
-        source => "${mountPoint}/${patchFile}",
-        mode   => '0775',
-        owner  => $user,
-        group  => $group,
-      if $remoteFile == true {
-        exec { "extract opatch ${patchFile} ${title}":
-          command    => "unzip -n ${downloadDir}/${patchFile} -d ${downloadDir}",
-          require    => File ["${downloadDir}/${patchFile}"],
-          creates    => "${downloadDir}/${patchId}",
-          path       => $execPath,
-          user       => $user,
-          group      => $group,
-          logoutput  => false,
-        }
-      } else {
-        exec { "extract opatch ${patchFile} ${title}":
-          command    => "unzip -n ${mountPoint}/${patchFile} -d ${downloadDir}",
-          creates    => "${downloadDir}/${patchId}",
-          path       => $execPath,
-          user       => $user,
-          group      => $group,
-          logoutput  => false,
-          ensure                  => present,
-          require                 => Exec["extract opatch ${patchFile} ${title}"],
-          ensure                  => present,
-          require                 => Exec["extract opatch ${patchFile} ${title}"],
BREAKS HERE
-        group       => $group,
BREAKS HERE
-    require openstack::nova::compute::audit
BREAKS HERE
-      ensure => file,
-      owner  => 'root',
-      group  => 'root',
-      source => 'puppet:///modules/dell/etc/pki/rpm-gpg/RPM-GPG-KEY-libsmbios',
-      mode   => '0644',
-    # http://linux.dell.com/wiki/index.php/Repository/software
-    yumrepo {'dell-omsa-indep':
-      descr      => 'Dell OMSA repository - Hardware independent',
-      mirrorlist => "${dell::omsa_url_base}${dell::omsa_version}/mirrors.cgi?${dell::omsa_url_args_indep}",
-      enabled    => 1,
-      gpgcheck   => 1,
-      gpgkey     => "file:///etc/pki/rpm-gpg/RPM-GPG-KEY-dell\n\tfile:///etc/pki/rpm-gpg/RPM-GPG-KEY-libsmbios",
-      require    => [
-        File['/etc/pki/rpm-gpg/RPM-GPG-KEY-dell'],
-        File['/etc/pki/rpm-gpg/RPM-GPG-KEY-libsmbios'],
-        ],
-    # ensure file is managed in case we want to purge /etc/yum.repos.d/
-    # http://projects.puppetlabs.com/issues/3152
-    file { '/etc/yum.repos.d/dell-omsa-indep.repo':
-      ensure  => file,
-      owner   => 'root',
-      group   => 'root',
-      mode    => '0644',
-      require => Yumrepo['dell-omsa-indep'],
BREAKS HERE
-    owner   => 'influxdb',
-    group   => 'influxdb',
BREAKS HERE
-      ensure => $ensure,
-      path   => "${yum::plugins_config_dir}/${name}.conf",
-      owner  => root,
-      group  => root,
-      mode   => '0755',
-      source => $source,
BREAKS HERE
-    if $::operatingsystem == 'RedHat' and $::operatingsystemmajrelease >= 7 {
BREAKS HERE
-        ensure         => running,
BREAKS HERE
-  $revision = 'master',
BREAKS HERE
-                alias => 'munin-node',
BREAKS HERE
-        'libvirt-bin',
BREAKS HERE
-# [*use_multipath_for_image_xfer*]
-#   (optional) .
-#   Defaults to True
-#
-#   (optional) Only affects the PureISCSIDriver.
-    "${name}/use_multipath_for_image_xfer":  value => $use_multipath_for_image_xfer ;
BREAKS HERE
-# Definition: ipa::service
-define ipa::service {
BREAKS HERE
-          present: {
-          absent: {
BREAKS HERE
-  include apache
-  apache::vhost { $vhost_name:
-  a2mod { 'rewrite':
-  a2mod { 'proxy':
-  a2mod { 'proxy_http':
-      before  => Apache::Vhost[$vhost_name],
-      before  => Apache::Vhost[$vhost_name],
-      before  => Apache::Vhost[$vhost_name],
BREAKS HERE
-          require     => [File ["${oraInstPath}/oraInst.loc"],File["${path}/db_install_${version}.rsp"],Exec["extract ${path}/${file}_2of2.zip"]],
-          require     => [File ["${oraInstPath}/oraInst.loc"],File["${path}/db_install_${version}.rsp"],Exec["extract ${path}/${file}_7of7.zip"]],
-          require     => [File ["${oraInstPath}/oraInst.loc"],File["${path}/db_install_${version}.rsp"],Exec["extract ${path}/${file}_2of2.zip"]],
BREAKS HERE
-    require_os('Debian >= jessie')
-    
BREAKS HERE
-            match  => "^HTTPProxyServer",
-            match  => "^HTTPProxyPort",
BREAKS HERE
-class unicornherder {
-    ensure   => '0.0.8',
BREAKS HERE
-  $site_ssl_cert_file = '/etc/ssl/private/ssl-cert-snakeoil.key',
-  $site_ssl_key_file = '/etc/ssl/private/groups-dev.openstack.org.key',
BREAKS HERE
-
BREAKS HERE
-  $port                            = '22'
-  $password_authentication_groups  = []
-  $password_authentication_users   = []
-  $x11_forwarding                  = 'no'
-  $use_dns                         = 'yes'
-  $password_authentication         = 'no'
-  $pubkey_authentication           = 'yes'
-  $subsystem_sftp                  = '/usr/lib/openssh/sftp-server'
-  $use_pam                         = 'yes'
-  $permit_root_login               = 'no'
-  $permit_tunnel                   = 'no'
-  $print_motd                      = 'no'
-  $manage_service                  = true
-  $max_auth_retries                = 6
-  $banner_manage                   = false
-  $ciphers                         = []
-  $macs                            = []
-  $server_config_template          = 'ssh/sshd_config.erb'
-  $accept_env                      = 'LANG LC_*'
BREAKS HERE
-  $rootwrap_config             = "/etc/manila/rootwrap.conf",
BREAKS HERE
-  exec { 'downloadRPM':
-
-    package { $type:
-      require  => Exec['downloadRPM']
-    exec { 'unpackRPM':
-      require => [Package['sed'], Exec['downloadRPM']]
-    exec { 'cleanupRPM':
-    package { $type:
BREAKS HERE
-# === Parameters
-#
-# [*http_username*]
-#   Basic auth username
-#
-# [*http_password*]
-#   Password for $http_username
-#
-# [*rate_limit_token*]
-#   Token to bypass our HTTP rate limiting
-#
-# [*smokey_signon_email*]
-#   Email address to login to Signon as a smoke test user
-#
-# [*smokey_signon_password*]
-#   Password for $smokey_signon_email
-#
-# [*smokey_bearer_token*]
-#   Bearer token for something
-#
-# [*spoof_target_domain*]
-#   If you wish to run tests against an environment that is different to the
-#   main app_domain parameter.
-#
-class icinga::config::smokey (
-  $http_username = 'UNSET',
-  $http_password = 'UNSET',
-  $rate_limit_token = 'UNSET',
-  $smokey_signon_email = 'UNSET',
-  $smokey_signon_password = 'UNSET',
-  $smokey_bearer_token = 'UNSET',
-  $spoof_target_domain = undef,
-) {
-  $smokey_vars = {
-    'AUTH_USERNAME'    => $http_username,
-    'AUTH_PASSWORD'    => $http_password,
-    'SIGNON_EMAIL'     => $smokey_signon_email,
-    'SIGNON_PASSWORD'  => $smokey_signon_password,
-    'BEARER_TOKEN'     => $smokey_bearer_token,
-    'RATE_LIMIT_TOKEN' => $rate_limit_token,
-  }
-
-  file { '/etc/smokey.sh':
-    content => template('icinga/etc/smokey.sh.erb'),
-    mode    => '0400',
-  }
-
BREAKS HERE
-        description           => 'check if wikidata.org dispatch lag is higher than 2 minutes',
-        normal_check_interval => 30,
-        retry_check_interval  => 5,
BREAKS HERE
-  icinga::check_config { 'check_dig_google':
-    source  => 'puppet:///modules/monitoring/etc/nagios3/conf.d/check_dig_google.cfg',
-    check_command       => 'check_dig_google!www.gov.uk!-a www-cdn.production.govuk.service.gov.uk --timeout 10 -w 2 -c 3 -T CNAME',
-    require             => Icinga::Check_config['check_dig_google'],
BREAKS HERE
-    ensure   => '1.6.1',
BREAKS HERE
-	$ifs = gsub(split($interfaces, " "), "(.+)", "if_\\1")
-	$if_errs = gsub(split($interfaces, " "), "(.+)", "if_err_\\1")
BREAKS HERE
-        os_group          => $group,
BREAKS HERE
-        command => '/usr/local/bin/mwscript extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki testwikidatawiki --max-time 900 --batch-size 200 --dispatch-interval 30 >/dev/null 2>&1',
BREAKS HERE
-    $directory = "${config_path}/debmonitor"
BREAKS HERE
-#   Defaults to: 'Default'.
-#   Defaults to: 'Default'.
-  $keystone_project_domain_id         = 'Default',
-  $keystone_user_domain_id            = 'Default',
-        'keystone_authtoken/auth_url':          value => $identity_uri;
-        'keystone_authtoken/auth_plugin':       value => $auth_plugin;
-        'keystone_authtoken/username':          value => $keystone_user;
-        'keystone_authtoken/password':          value => $keystone_password, secret => true;
-        'keystone_authtoken/user_domain_id':    value => $keystone_user_domain_id;
-        'keystone_authtoken/project_name':      value => $keystone_tenant;
-        'keystone_authtoken/project_domain_id': value => $keystone_project_domain_id;
-    'trustee/auth_plugin':       value => 'password';
-    'trustee/auth_url':          value => $identity_uri;
-    'trustee/username':          value => $keystone_user;
-    'trustee/password':          value => $keystone_password, secret => true;
-    'trustee/project_domain_id': value => $keystone_project_domain_id;
-    'trustee/user_domain_id':    value => $keystone_user_domain_id;
BREAKS HERE
-    String              $cluster_name  = lookup('profile::etcd::cluster_name',           {default_value => 'toolforge-k8s-etcd'}),
-    String              $discovery     = lookup('profile::etcd::discovery',              {default_value => 'no'}),
-    Boolean             $client_certs  = lookup('profile::etcd::use_client_certs',       {default_value => false}),
-    Boolean             $use_proxy     = lookup('profile::etcd::use_proxy',              {default_value => false}),
-    Boolean             $do_backup     = lookup('profile::etcd::do_backup',              {default_value => false}),
-    String              $allow_from    = lookup('profile::etcd::allow_from',             {default_value => 'localhost'}),
-
-    # TODO: this is an effort to provide some sane defaults for our environment
-    # which could probably be improved
-    if $allow_from == 'localhost' {
-        $firewall_peers    = join(($peer_hosts), ' ')
-        $firewall_checker  = join(($checker_hosts), ' ')
-        $firewall_k8s      = join(($k8s_hosts), ' ')
-        $actual_allow_from = "@resolve((${firewall_peers} ${firewall_checker} ${firewall_k8s}))"
-        $actual_allow_from = $allow_from
-    class { '::profile::etcd':
-        cluster_name      => $cluster_name,
-        cluster_bootstrap => $bootstrap,
-        discovery         => $discovery,
-        use_client_certs  => $client_certs,
-        use_proxy         => $use_proxy,
-        allow_from        => $actual_allow_from,
-        do_backup         => $do_backup,
-    contain '::profile::etcd'
BREAKS HERE
-      listen_addresses  => '127.0.0.1',
-      require           => Class['postgresql::params'],
BREAKS HERE
-        source  => 'puppet:///modules/private/authdns/id_rsa',
-        source  => 'puppet:///modules/private/authdns/id_rsa.pub',
BREAKS HERE
-    include role::zuul::install
BREAKS HERE
-        user => 'l10nupdate',
BREAKS HERE
-  $agentKey1 = md5("${agent_id} ${agent_seed}")
-  $agentKey2 = md5("${agent_name} ${agent_ip_address} ${agent_seed}")
-    content => "${agent_id} ${agent_name} ${agent_ip_address} ${agentKey1}${agentKey2}\n",
BREAKS HERE
-    # two plugins because of hardcode in tempest:
-    # https://github.com/openstack/tempest/blob/master/tempest/config.py#L923
-    plugins             => ['vanilla', 'hdp'],
BREAKS HERE
-    create_resources('class', {$_backend_class => $backend_config})
BREAKS HERE
-    require  => Package['git']
BREAKS HERE
-  # Collect every 10 minutes
-    minute  => '*/10',
BREAKS HERE
-      $packages_nm = [ 'hadoop-yarn-nodemanager' ]
BREAKS HERE
-      default => $source,
-      default => $destination,
BREAKS HERE
-        /^7\.\d+$/: {
BREAKS HERE
-    # TODO(emilien): enable again when deploying Newton
-    # A recent patch in Tempest broke tests in Ironic Mitaka
-    # Fixed in master: https://review.openstack.org/322608 but
-    # not backported.
-    $ironic_enabled = false
-    $ironic_enabled = true
-if $ironic_enabled {
-  include ::openstack_integration::ironic
-}
-  ironic => $ironic_enabled,
BREAKS HERE
-# $+mode+:: Permission mode of $directory, default: 0755
-    $mode=0755) {
-                $brancharg = "-b $branch "
-                $env = "GIT_SSH=$ssh"
-                default => " --depth=$depth"
-                command     => "git clone ${recurse_submodules_arg}${brancharg}${remote}${deptharg} $directory",
-                creates     => "$directory/.git/config",
-                notify      => $notify_submodule_exec,
-                    mode    => $mode,
-                    command   => "git pull ${recurse_submodules_arg}--quiet${deptharg}",
-                    notify    => $notify_submodule_exec,
-                        command     => 'git submodule update --init',
BREAKS HERE
-        'libboost1.54-dbg',
-    # Backported fix for pretty-printer bundled with libstdc++6-4.8-dbg.
-    # See <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=58962> and
-    # <https://bugs.launchpad.net/ubuntu/+source/gcc-4.8/+bug/1256419>.
-    file { '/usr/share/gcc-4.8/python/libstdcxx/v6/printers.py':
-        source  => 'puppet:///modules/hhvm/debug/printers.py',
-        require => Package['libstdc++6-4.8-dbg'],
BREAKS HERE
-            'container'       => $swift_container,
BREAKS HERE
-        'COMPOSER'  => "${composer_dir}/vendor/bin/composer"
-        'COMPOSER'  => "${composer_dir}/vendor/bin/composer"
-        require => User['extdist']
-        require => User['extdist']
-        require => User['extdist']
-            File['/etc/extdist.conf']
-        ]
-            File['/etc/skindist.conf']
-        ]
BREAKS HERE
-    #   - the conftool module to be included
-    #   - An etcd instance running populated with (fake? synced?) data
-    class { '::conftool':
-        use_ssl => false,
-        auth    => false,
-        hosts   => [
-            'http://127.0.0.1:2379',
-        ],
-    }
-
BREAKS HERE
-  $update_internal           = undef,
-  if $update_internal {
-    validate_string($update_internal)
BREAKS HERE
-          file { "/usr/local/sbin/${title}":
-              command => "/usr/local/sbin/${title} >/dev/null 2>&1",
BREAKS HERE
-    environment => ['HOME=/root'],
BREAKS HERE
-    rabbit_host           => '127.0.0.1',
-    password => 'a_big_secret',
-    auth_uri          => 'http://127.0.0.1:5000/',
-    identity_uri      => 'http://127.0.0.1:35357/',
-    auth_url => 'http://127.0.0.1:5000/',
-    auth_url => 'http://127.0.0.1:5000/',
BREAKS HERE
-                'plugins'     => 'python',
-                'http'        => '127.0.0.1:8383',
-                'stats'       => '/run/uwsgi/graphite-web-stats.sock',
-                'wsgi-file'   => '/usr/share/graphite-web/graphite.wsgi',
-                'master'      => true,
-                'processes'   => $uwsgi_processes,
-                'buffer-size' => '16384',
BREAKS HERE
-  $portmap = $::osfamily? {
BREAKS HERE
-      $jdk_package = 'openjdk-7-jdk'
BREAKS HERE
-# Base class for ntp management
-#   None
-#   Base template for other ntp classes.
-#   Only use it, if you know, what you are doing!
-class ntp inherits ntp::params {
-  package { $package: }
BREAKS HERE
-      # TODO(aschultz): remove this when openstack-selinux is updated BZ#1402926
-      ensure => '0.7.4-2.el7'
BREAKS HERE
-  }
-
BREAKS HERE
-    command     => 'flock -n /var/run/centos-mirror.lock centos-mirror-update >>/var/log/centos-mirror.log 2>&1',
BREAKS HERE
-        source => "puppet:///modules/openstack/${version}/admin_scripts/novastats/wmcs-novastats-imagestats.py",
-        source => "puppet:///modules/openstack/${version}/admin_scripts/novastats/wmcs-novastats-capacity.py",
-        source => "puppet:///modules/openstack/${version}/admin_scripts/novastats/wmcs-novastats-dnsleaks.py",
-        source => "puppet:///modules/openstack/${version}/admin_scripts/novastats/wmcs-novastats-proxyleaks.py",
-        source => "puppet:///modules/openstack/${version}/admin_scripts/novastats/wmcs-novastats-puppetleaks.py",
-        source => "puppet:///modules/openstack/${version}/admin_scripts/novastats/wmcs-novastats-flavorreport.py",
-        source => "puppet:///modules/openstack/${version}/admin_scripts/novastats/wmcs-novastats-alltrusty.py",
BREAKS HERE
-  validate_array($import)
BREAKS HERE
-    $base_jit_size = to_bytes('100 Mb'),
BREAKS HERE
-define munin::plugin::deploy ($source = '', $ensure = 'present', $config = '') {
BREAKS HERE
-    ssl_chain_file_contents => hiera('storyboard_ssl_chain_file_contents', 'XXX'),
BREAKS HERE
-  $trove_enabled   = true
BREAKS HERE
-    if service_ensure($ensure) == 'running' {
BREAKS HERE
-      content => template('ocf/broker/broker.conf.erb'),
BREAKS HERE
-#   If nothing is given, it will default to: "systemctl restart ${service name}"
BREAKS HERE
-    known_stores        => $glance_stores,
BREAKS HERE
-    servername      => 'accounts.ocf.berkeley.edu',
-    serveraliases   => ['dev-accounts.ocf.berkeley.edu'],
-    port            => 443,
-    docroot         => '/var/www/html',
-    ssl             => true,
-    ssl_key         => "/etc/ssl/private/${::fqdn}.key",
-    ssl_cert        => "/etc/ssl/private/${::fqdn}.crt",
-    ssl_chain       => '/etc/ssl/certs/incommon-intermediate.crt',
-    rewrites        => [
-    headers         => ['set Strict-Transport-Security max-age=31536000'],
-    servername      => 'wiki.ocf.berkeley.edu',
-    serveraliases   => ['dev-wiki.ocf.berkeley.edu'],
-    port            => 443,
-    docroot         => '/var/www/html',
-    ssl             => true,
-    ssl_key         => "/etc/ssl/private/${::fqdn}.key",
-    ssl_cert        => "/etc/ssl/private/${::fqdn}.crt",
-    ssl_chain       => '/etc/ssl/certs/incommon-intermediate.crt',
-    rewrites        => [
-    headers         => ['set Strict-Transport-Security max-age=31536000'],
-    servername      => 'hello.ocf.berkeley.edu',
-    serveraliases   => [
-    port            => 443,
-    docroot         => '/var/www/html',
-    ssl             => true,
-    ssl_key         => "/etc/ssl/private/${::fqdn}.key",
-    ssl_cert        => "/etc/ssl/private/${::fqdn}.crt",
-    ssl_chain       => '/etc/ssl/certs/incommon-intermediate.crt',
-    rewrites        => [
-    headers         => ['set Strict-Transport-Security max-age=31536000'],
BREAKS HERE
-    $trusted=false,
-    if $trusted {
BREAKS HERE
-  command => "/usr/bin/curl --cacert /usr/local/etc/certs/ca.crt --key /usr/local/etc/certs/client.key --cert /usr/local/etc/certs/client.crt -o /tmp/6wind-virtual-accelerator-repository.deb https://repo.6wind.com/virtual-accelerator/ubuntu-14.04/$(dpkg --print-architecture)/${va_version}/6wind-virtual-accelerator-ubuntu-14.04-repository_${va_version}-1_$(dpkg --print-architecture).deb",
-  command => "/usr/bin/curl --cacert /usr/local/etc/certs/ca.crt --key /usr/local/etc/certs/client.key --cert /usr/local/etc/certs/client.crt -o /tmp/6wind-openstack-extensions-repository.deb https://repo.6wind.com/openstack-extensions/ubuntu-14.04/all/${app_note_version}/6wind-openstack-extensions-ubuntu-14.04-repository_${app_note_version}-1_all.deb",
BREAKS HERE
-        'ofc.berkeley.edu',
-
-        # We have links to the HTTPS version of this still that we don't want broken.
-        'ofc.berkeley.edu',
BREAKS HERE
-  if $oracle_java::format == 'rpm' {
BREAKS HERE
-  if $step >= 3 {
-    include ::ironic
-    # Database is accessed by both API and conductor, hence it's here.
-    if $sync_db {
-      include ::ironic::db::mysql
-      include ::ironic::db::sync
BREAKS HERE
-$listen_address = hiera('lma::elasticsearch::listen_address')
-$es_nodes       = hiera('lma::elasticsearch::nodes')
-$es_dir         = hiera('lma::elasticsearch::data_dir')
-$es_instance    = hiera('lma::elasticsearch::instance_name')
-$es_heap_size   = hiera('lma::elasticsearch::jvm_size')
-file { $es_dir:
-  ensure => 'directory',
-}
-
-# Install elasticsearch
-class { 'elasticsearch':
-  datadir       => "${es_dir}/elasticsearch_data",
-  init_defaults => {
-      'MAX_LOCKED_MEMORY' => 'unlimited',
-      'ES_HEAP_SIZE'      => "${es_heap_size}g"
-  },
-  require       => [File[$es_dir], Package[$java]],
-}
-
-# Start an instance of elasticsearch
-elasticsearch::instance { $es_instance:
-  config => {
-    'threadpool.bulk.queue_size'         => '1000',
-    'bootstrap.mlockall'                 => true,
-    'http.cors.allow-origin'             => '/.*/',
-    'http.cors.enabled'                  => true,
-    'cluster.name'                       => hiera('lma::elasticsearch::cluster_name'),
-    'node.name'                          => hiera('lma::elasticsearch::node_name'),
-    'node.master'                        => true,
-    'node.data'                          => true,
-    'discovery.zen.ping.multicast'       => {'enabled' => false},
-    'discovery.zen.ping.unicast.hosts'   => $es_nodes,
-    'discovery.zen.minimum_master_nodes' => hiera('lma::elasticsearch::minimum_master_nodes'),
-    'gateway.recover_after_time'         => hiera('lma::elasticsearch::recover_after_time'),
-    'gateway.recover_after_nodes'        => hiera('lma::elasticsearch::recover_after_nodes'),
-    'gateway.expected_nodes'             => size($es_nodes),
-    'http.bind_host'                     => $listen_address,
-    'transport.bind_host'                => $listen_address,
-    'transport.publish_host'             => $listen_address,
-  }
BREAKS HERE
-    options  => "rw,hidepid=2,gid=${group_cap_ptrace}",
BREAKS HERE
-    /(RedHat|CentOS|OracleLinux|Fedora|Amazon)/: {
BREAKS HERE
-# [*$ext_tool_enable*]
-# [*$ext_tool_query*]
-# [*$ext_tool_enabled*]
BREAKS HERE
-  class mysql_hardening::puppetlabs_override inherits ::mysql::server::config {
-    # merges the final set of options
-    $options = mysql_deepmerge( $::mysql::server::options, $::mysql_hardening::puppetlabs::new_options )
-    # write the new template
-    File[$mysql::server::config_file]{
-      content => template('mysql/my.cnf.erb')
-    }
-  }
BREAKS HERE
-            subscribe    => File['/usr/local/lib/nagions/plugins/service_checker'],
BREAKS HERE
-    statsd_metric => "${statsd_timer_prefix}.http_%{@field.status}",
-                        value => '@fields.duration'},
-                        value => '@fields.db'},
-                        value => '@fields.view'}],
-      statsd_metric => "${statsd_timer_prefix}.http_%{@field.status}",
-                          value => '@fields.duration'},
-                          value => '@fields.db'},
-                          value => '@fields.view'}],
BREAKS HERE
-  Boolean                                    $prefix            = false,
BREAKS HERE
-#   Defaults to hiera('cinder::backend_host', hiera('cinder::host', undef))
-  $cinder_rbd_backend_host   = hiera('cinder::backend_host', hiera('cinder::host', undef)),
BREAKS HERE
-# 
-  $ensure               = present,
-  $host_name            = undef,
-  $service_name         = undef,
-  $author               = undef,
-  $comment              = undef,
-  $fixed                = undef,
-  $duration             = undef,
-  $ranges               = undef,
-  $apply                = false,
-  $apply_target         = 'Host',
-  $assign               = [],
-  $ignore               = [],
-  $order                = '90',
-  $target               = undef,
-  validate_integer ( $order )
-  validate_string($host_name)
-  validate_string($author)
-  validate_string($comment)
-  validate_hash($ranges)
-    ensure      => $ensure,
-    object_name => $name,
-    object_type => 'ScheduledDowntime',
-    attrs       => $attrs,
-    target      => $target,
-    order       => $order,
BREAKS HERE
-  $user    = 'www-data'
-  $group   = 'www-data'
-  $repository     = 'git'
-  $svn_repository = 'http://dev.piwik.org/svn/'
BREAKS HERE
-      $es_version = '1.4.2'
BREAKS HERE
-  firewall { "${title} (IPv6)":
-    provider  => 'ip6tables',
-    require   => $require,
-    subscribe => $subscribe,
-    before    => $before,
-    notify    => $notify,
-    *         => $opts,
BREAKS HERE
-  # Ubuntu/percona
-  # Ubuntu/mariadb
-  $apt_mariadb_repo_location = 'http://mirror.aarnet.edu.au/pub/MariaDB/repo/5.5/ubuntu',
-  # Ubuntu/codership
-  $apt_codership_repo_location     = 'http://releases.galeracluster.com/ubuntu',
-      if $::operatingsystem == 'Ubuntu' {
BREAKS HERE
-    if !defined(File['/srv/mediawiki']) {
-        file { '/srv/mediawiki':
-            ensure => directory,
-            owner  => 'root',
-            group  => 'root',
-            mode   => '0755',
-        }
-    }
-
-        directory          => '/srv/mediawiki/mediawiki-config',
-        require            => File['/srv/mediawiki']
BREAKS HERE
-        query           => "rate(node_netstat_Udp_InErrors{instance=~\"${::hostname}:}\"}[5m])",
BREAKS HERE
-  $apt_percona_repo_key = '430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A',
-  $apt_percona_repo_key_server = 'keys.gnupg.net',
BREAKS HERE
-  $ensure           = 'present',
-  $autoupgrade      = false,
-  $set_as_default   = $vim::params::set_as_default,
-  $package          = $vim::params::package,
-  $set_editor_cmd   = $vim::params::set_editor_cmd,
-  $test_editor_set  = $vim::params::test_editor_set,
-  $conf_file        = $vim::params::conf,
-  $opt_nocompatible = $vim::params::nocompatible,
-  $opt_backspace    = $vim::params::backspace,
-  $opt_bg_shading   = $vim::params::background,
-  $opt_indent       = $vim::params::indent,
-  $opt_lastposition = $vim::params::lastposition,
-  $opt_matchparen   = $vim::params::matchparen,
-  $opt_powersave    = $vim::params::powersave,
-  $opt_ruler        = $vim::params::ruler,
-  $opt_syntax       = $vim::params::syntax,
-  $opt_misc         = $vim::params::misc,
-  $opt_maps         = $vim::params::maps,
-  $opt_code         = $vim::params::code,
BREAKS HERE
-    class { '::ores::lb':
-        realservers => [ 'localhost:8080' ],
-        cache       => false,
-    }
BREAKS HERE
-    package { 'graphite-carbon': }
-    package { 'python-whisper': }
BREAKS HERE
-    command => 'apt-get update >/dev/null 2>&1 ; sleep $((RANDOM\%600)) && cd /root/openstack-ci-puppet && /usr/bin/git pull -q && puppet apply -l /tmp/manifest.log --modulepath=/root/openstack-ci-puppet/modules manifests/site.pp',
BREAKS HERE
-  configure_images    => false,
-  glance_available    => false,
BREAKS HERE
-      query           => 'time() - scalar(process_start_time_seconds{job="prometheus", instance=~"127\\.0\\.0\\.1:.*"})',
-      description     => "Prometheus ${::fqdn}/${title} was restarted; expect possible monitoring artifacts",
BREAKS HERE
-    # For Ubuntu trusty+, pam_motd is configured by sshd's pam configuration to
-    # read from /run directly and hence has no need for this.
-    #
-    # For Debian jessie (as of 2014-12-31) the situation is quite complicated:
-    if os_version('debian <= jessie || ubuntu <= precise') {
BREAKS HERE
-    mode => 0644,
BREAKS HERE
-#   Defaults to cinder.volume.drivers.emc.emc_cli_iscsi.EMCCLIISCSIDriver
-  $volume_driver                 = 'cinder.volume.drivers.emc.emc_cli_iscsi.EMCCLIISCSIDriver',
BREAKS HERE
-    $file     = $title,
-    $priority = 60
-    include sysctl
-    $basename = regsubst($file, '\W', '-', 'G')
-    file { "/etc/sysctl.d/${priority}-${basename}.conf":
BREAKS HERE
-      ensure   => service_ensure($enabled),
BREAKS HERE
-    version            => '0.90.3',
BREAKS HERE
-        path   => '/etc/php5/apache2/php.ini',
BREAKS HERE
-  package { 'libffi-dev': # needed for ffi: a dependency of govuk-lint
-    ensure => installed,
-  }
-
BREAKS HERE
-                      Oradb::Utils::Dborainst["em agent orainst ${version}"],],                      
-                      Oradb::Utils::Dborainst["em agent orainst ${version}"],],                      
-                      Oradb::Utils::Dborainst["em agent orainst ${version}"],],                      
BREAKS HERE
-        postrotate   => 'service rsyslog rotate >/dev/null 2>&1 || true'
BREAKS HERE
-    file { '/usr/lib/nagios/plugins/check_eventlogging_jobs':
-        source => 'puppet:///modules/eventlogging/check_eventlogging_jobs',
-        mode   => '0755',
BREAKS HERE
-        # Mount is handled on the node definition
-        require => Mount['/srv/ssd'],
BREAKS HERE
-  include ::apache
-  include ::apache::mod::perl
BREAKS HERE
-  # NOTE(tobias-urdin): The python-requests RPM package has a package dependency
-  # which upstream requests package does not support so it outputs a warning which
-  # messes up output (warning is printed to stdout) an causes some providers that
-  # rely on the stdout output to fail. If you upgrade the python-chardet dependency
-  # to a newer version you are fine, is reported upstream:
-  # https://bugzilla.redhat.com/show_bug.cgi?id=1620221
-  # This is added here so we have the latest of this package in both integration and
-  # beaker testing.
BREAKS HERE
-    ensure    => present,
-    provider  => $provider,
BREAKS HERE
-    db_host     => hiera('paste_db_host', 'localhost'),
-    db_password => hiera('paste_db_password', 'XXX'),
-    sysadmins   => hiera('sysadmins', []),
BREAKS HERE
-        origin    => 'https://github.com/wiki-ai/wikilabels-wikimedia-config.git',
BREAKS HERE
-        source => [ "puppet://$server/files/munin/config/host/${fqdn}/munin.conf.header",
-                    "puppet://$server/files/munin/config/host/munin.conf.header.$operatingsystem",
-                    "puppet://$server/files/munin/config/host/munin.conf.header",
-                    "puppet://$server/munin/config/host/munin.conf.header.$operatingsystem",
-                    "puppet://$server/munin/config/host/munin.conf.header" ],
BREAKS HERE
-      username => $app_name,
BREAKS HERE
-  $time_zone = $::graphite::params::time_zone,
-  $manage_httpd = $::graphite::params::manage_httpd)
-  {
-
-  class {'graphite::web::config':
-
-
BREAKS HERE
-      known_stores   => $glance_store,
BREAKS HERE
-    critical  => to_bytes('256 MB'),
-    warning   => to_bytes('128 MB'),
BREAKS HERE
-  rbenv::gem { 'bundler':
BREAKS HERE
-        'npm'       => '2.14.12',
BREAKS HERE
-  $server_facts                  = $foreman::params::facts,
BREAKS HERE
-          'ceph-cfg-dir'                 => {
BREAKS HERE
-    # Use classroom master for yum cache
-    include classroom::agent::yum_repos
BREAKS HERE
-  include ::apache
-  apache::vhost { $vhost_name:
BREAKS HERE
-    include ::gnocchi::api
BREAKS HERE
-        $command_var = " -datafileDestination ${data_file_destination}"
-        $command_var = ''
-      $command = "${command_pre} ${command_var} ${command_init} ${command_nodes} ${elevation_suffix}"
BREAKS HERE
-    github_projects => [ {
-                         name => 'openstack/keystone',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/glance',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/swift',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/nova',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/horizon',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/quantum',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/melange',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/tempest',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/openstack-ci',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/openstack-ci-puppet',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/openstack-puppet',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/openstack-chef',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/openstack-manuals',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/compute-api',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/image-api',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/identity-api',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/object-api',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/netconn-api',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack-dev/devstack',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack-dev/openstack-qa',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack-dev/pbr',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/python-novaclient',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/python-glanceclient',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack-ci/git-review',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack-ci/lodgeit',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack-ci/meetbot',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack-ci/zuul',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack-ci/pypi-mirror',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/openstack-common',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/cinder',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/python-openstackclient',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack-dev/openstack-nose',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/python-cinderclient',
-                         close_pull => 'true'
-                         }, {
-                         name => 'openstack/python-swiftclient',
-                         close_pull => 'true'
-                         }, {
-                         name => 'stackforge/MRaaS',
-                         close_pull => 'true'
-                         }, {
-                         name => 'stackforge/reddwarf',
-                         close_pull => 'true'
-                         }, {
-                         name => 'stackforge/ceilometer',
-                         close_pull => 'true'
-                         }, {
-                         name => 'heat-api/heat',
-                         close_pull => 'true'
-                         } ],
-    projects => [
-      'cinder',
-      'devstack',
-      'devstack-gate',
-      'gerrit',
-      'gerritbot',
-      'gerritlib',
-      'gerrit-verification-status-plugin',
-      'glance',
-      'horizon',
-      'keystone',
-      'nova',
-      'openstack-ci-puppet',
-      'openstack-common',
-      'pbr',
-      'pypi-mirror',
-      'python-cinderclient',
-      'python-glanceclient',
-      'python-keystoneclient',
-      'python-novaclient',
-      'python-openstackclient',
-      'python-quantumclient',
-      'python-swiftclient',
-      'quantum',
-      'swift',
-      'tempest',
-      'zuul',
-      'reddwarf',
-      'ceilometer',
-      'heat'
-    ]
-    projects => [
-      'cinder',
-      'glance',
-      'horizon',
-      'keystone',
-      'nova',
-      'openstack-common',
-      'python-cinderclient',
-      'python-glanceclient',
-      'python-keystoneclient',
-      'python-novaclient',
-      'python-openstackclient',
-      'python-quantumclient',
-      'python-swiftclient',
-      'quantum',
-      'swift'
-      ]
BREAKS HERE
-        }
BREAKS HERE
-                      'oslo_messaging_rabbit/rabbit_use_ssl' => { value => $rabbit_use_ssl },
-                      'oslo_messaging_rabbit/kombu_ssl_ca_certs' => { value => $kombu_ssl_ca_certs },
-                      'oslo_messaging_rabbit/kombu_ssl_certfile' => { value => $kombu_ssl_certfile },
-                      'oslo_messaging_rabbit/kombu_ssl_keyfile' => { value => $kombu_ssl_keyfile },
-                      'oslo_messaging_rabbit/kombu_ssl_version' => { value => $kombu_ssl_version },
BREAKS HERE
-      $vcl_config_template = 'default-with-routing.vcl.erb',
-        default => 'default.vcl.erb',
-  
BREAKS HERE
-    require => Service["Start and enable the ${role_name}'s service: '${service}'"]
BREAKS HERE
-define rbenv::install($user, $group) {
-  # STEP 1
-  exec { "rbenv::install::${user}::checkout":
-    command => "git clone git://github.com/sstephenson/rbenv.git ${rbenv::paths::root}",
-    creates => $rbenv::paths::root,
-  # STEP 2
-  $rbenvrc = "${rbenv::paths::home}/.rbenvrc"
-  $bashrc  = "${rbenv::paths::home}/.bashrc"
-
-  file { "rbenv::install::${user}::rbenvrc":
-  # STEP 3
-  exec { "rbenv::install::${user}::add_init_to_bashrc":
-    require => File["rbenv::install::${user}::rbenvrc"],
-  file { "rbenv::install::${user}::make_plugins_dir":
-    path    => $rbenv::paths::plugins,
-    require => Exec["rbenv::install::${user}::checkout"],
-  # STEP 4
-  # Install ruby-build under rbenv plugins directory
-  exec { "rbenv::install::${user}::checkout_ruby_build":
-    command => "git clone git://github.com/sstephenson/ruby-build.git ${rbenv::paths::plugins}",
-    creates => "${rbenv::paths::plugins}/ruby-build",
-    require => File["rbenv::install::${user}::make_plugins_dir"],
BREAKS HERE
-        version         => $version,
-        bridges         => $bridges,
-        bridge_mappings => $bridge_mappings,
BREAKS HERE
-    include eventlogging::dependencies
-            provider => 'trebuchet'
BREAKS HERE
-  $opt_maps         = {},
BREAKS HERE
-#   Define if the add (present) or remove the user (set as $name)
-        exec { "test -f ${real_htpasswd_file} || OPT='-c'; htpasswd -bp \${OPT} ${real_htpasswd_file} ${name} '${crypt_password}'":
-          unless  => "grep -q '${name}:${crypt_password}' ${real_htpasswd_file}",
-        exec { "test -f ${real_htpasswd_file} || OPT='-c'; htpasswd -b \$OPT ${real_htpasswd_file} ${name} ${clear_password}":
-          unless  => "egrep '^${name}:' ${real_htpasswd_file} && grep ${name}:\$(mkpasswd -S \$(egrep '^${name}:' ${real_htpasswd_file} |cut -d : -f 2 |cut -c-2) ${clear_password}) ${real_htpasswd_file}",
-      exec { "htpasswd -D ${real_htpasswd_file} ${name}":
-        onlyif => "egrep -q '^${name}:' ${real_htpasswd_file}",
-        notify => Exec["delete ${real_htpasswd_file} after remove ${name}"],
-      exec { "delete ${real_htpasswd_file} after remove ${name}":
BREAKS HERE
-  validate_re($version, '^([0-9]|[0-9]u[0-9][0-9])$', '$version must be formated as \'major\'u\'minor\' or just \'major\'')
-    'x86_64' : { $arch = 'x64' }
-    'x86'    : { $arch = 'i586' }
-    default  : { fail("oracle_java does not support architecture ${arch} (yet)") }
-    $packagename = "${type}1.${maj_version}.0_${min_version}" 
-  }
-  else {
-  # make sure install/download directory exists
-  file { '/usr/java':
-    ensure => directory,
-    mode   => '0755',
-    owner  => 'root',
-    group  => 'root'
-  } ->
-  # download RPM
-  exec { 'download java RPM':
-    path    => '/usr/bin',
-    cwd     => '/usr/java',
-    creates => "/usr/java/${filename}",
-    command => "wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"${downloadurl}\"",
-    timeout => 0,
-    require => Package['wget']
-  }
-
-  # install package
-  if $maj_version >= 7 {
-    package { $packagename:
-      ensure   => latest,
-      source   => "/usr/java/${filename}",
-      provider => rpm,
-      require  => Exec['download java RPM']
-    }
-  }
-  # the procedure is a bit more complicated for older versions...
-  # RPM files are packaged into a BIN archive which needs to be extracted
-  else {
-    # translate system architecture one more time
-    $arch_final = $::architecture ? {
-      'x86_64' => 'amd64',
-      default  => $arch
-    }
-
-    # the extracted file includes the 'new' arch string
-    $filename_extract = "${type}-${version_final}-linux-${arch_final}.rpm"
-
-    exec { 'unpack java RPM':
-      path    => '/bin',
-      cwd     => '/usr/java',
-      creates => "/usr/java/${filename_extract}",
-      command => "sed -ni '/exit 0/,\${//!p}' ${filename}; chmod +x ${filename}; ./${filename}",
-      require => [Package['sed'], Exec['download java RPM']]
-    } ~>
-    # remove undesired extra RPMs
-    exec { 'cleanup java RPM':
-      path        => '/bin',
-      cwd         => '/usr/java',
-      refreshonly => true,
-      command     => 'rm -f sun-javadb-*.rpm'
-    } ->
-    package { $packagename:
-      ensure   => latest,
-      source   => "/usr/java/${filename_extract}",
-      provider => rpm
-    }
-  }
-
-  # define required packages, they are be required by exec resources
-  if !defined(Package['wget']) {
-    package { 'wget': ensure => present }
-  }
-  if $maj_version < 7 {
-    if !defined(Package['sed']) {
-      package { 'sed': ensure => present }
-    }
-  }
BREAKS HERE
-        user   => 'wikistatsuser',
BREAKS HERE
-    class { 'php::cli': }
BREAKS HERE
-    case $operatingsystem {
-        /(Ubuntu|Debian)/: {
-            $package_name = 'vim-nox'
-            $editor_name = 'vim.nox'
-        }
BREAKS HERE
-  case $::lsbdistcodename {
-    'precise': {
-        package{
-          [
-            'ruby1.9.1-dev',
-          ]:
-            ensure => installed,
-        }
-        include nodejs
-    default: {
-      # see pivotaltracker 42952267
-      package {'dpkg':
-        ensure => '1.15.5.6ubuntu4.6',
-      }
-    }
-  }
BREAKS HERE
-  $fields_under_root     = false,
BREAKS HERE
-    content => template("$puppet::agent_template"),
BREAKS HERE
-        require => Letsencrypt::Cert::Integrated['gerrit'],
BREAKS HERE
-    package { 'munin':
BREAKS HERE
-    package { ['python-ddt', 'python-oslotest']:
BREAKS HERE
-      $service_name = 'ntp'
BREAKS HERE
-  if $endpoints { validate_array($endpoints) }
-      endpoints => $endpoints,
BREAKS HERE
-    # Yes, really unset the tenant name. Rax identity can't construct a
-    # proper catalog when we provide the tenant here.
-    swift_tenant_name              => '',
BREAKS HERE
-    # They will run for a maximum of 9 minutes, so we can only have 3 concurrent instances.
-        command => "echo \"\$\$: Starting dispatcher\" >> ${dispatch_log_file}; PHP='hhvm -vEval.Jit=1' /usr/local/bin/mwscript extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki --max-time 540 --batch-size 420 --dispatch-interval 25 --randomness 15 >> ${dispatch_log_file} 2>&1; echo \"\$\$: Dispatcher exited with $?\" >> ${dispatch_log_file}",
BREAKS HERE
-	package {"munin": ensure => installed, }
-
-	File <<| tag == 'munin' |>>
-
-    file{'/etc/munin/munin.conf.header':
-        source => [ "puppet://$server/modules/site-munin/config/host/${fqdn}/munin.conf.header",
-                    "puppet://$server/modules/site-munin/config/host/munin.conf.header.$operatingsystem",
-                    "puppet://$server/modules/site-munin/config/host/munin.conf.header",
-                    "puppet://$server/modules/munin/config/host/munin.conf.header.$operatingsystem",
-                    "puppet://$server/modules/munin/config/host/munin.conf.header" ],
-        notify => Exec['concat_/etc/munin/munin.conf'],
-    }
-
-	concatenated_file { "/etc/munin/munin.conf":
-		dir => '/var/lib/puppet/modules/munin/nodes',
-		header => "/etc/munin/munin.conf.header",
-	}
-	
-    file { ["/var/log/munin-update.log", "/var/log/munin-limits.log", 
-               "/var/log/munin-graph.log", "/var/log/munin-html.log"]:
-        ensure => present,
-        mode => 640, owner => munin, group => 0;
-    }
-
-    include munin::plugins::muninhost
-
-    case $operatingsystem {
-      centos: {
-        include munin::host::cgi
-        # from time to time we cleanup hanging munin-runs
-        file{'/etc/cron.d/munin_kill':
-          content => "4,34 * * * * root if $(ps ax | grep -v grep | grep -q munin-run); then killall munin-run; fi\n",
-          owner => root, group => 0, mode => 0644;
-        }
BREAKS HERE
-# Node-OS: trusty
-# A backup machine.  Don't run cron or puppet agent on it.
-node /^ci-backup-.*\.openstack\.org$/ {
-  $group = "ci-backup"
-  class { 'openstack_project::server':
-    iptables_public_tcp_ports => [],
-    manage_exim => false,
-    purge_apt_sources => false,
-  }
-  include openstack_project::backup_server
-}
-
-# A backup machine (new).  Don't run cron or puppet agent on it.
BREAKS HERE
-        soucre   => 'puppet:///modules/profile/logstash/filter-truncate.conf',
BREAKS HERE
-        meta_params     => 'notify=true ordered=true interleave=true',
BREAKS HERE
-            Java['java-default'],
BREAKS HERE
-  # FIXME: keepLastValue() because logster only runs every 2m.
-    target    => "keepLastValue(${::fqdn_underscore}.nginx_logs.http_5xx)",
BREAKS HERE
-    openbsd: { $script_path = $::operatingsystemrelease ? {
-      '4.3'   => '/opt/munin/lib/plugins/',
-      default => '/usr/local/libexec/munin/plugins/',
-    } }
BREAKS HERE
-#   Default: "sidekiq .* ${title}.*\\.gov\\.uk"
-  $process_regex = "sidekiq .* ${title}.*\\.gov\\.uk",
BREAKS HERE
-    warning             => 2,
-    critical            => 4,
-    use                 => 'govuk_urgent_priority',
-    from                => '3minutes',
-    desc                => '429 rate for assets-origin (too many requests) [in office hours]',
BREAKS HERE
-        prefix => $jenkins_prefix,
BREAKS HERE
-    bind => $::openstack_integration::config::host
BREAKS HERE
-		acpi_available:
-			source => "puppet://$servername/munin/facter/acpi_available.rb",
-			require => Package[acpi];
BREAKS HERE
-    mysql_database         => $mysql_database,
-    mysql_user             => $mysql_user,
-    mysql_user_password    => $mysql_user_password,
-    hostname               => $hostname
BREAKS HERE
-  $augeas_contrib_dir = '/usr/share/augeas/lenses/contrib'
BREAKS HERE
-    } ->
-
-    file { '/srv/xhprof/profiles':
-    } ->
-
-    file { '/srv/xhgui/cache':
-    } ->
-
-    httpd::site { 'xhgui_apache_site':
BREAKS HERE
-#    Elasticsearch host address. Defaults to 127.0.0.1.
-#    Elasticsearch HTTP port. Defaults to 9200.
-#    Elasticsearch index name. Defaults to icinga2.
-#    Elasticsearch user name. Defaults to undef.
-#    Elasticsearch user password. Defaults to undef.
-#    Defaults to 'false'.
-#   Location of the CA certificate. Default is:
-#    Whether to send check performance data metrics. Defaults to false.
-#    How long to buffer data points before transferring to Elasticsearch. Defaults to 10s.
-#    How many data points to buffer before forcing a transfer to Elasticsearch. Defaults to 1024.
-  Enum['absent', 'present']      $ensure               = present,
-  String                         $host                 = '127.0.0.1',
-  Integer[1,65535]               $port                 = 9200,
-  String                         $index                = 'icinga2',
-  Optional[String]               $username             = undef,
-  Optional[String]               $password             = undef,
-  Boolean                        $enable_ssl           = false,
-  Enum['none', 'puppet']         $pki                  = 'puppet',
-  Optional[Stdlib::Absolutepath] $ssl_key_path         = undef,
-  Optional[Stdlib::Absolutepath] $ssl_cert_path        = undef,
-  Optional[Stdlib::Absolutepath] $ssl_cacert_path      = undef,
-  Optional[String]               $ssl_key              = undef,
-  Optional[String]               $ssl_cert             = undef,
-  Optional[String]               $ssl_cacert           = undef,
-  Boolean                        $enable_send_perfdata = false,
-  Pattern[/^\d+[ms]*$/]          $flush_interval       = '10s',
-  Integer                        $flush_threshold      = 1024
-  $ssl_dir       = "${::icinga2::params::pki_dir}/elasticsearch"
-  $_ssl_key_mode = $::kernel ? {
-    'windows' => undef,
-    default   => '0600',
-  }
-  # Set defaults for certificate stuff and/or do validation
-  if $ssl_key_path {
-    $_ssl_key_path = $ssl_key_path }
-  else {
-    $_ssl_key_path = "${ssl_dir}/${node_name}.key" }
-  if $ssl_cert_path {
-    $_ssl_cert_path = $ssl_cert_path }
-  else {
-    $_ssl_cert_path = "${ssl_dir}/${node_name}.crt" }
-  if $ssl_cacert_path {
-    $_ssl_cacert_path = $ssl_cacert_path }
-  else {
-    $_ssl_cacert_path = "${ssl_dir}/ca.crt" }
-
BREAKS HERE
-      require => Package[$ossec::params::agent_package]
-      require => Package[$ossec::params::agent_package],
-      require => Package[$ossec::params::agent_package],
BREAKS HERE
-  cron { $site_name:
-    name    => "${site_name}.cron",
-    command => "wget -O /dev/null -q -t 1 ${$site_base_url}/cron.php?cron_key=${$conf['cron_key']}",
-    user    => root,
-    minute  => '*/5',
-    require => [
-      Exec["sitedeploy-${site_name}"],
-      ]
BREAKS HERE
-    'option'       => [ 'httpchk', ],
-      listen_options  => {
-        'option'  => [ 'httpchk', ],
-      },
-        'option'  => [ 'tcpka' ],
-      'option'         => [ 'tcpka', 'httpchk' ],
-        'option'  => [ 'tcpka' ],
-        'option'    => ['tcp-check',],
-      'option'         => [ 'tcpka' ],
BREAKS HERE
-    to_version => '2.1.6'
-    to_version => '2.2.2'
BREAKS HERE
-    $first = fqdn_rand(30)
-    $second = $first + 30
-      minute  => [$first, $second],
BREAKS HERE
-        mode   => '0600', # implicitly 0700 for dirs
-        mode    => '0600', # implicitly 0700 for dirs
BREAKS HERE
-      member_options    => union($haproxy_member_options, $internal_tls_member_options),
-      member_options    => union($haproxy_member_options, $internal_tls_member_options),
BREAKS HERE
-    $nrpe_check_disk_options = '-w 6% -c 3% -W 6% -K 3% -l -e -A -i "/srv/sd[a-b][1-3]" --exclude-type=tracefs',
BREAKS HERE
-        command => "echo \"\$\$: Starting dispatcher\" >> ${dispatch_log_file}; PHP='hhvm -vEval.Jit=1' /usr/local/bin/mwscript extensions/Wikibase/repo/maintenance/dispatchChanges.php --wiki wikidatawiki --verbose >> ${dispatch_log_file} 2>&1; echo \"\$\$: Dispatcher exited with $?\" >> ${dispatch_log_file}",
BREAKS HERE
-    check_command => 'check_netstorage_age',
-    host_name     => $::fqdn,
-    service_description => "netstorage site out of date",
BREAKS HERE
-        $cron = '/usr/bin/debmonitor-client 2>&1 > /dev/null'
BREAKS HERE
-  $askbot_revision              = '06be25e5d1aa013a9a201a92db4b35b1ee1f3d32'
BREAKS HERE
-# [*control_exchange*]
-#   (option) AMQP exchange to connect to if using RabbitMQ or Qpid.
-  $notification_driver = 'cinder.openstack.common.notifier.rpc_notifier',
-  $control_exchange    = 'cinder'
-    'DEFAULT/control_exchange':        value => $control_exchange;
BREAKS HERE
-  $private_gpg_key_fingerprint,
-  $s3_bucket  = 'govuk-mongodb-backup-s3',
-  $s3_bucket_daily = 'govuk-mongodb-backup-s3-daily',
-  $user = 'govuk-backups'
-  user { $user:
-    ensure     => 'present',
-    managehome => true,
BREAKS HERE
-  $oracleHome  = undef,
-  $dbName      = undef,
-  $user        = 'oracle',
-    oracleHome => $oracleHome,
-    user       => $user,
-  exec { "set dbora ${dbName}:${oracleHome}":
-    unless    => "/bin/grep '^${dbName}:${oracleHome}:Y' ${oraTab}",
BREAKS HERE
-    # for nrpe checks to run per T110893
-    package { 'libssl0.9.8':
-        ensure => present,
-    }
-
BREAKS HERE
-	      $command_pre = "${elevation_prefix}${oracle_home}/bin/dbca -silent -createDatabase -templateName ${templatename} -gdbname ${globaldb_name} -sid ${db_name} -characterSet ${character_set} -responseFile NO_VALUE -sysPassword ${sys_password} -systemPassword ${system_password} -dbsnmpPassword ${db_snmp_password} -asmsnmpPassword ${asm_snmp_password} -storageType ${storage_type} -datafileDestination ${data_file_destination} -emConfiguration ${em_configuration} "
BREAKS HERE
-  Keystone_user_role['admin@openstack'] -> File['/root/openrc']
BREAKS HERE
-        ensure => absent,
-            urls => "http://127.0.0.1/server-status?auto"
BREAKS HERE
-  if $version in ['56', '5.6'] {
-    ::apt::pin { 'repo.mysql.com-apt':
-      priority   => 1000,
-      originator => 'repo.mysql.com-apt',
-    if ! defined(Apt::Source['repo.mysql.com-apt']) {
-      ::apt::source { 'repo.mysql.com-apt':
-        location => "http://repo.mysql.com/apt/${os}",
-        release  => $::lsbdistcodename,
-        repos    => 'mysql-5.6',
-        include  => { 'src' => true },
-        require  => Apt::Pin['repo.mysql.com-apt'],
-        before   => [
-          Class['mysql::client'],
-          Class['mysql::server'],
-        ],
-      }
-  if $version in ['57', '5.7'] {
-    ::apt::pin { 'repo.mysql.com-apt':
-      priority   => 1000,
-      originator => 'repo.mysql.com-apt',
-    if ! defined(Apt::Source['repo.mysql.com-apt']) {
-      apt::source { 'repo.mysql.com-apt':
-        location => "http://repo.mysql.com/apt/${os}",
-        release  => $::lsbdistcodename,
-        repos    => 'mysql-5.7',
-        include  => { 'src' => true },
-        require  => Apt::Pin['repo.mysql.com-apt'],
-        before   => [
-          Class['mysql::client'],
-          Class['mysql::server'],
-        ],
-      }
BREAKS HERE
-#   Defaults to fake.
-  $iscsi_helper        = 'fake',
BREAKS HERE
-  #Dtermines whether or not the NRPE daemon will allow clients to specify arguments to commands that are executed
BREAKS HERE
-  include ::logrotate
-  logrotate::file { 'epliteerror':
-    log     => "${base}/${etherpad_lite::ep_user}/error.log",
-    options => [
-      'compress',
-      'copytruncate',
-      'missingok',
-      'rotate 7',
-      'daily',
-      'notifempty',
-    ],
-    require => Service['etherpad-lite'],
-  }
-
-  logrotate::file { 'epliteaccess':
-    log     => "${base}/${etherpad_lite::ep_user}/access.log",
-    options => [
-      'compress',
-      'copytruncate',
-      'missingok',
-      'rotate 7',
-      'daily',
-      'notifempty',
-    ],
-    require => Service['etherpad-lite'],
-  }
BREAKS HERE
-  @nagios::plugin { 'check_backup_age':
-    source  => 'puppet:///modules/backup/check_backup_age',
-  }
-
-  @nagios::nrpe_config { 'check_backup_age':
-    source  => 'puppet:///modules/backup/nrpe_check_backup_age.cfg',
-  }
-
-  @@nagios::check { "check_backup_age_${::hostname}":
-    check_command       => 'check_nrpe_1arg!check_backup_age',
-    service_description => 'backup not run recently',
-    host_name           => $::fqdn,
-  }
-
BREAKS HERE
-      command => '/usr/bin/python -W ignore::DeprecationWarning /usr/lib/python2.6/site-packages/graphite/manage.py syncdb --noinput',
BREAKS HERE
-        source  => 'puppet:///modules/planet/theme/images/planet-wm2.png';
BREAKS HERE
-            before  => Service['postgresql'],
-    service { 'postgresql':
BREAKS HERE
-    gerrit_server        => 'review.openstack.org',
-    gerrit_user          => 'jenkins',
-    gerrit_ssh_host_key  => hiera('gerrit_ssh_rsa_pubkey_contents'),
-    zuul_ssh_private_key => hiera('zuul_ssh_private_key_contents'),
-    url_pattern          => 'http://logs.openstack.org/{build.parameters[LOG_PATH]}',
-    zuul_url             => 'http://zuul.openstack.org/p',
-    sysadmins            => hiera('sysadmins'),
-    statsd_host          => 'graphite.openstack.org',
-    gearman_workers      => [
BREAKS HERE
-	  if ! defined(File["${downloadDir}/${rcuFile}"]) {
-	    file { "${downloadDir}/${rcuFile}":
-	      source => "${mountPoint}/${rcuFile}",
-	    }
-	  }
-  
-	  if ! defined(Exec["extract ${rcuFile}"]) {
-	    exec { "extract ${rcuFile}":
-	      command             => "unzip ${downloadDir}/${rcuFile} -d ${downloadDir}/rcu_${version}",
-	      require             => File ["${downloadDir}/${rcuFile}"],
-	      creates             => "${downloadDir}/rcu_${version}/rcuHome",
-	    }
-	  }
-                        File["${downloadDir}/${rcuFile}"],
-                        File["${downloadDir}/${rcuFile}"],
-                        File["${downloadDir}/${rcuFile}"],
-                        File["${downloadDir}/${rcuFile}"],
-                        File["${downloadDir}/${rcuFile}"],
BREAKS HERE
-        stretch  => '/usr/bin/graphite-manage migrate --syncdb --noinput',
BREAKS HERE
-      version    => '5.9.0',
BREAKS HERE
-    modt    => '0644',
BREAKS HERE
-    class { '::nova::db::sync_cell_v2':
-      transport_url => os_transport_url({
-        'transport' => $::tripleo::profile::base::nova::messaging_driver,
-        'hosts'     => $messaging_hosts_real,
-        'port'      => $messaging_port_real,
-        'username'  => $::tripleo::profile::base::nova::messaging_username,
-        'password'  => $::tripleo::profile::base::nova::messaging_password,
-        'ssl'       => $messaging_use_ssl_real,
-        }),
-    }
BREAKS HERE
-            'baseurl'  => 'https://trunk.rdoproject.org/centos7-mitaka/ca/7d/ca7d0de4abbfd6b4145eba1c91c46d7ccc9c4a4b_67fe128c/',
-            'descr'    => 'Mitaka Current',
BREAKS HERE
-		"${tftp_root}/images/centos": ensure => directory, owner => root, group => root, mode => 755;
-        "ubuntu lucid adm64":
-            arch => "adm64",
BREAKS HERE
-    if os_version('debian jessie') and ($version == 'mitaka') {
-        $install_options = ['-t', 'jessie-backports']
-    } else {
-        $install_options = ''
-    }
-
-    package {'neutron-server':
-        ensure          => 'present',
-        install_options => $install_options,
-    }
BREAKS HERE
-    $storage_package,
-  package { [$db_package, $storage_package]:
-    require => Package[$db_package, $storage_package],
-    require    => Package[$db_package, $storage_package],
BREAKS HERE
-    options => ['compress', 'delaycompress', 'missingok', 'rotate 7', 'daily', 'notifempty'],
-    options => ['compress', 'delaycompress', 'missingok', 'rotate 7', 'daily', 'notifempty'],
BREAKS HERE
-    ssl_chain_file_contents          => hiera('ssl_chain_file_contents'),
-    keystone_ssl_key_file_contents   => hiera('keystone_ssl_key_file_contents'),
-    keystone_ssl_cert_file_contents  => hiera('keystone_ssl_cert_file_contents'),
-    glance_ssl_key_file_contents     => hiera('glance_ssl_key_file_contents'),
-    glance_ssl_cert_file_contents    => hiera('glance_ssl_cert_file_contents'),
-    neutron_ssl_key_file_contents    => hiera('neutron_ssl_key_file_contents'),
-    neutron_ssl_cert_file_contents   => hiera('neutron_ssl_cert_file_contents'),
-    nova_ssl_key_file_contents       => hiera('nova_ssl_key_file_contents'),
-    nova_ssl_cert_file_contents      => hiera('nova_ssl_cert_file_contents'),
BREAKS HERE
-    source  => 'puppet:///modules/router/etc/nginx/router-replacement-port8081.conf',
BREAKS HERE
-    include rsync::server
BREAKS HERE
-  $enabled = true,
-  govuk::app { $app_name:
-    ensure            => $ensure,
-    app_type          => 'rack',
-    port              => $port,
-    sentry_dsn        => $sentry_dsn,
-    vhost_ssl_only    => true,
-    health_check_path => '/healthcheck', # must return HTTP 200 for an unauthenticated request
-    deny_framing      => true,
-    asset_pipeline    => true,
-  }
-  Govuk::App::Envvar {
-    app               => $app_name,
-    ensure            => $ensure,
-    notify_service    => $enabled,
-  }
-  govuk::app::envvar {
-    "${title}-SECRET_KEY_BASE":
-      varname => 'SECRET_KEY_BASE',
-      value   => $secret_key_base;
-    "${title}-OAUTH_ID":
-      varname => 'OAUTH_ID',
-      value   => $oauth_id;
-    "${title}-OAUTH_SECRET":
-      varname => 'OAUTH_SECRET',
-      value   => $oauth_secret;
-  }
-  if $::govuk_node_class !~ /^development$/ {
-    govuk::app::envvar::database_url { $app_name:
-      type     => 'postgresql',
-      username => $db_username,
-      password => $db_password,
-      host     => $db_hostname,
-      port     => $db_port,
-      database => $db_name,
-}
BREAKS HERE
-    $real_package = $provider ? {
-      'pecl'  => $title,
-      default => "${package_prefix}${title}",
BREAKS HERE
-  $use_git = false,
BREAKS HERE
-      source          => 'puppet:///private/backups/.pgpass',
-      mode            => '0600',
-      owner           => 'ocfbackups', 	
-      show_diff       => false;
BREAKS HERE
-        ensure  => directory,
-        owner   => 'mirror',
-        group   => 'mirror',
-        mode    => '0755',
-        ensure  => directory,
-        purge   => false,
-        owner   => 'mirror',
-        group   => 'mirror',
-        mode    => '0755',
-        ensure  => present,
-        owner   => 'mirror',
-        group   => 'mirror',
-        mode    => '0555',
-        source  => 'puppet:///modules/mirrors/ftpsync.conf',
BREAKS HERE
-    release         => 'kilo',
BREAKS HERE
-        ensure  => present,
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
-        source  => 'puppet:///modules/openldap/samba.schema',
-        ensure  => present,
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
-        source  => 'puppet:///modules/openldap/rfc2307bis.schema',
BREAKS HERE
-    package_ensure => '0.6',
-    config         => {
BREAKS HERE
-#   The package name for PHP dev
-#   For debian it's php5-dev
-  $package = $php::params::dev_package,
BREAKS HERE
-      settings => {
-        'http.host' => 'elk.infra.redteam',
-      }
BREAKS HERE
-  $base_dir_REAL                    = $::graphite::gr_base_dir
-  $storage_dir_REAL                 = pick($::graphite::gr_storage_dir,            "${base_dir_REAL}/storage")
-  $local_data_dir_REAL              = pick($::graphite::gr_local_data_dir,         "${storage_dir_REAL}/whisper")
-  $rrd_dir_REAL                     = pick($::graphite::gr_rrd_dir,                "${storage_dir_REAL}/rrd")
-  $whitelists_dir_REAL              = pick($::graphite::gr_whitelists_dir,         "${storage_dir_REAL}/lists")
-  $carbon_conf_dir_REAL             = pick($::graphite::gr_carbon_conf_dir,        "${base_dir_REAL}/conf")
-  $carbon_log_dir_REAL              = pick($::graphite::gr_carbon_log_dir,         "${storage_dir_REAL}/log/carbon-cache")
-  $graphiteweb_log_dir_REAL         = pick($::graphite::gr_graphiteweb_log_dir,    "${storage_dir_REAL}/log")
-  $graphiteweb_conf_dir_REAL        = pick($::graphite::gr_graphiteweb_conf_dir,   "${base_dir_REAL}/conf")
-  $graphiteweb_webapp_dir_REAL      = pick($::graphite::gr_graphiteweb_webapp_dir, "${base_dir_REAL}/webapp")
-  $graphiteweb_storage_dir_REAL     = $::graphite::gr_graphiteweb_storage_dir
-  $graphiteweb_install_lib_dir_REAL = pick($::graphite::gr_graphiteweb_install_lib, "${graphiteweb_webapp_dir_REAL}/graphite")
BREAKS HERE
-  $ensure = present,
-    attrs       => {},
BREAKS HERE
-# [*keystone_auth_host*]
-#   (optional) DEPRECATED The keystone host
-#   Defaults to localhost
-#   Use auth_uri instead.
-#
-# [*keystone_auth_port*]
-#   (optional) DEPRECATED The keystone auth port
-#   Defaults to 35357
-#   Use auth_uri instead.
-#
-# [*keystone_auth_protocol*]
-#   (optional) DEPRECATED The protocol used to access the auth host
-#   Defaults to http.
-#   Use auth_uri instead.
-#
-# [*keystone_auth_admin_prefix*]
-#   (optional) DEPRECATED The admin_prefix used to admin endpoint of the auth
-#   host. This allow admin auth URIs like http://auth_host:35357/keystone.
-#   (where '/keystone' is the admin prefix)
-#   Defaults to false for empty. If defined, should be a string with a
-#   leading '/' and no trailing '/'.
-#   Use auth_uri instead.
-#
-# [*keystone_auth_uri*]
-#   (optional) DEPRECATED Renamed to auth_uri
-#   Defaults to 'false'.
-#
-#   Defaults to 'false'.
-#   Defaults to: false
-#
-# [*service_port*]
-#   (optional) DEPRECATED The Keystone public api port
-#   Defaults to 5000
-  $auth_uri                    = false,
-  $identity_uri                = false,
-  $keystone_auth_uri          = false,
-  $keystone_auth_host         = 'localhost',
-  $keystone_auth_port         = '35357',
-  $keystone_auth_protocol     = 'http',
-  $keystone_auth_admin_prefix = false,
-  $service_port               = '5000',
-
-  if $keystone_auth_uri and $auth_uri {
-    fail('both keystone_auth_uri and auth_uri are set and they have the same meaning')
-  }
-  elsif !$keystone_auth_uri and !$auth_uri {
-    warning('use of keystone_auth_protocol, keystone_auth_host, and service_port is deprecated, please set auth_uri directly')
-    $auth_uri_real = "${keystone_auth_protocol}://${keystone_auth_host}:${service_port}/"
-  }
-  elsif $keystone_auth_uri {
-    warning('keystone_auth_uri has been renamed to auth_uri')
-    $auth_uri_real = $keystone_auth_uri
-  }
-  else {
-    $auth_uri_real = $auth_uri
-  }
-
-    'keystone_authtoken/auth_uri': value => $auth_uri_real;
-    'keymgr/encryption_auth_url' : value => $keymgr_encryption_auth_url;
-
-
-    # if both auth_uri and identity_uri are set we skip these deprecated settings entirely
-    if !$auth_uri or !$identity_uri {
-      if $keystone_auth_host {
-        warning('The keystone_auth_host parameter is deprecated. Please use auth_uri and identity_uri instead.')
-        cinder_config {
-          'keystone_authtoken/auth_host': value => $keystone_auth_host;
-        }
-      } else {
-        cinder_config {
-          'keystone_authtoken/auth_host': ensure => absent;
-        }
-      }
-
-      if $keystone_auth_protocol {
-        warning('The keystone_auth_protocol parameter is deprecated. Please use auth_uri and identity_uri instead.')
-        cinder_config {
-          'keystone_authtoken/auth_protocol': value => $keystone_auth_protocol;
-        }
-      } else {
-        cinder_config {
-          'keystone_authtoken/auth_protocol': ensure => absent;
-        }
-      }
-
-      if $keystone_auth_port {
-        warning('The keystone_auth_port parameter is deprecated. Please use auth_uri and identity_uri instead.')
-        cinder_config {
-          'keystone_authtoken/auth_port': value => $keystone_auth_port;
-        }
-      } else {
-        cinder_config {
-          'keystone_authtoken/auth_port': ensure => absent;
-        }
-      }
-
-      if $keystone_auth_admin_prefix {
-        warning('The keystone_auth_admin_prefix parameter is deprecated. Please use auth_uri and identity_uri instead.')
-        validate_re($keystone_auth_admin_prefix, '^(/.+[^/])?$')
-        cinder_api_paste_ini {
-          'filter:authtoken/auth_admin_prefix': value => $keystone_auth_admin_prefix;
-        }
-      } else {
-        cinder_api_paste_ini {
-          'filter:authtoken/auth_admin_prefix': ensure => absent;
-        }
-      }
-    }
-    else {
-      cinder_api_paste_ini {
-        'filter:authtoken/auth_admin_prefix': ensure => absent;
-      }
-      cinder_config {
-        'keystone_authtoken/auth_port': ensure => absent;
-        'keystone_authtoken/auth_host': ensure => absent;
-        'keystone_authtoken/auth_protocol': ensure => absent;
-      }
-    }
-  }
-
-  if $identity_uri {
-    cinder_config {
-      'keystone_authtoken/identity_uri': value => $identity_uri;
-    }
-  } else {
-    cinder_config {
-      'keystone_authtoken/identity_uri': ensure => absent;
-    }
-        'command'  => "cinder --os-auth-url ${auth_uri_real} --os-tenant-name ${keystone_tenant} --os-username ${keystone_user} --os-password ${keystone_password} list",
BREAKS HERE
-# $data_directory - Where the data files should live.  default: $geoip::data::data_directory
-  $data_directory = $geoip::data::data_directory,
-  $product_ids    = [106]) inherits geoip::data
BREAKS HERE
-  $log_dir         = "${log_dir}/compat",
BREAKS HERE
-# [*source*]
BREAKS HERE
-    require_package('graphite-web')
-        command     => '/usr/bin/graphite-manage syncdb --noinput',
BREAKS HERE
-    links   => 'follow',
BREAKS HERE
-#   Absolute path to the status.dat file. Default depends on platform:
-#   Absolute path to the object.cache file. Default depends on platform:
-#   Interval in seconds to update both status files.
-#   You can also specify it in minutes with the letter m or in seconds with s. Defaults to '15s'
-  Enum['absent', 'present'] $ensure          = present,
-  Stdlib::Absolutepath      $status_path     = "${::icinga2::params::cache_dir}/status.dat",
-  Stdlib::Absolutepath      $objects_path    = "${::icinga2::params::cache_dir}/objects.cache",
-  Pattern[/^\d+[ms]*$/]     $update_interval = '15s',
BREAKS HERE
-        description    => 'wikidata.org dispatch lag is higher than 300s',
BREAKS HERE
-  ruby::version {'1.9.2': }
BREAKS HERE
-    file { "/etc/init/${instance_name}.conf":
-        source => "puppet:///modules/testreduce/${instance_name}.upstart.conf",
-        notify => Service[$instance_name],
-        ensure   => running,
-        provider => upstart,
BREAKS HERE
-        ensure  => $enable_reload_categories,
BREAKS HERE
-        source   => 'puppet:///modules/apache/status.conf',
-        require  =>  Apache::Mod_conf['status'],
BREAKS HERE
-  require storyboard::params
-  class { 'rabbitmq':
BREAKS HERE
-    sysadmins               => hiera('sysadmins', []),
-    sysadmins           => hiera('sysadmins', []),
BREAKS HERE
-# [*public_address*]
-#    Public address for endpoint. Optional. Defaults to '127.0.0.1'.
-# [*admin_address*]
-#    Admin address for endpoint. Optional. Defaults to '127.0.0.1'.
-# [*internal_address*]
-#    Internal address for endpoint. Optional. Defaults to '127.0.0.1'.
-# [*port*]
-#    Port for endpoint. Optional. Defaults to '8786'.
-# [*share_version*]
-#    Manila API version. Optional. Defaults to 'v1'.
-# [*region*]
-#    Region for endpoint. Optional. Defaults to 'RegionOne'.
-# [*tenant*]
-#    Tenant for Manila user. Optional. Defaults to 'services'.
-#    Protocol for public endpoint. Optional. Defaults to 'http'.
-#    Protocol for internal endpoint. Optional. Defaults to 'http'.
-#    Protocol for admin endpoint. Optional. Defaults to 'http'.
-  $public_address        = '127.0.0.1',
-  $admin_address         = '127.0.0.1',
-  $internal_address      = '127.0.0.1',
-  $port                  = '8786',
-  $share_version         = 'v1',
-  $public_protocol       = 'http',
-  $admin_protocol        = 'http',
-  $internal_protocol     = 'http'
-    public_url          => "${public_protocol}://${public_address}:${port}/${share_version}/%(tenant_id)s",
-    admin_url           => "${admin_protocol}://${admin_address}:${port}/${share_version}/%(tenant_id)s",
-    internal_url        => "${internal_protocol}://${internal_address}:${port}/${share_version}/%(tenant_id)s",
BREAKS HERE
-class ocf::packages::postfix {
-  if !tagged('ocf_mail') {
BREAKS HERE
-                alias => 'munin-node',
BREAKS HERE
-    statsd_hosts            => ['jenkins.openstack.org',
-                                'devstack-launch.slave.openstack.org',
BREAKS HERE
-node 'wiki.openstack.org' {
BREAKS HERE
-	$munin_port_real = $munin_port ? { '' => 4949, default => $munin_port } 
-	$munin_host_real = $munin_host ? {
-		'' => '*',
-		'fqdn' => '*',
-		default => $munin_host
-	}
-
-    case $operatingsystem {
-        openbsd: { include munin::client::openbsd }
-        darwin: { include munin::client::darwin }
-        debian,ubuntu: { include munin::client::debian }
-        gentoo: { include munin::client::gentoo }
-        centos: { include munin::client::centos }
-        default: { include munin::client::base }
-    }
-    if $use_shorewall {
-        include shorewall::rules::munin
-    }
BREAKS HERE
-    include ::vagrant
-    include ::vagrant::lxc
-    include ::vagrant::mediawiki
BREAKS HERE
-            query           => "scalar(org_apache_ZooKeeperService_NumAliveConnections{instance=\"${::hostname}:12181, zookeeper_cluster=\"${cluster_name}\"})",
BREAKS HERE
-  if str2bool("$web_manage_httpd") {
-  if str2bool("$web_basic_http_auth") {
BREAKS HERE
-  $database_connection         = 'sqlite:////var/lib/cinder/cinder.sqlite',
-  $database_idle_timeout       = '3600',
-  $database_min_pool_size      = '1',
-  $database_max_pool_size      = undef,
-  $database_max_retries        = '10',
-  $database_retry_interval     = '10',
-  $database_max_overflow       = undef,
-  $rpc_backend                 = 'cinder.openstack.common.rpc.impl_kombu',
-  $control_exchange            = 'openstack',
-  $rabbit_host                 = '127.0.0.1',
-  $rabbit_port                 = 5672,
-  $rabbit_hosts                = false,
-  $rabbit_virtual_host         = '/',
-  $rabbit_userid               = 'guest',
-  $rabbit_password             = false,
-  $rabbit_use_ssl              = false,
-  $kombu_ssl_ca_certs          = undef,
-  $kombu_ssl_certfile          = undef,
-  $kombu_ssl_keyfile           = undef,
-  $kombu_ssl_version           = 'TLSv1',
-  $amqp_durable_queues         = false,
-  $qpid_hostname               = 'localhost',
-  $qpid_port                   = '5672',
-  $qpid_username               = 'guest',
-  $qpid_password               = false,
-  $qpid_sasl_mechanisms        = false,
-  $qpid_reconnect              = true,
-  $qpid_reconnect_timeout      = 0,
-  $qpid_reconnect_limit        = 0,
-  $qpid_reconnect_interval_min = 0,
-  $qpid_reconnect_interval_max = 0,
-  $qpid_reconnect_interval     = 0,
-  $qpid_heartbeat              = 60,
-  $qpid_protocol               = 'tcp',
-  $qpid_tcp_nodelay            = true,
-  $package_ensure              = 'present',
-  $use_ssl                     = false,
-  $ca_file                     = false,
-  $cert_file                   = false,
-  $key_file                    = false,
-  $api_paste_config            = '/etc/cinder/api-paste.ini',
-  $use_syslog                  = false,
-  $log_facility                = 'LOG_USER',
-  $log_dir                     = '/var/log/cinder',
-  $verbose                     = false,
-  $debug                       = false,
-  $storage_availability_zone   = 'nova',
-  $default_availability_zone   = false,
-  $enable_v1_api               = true,
-  $enable_v2_api               = true,
-  $mysql_module                = undef,
-      'oslo_messaging_rabbit/rabbit_password':     value => $rabbit_password, secret => true;
-      'oslo_messaging_rabbit/rabbit_userid':       value => $rabbit_userid;
-      'oslo_messaging_rabbit/rabbit_virtual_host': value => $rabbit_virtual_host;
-      'oslo_messaging_rabbit/rabbit_use_ssl':      value => $rabbit_use_ssl;
-      'DEFAULT/control_exchange':    value => $control_exchange;
-      'DEFAULT/amqp_durable_queues': value => $amqp_durable_queues;
BREAKS HERE
-  $repositoryd    = $::icinga2::repositoryd
BREAKS HERE
-    $real_settings = deep_merge({"${extension_key}"=>"${name}.so"},$settings)
-      $real_settings = deep_merge({"${extension_key}"=>"${name}.so"},$settings)
-      $real_settings = $settings
-    config => $real_settings,
BREAKS HERE
-            'net.ipv4.conf.default.rp_filter' => 0,
-            'net.ipv4.conf.all.rp_filter'     => 0,
-            'net.ipv4.ip_forward'             => 1,
-            'net.ipv6.conf.all.forwarding'    => 1,
-            'net.ipv6.conf.all.accept_ra'     => 0,
-            # and bucket since all of labs is
-            # tracked on the network host
-            'net.netfilter.nf_conntrack_max'  => 262144,
BREAKS HERE
-        ensure  => $ensure,
BREAKS HERE
-  $array_source_v6 = any2array($source_v6)
BREAKS HERE
-    unless $::fqdn in $::standard::ntp::wmf_peers[$::site] {
-        include standard::ntp::client
BREAKS HERE
-      before => File["${conf_dir}/features-enabled", $pkidir],
BREAKS HERE
-        'check_etcd_mw_config_lastindex',
-        'check_grafana_alert',
-        'check_graphite',
-        'check_graphite_freshness',
BREAKS HERE
-  $bootstrap_node = hiera('bootstrap_nodeid', undef),
-  $step           = hiera('step'),
-    include ::manila::api
BREAKS HERE
-  $streamname            = '{instance-id}'
BREAKS HERE
-        srange => '@resolve(syncproxy.cna.debian.org)',
BREAKS HERE
-        'include_path'         => '".:/usr/share/php:/srv/mediawiki/php"',
-        'error_log'            => 'syslog',
-        'pcre.backtrack_limit' => 5000000,
-        'date.timezone'        => 'UTC',
-        'display_errors'       => 'stderr',
-        'memory_limit'         => '500M',
-        'error_reporting'      => 'E_ALL & ~E_STRICT',
-        'mysql'                => { 'connect_timeout' => 3},
-        'opcache.enable'                => 1,
-        'opcache.memory_consumption'    => 256,
-        'opcache.max_accelerated_files' => 24000,
-        'opcache.max_wasted_percentage' => 10,
-        'opcache.validate_timestamps'   => 0,
-        'auto_prepend_file'             => '/srv/mediawiki/wmf-config/PhpAutoPrepend.php',
-        'display_errors'                => 0,
-                'extension'            => 'memcached.so',
-                'memcached.serializer' => 'php',
-                'extension'       => 'igbinary.so',
-                'compact_strings' => 'Off',
-            package_name => "php${php_version}-mysql";
BREAKS HERE
-      notify  => Service[shorewall];
BREAKS HERE
-    include jenkins::slave::requisites
BREAKS HERE
-    $keystone_host   = lookup('profile::openstack::eqiad1::keystone_host'),
-    $keystone_port   = lookup('profile::openstack::base::keystone::public_port'),
-    $puppet_enc_host = lookup('profile::wmcs::shinken::puppet_enc_host'),
-    $ircbot          = lookup('profile::wmcs::shinken::ircbot'),
-    $ircbot_nick     = lookup('profile::wmcs::shinken::ircbot_nick'),
-    $ircbot_server   = lookup('profile::wmcs::shinken::ircbot_server'),
-        user       => 'shinken',
-        privileges => ['ALL=(root) NOPASSWD: /usr/lib/nagios/plugins/check_dhcp'],
BREAKS HERE
-  govuk::app { 'static':
-    app_type           => 'rack',
-    port               => $port,
-    enable_nginx_vhost => false,
-    #if changed, nginx::config::vhost::static also needs to change
-    health_check_path  => '/templates/wrapper.html.erb',
-  }
-  nginx::config::vhost::static { "static.${app_domain}":
-    to                => "localhost:${port}",
-    protected         => false,
-    aliases           => ['calendars', 'smartanswers', 'static', 'frontend', 'designprinciples', 'licencefinder', 'tariff', 'efg', 'feedback', 'datainsight-frontend', 'businesssupportfinder'],
-    ssl_only          => true,
-    server_names      => ['static.*', 'assets.*'],
-    extra_root_config => "location ~ ^/government/(assets|uploads|placeholder$)/ {
-      proxy_set_header Host $whitehall_frontend_host;
-      proxy_pass http://$whitehall_frontend_host;
-    ",
BREAKS HERE
-        if os.version('debian == jessie') {
BREAKS HERE
-            ensure      => $ensure,
-            comment     => "VMware Tools ${tools_version} - ${vmwaretools::params::baseurl_string} ${::lsbdistcodename}",
-            location    => $baseurl_url,
-            key_source  => $gpgkey,
-            #key         => '0xC0B5E0AB66FD4949',
-            key         => '36E47E1CC4DCC5E8152D115CC0B5E0AB66FD4949',
-            include_src => false,
BREAKS HERE
-    if ! defined(File["${path}/database_${title}.rsp"]) {
-      file { "${path}/database_${title}.rsp":
-        command      => "dbca -silent -responseFile ${path}/database_${title}.rsp",
-        require      => File["${path}/database_${title}.rsp"],
-        command      => "dbca -silent -responseFile ${path}/database_${title}.rsp",
-        require      => File["${path}/database_${title}.rsp"],
-}
BREAKS HERE
-        prefix     => '/ci',
-        prefix    => '/ci',
BREAKS HERE
-    require_package('openjdk-7-jre')
BREAKS HERE
-        command => "/usr/bin/mysqldump -u root -p$ wikistats > ${wikistats::db::backupdir}/wikistats_db_${date}.sql && gzip ${backupdir}/wikistats_db_${date}.sql",
BREAKS HERE
-Cron { special => 'absent', minute => '*', hour => '*', weekday => '*', month => '*', monthday => '*' }
BREAKS HERE
-    ensure  => 'present',
-    mode    => '0750',
-    owner   => $puppi::params::mcollective_user,
-    group   => $puppi::params::mcollective_group,
-    source  => 'puppet:///modules/puppi/mcollective/puppicheck',
-    ensure  => 'present',
-    mode    => '0750',
-    owner   => $puppi::params::mcollective_user,
-    group   => $puppi::params::mcollective_group,
-    source  => 'puppet:///modules/puppi/mcollective/puppideploy',
BREAKS HERE
-$ldap_protocol              = $plugin['ldap_protocol']
BREAKS HERE
-#   The full domain for this environment. This is specifically used
-#   within Location Configuration template.
BREAKS HERE
-    war => 'http://ci.openstack.org/tarballs/test/gerrit-2.4-14-geb78cd0.war',
BREAKS HERE
-#http://projects.puppetlabs.com/projects/1/wiki/Module_Iptables_Patterns
-
-class iptables($rules='', $public_tcp_ports=[], $public_udp_ports=[]) {
-    require => Package['iptables-persistent'],
-
-
-
-    require => [Package['iptables-persistent'], File['/etc/iptables']],
-    require => [Package['iptables-persistent'], File['/etc/iptables']],
BREAKS HERE
-    file { "/etc/sudoers.d/${title_safe}":
BREAKS HERE
-  if $states { validate_array ( $states ) }
-    'states'                => $states,
BREAKS HERE
-    $full_settings = ensure_prefix($settings, "${name}.")
BREAKS HERE
-  $sshkeys = '',
-  $shell = '/bin/bash'
-    groups     => [
-      'sudo',
-      'admin',
-    ],
-    home       => "/home/${title}",
-    managehome => true,  # creates home directory, does not manage it
-    require    => Group[$title],
-    name    => "/home/${title}/.ssh",
-    name    => "/home/${title}/.ssh/authorized_keys",
BREAKS HERE
-    require_package('curl')
BREAKS HERE
-# [*ns_prefix*]
-#   Prefix for namespace (e.g. qrouter-, qdhcp-)
-#
-  $ns_prefix,
-        'ns_prefix'   => $ns_prefix,
BREAKS HERE
-  case $::osfamily {
-    'RedHat': {
-    'Debian': {
-  $rm_shell = $::osfamily ? {
-    'RedHat' => '/sbin/nologin',
-    'Debian' => '/bin/false',
BREAKS HERE
-    if $basedir == 'undefined' {
-        $initd_basedir = "/opt/${package}"
-    } else {
-        $initd_basedir = $basedir
-    }
-
BREAKS HERE
-        xmlremotedirs  => 'dumpsdata1002.eqiad.wmnet::data/xmldatadumps/public/,dataset1001.wikimedia.org::data/xmldatadumps/public/,labstore1006.wikimedia.org::data/xmldatadumps/public/',
-        miscremotedirs => 'dumpsdata1002.eqiad.wmnet::data/otherdumps/,dataset1001.wikimedia.org::data/xmldatadumps/public/other/,labstore1006.wikimedia.org::data/xmldatadumps/public/other/',
BREAKS HERE
-        source => 'puppet:///modules/r/update-library.R',
BREAKS HERE
-          'ocata-puppet-passed-ci' => {
-            'baseurl'  => 'https://trunk.rdoproject.org/centos7-master/puppet-passed-ci/',
-            'descr'    => 'Ocata puppet-passed-ci',
-          'ocata-delorean-deps'    => {
BREAKS HERE
-    $env = {}
-    command     => "${path} self-update",
BREAKS HERE
-    debug                      => true,
BREAKS HERE
-    command = $::osfamily ? {
-    }
BREAKS HERE
-	file {
-		"/etc/munin/":
-		"/etc/munin/munin-node.conf":
BREAKS HERE
-    concat::fragment { "icinga2::object::${object_type}::${object_name}":
BREAKS HERE
-    $rack = hiera('profile::elasticsearch::rack', undef) # FIXME: default to undef does not work as expected
-    $row = hiera('profile::elasticsearch::row', undef)  # FIXME: default to undef does not work as expected
-    $awareness_attributes = hiera('profile::elasticsearch::awareness_attributes', undef)
-    if ($::realm == 'production' and $row == undef) {
-        fail("Don't know row for ${::hostname} and row awareness should be turned on")
-    }
-
BREAKS HERE
-  $galera_nodes = downcase(hiera('galera_node_names', $::hostname))
BREAKS HERE
-    class { 'gerrit::jetty':
-        class { 'gerrit::proxy':
-        class { 'gerrit::crons':
BREAKS HERE
-  include mysql::server
BREAKS HERE
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names      => $controller_hosts_names_real,
-      server_names              => $controller_hosts_names_real,
BREAKS HERE
-        ensure  => directory,
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0755',
BREAKS HERE
-    $slaves = hiera('profile::puppetdb::slaves'),
-    $ssldir = undef,
BREAKS HERE
-    if $::is_labs_puppet_master {
BREAKS HERE
-    # puppetlabs-firewall manages security rules via Puppet but make the rules
-    # consistent by default. Since Neutron also creates some rules, we don't
-    # want them to be consistent so we have to ensure that they're not stored
-    # into sysconfig.
-    # Also, we need to reload IPtables after the cleanup to make sure rules aren't persistent
-    # anymore.
-    # NOTE(aschultz): this needs to be a reload and not a restart due to
-    # BZ#1520534 where iptables my unload modules (like openvswitch) when it
-    # restarts.
-      onlyif  => '/bin/test -f /etc/sysconfig/iptables && /bin/grep -v neutron- /etc/sysconfig/iptables',
-      notify  => Exec['reload_iptables'],
-    }
-    exec { 'reload_iptables':
-      command     => 'systemctl reload iptables',
-      path        => ['/usr/bin', '/usr/sbin', '/bin', '/sbin'],
-      refreshonly => true,
-      onlyif  => '/bin/test -f /etc/sysconfig/ip6tables && /bin/grep -v neutron- /etc/sysconfig/ip6tables',
-      notify  => Exec['reload_ip6tables'],
-    }
-    exec { 'reload_ip6tables':
-      command     => 'systemctl reload ip6tables',
-      path        => ['/usr/bin', '/usr/sbin', '/bin', '/sbin'],
-      refreshonly => true,
BREAKS HERE
-  $use_syslog                  = false,
-  $log_facility                = 'LOG_USER',
-  $log_dir                     = '/var/log/manila',
-  $verbose                     = false,
-  $debug                       = false,
-    'DEFAULT/verbose':                   value => $verbose;
-    'DEFAULT/debug':                     value => $debug;
-  if $log_dir {
-    manila_config {
-      'DEFAULT/log_dir': value => $log_dir;
-    }
-  } else {
-    manila_config {
-      'DEFAULT/log_dir': ensure => absent;
-    }
-  }
-
-  if $use_syslog {
-    manila_config {
-      'DEFAULT/use_syslog':           value => true;
-      'DEFAULT/syslog_log_facility':  value => $log_facility;
-    }
-  } else {
-    manila_config {
-      'DEFAULT/use_syslog':           value => false;
-    }
-  }
-
BREAKS HERE
-            dashboard_links => ["https://grafana.wikimedia.org/dashboard/db/host-overview?var-server=${::hostname}&var-datasource=${::site}%20prometheus%2Fops"],
-        dashboard_links => ["https://grafana.wikimedia.org/dashboard/db/host-overview?orgId=1&var-server=${::hostname}&var-datasource=${::site}%20prometheus%2Fops"],
-        dashboard_links => ["https://grafana.wikimedia.org/dashboard/db/host-overview?orgId=1&var-server=${::hostname}&var-datasource=${::site}%20prometheus%2Fops"],
BREAKS HERE
-        ensure   => $ensure,
-        path     => '/usr/local/bin/puppet-compiler',
-        content  => template('puppet_compiler/run_wrapper.erb'),
-        mode     => '0555'
-            ensure        => present,
-            directory     => $install_dir,
-            owner         => $user,
-            git_tag       => "compare-puppet-catalogs-${version}",
-            require       => Nginx::Site['puppet-compiler'],
BREAKS HERE
-  #...otherwise, use the same file resource but without a notify => parameter: 
-  
-  
BREAKS HERE
-         { do=>'removedir',  args=>[ '<image_dir>/perl/site/bin' ] },
BREAKS HERE
-    $letsencrypt_sh_git_url = 'https://github.com/lukas2511/dehydrated.git',
-    $challengetype = 'dns-01',
-    $letsencrypt_host = undef,
-    $letsencrypt_ca = 'https://acme-v01.api.letsencrypt.org/directory',
-    $dh_param_size = 2048,
-    $manage_packages = true,
-){
-    require ::letsencrypt::params
-
-    $letsencrypt_real_host = pick(
-        $letsencrypt_host,
-        $::servername,
-        $::puppetmaster
-    )
-
-    if ($::fqdn == $letsencrypt_real_host) {
-
-        letsencrypt_host => $letsencrypt_real_host,
-
BREAKS HERE
-    $krb_realm_name = hiera('kerberos::realm_name'),
-    $krb_kdc_servers = hiera('kerberos::kdc_servers'),
-    $krb_kadmin_primary = hiera('kerberos::kadmin_server_primary'),
-    $krb_kadmin_fallback = hiera('kerberos::kadmin_server_fallback'),
BREAKS HERE
-    package { 'puppetmaster-passenger':
-        ensure => present,
-    }
-
BREAKS HERE
-class nginx {
BREAKS HERE
-    global_version => '1.5.3',
-  goenv::version { ['1.3.3', '1.4.2', '1.4.3', '1.5.1', '1.5.3', '1.6.2']: }
BREAKS HERE
-  concat::fragment{ "iptables_rule_$name":
BREAKS HERE
-  include ::fluentd
-  if $fluentd_groups {
-    user { $::fluentd::config_owner:
-      ensure     => present,
-      groups     => $fluentd_groups,
-      membership => 'minimum',
-  }
-  if $fluentd_pos_file_path {
-    file { $fluentd_pos_file_path:
-      ensure => 'directory',
-      owner  => $::fluentd::config_owner,
-      group  => $::fluentd::config_group,
-      mode   => '0750',
-  }
-  ::fluentd::plugin { 'rubygem-fluent-plugin-add':
-    plugin_provider => 'yum',
-  }
-  if $fluentd_sources {
-    ::fluentd::config { '100-openstack-sources.conf':
-      config => {
-        'source' => $fluentd_sources,
-  }
-  if $fluentd_listen_syslog {
-    # fluentd will receive syslog messages by listening on a local udp
-    # socket.
-    ::fluentd::config { '110-system-sources.conf':
-      config => {
-        'source' => {
-          'type' => 'syslog',
-          'tag'  => 'system.messages',
-          'port' => $fluentd_syslog_port,
-    }
-    file { '/etc/rsyslog.d/fluentd.conf':
-      content => "*.* @127.0.0.1:${fluentd_syslog_port}",
-      owner   => 'root',
-      group   => 'root',
-      mode    => '0644',
-    } ~> exec { 'reload rsyslog':
-      command => '/bin/systemctl restart rsyslog',
-  }
-  if $fluentd_filters {
-    ::fluentd::config { '200-openstack-filters.conf':
-      config => {
-        'filter' => $fluentd_filters,
-  }
-  if $fluentd_servers and !empty($fluentd_servers) {
-    if $fluentd_use_ssl {
-      ::fluentd::plugin { 'rubygem-fluent-plugin-secure-forward':
-        plugin_provider => 'yum',
-      }
-      file {'/etc/fluentd/ca_cert.pem':
-        content => $fluentd_ssl_certificate,
-        owner   => $::fluentd::config_owner,
-        group   => $::fluentd::config_group,
-        mode    => '0444',
-      }
-      ::fluentd::config { '300-openstack-matches.conf':
-        config => {
-          'match' => {
-            # lint:ignore:single_quote_string_with_variables
-            # lint:ignore:quoted_booleans
-            'type'          => 'secure_forward',
-            'tag_pattern'   => '**',
-            'self_hostname' => '${hostname}',
-            'secure'        => 'true',
-            'ca_cert_path'  => '/etc/fluentd/ca_cert.pem',
-            'shared_key'    => $fluentd_shared_key,
-            'server'        => $fluentd_servers,
-            # lint:endignore
-            # lint:endignore
-      }
-    } else {
-      ::fluentd::config { '300-openstack-matches.conf':
-        config => {
-          'match' => {
-            'type'        => 'forward',
-            'tag_pattern' => '**',
-            'server'      => $fluentd_servers,
BREAKS HERE
-#   Defaults to 'false'
-#   Defaults to 'false'
-#
-# [*use_syslog*]
-#   (Optional) Use syslog for logging.
-#   Defaults to false.
-# [*use_syslog]
-#   Use syslog for logging.
-#   (Optional) Defaults to false.
-#   Defaults to true
-#   Syslog facility to receive log lines.
-#   (Optional) Defaults to LOG_USER.
-#   Defaults to $::os_service_default
-  $use_syslog                         = false,
-  $use_stderr                         = true,
-  $log_facility                       = 'LOG_USER',
-  $log_dir                            = $::os_service_default,
-  $verbose                            = false,
-  $debug                              = false,
-    'DEFAULT/log_dir':                   value => $log_dir;
-    'DEFAULT/verbose':                   value => $verbose;
-    'DEFAULT/debug':                     value => $debug;
-    'DEFAULT/use_stderr':                value => $use_stderr;
-  if $use_syslog {
-    cinder_config {
-      'DEFAULT/use_syslog':           value => true;
-      'DEFAULT/syslog_log_facility':  value => $log_facility;
-    }
-  } else {
-    cinder_config {
-      'DEFAULT/use_syslog':           value => false;
-    }
-  }
-
BREAKS HERE
-  ### Repos ###
BREAKS HERE
-class icinga2::config inherits icinga2::params {
BREAKS HERE
-  apache::vhost { 'pypi.openstack.org':
-    port     => 80,
-    priority => '50',
-    docroot  => '/srv/static/pypi',
-    require  => File['/srv/static/pypi'],
-  file { '/srv/static/pypi':
-    require => User['jenkins'],
-  file { '/srv/static/pypi/robots.txt':
-    require => File['/srv/static/pypi'],
BREAKS HERE
-    ensure => absent
-    ensure => absent
BREAKS HERE
-    ensure => file,
-    notify => Service['icinga2'],
BREAKS HERE
-    requires => Package['build-essential'],
BREAKS HERE
-            source => 'puppet:///modules/profile/hadoop/spark2_yarn_shuffle_jar_install.sh',
-            source  => 'puppet:///modules/profile/hadoop/spark2_oozie_sharelib_install.sh',
BREAKS HERE
-    include ::openstack::clientlib
BREAKS HERE
-#   the database collation. Optional. Defaults to 'utf8_unicode_ci'
-  $collate       = 'utf8_unicode_ci',
BREAKS HERE
-    $cinder_enabled_backends = delete_undef_values([$cinder_iscsi_backend_name,
-                                                    $cinder_rbd_backend_name,
-                                                    $cinder_eqlx_backend_name,
-                                                    $cinder_dellsc_backend_name,
-                                                    $cinder_netapp_backend_name,
-                                                    $cinder_nfs_backend_name,
-                                                    $cinder_user_enabled_backends])
BREAKS HERE
-    command => '/usr/bin/setlock -n /etc/unattended-reboot/no-reboot/mongodb-s3backup /usr/local/bin/mongodb-backup-s3',
-    command => '/usr/bin/setlock /etc/unattended-reboot/no-reboot/mongodb-s3backup /usr/local/bin/mongodb-backup-s3 daily',
BREAKS HERE
-  $conf_dir = $nginx::params::nx_conf_dir
-  
-  $keepalive_timeout = '5 5'
-  $more_clear_headers = [
-    '\'Server\'',
-    '\'X-Powered-By\''
-  ]
-
BREAKS HERE
-    root_password => $root_mysql_password,
BREAKS HERE
-  $collectd_manage_repo = false
BREAKS HERE
-  include apache
-  apache::vhost { $vhost_name:
BREAKS HERE
-  # firewall input, allow access to ports 8081
-    '101 allow access to port 8081':
BREAKS HERE
-        default: { include munin::client:: base }
-
BREAKS HERE
-        command     => $syncdb_command,
-        user        => 'www-data',
-        subscribe   => File['/etc/graphite/local_settings.py'],
-        refreshonly => true,
-        require     => [
BREAKS HERE
-        source => 'puppet:///modules/puppet_compiler/mediawki.yaml'
BREAKS HERE
-# [%keep]
BREAKS HERE
-    if $local_logging {
-        if !defined(File[$::service::configuration::log_dir]) {
-            file { $::service::configuration::log_dir:
-                ensure => directory,
-                owner  => 'root',
-                group  => 'root',
-                mode   => '0755',
-            }
-            ensure  => directory,
-            owner   => $title,
-            group   => 'root',
-            mode    => '0755',
-            before  => Service[$title],
-            require => File[$::service::configuration::log_dir],
BREAKS HERE
-  $nginx_htpassword             = undef,
BREAKS HERE
-    statusbot_channels      => 'edeploy, fuel-dev, heat, magnetodb, murano, openstack, openstack-101, openstack-anvil, openstack-bacon, openstack-barbican, openstack-blazar, openstack-board, openstack-ceilometer, openstack-chef, openstack-cinder, openstack-cloudkeep, openstack-community, openstack-containers, openstack-dev, openstack-dns, openstack-doc, openstack-entropy, openstack-foundation, openstack-gantt, openstack-gate, openstack-hyper-v, openstack-infra, openstack-ironic, openstack-keystone, openstack-manila, openstack-meeting, openstack-meeting-3, openstack-meeting-4, openstack-meeting-alt, openstack-meniscus, openstack-merges, openstack-metering, openstack-monasca, openstack-neutron, openstack-nova, openstack-opw, openstack-oslo, openstack-qa, openstack-raksha, openstack-rating, openstack-relmgr-office, openstack-sahara, openstack-sdks, openstack-stable, openstack-state-management, openstack-swift, openstack-translation, openstack-trove, openstack-zaqar, packstack-dev, refstack, storyboard, syscompass, tripleo',
BREAKS HERE
-    ['armagetronad', 'gl-117', 'gnome-games', 'minecraft-launcher', 'wesnoth', 'wesnoth-music']:;
BREAKS HERE
-define ssh::user($ensure=present, $key, $comment="") {
-    ensure  => $ensure,
-    key => $key,
-    user  => $name,
-    type  => "ssh-rsa",
BREAKS HERE
-
-    salt::grain { 'deployment_server':
-        grain   => 'deployment_server',
-        value   => true,
-        replace => true,
-    }
-
-    salt::grain { 'deployment_repo_user':
-        grain   => 'deployment_repo_user',
-        value   => 'trebuchet',
-        replace => true,
-    }
-
-    salt::grain { 'deployment_repo_group':
-        grain   => 'deployment_repo_group',
-        value   => $deployment_group,
-        replace => true,
-    }
-
-    exec { 'deployment_server_sync_all':
-        refreshonly => true,
-        path        => ['/usr/bin'],
-        command     => 'salt-call saltutil.sync_all',
-        subscribe   => Salt::Grain['deployment_server'],
-        timeout     => 1200,
-    }
-
-    exec { 'eventual_consistency_deployment_server_init':
-        path    => ['/usr/bin', '/usr/sbin', '/sbin', '/bin'],
-        command => 'salt-call deploy.deployment_server_init',
-        require => [
-            Package['salt-minion'],
-            Salt::Grain['deployment_server'],
-            Salt::Grain['deployment_repo_user'],
-        ];
-    }
BREAKS HERE
-            owner  => 'root',
-            group  => 'root',
-            mode   => '0644',
BREAKS HERE
-    $puppet_major_version = hiera('puppet_major_version', undef),
-        server               => $puppetmaster,
-        dns_alt_names        => $dns_alt_names,
-        environment          => $environment,
-        puppet_major_version => $puppet_major_version,
BREAKS HERE
-  $resolv_conf_poudriere  = '/etc/resolv.conf',
BREAKS HERE
-        'sqlite3',
BREAKS HERE
-  include packagekit::params
BREAKS HERE
-        content => template("profile/mariadb/backups-${::site}.cnf.erb"),
BREAKS HERE
-        '2.2' => hiera('cassandra::version', '2.2.6'),
BREAKS HERE
-class classifier::node_data($data) { }
BREAKS HERE
-      $version = '1.4.1-1ppa0~precise'
BREAKS HERE
-  include assets::user
-    ensure  => directory,
-    owner   => undef,
-    group   => undef,
-    mode    => undef,
-    require => Class['assets::user'],
BREAKS HERE
-      # We create databases for services at step 2 as well. This ensures
BREAKS HERE
-        source   => 'puppet:///modules/hhvm/hhvm.rsyslog.conf',
BREAKS HERE
-    $lua_script               = undef,
BREAKS HERE
-      default => undef,
-    } } else {
-    $gr_pkg_require = $::graphite::gr_pip_install ? {
-      true    => [Package[$::graphite::params::graphitepkgs],],
-      default => undef,
-    } }
-      require => Package[$::graphite::params::graphitepkgs],
BREAKS HERE
-  if !defined(Mod['rewrite']) {
-  if !defined(Mod['proxy']) {
-  if !defined(Mod['proxy_http']) {
-    if !defined(Mod['auth_openid']) {
BREAKS HERE
-                ensure  => directory,
-                force   => true,
-                owner   => 'root',
-                group   => 'root',
-                mode    => '0755',
BREAKS HERE
-  $ensure  = undef,
-    $sysctl_d_file = "${prefix}-${title}.conf"
-    $sysctl_d_file = "${title}.conf"
-      content => template("${module_name}/sysctl.d-file.erb"),
BREAKS HERE
-    ssl_proxyengine => true,
BREAKS HERE
-      value   => "${_api_url}/v1,
BREAKS HERE
-    # Assign this locally so that it is in scope for the template below.
-    # Required for Puppet 4
-    $deb_sysmaint_password = $galera::deb_sysmaint_password
BREAKS HERE
-<<<<<<< HEAD
-=======
-
-  ### Creating rules for integration with Hiera
-  validate_hash($rules)
-  create_resources(iptables::rule, $rules)
-
->>>>>>> interlegis/DNATdestination
BREAKS HERE
-    sslcert::certificate { "_etcd-server-ssl._tcp.${srv_dns}":
-        client_cert      => "/etc/ssl/localcerts/${::fqdn}.crt",
-        client_key       => "/etc/ssl/private/${::fqdn}.crt",
-        peer_cert        => "/etc/ssl/localcerts/${::fqdn}.crt",
-        peer_key         => "/etc/ssl/private/${::fqdn}.crt",
BREAKS HERE
-                'SQUID_DIRECTIVES=\'
-refresh_pattern . 0 0 1 refresh-ims
-refresh_all_ims on # make sure we do not get out of date content #41
-ignore_expect_100 on # needed for new relic system monitor
BREAKS HERE
-    #notify => Service[$relay_service_name],
-    #notify => Service[$relay_service_name],
BREAKS HERE
-            'net.ipv4.ip_local_port_range' =>  [ 1024, 65535 ],
-            'net.core.netdev_max_backlog'  =>  30000,
-            'net.core.somaxconn'           => 4096,
-            'net.ipv4.tcp_max_syn_backlog' => 262144,
-            'net.ipv4.tcp_max_tw_buckets'  => 360000,
-            'net.ipv4.tcp_fin_timeout'     => 3,
-            'net.ipv4.tcp_max_orphans'     => 262144,
-            'net.ipv4.tcp_synack_retries'  => 2,
-            'net.ipv4.tcp_syn_retries'     => 2,
BREAKS HERE
-      scriptname => "batman-visible-gateway-count",
BREAKS HERE
-        rule   => "proto tcp dport ssh saddr ${bastion_hosts_str} ACCEPT;",
BREAKS HERE
-    pruge => true,
BREAKS HERE
-    ensure => present,
-  } ~>
-
-  file { $volume_path:
-    ensure  => directory,
-    owner   => 'cinder',
-    group   => 'cinder',
BREAKS HERE
-# $carbon_cache_service_name:
-# $carbon_cache_service_ensure:
-  service { $carbon_cache_service_name:
-    ensure     => $carbon_cache_service_enable,
-  service { $relay_service_name:
-    ensure     => $carbon_cache_service_enable,
BREAKS HERE
-# Parameters:
BREAKS HERE
-  $docs = $skip_docs ? {
-    /false/ => '',
-    /true/  => '--no-ri --no-rdoc'
BREAKS HERE
-			content => template("munin/munin-node.conf.$operatingsystem.$lsbdistrelease"),
BREAKS HERE
-            if $smokeping::slave_display_name == '' { $display_name = $::hostname }
-            smokeping::slave { $::hostname:
BREAKS HERE
-# [*primary_controller*]
-#   (Optional) The hostname of the first controller
-  $step = hiera('step'),
-  $primary_controller = hiera('bootstrap_nodeid', undef),
-  include ::tripleo::profile::base::neutron
-
-  if ! str2bool(hiera('opendaylight::enable_l3')) {
-    include ::tripleo::profile::base::neutron::l3
-  }
-
-    # Configure ODL only on first controller
-    if $primary_controller == downcase($::hostname) {
BREAKS HERE
-$recover_after_time = 0 + $elasticsearch_kibana['recover_after_time']
BREAKS HERE
-                'subname'     => "//${::master}:5432/puppetdb?ssl=true",
-            {'subname' => "//${::master}:5432/puppetdb?ssl=true"}
BREAKS HERE
-        meta_params     => 'notify=true ordered=true interleave=true container-attribute-target=host',
BREAKS HERE
-        require_package('megacli')
-        $get_raid_status_megacli = '/usr/local/lib/nagios/plugins/get-raid-status-megacli'
-
-        file { $get_raid_status_megacli:
-            ensure => present,
-            owner  => 'root',
-            group  => 'root',
-            mode   => '0555',
-            source => 'puppet:///modules/raid/get-raid-status-megacli.py';
-        }
-
-        sudo::user { 'nagios_megaraid':
-            user       => 'nagios',
-            privileges => ["ALL = NOPASSWD: ${get_raid_status_megacli}"],
-        }
-
-        nrpe::check { 'get_raid_status_megacli':
-            command => "/usr/bin/sudo ${get_raid_status_megacli} -c",
-        }
-
-        nrpe::monitor_service { 'raid_megaraid':
-            description    => 'MegaRAID',
-            nrpe_command   => "${check_raid} megacli",
-            check_interval => $check_interval,
-            retry_interval => $retry_interval,
-            event_handler  => "raid_handler!megacli!${::site}",
-        }
-        require_package('hpssacli', 'hpssaducli')
-
-        file { '/usr/local/lib/nagios/plugins/check_hpssacli':
-            ensure => present,
-            owner  => 'root',
-            group  => 'root',
-            mode   => '0555',
-            source => 'puppet:///modules/raid/dsa-check-hpssacli',
-        }
-
-        sudo::user { 'nagios_hpssacli':
-            user       => 'nagios',
-            privileges => [
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller all show',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0-9] ld all show',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0-9] ld all show detail',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0-9] ld * show',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0-9] pd all show',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0-9] pd [0-9]\:[0-9] show',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0-9] pd [0-9][EIC]\:[0-9]\:[0-9] show',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0-9] pd [0-9][EIC]\:[0-9]\:[0-9][0-9] show',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0-9] show status',
-                'ALL = NOPASSWD: /usr/sbin/hpssacli controller slot=[0-9] show detail',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller all show',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0-9] ld all show',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0-9] ld * show',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0-9] pd all show',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0-9] pd [0-9]\:[0-9] show',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0-9] pd [0-9][EIC]\:[0-9]\:[0-9] show',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0-9] pd [0-9][EIC]\:[0-9]\:[0-9][0-9] show',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0-9] show status',
-                'ALL = NOPASSWD: /usr/sbin/hpacucli controller slot=[0-9] show detail',
-            ],
-        }
-
-        nrpe::monitor_service { 'raid_hpssacli':
-            description    => 'HP RAID',
-            nrpe_command   => '/usr/local/lib/nagios/plugins/check_hpssacli',
-            timeout        => 90, # can take > 10s on servers with lots of disks
-            check_interval => $check_interval,
-            retry_interval => $retry_interval,
-            event_handler  => "raid_handler!hpssacli!${::site}",
-        }
-
-        $get_raid_status_hpssacli = '/usr/local/lib/nagios/plugins/get-raid-status-hpssacli'
-
-        file { $get_raid_status_hpssacli:
-            ensure => present,
-            owner  => 'root',
-            group  => 'root',
-            mode   => '0555',
-            source => 'puppet:///modules/raid/get-raid-status-hpssacli.sh';
-        }
-
-        nrpe::check { 'get_raid_status_hpssacli':
-            command => "${get_raid_status_hpssacli} -c",
-        }
-        package { 'mpt-status':
-            ensure => present,
-        }
-
-        file { '/etc/default/mpt-statusd':
-            ensure  => present,
-            owner   => 'root',
-            group   => 'root',
-            mode    => '0555',
-            content => "RUN_DAEMON=no\n",
-            before  => Package['mpt-status'],
-        }
-
-        nrpe::monitor_service { 'raid_mpt':
-            description    => 'MPT RAID',
-            nrpe_command   => "${check_raid} mpt",
-            check_interval => $check_interval,
-            retry_interval => $retry_interval,
-            event_handler  => "raid_handler!mpt!${::site}",
-        }
-
-        nrpe::check { 'get_raid_status_mpt':
-            command => "${check_raid} mpt",
-        }
-        # if there is an "md" RAID configured, mdadm is already installed
-
-        nrpe::monitor_service { 'raid_md':
-            description   => 'MD RAID',
-            nrpe_command  => "${check_raid} md",
-            event_handler => "raid_handler!md!${::site}",
-        }
-
-        nrpe::check { 'get_raid_status_md':
-            command => 'cat /proc/mdstat',
-        }
BREAKS HERE
-  midonet_repo => $mido_repo
BREAKS HERE
-      5 => 'http://repo.webtatic.com/yum/centos/5/$basearch/debug/mirrorlist',
-      6 => 'http://repo.webtatic.com/yum/el6/$basearch/debug/mirrorlist',
BREAKS HERE
-    container_heaplimit                 => '8g',
BREAKS HERE
-  gnupg_key { 'Debian 8/jessie Archive':
-    key_id     => '7638d0442b90d010',
-    key_source => 'puppet:///modules/openstack_project/reprepro/debian-jessie-mirror-gpg-key.asc',
-  gnupg_key { 'Debian 8/jessie Security':
-    key_id     => '9d6d8f6bc857c906',
-    key_source => 'puppet:///modules/openstack_project/reprepro/debian-jessie-security-mirror-gpg-key.asc',
BREAKS HERE
-    'all-users':;
-      succeed_if => 'uid > 0';
-      secret => "/etc/google-authenticator/\${USER}/google_authenticator";
BREAKS HERE
-  $user = 'root',
-  $group = 'root',
BREAKS HERE
-    bundler_version => '1.6.5',
-    bundler_version => '1.7.4',
-    bundler_version => '1.8.3',
-    bundler_version => '1.10.6',
-    bundler_version => '1.9.4',
-    bundler_version => '1.10.6',
-    bundler_version => '1.10.6',
-    bundler_version => '1.11.2',
-    bundler_version => '1.11.2',
-    bundler_version => '1.13.7',
BREAKS HERE
-    $e = inline_template('extensions: "<%= @extensions %>" : <%= @extentions.class %>')
BREAKS HERE
-    # TODO: Remove after Puppet cycle.
-    file { '/var/mail':
-        ensure => directory,
-        owner  => 'root',
-        group  => 'mail',
-        mode   => '2775',
-    }
-
-    # TODO: Remove after Puppet cycle.
-    file { "${store}/mail":
-        ensure => absent,
-        force  => true,
-    }
-
BREAKS HERE
-  $target_file_mode = '644',
-    ensure => file,
-    notify => Service['icinga2'],
BREAKS HERE
-    default_domain => 'admin',
BREAKS HERE
-  include gds_resolver
BREAKS HERE
-  $install_prefix     = '/opt/'
-
BREAKS HERE
-  
-  } 
-  
-  } 
-  
-  
BREAKS HERE
-#   - ca: Includes the '::icinga2::pki::ca' class to generate a fresh CA and generates an SSL certificate and
-#         key signed by this new CA.
-
-    'ca': {
-      $_ticket_salt = $ticket_salt
-      class { '::icinga2::pki::ca': }
-
-      warning('This parameter is deprecated and will be removed in future versions! Please use ::icinga2::pki::ca instead')
-    } # ca
BREAKS HERE
-  include apache::ssl
BREAKS HERE
-  $destination = '/var/log/cinder/cinder-rowsflush.log'
-    command     => "cinder-manage db purge ${age} >>${destination} 2>&1",
BREAKS HERE
-  } ~> exec{'yum_munin_updates_init':
BREAKS HERE
-        heap_size  => '2G',
BREAKS HERE
-      exec_start   => "${project_path}/bin/ftpsync > /dev/null 2>&1",
-  }
-  else {
BREAKS HERE
-    target  => "${carbon_config_dir}storage-schemas.conf",
-    order   => 0,
-    content => template('graphite/carbon/storage-schemas.erb'),
BREAKS HERE
-  @@nagios::check::graphite { 'check_support_default_queue_size':
BREAKS HERE
-        command     => "MAILTO='jenkins-bot@wikimedia.org' find ${git_dir} -maxdepth 3 -type d -name '.git' -exec git --git-dir='{}' pack-refs --all \\;",
-        environment => 'PATH=/usr/bin:/bin:/usr/sbin:/sbin',
BREAKS HERE
-        mode    => '0444',
BREAKS HERE
-      $whitehall_frontend_vhost_ = 'whitehall-frontend'
-      $whitehall_frontend_vhost_ = "whitehall-frontend.${app_domain}"
-      nginx_extra_config    => "
-      location /government/uploads {
-        proxy_set_header Host 'whitehall-admin.${app_domain}';
-        proxy_pass ${app_protocol}://whitehall-admin.${app_domain};
-      }
-      ",
BREAKS HERE
-    /RedHat-Fedora/ => '/${user.name}/dfs/namenode',
-    /Debian|RedHat/ => '/${user.name}/dfs/name',
-    /RedHat-Fedora/ => '/${user.name}/dfs/secondarynamenode',
-    /Debian|RedHat/ => '/${user.name}/dfs/secondaryname',
-    /RedHat-Fedora/ => '/${user.name}/dfs/datanode',
-    /Debian|RedHat/ => '/${user.name}/dfs/data',
-    /RedHat-Fedora/ => '/${user.name}/dfs/journalnode',
-    /Debian|RedHat/ => '/${user.name}/dfs/journal',
BREAKS HERE
-    File["${basepath}/hooks/${distribution}/D01apt.wikimedia.org"] -> File["${basepath}/hooks/${distribution}"]
BREAKS HERE
-    allow_change_user => $allow_change_user,
-    ignore_users      => $ignore_users,
-    shadowgroup       => $shadowgroup,
-    shadowmode        => $shadowmode,
-    recurselimit      => $recurselimit,
BREAKS HERE
-class profile::wmcs::services::postgres::primary (
-    $postgres_secondary = hiera('profile::wmcs::services::postgres::secondary', undef),
-    $replication_pass = hiera('profile::wmcs::services::postgres::replication_pass', undef),
-    $root_dir = hiera('profile::wmcs::services::postgres::root_dir', '/srv/postgres'),
-){
-    include profile::wmcs::services::postgres::common
-    class {'::postgresql::postgis': }
-    include ::profile::prometheus::postgres_exporter
-
-    class { 'postgresql::master':
-        includes => 'tuning.conf',
-        root_dir => $root_dir,
-    }
-
-    if $postgres_secondary {
-        $postgres_secondary_v4 = ipresolve($postgres_secondary, 4)
-        if $postgres_secondary_v4 {
-            postgresql::user { "replication@${::postgres_secondary}-v4":
-                ensure   => 'present',
-                user     => 'replication',
-                password => $replication_pass,
-                cidr     => "${::postgres_secondary_v4}/32",
-                type     => 'host',
-                method   => 'md5',
-                attrs    => 'REPLICATION',
-                database => 'all',
-            }
-        }
-    }
-}
BREAKS HERE
-			#$munin_node_service = "munin-node"
-			$munin_node_service = "munin"
BREAKS HERE
-    $fuel_version = hiera('fuel_version')
-    $use_plugin_roles = $fuel_version > '8.0'
BREAKS HERE
-    parameters     => {
-      'ns'         => 'infrastructure_alerting',
-      'status_url' => "http://${nagios_vip}/server-status",
-      'config'     => "${apache_config_dir}/apache2.conf",
-    },
-    parameters     => {
-      'ns'         => 'infrastructure_alerting',
-      'status_url' => "http://${nagios_vip}/server-status",
-      'config'     => "${apache_config_dir}/apache2.conf",
-    },
BREAKS HERE
-        description     => 'Varnish child restarted',
-        dashboard_links => ["https://grafana.wikimedia.org/dashboard/db/varnish-machine-stats?orgId=1&var-server=${::hostname}&var-datasource=${::site} prometheus/ops"],
BREAKS HERE
-      command       => 'service mysql stop',
-      path          => '/usr/bin:/bin:/usr/sbin:/sbin',
-      refreshonly   => true,
-      subscribe     => Package['mysql-server'],
-      before        =>  Class['mysql::server::config'],
-      require       => Class['mysql::server::install'],
-      require       => File['/root/.my.cnf']
-      ensure    => present,
-      owner     => 'mysql',
-      group     => 'mysql',
-      content   => template('galera/debian.cnf.erb'),
-      require   => Mysql_user['debian-sys-maint@localhost']
-      ensure    => present,
-      owner     => 'mysql',
-      group     => 'mysql',
-      content   => template('galera/debian.cnf.erb'),
-      before    => Service['mysql']
BREAKS HERE
-        'relabel_configs' => [
BREAKS HERE
-    raft_nodes    => $raft_nodes,
BREAKS HERE
-    nrpe::monitor_service{ "confd${safe_name}":
-        description  => "Confd template for ${name}",
-        nrpe_command => "/usr/local/lib/nagios/plugins/check_confd_template '${name}'",
-        require      => File['/usr/local/lib/nagios/plugins/check_confd_template'],
BREAKS HERE
-  $po = $::staff_only ? {
BREAKS HERE
-    ensure_packages(['openjdk-7-jre-headless'])
-
-    alternatives::select { 'java':
-        path    => '/usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java',
-        require => Package['openjdk-7-jre-headless'],
-    }
-        require => Package['openjdk-7-jre-headless'],
BREAKS HERE
-  # /var/named is root:named on RedHat and /var/cache/bind is root:bind on
-  # Debian. Both groups only have read access but require write permission in
-  # order to be able to use rndc addzone/delzone commands that Designate uses.
-  file { $::dns::params::vardir:
-    mode    => 'g+w',
-    require => Package[$dns::params::dns_server_package]
-  }
-
BREAKS HERE
-    $master_ip = ipresolve($master_host, 4, $::nameservers[0])
-
BREAKS HERE
-    cookie  => "oraclelicense=accept-securebackup-cookie",
-    source  => $oracle_java::downloadurl
BREAKS HERE
-    command  => "/usr/bin/flock -n /tmp/lma.lock -c \"${cron_bin} lma_infrastructure_alerting\"",
BREAKS HERE
-            'baseurl'  => 'https://trunk.rdoproject.org/centos7-master/8e/03/8e035655d276917f0044fd35a0af534f94a097c7_7754ba49/',
BREAKS HERE
-#  the extension name. Defaults to true.
-  $settings_prefix   = true,
BREAKS HERE
-  create_resources(config::setting, to_hash_settings($config, $file), {
BREAKS HERE
-    collate => 'utf8_unicode_ci',
BREAKS HERE
-  $display_name         = $title,
-    object_name => $name,
BREAKS HERE
-  # We don't actually use these, but jeepyb requires them.
-  class {'jeepyb::git':
-    local_git_dir   => '/var/lib/git',
-    ssh_project_key => '',
-  }
-
BREAKS HERE
-        'python-pysocks',
BREAKS HERE
-    require    => Class['shell'],
BREAKS HERE
-  $_use_tls = $use_tls ? {
-    true  => 'True',
-    false => 'False',
-  }
-  $_chase_refs = $chase_referrals ? {
-    true  => 'True',
-    false => 'False',
-  }
BREAKS HERE
-  validate_array($import)
-  if $display_name { validate_string ($display_name) }
-  if $ranges { validate_hash ($ranges) }
-  if $prefer_includes { validate_bool ($prefer_includes) }
-  if $excludes { validate_array ($excludes) }
-  if $includes { validate_array ($includes) }
-    'excludes'        => $excludes,
-    'includes'        => $includes,
BREAKS HERE
-            purge  => false,
BREAKS HERE
-  $rabbit_hosts                = false,
-      manila_config { 'oslo_messaging_rabbit/rabbit_ha_queues': value => true }
-      manila_config { 'oslo_messaging_rabbit/rabbit_ha_queues': value => false }
BREAKS HERE
-    command => 'wget https://download.elasticsearch.org/logstash/logstash/logstash-1.2.1-flatjar.jar -O /opt/logstash/logstash-1.2.1-flatjar.jar',
-    creates => '/opt/logstash/logstash-1.2.1-flatjar.jar',
-  file { '/opt/logstash/logstash-1.2.1-flatjar.jar':
-    target  => '/opt/logstash/logstash-1.2.1-flatjar.jar',
-    require => File['/opt/logstash/logstash-1.2.1-flatjar.jar'],
BREAKS HERE
-class etherpad_lite::mysql (
-  $database_name = 'etherpad-lite',
-  $database_password
-
-    ensure => present
-    ensure => present
-  service { "mysql":
-    enable     => true,
-    require    => [Package['mysql-server'],
-                   Package['mysql-client']]
-    ensure  => 'present',
-    replace => true,
-    owner   => $etherpad_lite::ep_user,
-    mode    => 0755,
-    ensure  => 'present',
-    replace => true,
-    owner   => $etherpad_lite::ep_user,
-    mode    => 0755,
-  exec { "create-etherpad-lite-db":
-    path    => ['/bin', '/usr/bin'],
-    require => [Service['mysql'],
-                File["${etherpad_lite::base_install_dir}/etherpad-lite/settings.json"],
-                File["${etherpad_lite::base_install_dir}/etherpad-lite/create_database.sh"]]
-  } ->
-  exec { "grant-etherpad-lite-db":
-    path    => ['/bin', '/usr/bin'],
-    require => [Service['mysql'],
-                File["${etherpad_lite::base_install_dir}/etherpad-lite/settings.json"],
-                File["${etherpad_lite::base_install_dir}/etherpad-lite/create_user.sh"]]
-
BREAKS HERE
-    ensure   => present,
BREAKS HERE
-    # if native qdisc of pfifo_fast is applied then run tc setup
-        command => '/sbin/modprobe ifb numifbs=1 && /sbin/modprobe act_mirred && /usr/sbin/tc-setup',
BREAKS HERE
-        ensure     => 'present',
-        managehome => true,
-        groups     => 'staff',
-    }
-    file { '/home/shiny/downloads':
-        ensure => 'directory',
-        owner  => 'shiny',
-        group  => 'staff',
-        mode   => '0740',
BREAKS HERE
-    $use_metal_resolver = hiera('profile::openstack::eqiad1::pdns::use_metal_resolver'),
-        use_metal_resolver    => $use_metal_resolver,
BREAKS HERE
-        require => [Package['gerrit'], Package['libbcprov-java']],
-        require => [Package['gerrit'], Package['libbcpkix-java']],
-        require => [Package['gerrit'], Package['libmysql-java']],
BREAKS HERE
-  file { "/etc/nginx/conf.d/90.hardening.conf":
-    ensure => file,
BREAKS HERE
-    munin::plugin::deploy { "pg__connections": enabled => false }
-    munin::plugin::deploy { "pg__locks": enabled => false }
BREAKS HERE
-  Exec {
-    user => 'root',
-    path => $::path,
-  }
-
-      exec { 'icinga2 pki create key':
-        command => "icinga2 pki new-cert --cn '${node_name}' --key '${_ssl_key_path}' --cert '${_ssl_cert_path}'",
-        creates => $_ssl_key_path,
-      -> file {
-        $_ssl_key_path:
-          mode => '0600';
-        $_ssl_cert_path:
-        command => "icinga2 pki save-cert --host '${ca_host}' --port ${ca_port} --key '${_ssl_key_path}' --cert '${_ssl_cert_path}' --trustedcert '${trusted_cert}'",
-        notify  => Class['::icinga2::service'],
-      }
-
-      -> file { $trusted_cert:
-        ensure => file,
-        command => "icinga2 pki request --host '${ca_host}' --port ${ca_port} --ca '${_ssl_cacert_path}' --key '${_ssl_key_path}' --cert '${_ssl_cert_path}' --trustedcert '${trusted_cert}' --ticket '${ticket_id}'",
-        notify  => Class['::icinga2::service'],
-      }
-
-      -> file { $_ssl_cacert_path:
-        ensure => file,
-      notice('This parameter is deprecated and will be removed in future versions! Please use ::icinga2::pki::ca instead')
BREAKS HERE
-  $postCommand     = "-database_type ORACLE -connectString ${db_server}:${db_service} -dbUser ${sys_user} -dbRole SYSDBA -schema_prefix ${schema_prefix} ${components} "
-    $createCommand  = "${preCommand} -createRepository ${postCommand} -temp_tablespace ${temp_tablespace} ${passwordCommand}"
BREAKS HERE
-# === Parameters
-#
-# [*draft_content_store_uri*]
-#   URI of the content-store instance used to serve draft content.
-#
-# [*draft_static_uri*]
-#   URI of the static application used when serving draft content.
-#
-class govuk::node::s_draft_frontend(
-  $draft_content_store_uri,
-  $draft_static_uri,
-) inherits govuk::node::s_base {
-
-  # FIXME Remove these once all apps deployed to these nodes support Plek
-  # v1.11.0 or later
-  # See: https://github.com/alphagov/plek/pull/34
-  govuk::envvar { 'PLEK_SERVICE_CONTENT_STORE_URI':
-    value => $draft_content_store_uri,
-  }
-  govuk::envvar { 'PLEK_SERVICE_STATIC_URI':
-    value => $draft_static_uri,
-  }
BREAKS HERE
-      Exec['Initial django db creation'],
BREAKS HERE
-
BREAKS HERE
-          { do=>'ignore_testfailure', distribution=>'Pod-Simple-3.31' },
-          { do=>'skip', distribution=>qr/^Net-Ping-/ },    # upgrade breaks other modules https://rt.cpan.org/Ticket/Display.html?id=118526
-          { do=>'skip', distribution=>'ExtUtils-MakeMaker-7.26' },    # https://rt.cpan.org/Ticket/Display.html?id=121913
BREAKS HERE
-    require => Rbenv::Plugin['sstephenson/ruby-build'],
BREAKS HERE
-    fail('Unrecognized database install version, use 11.2.0.1|11.2.0.3|11.2.0.4|12.1.0.1|12.1.0.1')
BREAKS HERE
-      File['/root/.my.cnf'] -> Mysql_user<||>
BREAKS HERE
-        command => '/usr/bin/vmware-uninstall-tools.pl',
-        command => '/usr/local/bin/vmware-uninstall-tools.pl',
BREAKS HERE
-    Ubuntu:         { include ::nfs::client::ubuntu}
-    Debian:         { include ::nfs::client::debian}
-    RedHat,CentOS:  { include ::nfs::client::redhat}
BREAKS HERE
-      incl    => "${splunk_home}/etc/system/local/inputs.ronf",
BREAKS HERE
-  String $action = 'select count(1);',
-  String $catch = 'ERROR',
-  Integer $delay = 3,
-  String $host = $galera::status_host,
-  String $password = $galera::status_password,
-  Integer $retries = 20,
-  String $user = $galera::status_user,
-  Optional[String] $inv_catch = 'undef',
-
BREAKS HERE
-    onlyif  => "[ -f /home/${user}/.bashrc ]", 
-    onlyif  => "[ -f /home/${user}/.bashrc ]", 
-    onlyif  => '[ -z "$(which ruby-build)" ]', 
BREAKS HERE
-  validate_string($app_domain)
BREAKS HERE
-      'DEFAULT/rabbit_password':     value => $rabbit_password, secret => true;
-      'DEFAULT/rabbit_userid':       value => $rabbit_userid;
-      'DEFAULT/rabbit_virtual_host': value => $rabbit_virtual_host;
-      'DEFAULT/rabbit_use_ssl':      value => $rabbit_use_ssl;
-      cinder_config { 'DEFAULT/rabbit_hosts':     value => join($rabbit_hosts, ',') }
-      cinder_config { 'DEFAULT/rabbit_ha_queues': value => true }
-      cinder_config { 'DEFAULT/rabbit_host':      ensure => absent }
-      cinder_config { 'DEFAULT/rabbit_port':      ensure => absent }
-      cinder_config { 'DEFAULT/rabbit_host':      value => $rabbit_host }
-      cinder_config { 'DEFAULT/rabbit_port':      value => $rabbit_port }
-      cinder_config { 'DEFAULT/rabbit_hosts':     value => "${rabbit_host}:${rabbit_port}" }
-      cinder_config { 'DEFAULT/rabbit_ha_queues': value => false }
-      cinder_config { 'DEFAULT/kombu_ssl_version': value => $kombu_ssl_version }
-        cinder_config { 'DEFAULT/kombu_ssl_ca_certs': value => $kombu_ssl_ca_certs }
-        cinder_config { 'DEFAULT/kombu_ssl_ca_certs': ensure => absent}
-        cinder_config { 'DEFAULT/kombu_ssl_certfile': value => $kombu_ssl_certfile }
-        cinder_config { 'DEFAULT/kombu_ssl_certfile': ensure => absent}
-        cinder_config { 'DEFAULT/kombu_ssl_keyfile': value => $kombu_ssl_keyfile }
-        cinder_config { 'DEFAULT/kombu_ssl_keyfile': ensure => absent}
-        'DEFAULT/kombu_ssl_ca_certs': ensure => absent;
-        'DEFAULT/kombu_ssl_certfile': ensure => absent;
-        'DEFAULT/kombu_ssl_keyfile':  ensure => absent;
-        'DEFAULT/kombu_ssl_version':  ensure => absent;
BREAKS HERE
-    if $monitoring_enabled {
-        class { '::confluent::kafka::broker::jmxtrans':
-            # Cluster metrics prefix for graphite, etc.
-            group_prefix => "kafka.cluster.${cluster_name}.",
-            statsd       => $statsd,
-        }
-
-        class { '::confluent::kafka::broker::alerts':
-            replica_maxlag_warning  => $replica_maxlag_warning,
-            replica_maxlag_critical => $replica_maxlag_critical,
-        }
-    }
-
BREAKS HERE
-#    Directory where logs should be stored. Optional. Defaults to '/var/log/heat'.
-    'DEFAULT/log_dir'                      : value => $log_dir;
BREAKS HERE
-    war => 'http://tarballs.openstack.org/ci/gerrit-2.4.2-11-gb5a28fb.war',
BREAKS HERE
-            file_retention => '60 days',
-            job_retention  => '60 days',
BREAKS HERE
-    if $cluster_nodes { # We are a RAC node
-      $sid_name = "${dbName}1"
-    } else {
-      $sid_name = "${dbName}"
-    }
-
BREAKS HERE
-#   String. Sets the mountpoint the client will mount the exported resource mount on.
-    @@nfs::client::mount {  "shared ${v4_export_name} by ${::clientcert}":
-      mount         => $mount,
-    @@nfs::client::mount { "shared ${v3_export_name} by ${::clientcert}":
-      mount       => $mount,
BREAKS HERE
-      content => template('ocf/broker.conf.erb'),
BREAKS HERE
-  service { 'saslauthd':
-    require => Package['sasl2-bin'],
-  file { '/var/spool/postfix/saslauthd':
-    ensure  => directory,
-    require => Package['postfix'],
BREAKS HERE
-    repo_url_suffix    => '6.x',
BREAKS HERE
-                'nagios-plugins-extra',
BREAKS HERE
-  $ssl_dir  = $st2::st2web_ssl_dir,
-  $ssl_cert = $st2::st2web_ssl_cert,
-  $ssl_key  = $st2::st2web_ssl_key,
-  $version  = $st2::version,
-  package { $st2::params::st2_web_packages:
-  file { "${st2::params::nginx_conf_d}/st2.conf":
-    source    => $st2::params::nginx_st2_conf,
-    subscribe => Package[$st2::params::st2_server_package],
-      exec { $st2::params::nginx_default_conf:
-        command => "sed -i 's/default_server//g' ${st2::params::nginx_default_conf}",
-        unless  => "test `grep 'default_server' ${st2::params::nginx_default_conf} | wc -l` > 0",
-      file { $st2::params::nginx_default_conf:
-  -> File["${st2::params::nginx_conf_d}/st2.conf"]
BREAKS HERE
-    nginx::site { 'install_server':
-        source  => 'puppet:///modules/install_server/nginx.conf';
BREAKS HERE
-  $email_collection = extlookup('email_collection','off')
-  case $email_collection {
-    "on": {
-      class { 'postfix':
-        smarthost         => extlookup(
-          'postfix_smarthost',
-          'email-smtp.us-east-1.amazonaws.com:587'
-        ),
-        smarthost_aliases => extlookup(
-          'postfix_smarthost_aliases',
-          'ses-smtp-prod-335357831.us-east-1.elb.amazonaws.com:587'
-        ),
-        smarthost_user    => extlookup('amazon_ses_key', 'NO_SES_KEY'),
-        smarthost_pass    => extlookup('amazon_ses_secret', 'NO_SES_SECRET'),
-      }
-    }
-    default: {
-      package { 'postfix':
-        ensure  => absent,
-      }
-    }
BREAKS HERE
-        $hadoop_resourcemanager_heapsize = $::cdh::hadoop::yarn_heapsize
BREAKS HERE
-    failse '$director_server cannot be empty'
BREAKS HERE
-
-    if ! defined(File["${download_dir}/${patch_file}"]) {
-      file {"${download_dir}/${patch_file}":
-        ensure => present,
-        path   => "${download_dir}/${patch_file}",
-        source => "${puppet_download_mnt_point}/${patch_file}",
-        mode   => '0775',
-        owner  => $user,
-        group  => $group,
-        } -> exec { "extract opatch ${title} ${patch_file}":
-          command   => "unzip -o ${download_dir}/${patch_file} -d ${oracle_home}",
-          path      => $exec_path,
-          user      => $user,
-          group     => $group,
-          logoutput => false,
-          require   => File["${download_dir}/${patch_file}"],
BREAKS HERE
-# Manage mongodb installations on RHEL, CentOS, Debian and Ubuntu - either
-# installing from the 10Gen repo or from EPEL in the case of EL systems.
-# enable_10gen (default: false) - Whether or not to set up 10gen software repositories
-# init (auto discovered) - override init (sysv or upstart) for Debian derivatives
-# location - override apt location configuration for Debian derivatives
-# packagename (auto discovered) - override the package name
-# servicename (auto discovered) - override the service name
-# === Examples
-# To install with defaults from the distribution packages on any system:
-#   include mongodb
-# To install from 10gen on a EL server
-#   class { 'mongodb':
-#     enable_10gen => true,
-#   }
-#
-# === Authors
-#
-# Craig Dunn <craig@craigdunn.org>
-#
-# === Copyright
-#
-# Copyright 2012 PuppetLabs
-  $enable_10gen    = false,
-  $init            = $mongodb::params::init,
-  $location        = '',
-  $packagename     = undef,
-  $servicename     = $mongodb::params::service,
-  $logpath         = '/var/log/mongodb/mongodb.log',
-  $logappend       = true,
-  $mongofork       = false,
-  $port            = '27017',
-  $dbpath          = '/var/lib/mongodb',
-  $bind_ip         = '127.0.0.1',
-  $pidfilepath     = '/var/run/mongodb/mongod.pid',
-  $nojournal       = undef,
-  $cpu             = undef,
-  $noauth          = undef,
-  $auth            = undef,
-  $verbose         = undef,
-  $objcheck        = undef,
-  $quota           = undef,
-  $oplog           = undef,
-  $nohints         = undef,
-  $nohttpinterface = undef,
-  $noscripting     = undef,
-  $notablescan     = undef,
-  $noprealloc      = undef,
-  $nssize          = undef,
-  $mms_token       = undef,
-  $mms_name        = undef,
-  $mms_name        = undef,
-  $mms_interval    = undef,
-  $slave           = undef,
-  $only            = undef,
-  $master          = undef,
-  $source          = undef
-) inherits mongodb::params {
-
-  if $enable_10gen {
-    include $mongodb::params::source
-    Class[$mongodb::params::source] -> Package['mongodb-10gen']
-  }
-
-  if $packagename {
-    $package = $packagename
-  } elsif $enable_10gen {
-    $package = $mongodb::params::pkg_10gen
-  } else {
-    $package = $mongodb::params::package
-  }
-  package { 'mongodb':
-    name   => $package,
-    alias  => 'mongodb-10gen',
-    ensure => installed,
-  }
-  # create the MongoDB database directory.
-  file { "$dbpath":
-    ensure  => "directory",
-    owner   => "mongodb",
-    group   => "mongodb",
-    mode    => 0755,
-    require => Package["mongodb"],
-  }
-  file { '/etc/mongodb.conf':
-    content => template('mongodb/mongod.conf.erb'),
-    owner   => 'root',
-    group   => 'root',
-    mode    => '0644',
-    require => Package['mongodb'],
-  }
-  service { 'mongodb':
-    name      => $servicename,
-    ensure    => running,
-    enable    => true,
-    subscribe => File['/etc/mongodb.conf'],
-  }
BREAKS HERE
-      content => "review.openstack.org,23.253.232.87,2001:4800:7815:104:3bc3:d7f6:ff03:bf5d ${gerrit_ssh_host_key}",
BREAKS HERE
-    # config-master.wikimedia.org
-    include ::profile::configmaster
-    include ::profile::discovery::client
BREAKS HERE
-
BREAKS HERE
-# [*metric_prefix*]
-#    metric_prefix => 'varnish.backends',
-    $metric_prefix = 'varnish.backends',
BREAKS HERE
-    $extra_updater_options = $poller_options + $fetch_constraints_options + $dump_options + [ '--entityNamespaces', '0,120,146' ]
BREAKS HERE
-    ossec::agentkey{ "ossec_agent_${::fqdn}_client":
-    @@ossec::agentkey{ "ossec_agent_${::fqdn}_server":
BREAKS HERE
-    revision => "244b3ffe5f0bb23fd4750de1c7ddd18b712351ae",
BREAKS HERE
-    version            => '1.7.3',
BREAKS HERE
-    prefix  => 'nginx',
-    check_command       => "check_graphite_metric_since!keepLastValue(${::fqdn_underscore}.nginx.http_5xx)!3minutes!1!5",
BREAKS HERE
-  $debug                       = false
BREAKS HERE
-    'Red Hat', 'Centos', 'Amazon' => 'bind',
-    'Ubuntu', 'Debian' => 'bind9'
-    'Red Hat', 'Centos', 'Amazon' => 'named',
-    'Ubuntu', 'Debian' => 'bind9'
BREAKS HERE
-    $base_dir = "/srv",
-    $log_path = "/var/log/extdist") {
-    $dist_dir = "$base_dir/dist"
-    $clone_dir = "$base_dir/extdist"
-    $src_path = "$base_dir/src"
-    $pid_folder = "/run/extdist"
-        'API_URL'   => "https://www.mediawiki.org/w/api.php",
-        'GIT_URL'   => "https://gerrit.wikimedia.org/r/mediawiki/extensions/%s",
-        'PID_FILE'  => "$pid_folder/pid.lock"
-        ensure  => directory,
-        owner   => 'extdist',
-        group   => 'www-data',
-        mode    => '0755',
-        directory => $clone_dir,
-        command => "/usr/bin/python $clone_dir/nightly.py --all",
BREAKS HERE
-            ensure => 'present',
-            owner  => 'root',
-            group  => 'root',
-            mode   => '0444',
-            source => 'puppet:///modules/labstore/nfs-mounts.yaml',
BREAKS HERE
-        ironic_password   => 'a_big_secret',
-        ironic_auth_url   => "${::openstack_integration::config::keystone_auth_uri}/v3",
-        dnsmasq_interface => 'eth0',
-        db_connection     => 'mysql+pymysql://ironic-inspector:a_big_secret@127.0.0.1/ironic-inspector?charset=utf8',
BREAKS HERE
-            'ruby-bundler',
BREAKS HERE
-  $batman_version = $::class::params::batman_version
BREAKS HERE
-    notify  => Exec['build-bootstrap'],
-  }
-
-    command     => 'gem install bundler --no-ri --no-rdoc',
-    path        => "${rbenv::params::install_dir}/versions/${title}/bin",
-    refreshonly => true,
BREAKS HERE
-    $script_path_default =  "/usr/share/munin/plugins"
-
-    $script_path_default =  "/usr/libexec/munin/plugins"
-    package { 'munin':
-                alias => munin-node,
-    # link
-    # mh: really needed?
-#    file{
-#        "/etc/init.d/munin":
-#            ensure => "/etc/init.d/munin-node",
-#    }
-
-
-
-    $script_path_default =  "/usr/share/munin/plugins"
BREAKS HERE
-  $parallel_jobs          = $processorcount,
-  # Install poudriere
-  package { 'poudriere':
-  exec { "create default ports tree":
-    require => File["/usr/local/etc/poudriere.conf"],
-  file { "/usr/local/etc/poudriere.d":
-    require => Exec["create default ports tree"],
BREAKS HERE
-            jit_afrozen_size => to_bytes('100Mb'),
BREAKS HERE
-            $client_nfsv4_services      = {'rpcbind' => {}, 'rpcidmapd' => {}}
BREAKS HERE
-    rabbit_userid   => 'designate',
-    rabbit_password => 'an_even_bigger_secret',
-    rabbit_host     => $::openstack_integration::config::ip_for_url,
-    rabbit_port     => $::openstack_integration::config::rabbit_port,
-    # TODO(aschultz): switch after ubuntu updates designate to a version
-    # that works with this.
-    #default_transport_url => os_transport_url({
-    #  'transport' => 'rabbit',
-    #  'host'      => $::openstack_integration::config::host,
-    #  'port'      => $::openstack_integration::config::rabbit_port,
-    #  'username'  => 'designate',
-    #  'password'  => 'an_even_bigger_secret',
-    #}),
-    rabbit_use_ssl  => $::openstack_integration::config::ssl,
-    debug           => true,
BREAKS HERE
-    # create a dummy command to report the UNKNOWN state when no data is received
-    $_check_command = "return-unknown-${title}"
-        command_line => "${nagios::params::nagios_plugin_dir}/check_dummy 3 'No data received for at least ${timeout_freshness} seconds'",
BREAKS HERE
-        'set OPTIONS \'"-i 127.0.0.1 -- -u debian-spamd"\''
BREAKS HERE
-    command     => 'sleep $((RANDOM\%600)) && cd /opt/config/production && /usr/bin/git pull -q && /bin/bash install_modules.sh',
BREAKS HERE
-    ensure => directory,
-    owner  => 'root',
-    group  => 'root',
-    mode   => '0755',
-    purge  => $purge,
BREAKS HERE
-# This recursor does two useful things:
BREAKS HERE
-    package { 'dkms-openafs':
-        Package['openafs-modules-dkms'],
-    package { 'openafs-modules-dkms':
BREAKS HERE
-  $nodepool_ssh_private_key = '',
-  $statsd_host = '',
-  $scripts_dir = '',
-  $elements_dir = '',
-  if ($scripts_dir != '') {
-  if ($elements_dir != '') {
BREAKS HERE
-        ensure  => present,
BREAKS HERE
-    $local_path = $title,
-    $upstream_path = $title,
BREAKS HERE
-            { 'names'  => [ "${targets_path}/*.yml",
-                            "${targets_path}/*.yaml" ] },
BREAKS HERE
-    Letsencrypt::Request<<| tag == "CRT_HOST=${::fqdn}" |>>
BREAKS HERE
-    $service_desc = 'PostgreSQL WAL-E base backup push'
-        service_description => $service_desc,
BREAKS HERE
-class clamav {
-    package { 'clamav-daemon':
-    file_line { 'freshclam_proxyserver':
-        line   => "HTTPProxyServer webproxy.${::site}.wmnet",
-        path   => '/etc/clamav/freshclam.conf',
-        notify => Service['clamav-freshclam'],
-    }
-    file_line { 'freshclam_proxyport':
-        line    => 'HTTPProxyPort 8080',
-        path    => '/etc/clamav/freshclam.conf',
-        notify => Service['clamav-freshclam'],
-        ensure    => running,
BREAKS HERE
-#   (string) whether PuppetDB uses SSL or not (true or false)
-  validate_bool($puppetdb_ssl_verify)
BREAKS HERE
-        
-        
-    ~> Service<| tag == 'st2::profile::server' |>
-    Service<| tag == 'st2::profile::server' |> -> St2::Pack<||>
BREAKS HERE
-    String $startmsg_regex                       = undef,
BREAKS HERE
-  $rotation_daily = 6,
-  $rotation_weekly = 28,
-  $rotation_monthly = 95,
BREAKS HERE
-  $bind_socket,
-      ensure  => file,
-      mode    => '0755',
-      content => epp('tripleo/neutron/neutron-keepalived-state-change.epp', {
-        'bind_socket' => $bind_socket
BREAKS HERE
-  $method            = 'cron',
-  $ensure            = 'present',
BREAKS HERE
-  $config_variables = hiera('rabbitmq_config_variables'),
-  $environment      = hiera('rabbitmq_environment'),
-  $ipv6             = str2bool(hiera('rabbit_ipv6', false)),
-  $kernel_variables = hiera('rabbitmq_kernel_variables'),
-  $nodes            = hiera('rabbitmq_node_names', []),
-  $step             = hiera('step'),
-        config_kernel_variables => $kernel_variables,
BREAKS HERE
-  $rc    = ".profile"
-    cwd => $home_path,
-    ensure  => directory,
BREAKS HERE
-    exclude  => '*nrpe*',
BREAKS HERE
-    args => "--metric-prefix nginx ExtendedSampleLogster /var/log/nginx/lb-access.log",
BREAKS HERE
-Subproject commit ca4ac1586d48934c1dfafa9e1968864cbc10900f
BREAKS HERE
-    command     => 'python setup.py easy_install --allow-hosts=None .',
BREAKS HERE
-  if $::ipaddress6 {
BREAKS HERE
-        require             => Class['::epel'],
BREAKS HERE
-    munin::plugin::deploy { "apache_accesses": }
-    munin::plugin::deploy { "apache_processes": }
-    munin::plugin::deploy { "apache_volume": }
BREAKS HERE
-	plugin { "postfix_mailvolume": ensure => absent }
BREAKS HERE
-            'baseurl'  => 'https://trunk.rdoproject.org/centos7-master/b5/75/b5751c2d433224227dedffad25094535138f18da_56c5cddd/',
BREAKS HERE
-  $staff.each |$user| {
-    $repo_path = "${::puppet_environmentpath}/${user}"
-    # We do the git checkout as the user, so we must ensure the directory exists
-    # (and is owned by the user) first, since users can't make directories under
-    # the root environments directory.
-    file { $repo_path:
-      ensure => directory,
-      owner  => $user,
-      group  => ocf,
-    }
-    exec { "git clone https://github.com/ocf/puppet ${repo_path} && cd ${repo_path} && make vendor":
-      user    => $user,
-      unless  => "test -d ${repo_path}/.git",
-      require => [File[$repo_path], Package['git'], Package['r10k']];
BREAKS HERE
-        # Install tideways-xhprof and mongodb, but activate them only if
-        # $enable_profiling is true, as just installing tideways gives us a perf hit.
BREAKS HERE
-#   VMAX driver requires this option to be as True.
-  $share_backend_name      = $name,
-  $vnx_server_container    = undef,
-  $vnx_share_data_pools    = undef ,
-  $vnx_ethernet_ports      = undef,
-  $package_ensure          = 'present',
BREAKS HERE
-  $step = hiera('step'),
-    $neutron_options   = {'profile_support' => $_profile_support }
-      neutron_options => $neutron_options,
BREAKS HERE
-  $ipv6        = false
BREAKS HERE
-    require => Package['gitea'],
-  package { 'gitea':
-    source => "/usr/src/rpm_cache/gitea.rpm",
BREAKS HERE
-    $page_history_log_file  = "${::profile::analytics::refinery::log_dir}/import_wikitext_dumps.log"
BREAKS HERE
-          $majdistrelease = $::lsbmajdistrelease ? {
-            undef   => regsubst($::operatingsystemrelease,'^(\d+)\.[\d.]+','\1'),
-            default => $::lsbmajdistrelease,
-          }
-          if versioncmp($majdistrelease, '6') >= 0 {
BREAKS HERE
-#     Default: [ 
-#     Only set this, if your platform is not supported or you know, what you're doing.
-#     Only set this, if your platform is not supported or you know, what you're doing.
-#     Only set this, if your platform is not supported or you know, what you're doing.
-#     Only set this, if your platform is not supported or you know, what you're doing.
BREAKS HERE
-  $manage_config = true,
BREAKS HERE
-    if hiera('ceilometer_api_enabled', false) {
BREAKS HERE
-        $service_description = 'MegaRAID'
-            description           => $service_description,
-            event_handler         => "raid_handler!megacli!${service_description}!${::site}",
-        $service_description = 'HP RAID'
-            description           => $service_description,
-            event_handler         => "raid_handler!hpssacli!${service_description}!${::site}",
-        $service_description = 'MPT RAID'
-            description           => $service_description,
-            event_handler         => "raid_handler!mpt!${service_description}!${::site}",
-        $service_description = 'MD RAID'
-            description   => $service_description,
-            event_handler => "raid_handler!md!${service_description}!${::site}",
BREAKS HERE
-file { '/etc/icinga2/conf.d/local.d':
BREAKS HERE
-# postgresql::backup { 'pg-backup-netbox': }
-        command => "pq_dumpall | gzip > ${path}/psql-all-dbs-`date \"+%Y%m%d\"`.sql.gz",
BREAKS HERE
-#    MySQL database port. Defaults to 3306.
-#    MySQL database user with read/write permission to the icinga database. Defaults to "icinga".
-#    MySQL database user's password. Defaults to "icinga".
-#    MySQL database name. Defaults to "icinga".
-#    Either enable or disable SSL. Other SSL parameters are only affected if this is set to 'true'.
-#   'puppet' copies the key, cert and CAcert from the Puppet ssl directory to the pki directory
-#   /etc/icinga2/pki on Linux and C:/ProgramData/icinga2/etc/icinga2/pki on Windows.
-#   /etc/icinga2/pki/NodeName.key on Linux
-#   C:/ProgramData/icinga2/etc/icinga2/pki/NodeName.key on Windows
-#   The Value of NodeName comes from the corresponding constant.
-#   /etc/icinga2/pki/NodeName.crt on Linux
-#   C:/ProgramData/icinga2/etc/icinga2/pki/NodeName.crt on Windows
-#   The Value of NodeName comes from the corresponding constant.
-#   /etc/icinga2/pki/ca.crt on Linux
-#   C:/ProgramData/icinga2/etc/icinga2/pki/ca.crt on Windows
-#   MySQL database table prefix. Defaults to "icinga_".
-#   Unique identifier for the local Icinga 2 instance. Defaults to "default".
-#   Enable the high availability functionality. Only valid in a cluster setup. Defaults to "true".
-#   Set the failover timeout in a HA cluster. Must not be lower than 60s. Defaults to "60s".
-#   Whether to import the MySQL schema or not. Defaults to false.
-  Enum['absent', 'present']      $ensure                 = present,
-  String                         $host                   = '127.0.0.1',
-  Integer[1,65535]               $port                   = 3306,
-  Optional[Stdlib::Absolutepath] $socket_path            = undef,
-  String                         $user                   = 'icinga',
-  String                         $password               = 'icinga',
-  String                         $database               = 'icinga',
-  Boolean                        $enable_ssl             = false,
-  Enum['none', 'puppet']         $pki                    = 'puppet',
-  Optional[Stdlib::Absolutepath] $ssl_key_path           = undef,
-  Optional[Stdlib::Absolutepath] $ssl_cert_path          = undef,
-  Optional[Stdlib::Absolutepath] $ssl_cacert_path        = undef,
-  Optional[String]               $ssl_key                = undef,
-  Optional[String]               $ssl_cert               = undef,
-  Optional[String]               $ssl_cacert             = undef,
-  Optional[Stdlib::Absolutepath] $ssl_capath             = undef,
-  Optional[String]               $ssl_cipher             = undef,
-  String                         $table_prefix           = 'icinga_',
-  String                         $instance_name          = 'default',
-  Optional[String]               $instance_description   = undef,
-  Boolean                        $enable_ha              = true,
-  Pattern[/^\d+[ms]*$/]          $failover_timeout       = '60s',
-  Optional[Hash]                 $cleanup                = undef,
-  Optional[Array]                $categories             = undef,
-  Boolean                        $import_schema          = false,
-  $ssl_dir              = "${::icinga2::params::pki_dir}/ido-mysql"
-  # Set defaults for certificate stuff
-  if $ssl_key_path {
-    $_ssl_key_path = $ssl_key_path}
-  else {
-    $_ssl_key_path = "${ssl_dir}/${node_name}.key" }
-  if $ssl_cert_path {
-    $_ssl_cert_path = $ssl_cert_path }
-  else {
-    $_ssl_cert_path = "${ssl_dir}/${node_name}.crt" }
-  if $ssl_cacert_path {
-    $_ssl_cacert_path = $ssl_cacert_path }
-  else {
-    $_ssl_cacert_path = "${ssl_dir}/ca.crt" }
-
-    file { $ssl_dir:
-      ensure => directory,
-    }
-
BREAKS HERE
-    $basedir = '',
-    if $basedir == '' {
BREAKS HERE
-  $whisper_dir       = $graphite::params::whisper_dir,
-  $database_name     = "${graphite::params::web_dir}graphite.db",
-    path    => "${web_dir}local_settings.py",
BREAKS HERE
-# [*source*]
-#   Source file for vhost
-#
-  $template                      = '',
-  $source			 = '',
- 
-    '' => undef,
-  
-    '' => undef,
- 
BREAKS HERE
-  if ! defined(Package['python-paramiko']) {
-    package { 'python-paramiko':
-      ensure   => present,
-    }
-  }
-
-  if ! defined(Package['gcc']) {
-    package { 'gcc':
-      ensure => present,
-    }
-  }
-
-      if ! defined(Package['python-yaml']) {
-        package { 'python-yaml':
-          ensure => present,
-        }
-      }
-      if ! defined(Package['libxml2-dev']) {
-        package { 'libxml2-dev':
-          ensure => present,
-        }
-      }
-      if ! defined(Package['libxslt1-dev']) {
-        package { 'libxslt1-dev':
-          ensure => present,
-        }
-      }
-      if ! defined(Package['libffi-dev']) {
-        package { 'libffi-dev':
-          ensure => present,
-        }
-      }
-      if ! defined(Package['libssl-dev']) {
-        package { 'libssl-dev':
-          ensure => present,
-        }
-      if ! defined(Package['PyYAML']) {
-        package { 'PyYAML':
-          ensure => present,
-        }
-      }
-      if ! defined(Package['libxml2-devel']) {
-        package { 'libxml2-devel':
-          ensure => present,
-        }
-      }
-      if ! defined(Package['libxslt-devel']) {
-        package { 'libxslt-devel':
-          ensure => present,
-        }
-      }
-      if ! defined(Package['libffi-devel']) {
-        package { 'libffi-devel':
-          ensure => present,
-        }
-      }
-      if ! defined(Package['openssl-devel']) {
-        package { 'openssl-devel':
-          ensure => present,
-        }
BREAKS HERE
-    munin::plugins::djbdns
-	
BREAKS HERE
-    $fqdnregex = "s/${::ec2id}.${::domain}/_FQDN_/g"
BREAKS HERE
-            require      => Base::Service_unit["kafka-mirror-${mirror_name}"],
BREAKS HERE
-
-
BREAKS HERE
-  if $::classroom_vm_release and versioncmp($::classroom_vm_release, '2.5') < 0 {
-  if versioncmp($::pe_version, '3.2.0') < 0 {
BREAKS HERE
-class profile::ci::firewall {
-    include ::contint::firewall
BREAKS HERE
-    package { ['libwww-perl', 'libnet-dns-perl']:
-        ensure => 'present',
-    }
-
BREAKS HERE
-    require_packages('php5-gd')
BREAKS HERE
-    exec { $cmd:
-      onlyif  => "${ext_tool_query} -s ${_sapi} -m ${so_name} | /bin/grep 'No module matches ${so_name}'",
-      require => ::Php::Config[$title],
-    }
-    if $php::fpm {
-      Package[$php::fpm::package] ~> Exec[$cmd]
BREAKS HERE
-#   other hosts the user is allowd to connect from.
BREAKS HERE
-#   Defaults to hiera('tripleo::profile::pacemaker::redis_bundle::control_port', '3121')
BREAKS HERE
-  $jenkins_api_user = 'deploy',
BREAKS HERE
-      '-input-raw'          => ':80',
BREAKS HERE
-#   Defaults to hiera('swift::proxy::ceilometer::rabbit_port', 5672)
-  $step             = hiera('step'),
-  $memcache_servers = hiera('memcached_node_ips'),
-  $memcache_port    = 11211,
-  $rabbit_hosts     = hiera('rabbitmq_node_names', undef),
-  $rabbit_port      = hiera('swift::proxy::ceilometer::rabbit_port', 5672),
-    class { '::swift::proxy::ceilometer':
-      rabbit_hosts => $swift_rabbit_hosts,
BREAKS HERE
-    driver => $notification_driver,
BREAKS HERE
-  $endpoints = [],
-      endpoints => any2array($endpoints),
BREAKS HERE
-    notify      => $ensure ? {
-      'present' => Class['::icinga2::service'],
-      default   => undef,
-    },
BREAKS HERE
-    # Allow l10nupdate user to call sync-l10n as the mwdeploy user.
-    # This command is equivalent to a restricted sync-dir call that only syncs
-    # l10n cache files followed by a scap-rebuild-cdbs call.
-    sudo::user { 'l10nupdate-sync':
-    # l10nupdate's ssh key is no longer needed due to the introduction of the
-    # sync-l10n scap script.
-    # TODO: remove after ssh key is removed from all hosts
-    file { '/home/l10nupdate/.ssh/id_rsa':
-        ensure => 'absent',
-    }
-    file { '/home/l10nupdate/.ssh/id_rsa.pub':
-        ensure => 'absent',
-    }
-
BREAKS HERE
-  }
BREAKS HERE
-    file { '/etc/tmpfiles.d/keyholder.conf':
-        ensure  => present,
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0444',
-        content => 'd /run/keyholder 0755 keyholder keyholder',
-        require => User['keyholder'],
BREAKS HERE
-<<<<<<< HEAD
-
-=======
->>>>>>> 6622aa7096acb798db86c8d0518113bb412a1551
BREAKS HERE
-    to_version => '1.9.3-p545',
-    to_version => '2.0.0-p451',
-  rbenv::version { '2.1.3':
-    bundler_version => '1.7.3'
-    to_version => '2.1.3'
BREAKS HERE
-  package { "zsh":
-  group { "admin":
-    name        => "admin",
-    gid         => "3000",
-  user { "deploy":
-    home        => "/home/deploy",
-  file { "/data":
-    mode    => '755',
-    "deploy_key_minglis":
-      key     => extlookup("minglis_key", ""),
-      type    => "ssh-rsa",
-      user   => "deploy",
-      require => User["deploy"];
-    "deploy_key_heathd":
-      ensure => present,
-      key    => extlookup("heathd_key", ""),
-      type   => "ssh-rsa",
-      user   => "deploy",
-      require => User["deploy"];
-    "deploy_key_fberriman":
-      key     => extlookup("fberriman_key", ""),
-      type    => "ssh-dss",
-      user    => "deploy",
-      require => User["deploy"];
-    "deploy_key_paulb":
-      key     => extlookup("paulb_key", ""),
-      type    => "ssh-rsa",
-      user    => "deploy",
-      require => User["deploy"];
-    "deploy_key_garethr":
-      key     => extlookup("garethr_key", ""),
-      type    => "ssh-rsa",
-      user    => "deploy",
-      require => User["deploy"];
-    "deploy_key_james":
-      key     => extlookup("james_key", ""),
-      type    => "ssh-rsa",
-      user    => "deploy",
-      require => User["deploy"];
-    "deploy_key_mwall":
-      key     => extlookup("mwall_key", ""),
-      type    => "ssh-rsa",
-      user    => "deploy",
-      require => User["deploy"];
-	  "deploy_key_jordanh":
-      key     => extlookup("jordanh_key", ""),
-      type    => "ssh-dss",
-      user    => "deploy",
-      require => User["deploy"];
-    "deploy_key_dafydd":
-      key     => extlookup("dafydd_key", ""),
-      type    => "ssh-rsa",
-      user    => "deploy",
-      require => User["deploy"];
-    "deploy_key_jenkins":
-      key     => extlookup("jenkins_key", ""),
-      type    => "ssh-rsa",
-      user    => "deploy",
-      require => User["deploy"];
-    "deploy_key_jamesweiner":
-      key     => extlookup("jamesweiner_key", ""),
-      type    => "ssh-rsa",
-      user    => "deploy",
-      require => User["deploy"];
-  user { "craig":
-  user { "mwall":
-    comment => "Mat Wall (mat.wall@digital.cabinet-office.gov.uk)",
-    home       => "/home/mwall",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "mwall_key1":
-    key     => extlookup("mwall_key", ""),
-    type    => "ssh-rsa",
-    user    => "mwall",
-    require => User["mwall"]
-  user { "minglis":
-    comment => "Martyn Inglis (martyn.inglis@digital.cabinet-office.gov.uk)",
-    home       => "/home/minglis",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "minglis_key":
-    key     => extlookup("minglis_key", ""),
-    type    => "ssh-rsa",
-    user    => "minglis",
-    require => User["minglis"]
-  user { "dafydd":
-    comment => "Dafydd Vaughan (dafydd.vaughan@digital.cabinet-office.gov.uk)",
-    home       => "/home/dafydd",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "dafydd_key1":
-    key     => extlookup("dafydd_key", ""),
-    type    => "ssh-rsa",
-    user    => "dafydd",
-    require => User["dafydd"]
-  user { "garethr":
-    comment => "Gareth Rushgrove (gareth.rushgrove@digital.cabinet-office.gov.uk)",
-    home       => "/home/garethr",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "garethr_key1":
-    key     => extlookup("garethr_key", ""),
-    type    => "ssh-rsa",
-    user    => "garethr",
-    require => User["garethr"]
-  user { "heathd":
-    comment => "David Heath (david.heath@digital.cabinet-office.gov.uk)",
-    home       => "/home/heathd",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "heathd_key1":
-    key     => extlookup("heathd_key", ""),
-    type    => "ssh-rsa",
-    user    => "heathd",
-    require => User["heathd"]
-  user { "james":
-    comment => "James Stewart (james.stewart@digital.cabinet-office.gov.uk)",
-    ensure  => present,
-    home    => "/home/james",
-    require    => Class["users::setup"],
-  ssh_authorized_key { "james_key1":
-    key     => extlookup("james_key", ""),
-    type    => "ssh-rsa",
-    user    => "james",
-    require => User["james"]
-  user { "joshua":
-    comment => "Joshua Marshall (joshua.marshall@digital.cabinet-office.gov.uk)",
-    home       => "/home/joshua",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "joshua_key1":
-    key     => extlookup("joshua_key", ""),
-    type    => "ssh-rsa",
-    user    => "joshua",
-    require => User["joshua"]
-  user { "paulb":
-    comment    => "Paul Battley <paul.battley@digital.cabinet-office.gov.uk>",
-    home       => "/home/paulb",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "paulb_kurosuke":
-    key     => extlookup("paulb_key", ""),
-    type    => "ssh-rsa",
-    user    => "paulb",
-    require => User["paulb"],
-  user { "jamesweiner":
-    comment    => "James Weiner <james.weiner@digital.cabinet-office.gov.uk>",
-    home       => "/home/jamesweiner",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "jamesweiner":
-    key     => extlookup("jamesweiner_key", ""),
-    type    => "ssh-rsa",
-    user    => "jamesweiner",
-    require => User["jamesweiner"]
-  user { "tomw":
-    comment => "Tom Ward (tom.ward@gofreerange.co.uk)",
-    home       => "/home/tomw",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "tomw":
-    key     => extlookup("tomw_key", ""),
-    type    => "ssh-rsa",
-    user    => "tomw",
-    require => User["tomw"]
-  user { "chrisroos":
-    comment    => "Chris Roos <chris.roos@gofreerange.com>",
-    home       => "/home/chrisroos",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "chrisroos_key":
-    key     => extlookup("chrisroos_key", ""),
-    type    => "ssh-rsa",
-    user    => "chrisroos",
-    require => User["chrisroos"],
-  user { "jasoncale":
-    comment    => "Jason Cale <jason.cale@gofreerange.com>",
-    home       => "/home/jasoncale",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "jasoncale":
-    key     => extlookup("jasoncale_key", ""),
-    type    => "ssh-rsa",
-    user    => "jasoncale",
-    require => User["jasoncale"],
-  user { "jamesmead":
-    comment => "James Mead (james@floehopper.org)",
-    home       => "/home/jamesmead",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "jamesmead_key1":
-    key     => extlookup("jamesmead_key", ""),
-    type    => "ssh-rsa",
-    user    => "jamesmead",
-    require => User["jamesmead"]
-  user { "lazyatom":
-    comment => "James Adam (james.adam@gofreerange.com)",
-    home       => "/home/lazyatom",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "lazyatom_key1":
-    key     => extlookup("lazyatom_key", ""),
-    type    => "ssh-rsa",
-    user    => "lazyatom",
-    require => User["lazyatom"]
-    "deploy_key_jamesmead":
-      key     => extlookup("jamesmead_key", ""),
-      type    => "ssh-rsa",
-      user    => "deploy",
-      require => User["deploy"];
-    "deploy_key_lazyatom":
-      key     => extlookup("lazyatom_key", ""),
-      type    => "ssh-rsa",
-      user    => "deploy",
-      require => User["deploy"];
-    "deploy_key_chrisroos":
-      key     => extlookup("chrisroos_key", ""),
-      type    => "ssh-rsa",
-      user    => "deploy",
-      require => User["deploy"];
-    "deploy_key_jasoncale":
-      key     => extlookup("jasoncale_key", ""),
-      type    => "ssh-rsa",
-      user    => "deploy",
-      require => User["deploy"];
-    "deploy_key_tomw":
-      key     => extlookup("tomw_key", ""),
-      type    => "ssh-rsa",
-      user    => "deploy",
-      require => User["deploy"];
-  user { "tomstuart":
-    comment    => "Tom Stuart <tom@experthuman.com>",
-    home       => "/home/tomstuart",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "tomstuart_key1":
-    key     => extlookup("tomstuart_key", ""),
-    type    => "ssh-rsa",
-    user    => "tomstuart",
-    require => User["tomstuart"]
-  ssh_authorized_key { "deploy_key_tomstuart":
-    key     => extlookup("tomstuart_key", ""),
-    type    => "ssh-rsa",
-    user    => "deploy",
-    require => User["deploy"];
-  user { "alister":
-    comment => "Alister Bulman (alister.bulman@betransformative.com)",
-    home       => "/home/alister",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "alister_key1":
-    key     => extlookup("alister_key", ""),
-    type    => "ssh-rsa",
-    user    => "alister",
-    require => User["alister"]
-  user { "chrismo2012":
-    comment => "Chris Moreton (chris.moreton@betransformative.com)",
-    home       => "/home/chrismo2012",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "chrismo2012_key1":
-    key     => extlookup("chrismo2012_key", ""),
-    type    => "ssh-rsa",
-    user    => "chrismo2012",
-    require => User["chrismo2012"]
-  user { "jamie":
-    comment => "jamie (Jamie.Burns@betransformative.com)",
-    home       => "/home/jamie",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "jamie_key1":
-    key     => extlookup("jamie_key", ""),
-    type    => "ssh-rsa",
-    user    => "jamie",
-    require => User["jamie"]
-  user { "jameshu":
-    comment => "James Hughes (j.hughes@kainos.com)",
-    home       => "/home/jameshu",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "jamehsu_key1":
-    key     => extlookup("jameshu_key", ""),
-    type    => "ssh-rsa",
-    user    => "jameshu",
-    require => User["jameshu"]
-  user { "michaela":
-    comment => "Michael Allen (m.allen@kainos.com)",
-    home       => "/home/michaela",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "michaela_key1":
-    key     => extlookup("michaela_key", ""),
-    type    => "ssh-rsa",
-    user    => "michaela",
-    require => User["michaela"]
-  user { "leszekg":
-    comment => "Leszek Gonczar (l.gonczar@kainos.com)",
-    home       => "/home/leszekg",
-    groups     => ["admin", "deploy"],
-    require    => Class["users::setup"],
-  ssh_authorized_key { "leszekg_key1":
-    key     => extlookup("leszekg_key", ""),
-    type    => "ssh-rsa",
-    user    => "leszekg",
-    require => User["leszekg"]
BREAKS HERE
-# You can use this class to configure your servers for looking up sudo info with FreeIPA
-  $server      = $::ipa_server,
-  $domain      = $::ipa_domain
-        $libsss_sudo_package = "libsss_sudo"
-          command => shellquote('/usr/sbin/authconfig','--nisdomain',"${domain}",'--update'),
-          unless  => shellquote('/bin/grep','-q',"NISDOMAIN=${domain}",'/etc/sysconfig/network'),
-        $libsss_sudo_package = "libsss-sudo"
-        
-        exec { "nisdomain_live":
-          unless => "/bin/nisdomainname | grep -q ${safe_domain}",
-          mode    => 0755,
-      enable  => true,    
-        "set database[. = 'sudoers'] sudoers",
-        "set database[. = 'sudoers']/service[1] files",
-        "set database[. = 'sudoers']/service[2] sss",
-    if (versioncmp($::sssd_version, '1.11') >= 0) {
-      # SSSD < 1.11 needs to use the more complex LDAP provider
-      $krb5_server = join(values_at(split($server, ","), 0), "")
-      $dn = join(prefix(split($domain, "\."), "dc="), ",")
-      # Generate correct ldap:// uris, but _srv_ doesn't get a prefix, this is all a bit tricky and ugly
-      $tmp_ldap_uri = join(prefix(delete(split(regsubst($server, "\s+", "", "G"), ","), "_srv_"), "ldap://"), ", ")
-      if member(split(regsubst($server, "\s+", "", "G") , ","), "_srv_") {
-              $ldap_uri = "_srv_"
-          "set target[1]/krb5_server ${krb5_server}", 
BREAKS HERE
-  Boolean $apt_codership_repo_include_src,
-  String $apt_codership_repo_key,
-  String $apt_codership_repo_key_server,
-  String $apt_codership_repo_location,
-  String $apt_codership_repo_release,
-  String $apt_codership_repo_repos,
-  Boolean $apt_mariadb_repo_include_src,
-  String $apt_mariadb_repo_key,
-  String $apt_mariadb_repo_key_server,
-  String $apt_mariadb_repo_location,
-  String $apt_mariadb_repo_release,
-  String $apt_mariadb_repo_repos,
-  Boolean $apt_percona_repo_include_src,
-  String $apt_percona_repo_key,
-  String $apt_percona_repo_key_server,
-  String $apt_percona_repo_location,
-  String $apt_percona_repo_release,
-  String $apt_percona_repo_repos,
-  String $repo_vendor,
-  String $yum_codership_baseurl,
-  String $yum_codership_descr,
-  Integer $yum_codership_enabled,
-  Integer $yum_codership_gpgcheck,
-  String $yum_codership_gpgkey,
-  String $yum_mariadb_descr,
-  Integer $yum_mariadb_enabled,
-  Integer $yum_mariadb_gpgcheck,
-  String $yum_mariadb_gpgkey,
-  String $yum_percona_baseurl,
-  String $yum_percona_descr,
-  Integer $yum_percona_enabled,
-  Integer $yum_percona_gpgcheck,
-  String $yum_percona_gpgkey,
-  Optional[String] $yum_mariadb_baseurl = undef,
-  case $::osfamily {
-      if ($::operatingsystem == 'Ubuntu') or ($::operatingsystem == 'Debian') {
-        if ($repo_vendor == 'percona') {
-          apt::source { 'galera_percona_repo':
-            location => $apt_percona_repo_location,
-            release  => $apt_percona_repo_release,
-            repos    => $apt_percona_repo_repos,
-            key      => {
-              'id'     => $apt_percona_repo_key,
-              'server' => $apt_percona_repo_key_server,
-            },
-            include  => {
-              'src' => $apt_percona_repo_include_src,
-            },
-          }
-        } elsif ($repo_vendor == 'mariadb') {
-          apt::source { 'galera_mariadb_repo':
-            location => $apt_mariadb_repo_location,
-            release  => $apt_mariadb_repo_release,
-            repos    => $apt_mariadb_repo_repos,
-            key      => {
-              'id'     => $apt_mariadb_repo_key,
-              'server' => $apt_mariadb_repo_key_server,
-            },
-            include  => {
-              'src' => $apt_mariadb_repo_include_src,
-            },
-          }
-        } elsif ($repo_vendor == 'codership') {
-          apt::source { 'galera_codership_repo':
-            location => $apt_codership_repo_location,
-            release  => $apt_codership_repo_release,
-            repos    => $apt_codership_repo_repos,
-            key      => {
-              'id'     => $apt_codership_repo_key,
-              'server' => $apt_codership_repo_key_server,
-            },
-            include  => {
-              'src' => $apt_codership_repo_include_src,
-            },
-          }
-        }
-      }
-      if ($repo_vendor == 'osp5') {
-
-      if $repo_vendor == 'percona' {
-        yumrepo { 'percona':
-          descr    => $yum_percona_descr,
-          baseurl  => $yum_percona_baseurl,
-          gpgkey   => $yum_percona_gpgkey,
-          enabled  => $yum_percona_enabled,
-          gpgcheck => $yum_percona_gpgcheck,
-        } -> package {'Percona-Server-shared-compat':
-        if $epel_needed {
-          # Needed for socat package
-          yumrepo { 'epel':
-            mirrorlist     => "http://mirrors.fedoraproject.org/mirrorlist?repo=epel-${::os_maj_version}&arch=${::architecture}",
-            baseurl        => 'absent',
-            failovermethod => 'priority',
-            enabled        => '1',
-            gpgcheck       => '1',
-            gpgkey         => 'https://fedoraproject.org/static/0608B895.txt'
-          }
-      elsif $repo_vendor == 'mariadb' {
-        yumrepo { 'mariadb':
-          descr    => $yum_mariadb_descr,
-          enabled  => $yum_mariadb_enabled,
-          gpgcheck => $yum_mariadb_gpgcheck,
-          gpgkey   => $yum_mariadb_gpgkey,
-          baseurl  => $yum_mariadb_baseurl
-        }
-      elsif $repo_vendor == 'codership' {
-        yumrepo { 'codership':
-          descr    => $yum_codership_descr,
-          enabled  => $yum_codership_enabled,
-          gpgcheck => $yum_codership_gpgcheck,
-          gpgkey   => $yum_codership_gpgkey,
-          baseurl  => $yum_codership_baseurl
-        }
-      fail('This distribution is not currently supported by the galera module')
BREAKS HERE
-#   The private key in a base64 encoded string to store in cert directory, file is stored to
-#   path specified in ssl_key_path. This parameter requires pki to be set to 'none'.
-#   The certificate in a base64 encoded string to store in cert directory, file is  stored to
-#   path specified in ssl_cert_path. This parameter requires pki to be set to 'none'.
-#   The CA root certificate in a base64 encoded string to store in cert directory, file is stored
-#   to path specified in ssl_cacert_path. This parameter requires pki to be set to 'none'.
-        command => "${icinga2_bin} pki new-cert --cn ${node_name} --key ${_ssl_key_path} --cert ${_ssl_cert_path}",
-        command => "${icinga2_bin} pki save-cert --host ${ca_host} --port ${ca_port} --key ${_ssl_key_path} --cert ${_ssl_cert_path} --trustedcert ${trusted_cert}",
-        command => "${icinga2_bin} pki request --host ${ca_host} --port ${ca_port} --ca ${_ssl_cacert_path} --key ${_ssl_key_path} --cert ${_ssl_cert_path} --trustedcert ${trusted_cert} --ticket ${_ticket_id}",
BREAKS HERE
-  $base = undef,
BREAKS HERE
-  ocf_puppet::environments::environment { $staff:; }
BREAKS HERE
-    mirrorlist     => 'http://linux.dell.com/repo/hardware/latest/mirrors.cgi?osname=el$releasever&basearch=$basearch&native=1&dellsysidpluginver=$dellsysidpluginver'
-    mirrorlist     => 'http://linux.dell.com/repo/hardware/latest/mirrors.cgi?osname=el$releasever&basearch=$basearch&native=1&sys_ven_id=$sys_ven_id&sys_dev_id=$sys_dev_id&dellsysidpluginver=$dellsysidpluginver'
BREAKS HERE
-define rbenv::install($user, $group, $home_dir) {
BREAKS HERE
-    puppetlabs/mysql: { class{'mysql_hardening::puppetlabs': } }
-    none: { fail('You haven\'t configured a MySQL provider for hardening.') }
-    default: { fail('Unrecognized/Unsupported MySQL provider for hardening.') }
BREAKS HERE
-    file   => "${config_root_ini}/${ini_name}.ini",
BREAKS HERE
-
-
BREAKS HERE
-        check_command => "check_http_url!${sitename_jenkins}!/",
BREAKS HERE
-            }
-    ## Run-time directories
-    file { [ '/run/hhvm', '/var/log/hhvm' ]:
-        owner  => $user,
-        mode   => '0755',
-    file { '/run/hhvm/cache':
-        mode   => '0750',
BREAKS HERE
-    package { [
-        'python-ldap',
-        'python-pycurl',
-    ]:
-        ensure => present,
-    }
BREAKS HERE
-    $sitename = hiera('profile::librenms::sitename'),
-    $install_dir = hiera('profile::librenms::install_dir'),
-    $active_server = hiera('netmon_server'),
-    $graphite_host = hiera('graphite_host', 'graphite-in.eqiad.wmnet'),
-    $graphite_prefix = hiera('graphite_prefix', 'librenms'),
-    include ::passwords::librenms
-        'db_host'          => 'm1-master.eqiad.wmnet',
-        'db_user'          => $passwords::librenms::db_user,
-        'db_pass'          => $passwords::librenms::db_pass,
-        'db_name'          => 'librenms',
BREAKS HERE
-    package_repository      => 'http://tarballs.openstack.org/groups',
-    package_branch          => 'groups-latest',
BREAKS HERE
-    require => [Class['mysql'],
-                File['/home/gerrit2/review_site/bin/set_agreements.sh']]
BREAKS HERE
-      $version = '0.0.4'
BREAKS HERE
-    command                => './bin/cache_clearing_service',
BREAKS HERE
-            command     => "rpm --import ${gpgkey_url}VMWARE-PACKAGING-GPG-RSA-KEY.pub",
BREAKS HERE
-  file { $log_dir:
-    require => File[$log_dir],
BREAKS HERE
-#   Defaults to 'rabbit'
-  $rpc_backend                        = 'rabbit',
-    !is_service_default($rpc_backend) or
BREAKS HERE
-    $command = "mysql -X -u ${db_user} -e '${query}' ${db_name} > ${file_path}/${table}.xml 2>&1"
BREAKS HERE
-      require => File["/usr/share/java/bcpg.jar"],
BREAKS HERE
-        command => '/bin/cat $store/hostkey-* >/etc/ssh/ssh_known_hosts~',
BREAKS HERE
-    $ssl_settings = ssl_ciphersuite('apache-2.2', 'compat', '365')
BREAKS HERE
-      unless      => "/usr/bin/test $(/usr/bin/git describe --tags) == '${version}'",
BREAKS HERE
-  validate_string($display_name) 
-    ensure => file,
-    notify => Service['icinga2'],
BREAKS HERE
-        host_fqdn      => 'wikitech-static.wikimedia.org',
-        contact_groups => 'wikitech-static',
-        description    => 'HTTPS-wikitech-static',
-        check_command  => 'check_ssl_http_letsencrypt!wikitech-static.wikimedia.org',
-        host           => 'wikitech-static.wikimedia.org',
-        contact_groups => 'wikitech-static',
BREAKS HERE
-        ensure         => present,
-        systemd        => true,
-        upstart        => true,
-        refresh        => false,
-        service_params => $service_params,
-        subscribe      => Package[$ext_pkgs],
BREAKS HERE
-    sonofgridengine::checkpoint { 'continuous':
-        config => 'profile/toolforge/grid/chkpt-continuous.erb',
-    # The following failed attempt at creating resource types before my time
-    # will never work as is.  The provider is a TABLE not a file, per se.
-
-    # gridengine_complex { 'h_vmem':
-    #     ensure      => present,
-    #     shortcut    => 'h_vmem',
-    #     type        => 'MEMORY',
-    #     relop       => '<=',
-    #     requestable => 'FORCED',
-    #     default     => '0',
-    #     urgency     => '0',
-    #     consumable  => 'YES',
-    #     require     => Service['gridengine-master'],
-    # }
-
-    # gridengine_complex { 'release':
-    #     ensure      => present,
-    #     shortcut    => 'rel',
-    #     type        => 'CSTRING',
-    #     relop       => '==',
-    #     requestable => 'YES',
-    #     consumable  => 'NO',
-    #     default     => 'NONE',
-    #     urgency     => '0',
-    #     require     => Service['gridengine-master'],
-    # }
-
-    # gridengine_complex { 'user_slot':
-    #     ensure      => present,
-    #     shortcut    => 'u',
-    #     type        => 'INT',
-    #     relop       => '<=',
-    #     requestable => 'YES',
-    #     consumable  => 'YES',
-    #     default     => '0',
-    #     urgency     => '0',
-    #     require     => Service['gridengine-master'],
-    # }
-
-    # These are being removed.  Keeping as comments for temporary reference.
-    # $hostlist = '@general'
-
-    # gridengine_queue { 'continuous':
-    #     ensure    => present,
-    #     hostlist  => $hostlist,
-    #     seq_no    => 1,
-    #     priority  => 10,
-    #     qtype     => 'BATCH',
-    #     ckpt_list => 'continuous',
-    #     rerun     => 'TRUE',
-    # }
-
-    # gridengine_queue { 'task':
-    #     ensure    => present,
-    #     hostlist  => $hostlist,
-    #     seq_no    => 0,
-    #     qtype     => 'BATCH INTERACTIVE',
-    #     ckpt_list => 'NONE',
-    # }
BREAKS HERE
-        group   => root,
-        mode    => '0400',
BREAKS HERE
-    # Allow non local bind, because all the ovsdb-server's running in the
-    # cluster try to open a TCP socket on the VIP.
-    ensure_resource('sysctl::value',  'net.ipv4.ip_nonlocal_bind', {
-      'value'=> 1,
-    })
-
BREAKS HERE
-    $prompt                 = '\u@\h(\d)> ',
BREAKS HERE
-
-      # ensure all repository configuration are in place before the gitlab omnibus package is installed
-      Resource[$resource_type] <| tag == 'gitlab_omnibus_repository_resource' |> -> Package['gitlab-omnibus']
BREAKS HERE
-        '-Xloggc:/var/lib/gerrit2/review_site/logs/jvm_gc.%p.log',
BREAKS HERE
-  } 
BREAKS HERE
-    # needed for (at least) check_ssl
BREAKS HERE
-        key         => "/etc/ssl/localcerts/ldap-corp.${::site}.wikimedia.org.key",
BREAKS HERE
-    'Redhat' => 'php-xdebug',
BREAKS HERE
-    file { '/srv/backup':
-        ensure => 'directory',
-        owner  => 'root',
-        group  => 'analytics-admins',
-        mode   => '0755',
BREAKS HERE
-                $service_pools = $pools.filter |$lvs_name, $pool| {
-                    ($lvs_name == $service) or ($service in $pool)
-                }
BREAKS HERE
-    jenkins_ssh_private_key => hiera('jenkins_ssh_private_key_contents')
-    transifex_username => 'openstackjenkins',
-    transifex_password => hiera('transifex_password')
-    pypi_username => 'openstackci',
-    pypi_password => hiera('pypi_password')
BREAKS HERE
-    case $operatingsystem {
-        gentoo: { include shorewall::gentoo }
-        debian: { include shorewall::debian }
-        default: { include shorewall::base }
-    }
-        	"/var/lib/puppet/modules/shorewall":
-        		ensure => directory,
-        		force => true,
-        		mode => 0755, owner => root, group => 0;
-
-    # private
-	define managed_file () {
-		$dir = "/var/lib/puppet/modules/shorewall/${name}.d"
-		concatenated_file { "/var/lib/puppet/modules/shorewall/$name":
-            dir => $dir,
-			mode => 0600,
-		}
-		file {
-			"${dir}/000-header":
-				source => "puppet://$server/shorewall/boilerplate/${name}.header",
-				mode => 0600, owner => root, group => 0,
-				notify => Exec["concat_${dir}"];
-			"${dir}/999-footer":
-				source => "puppet://$server/shorewall/boilerplate/${name}.footer",
-				mode => 0600, owner => root, group => 0,
-				notify => Exec["concat_${dir}"];
-		}
-	}
-
-	# private
-	define entry ($line) {
-		$target = "/var/lib/puppet/modules/shorewall/${name}"
-		$dir = dirname($target)
-		file { $target:
-			content => "${line}\n",
-			mode => 0600, owner => root, group => 0,
-			notify => Exec["concat_${dir}"],
-		}
-	}
-
-	# See http://www.shorewall.net/3.0/Documentation.htm#Zones
-	managed_file{ zones: }
-	define zone($type, $options = '-', $in = '-', $out = '-', $parent = '-', $order = 100) {
-		$real_name = $parent ? { '-' => $name, default => "${name}:${parent}" }
-		entry { "zones.d/${order}-${title}":
-			line => "${real_name} ${type} ${options} ${in} ${out}"
-		}
-	}
-
-	# See http://www.shorewall.net/3.0/Documentation.htm#Interfaces
-	managed_file{ interfaces: }
-	define interface(
-		$zone,
-		$broadcast = 'detect',
-		$options = 'tcpflags,blacklist,routefilter,nosmurfs,logmartians',
-		$rfc1918 = false,
-		$dhcp = false,
-        $order = 100
-		)
-	{
-		if $rfc1918 {
-			if $dhcp {
-				$options_real = "${options},dhcp"
-			} else {
-				$options_real = $options
-			}
-		} else {
-			if $dhcp {
-				$options_real = "${options},norfc1918,dhcp"
-			} else {
-				$options_real = "${options},norfc1918"
-			}
-		}
-
-		entry { "interfaces.d/${order}-${title}":
-			line => "${zone} ${name} ${broadcast} ${options_real}",
-		}
-	}
-
-	# See http://www.shorewall.net/3.0/Documentation.htm#Hosts
-	managed_file { hosts: }
-	define host($zone, $options = 'tcpflags,blacklist,norfc1918',$order='100') {
-		entry { "hosts.d/${order}-${title}":
-			line => "${zone} ${name} ${options}"
-		}
-	}
-
-	# See http://www.shorewall.net/3.0/Documentation.htm#Policy
-	managed_file { policy: }
-	define policy($sourcezone, $destinationzone, $policy, $shloglevel = '-', $limitburst = '-', $order) {
-		entry { "policy.d/${order}-${title}":
-			line => "# ${name}\n${sourcezone} ${destinationzone} ${policy} ${shloglevel} ${limitburst}",
-		}
-	}
-
-	# See http://www.shorewall.net/3.0/Documentation.htm#Rules
-	managed_file { rules: }
-	define rule_section($order) {
-		entry { "rules.d/${order}-${title}":
-			line => "SECTION ${name}",
-		}
-	}
-	# mark is new in 3.4.4
-	define rule($action, $source, $destination, $proto = '-',
-		$destinationport = '-', $sourceport = '-', $originaldest = '-',
-		$ratelimit = '-', $user = '-', $mark = '', $order)
-	{
-		entry { "rules.d/${order}-${title}":
-			line => "# ${name}\n${action} ${source} ${destination} ${proto} ${destinationport} ${sourceport} ${originaldest} ${ratelimit} ${user} ${mark}",
-		}
-	}
-
-	# See http://www.shorewall.net/3.0/Documentation.htm#Masq
-	managed_file{ masq: }
-	# mark is new in 3.4.4
-	# source (= subnet) = Set of hosts that you wish to masquerade.
-	# address = If  you  specify  an  address here, SNAT will be used and this will be the source address.
-	define masq($interface, $source, $address = '-', $proto = '-', $port = '-', $ipsec = '-', $mark = '', $order='100' ) {
-		entry { "masq.d/${order}-${title}":
-			line => "# ${name}\n${interface} ${source} ${address} ${proto} ${port} ${ipsec} ${mark}"
-		}
-	}
-
-	# See http://www.shorewall.net/3.0/Documentation.htm#ProxyArp
-	managed_file { proxyarp: }
-	define proxyarp($interface, $external, $haveroute = yes, $persistent = no, $order='100') {
-		entry { "proxyarp.d/${order}-${title}":
-			line => "# ${name}\n${name} ${interface} ${external} ${haveroute} ${persistent}"
-		}
-	}
-
-	# See http://www.shorewall.net/3.0/Documentation.htm#NAT
-	managed_file { nat: }
-	define nat($interface, $internal, $all = 'no', $local = 'yes',$order='100') {
-		entry { "nat.d/${order}-${title}":
-			line => "${name} ${interface} ${internal} ${all} ${local}"
-		}
-	}
-
-	# See http://www.shorewall.net/3.0/Documentation.htm#Blacklist
-	managed_file { blacklist: }
-	define blacklist($proto = '-', $port = '-', $order='100') {
-		entry { "blacklist.d/${order}-${title}":
-			line => "${name} ${proto} ${port}",
-		}
-
-	# See http://www.shorewall.net/3.0/Documentation.htm#rfc1918
-	managed_file { rfc1918: }
-	define rfc1918($action = 'logdrop', $order='100') {
-		entry { "rfc1918.d/${order}-${title}":
-			line => "${name} ${action}"
-		}
-	
-	# See http://www.shorewall.net/3.0/Documentation.htm#Routestopped
-	managed_file { routestopped: }
-	define routestopped($interface = '', $host = '-', $options = '', $order='100') {
-        $real_interface = $interface ? {
-            '' => $name,
-            default => $interface,
-        }
-		entry { "routestopped.d/${order}-${title}":
-			line => "${real_interface} ${host} ${options}",
-		}
-
-    # See http://www.shorewall.net/3.0/Documentation.htm#Variables 
-    managed_file { params: }
-    define params($value, $order='100'){
-        entry { "params.d/${order}-${title}":
-            line => "${name}=${value}",
-        }
-
-    # See http://www.shorewall.net/3.0/traffic_shaping.htm
-    managed_file { tcdevices: }
-    define tcdevices($in_bandwidth, $out_bandwidth, $options = '', $redirected_interfaces = '', $order='100'){
-        entry { "tcdevices.d/${order}-${title}":
-            line => "${name} ${in_bandwidth} ${out_bandwidth} ${options} ${redirected_interfaces}",
-        }
-
-    # See http://www.shorewall.net/3.0/traffic_shaping.htm
-    managed_file { tcrules: }
-    define tcrules($source, $destination, $protocol = 'all', $ports, $client_ports = '', $order='1'){
-        entry { "tcrules.d/${order}-${title}":
-            line => "# ${name}\n${order} ${source} ${destination} ${protocol} ${ports} ${client_ports}",
-        }
-
-    # See http://www.shorewall.net/3.0/traffic_shaping.htm
-    managed_file { tcclasses: }
-    define tcclasses($interface, $rate, $ceil, $priority, $options = '' , $order='1'){
-        entry { "tcclasses.d/${order}-${title}":
-            line => "# ${name}\n${interface} ${order} ${rate} ${ceil} ${priority} ${options}",
-        }
-    # See http://shorewall.net/shorewall_extension_scripts.htm
-    define extension_script($script = '') {
-      case $name {
-        'init', 'initdone', 'start', 'started', 'stop', 'stopped', 'clear', 'refresh', 'continue', 'maclog': {
-          managed_file { "${name}": }
-          entry { "${name}.d/500-${hostname}":
-            line => "${script}\n";
-          }
-        }
-        '', default: {
-          err("${name}: unknown shorewall extension script")
-	package { 'shorewall':
-        ensure => present,
-    }
-
-    # This file has to be managed in place, so shorewall can find it
-	file { "/etc/shorewall/shorewall.conf":
-		# use OS specific defaults, but use Default if no other is found
-		source => [
-            "puppet://$server/files/shorewall/${fqdn}/shorewall.conf.$operatingsystem",
-            "puppet://$server/files/shorewall/${fqdn}/shorewall.conf",
-            "puppet://$server/files/shorewall/shorewall.conf.$operatingsystem.$lsbdistcodename",
-            "puppet://$server/files/shorewall/shorewall.conf.$operatingsystem",
-            "puppet://$server/files/shorewall/shorewall.conf",
-            "puppet://$server/shorewall/shorewall.conf.$operatingsystem.$lsbdistcodename",
-            "puppet://$server/shorewall/shorewall.conf.$operatingsystem",
-            "puppet://$server/shorewall/shorewall.conf.Default"
-        ],
-		mode => 0644, owner => root, group => 0,
-        require => Package[shorewall],
-        notify => Service[shorewall],
-	}
-	service{shorewall: 
-        ensure  => running, 
-        enable  => true, 
-        hasstatus => true,
-        hasrestart => true,
-        subscribe => [ 
-            Exec["concat_/var/lib/puppet/modules/shorewall/zones"], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/interfaces"], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/hosts"], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/policy"], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/rules"], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/masq"], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/proxyarp"], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/nat"], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/blacklist"], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/rfc1918"], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/routestopped"], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/params"],
-            Exec["concat_/var/lib/puppet/modules/shorewall/tcdevices"], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/tcrules"], 
-            Exec["concat_/var/lib/puppet/modules/shorewall/tcclasses"],
-        ],
-        require => Package[shorewall],
-    }
-    Package[shorewall]{
-        category => 'net-firewall',
-    }
-    file{'/etc/default/shorewall':
-        source => "puppet://$server/shorewall/debian/default",
-        require => Package['shorewall'],
-        notify => Service['shorewall'],
-        owner => root, group => 0, mode => 0644;
-    }
-    Service['shorewall']{
-        status => '/sbin/shorewall status'
-    }
BREAKS HERE
-$node_version = "v0.10.5"
BREAKS HERE
-                $memory_limit=floor($::memoryfree_mb)/10,
BREAKS HERE
-# [*bootstrap_master*]
-#   (Optional) The hostname of the node responsible for bootstrapping
-#   Defaults to hiera('bootstrap_nodeid')
-#
-  $sync_db          = true,
-  $bootstrap_master = undef,
-  $manage_roles     = true,
-  $manage_endpoint  = true,
-  $manage_db_purge  = hiera('keystone_enable_db_purge', true),
-  $step             = hiera('step'),
-      enable_bootstrap => $bootstrap_master,
BREAKS HERE
-#   Specifies the socket type. Can be either 'tcp' or 'unix'. Defaults to 'unix'
-#   Defaults to "127.0.0.1".
-#   Port to listen for connections. Only valid when socket_type is 'tcp'. Defaults to 6558.
-  Enum['absent', 'present'] $ensure          = present,
-  Enum['tcp', 'unix']       $socket_type     = 'unix',
-  String                    $bind_host       = '127.0.0.1',
-  Integer[1,65535]          $bind_port       = 6558,
-  Stdlib::Absolutepath      $socket_path     = "${::icinga2::params::run_dir}/cmd/livestatus",
-  Stdlib::Absolutepath      $compat_log_path = "${::icinga2::params::log_dir}/compat",
BREAKS HERE
-            'baseurl'  => 'https://trunk.rdoproject.org/centos7-master/13/22/13223e459babddd74792699b20b52843a0ff9576_1788254e/',
BREAKS HERE
-        'clone_prefix'  => 'git://git.openstack.org https://git.openstack.org',
BREAKS HERE
-        proxy_pass http://whitehall-admin.${app_domain};
BREAKS HERE
-        require    => [Package["${title}/deploy"], Class['packages::nodejs']],
BREAKS HERE
-  if $step >= 3 {
BREAKS HERE
-        value => 'govuk_crawler_worker';
BREAKS HERE
-node 'jenkins2.openstack.org' {
-  class { 'openstack_project::jenkins':
-    # Explicitly disable Jenkins Job Builder
-    jenkins_jobs_password   => '',
-    manage_jenkins_jobs     => false,
-    ssl_cert_file_contents  => hiera('jenkins_ssl_cert_file_contents'),
-    ssl_key_file_contents   => hiera('jenkins_ssl_key_file_contents'),
-    ssl_chain_file_contents => hiera('jenkins_ssl_chain_file_contents'),
-    sysadmins               => hiera('safesysadmins'),
-  }
-}
-
BREAKS HERE
-#
-  $ulimit_name    = 'ulimit'
-  $ulimit_confdir = '/etc/security/limits.d'
BREAKS HERE
-    keystone_url     => "${::openstack_integration::config::keystone_auth_uri}/v3",
BREAKS HERE
-        destination    => "${working_path}/mw-log/archive",
-        destination    => "${working_path}/mw-log/archive",
-        destination    => "${working_path}/mw-log/archive",
BREAKS HERE
-  package { 'apt-dater': }
BREAKS HERE
-    $bz_pass = $passwords::gerrit::gerrit_bz_pass
BREAKS HERE
-  include apache
-  include apache::mod::wsgi
-      Class['apache::params'],
-      Class['apache::params'],
-    apache::vhost { $hostname:
-    apache::vhost { $hostname:
BREAKS HERE
-class gds_development($version = '1.5.3') {
BREAKS HERE
-        if ($::realm == 'labs') {
-            if os_version('ubuntu <= precise') {
-                $ssh_authorized_keys_file ='/etc/ssh/userkeys/%u /public/keys/%u/.ssh/authorized_keys'
-            } else {
-                $ssh_authorized_keys_file = '/etc/ssh/userkeys/%u'
-            }
-        } else {
-            $ssh_authorized_keys_file ='/etc/ssh/userkeys/%u .ssh/authorized_keys .ssh/authorized_keys2'
-        }
BREAKS HERE
-  if $ovn_dbs {
BREAKS HERE
-    $schedulable_instance_size = hiera('profile::openstack::base::metrics::schedulable_instance_size'),
-        prometheus_nodes          => $prometheus_nodes,
-        cpu_allocation_ratio      => $cpu_allocation_ratio,
-        ram_allocation_ratio      => $ram_allocation_ratio,
-        disk_allocation_ratio     => $disk_allocation_ratio,
-        listen_port               => $listen_port,
-        cache_refresh_interval    => $cache_refresh_interval,
-        cache_file                => $cache_file,
-        schedulable_instance_size => $schedulable_instance_size,
-        region                    => $region,
-        keystone_host             => $keystone_host,
-        observer_password         => $observer_password,
BREAKS HERE
-# == Class: govuk::apps::publishing_api
BREAKS HERE
-  $uid               = '800',
BREAKS HERE
-  if ($::govuk_platform == 'preview') {
BREAKS HERE
-  $command_path = "${run_dir}/cmd/icinga2.cmd",
BREAKS HERE
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0555',
-        source => 'puppet:///modules/logstash/logstash_optimize_index.sh',
BREAKS HERE
-  # Hardcoded, rather than hiera, because I don't want to create the
-  # illusion that you can modify these on the fly. You will need to tidy
-  # up old `host{}` records.
-  $staging_ip     = '37.26.91.14'
-  $staging_host   = 'www-origin-staging.production.alphagov.co.uk'
-
BREAKS HERE
-    if size($rabbit_hosts) > 1 {
-      heat_config { 'oslo_messaging_rabbit/rabbit_ha_queues': value => true }
-      heat_config { 'oslo_messaging_rabbit/rabbit_ha_queues': value => false }
BREAKS HERE
-  $elasticsearch_nodes = [],
-  $gearman_workers = [],
-  $sysadmins = [],
-  $iptables_es_rule = regsubst ($elasticsearch_nodes, '^(.*)$', '-m state --state NEW -m tcp -p tcp --dport 9200:9400 -s \1 -j ACCEPT')
-  $iptables_gm_rule = regsubst ($gearman_workers, '^(.*)$', '-m state --state NEW -m tcp -p tcp --dport 4730 -s \1 -j ACCEPT')
-  $iptables_rule = flatten([$iptables_es_rule, $iptables_gm_rule])
-  class { 'openstack_project::server':
-    iptables_public_tcp_ports => [22, 80, 3306],
-    iptables_rules6           => $iptables_rule,
-    iptables_rules4           => $iptables_rule,
-    sysadmins                 => $sysadmins,
-  }
-
BREAKS HERE
-    /unicorn|thin/ => 'nginx',
-    'thin': {
-      include puppet::server::thin
-      $ssl_client_header        = 'HTTP_X_CLIENT_DN'
-      $ssl_client_verify_header = 'HTTP_X_CLIENT_VERIFY'
-      $ssl_protocols            = pick($serverssl_protos, 'TLSv1.2 TLSv1.1 TLSv1 SSLv3')
-      $ssl_ciphers              = pick($serverssl_ciphers, 'HIGH:!aNULL:!MD5')
-    }
-      err('Only "passenger", "thin", "unicorn" and "standalone" are valid options for servertype')
BREAKS HERE
-    exec { "sudo_user_${title}_linting":
-        command     => "rm -f ${filename} && false",
-        unless      => "test -e ${filename} && visudo -cf ${filename} || exit 0",
-        path        => '/bin:/usr/bin:/usr/sbin',
-        refreshonly => true,
-        subscribe   => File[$filename],
BREAKS HERE
-  $mode             = undef
-      $sharename = "${::nfs::client::nfs_v4_mount_root}/${share}"
-      $sharename = $mount
-    mount { "shared ${sharename} by ${::clientcert} on ${mount}":
-      device   => "${server}:/${sharename}",
-    mount { "shared ${sharename} by ${::clientcert} on ${mount}":
-      require => Mount["shared ${sharename} by ${::clientcert} on ${mount}"]
BREAKS HERE
-        nrpe_command => '/usr/local/lib/nagios/plugins/nrpe_check_opcache -w 50 -c 10',
BREAKS HERE
-        command => 'chgrp apache /var/log/munin /var/log/munin/munin-graph.log && chmod g+w /var/log/munin /var/log/munin/munin-graph.log && find /var/www/munin/* -maxdepth 1 -type d -exec chgrp -R apache {} \; && find /var/www/munin/* -maxdepth 1 -type d -exec chmod g+w {} \;',
BREAKS HERE
-  postfix::postmapfile { 'local_remote_rewrites': name => 'local_remote_rewrites' } 
BREAKS HERE
-    before => Package[$pecl_package]
-    $pecl_package = "pecl-${title}"
-
-    package { $pecl_package:
-      before => Package[$pecl_package]
-    package { "${package_prefix}${title}":
BREAKS HERE
-#   An object type on which to target the apply rule.
-  $target            = undef,
BREAKS HERE
-    class { 'exim4':
BREAKS HERE
-  $key          = { 'id' => '7E3F070089DF5277', 'source' => 'http://www.dotdeb.org/dotdeb.gpg' },
BREAKS HERE
-  @nagios::nrpe_config { 'check_apt_security_updates':
-  @nagios::plugin { 'check_apt_security_updates':
-  @@nagios::check { "check_apt_security_updates_${::hostname}":
-  @nagios::nrpe_config { 'check_reboot_required':
-  @nagios::plugin { 'check_reboot_required':
-  @@nagios::check { "check_reboot_required_${::hostname}":
BREAKS HERE
-      owner   => 'root',
-      group   => 'ssl-cert',
-      mode    => '0640',
-      source  => $ssl_cert_file,
-      before  => Class['storyboard::application'],
-      notify  => Class['storyboard::application'],
-      owner   => 'root',
-      group   => 'ssl-cert',
-      mode    => '0640',
-      source  => $ssl_key_file,
-      before  => Class['storyboard::application'],
-      notify  => Class['storyboard::application'],
-      owner   => 'root',
-      group   => 'ssl-cert',
-      mode    => '0640',
-      source  => $ssl_ca_file,
-      before  => Class['storyboard::application'],
-      notify  => Class['storyboard::application'],
BREAKS HERE
-  $carbon_package           = 'python-graphite',
BREAKS HERE
-  include httpd::params
BREAKS HERE
-    $content = template('nagios_common/contacts.cfg.erb'),
-    ) {
-            content => $content,
BREAKS HERE
-    owner => 'www-data',
-    group => 'vagrant',
-    mode => 774,
BREAKS HERE
-        $Iscsi_helper = 'tgtadm'
BREAKS HERE
-class profile::microsites::peopleweb {
BREAKS HERE
-            unless => '/usr/bin/test -f /etc/init.d/ipsec.disabled',
BREAKS HERE
-    purge_sources_list   => true,
-    purge_sources_list_d => true;
-          include_src => false;
-    key        => '4BD6EC30',
-    key_source => 'https://apt.puppetlabs.com/pubkey.gpg';
-    key        => '45A686E7D72A0AF4',
-    key_source => 'https://apt.ocf.berkeley.edu/pubkey.gpg';
-      key        => '7FAC5991',
-      key_source => 'https://dl-ssl.google.com/linux/linux_signing_key.pub';
-        include_src => false,
BREAKS HERE
-  validate_array($permissions)
-    permissions => $permissions,
BREAKS HERE
-  $site_mysql_user = undef,
-  $site_mysql_database = undef,
BREAKS HERE
-        mode      => '0444',
BREAKS HERE
-        if hiera('use_timesyncd', false) or (os_version('debian >= stretch')) {
BREAKS HERE
-
BREAKS HERE
-  if ! ($certtype in ['www','wildcard_alphagov']) {
BREAKS HERE
-    # 1) upgrade puppet managed packages (will trigger puppet dependencies)
-    # 2) then upgrade all packages via exec
-    # 3) then restart services
-    Package <| |> -> Exec['package-upgrade'] -> Service <| |>
BREAKS HERE
-  file { '/home/vagrant/.zshenv':
-    owner   => vagrant,
-    group   => vagrant,
-    mode    => '0644',
-    content => "# We use xvfb for DISPLAY, so that integration tests can run
-export DISPLAY=:99"
-  }
-
-  file { '/home/vagrant/.bashrc':
-    owner   => vagrant,
-    group   => vagrant,
-    mode    => '0644',
-    source  => 'puppet:///modules/govuk/vagrant_bashrc'
-  }
BREAKS HERE
-    comment => 'OCF Mirroring',
-    home    => '/opt/mirrors',
-    groups  => ['sys'],
-    shell   => '/bin/false',
-    require => File['/opt/mirrors'],
BREAKS HERE
-  $site_ssl_cert_file = '',
-  $site_ssl_key_file = '',
-  $site_ssl_chain_file = '',
-  include pear
-    ensure  => directory,
-    owner   => 'root',
-    group   => 'root',
-    mode    => '0755',
-    ensure    => directory,
-    owner     => 'root',
-    group     => 'root',
-    mode      => '0755',
-    require   => File[$site_root],
-    ensure    => file,
-    owner     => 'root',
-    group     => 'root',
-    mode      => '0400',
-    content   => template('drupal/settings.php.erb'),
-    replace   => true,
-    require   => File["${site_root}/etc"],
-    command     => "/usr/bin/drush dsd-init @${site_alias}",
-    logoutput   => true,
-    timeout     => 600,
-    onlyif      => "/usr/bin/drush dsd-status @${site_alias} | /bin/grep -c 'NOT INSTALLED'",
-    require     => [
-    command     => "/usr/bin/drush dsd-update @${site_alias}",
-    logoutput   => true,
-    timeout     => 600,
-    onlyif      => "/usr/bin/drush dsd-status @${site_alias} | /bin/grep -c 'UPDATE'",
-    require     => [
BREAKS HERE
-    command => 'apt-get -y --reinstall install ruby1.9.1=1.9.3.0-1ubuntu2.8 libruby1.9.1=1.9.3.0-1ubuntu2.8 ruby1.9.1-dev=1.9.3.0-1ubuntu2.8',
BREAKS HERE
-    ferm::service { 'zookeeper':
-        proto  => 'tcp',
-        # Zookeeper client, protocol ports
-        port   => '(2181 2182 2183)',
-        srange => '$DOMAIN_NETWORKS',
-    }
-
BREAKS HERE
-class ocf::nfs($pykota = false) {
BREAKS HERE
-  # import library 'perfdata'
BREAKS HERE
-        physical: { munin::plugins::physical }
BREAKS HERE
-
-    $kafka_cluster_name = 'jumbo'
-    $n = kafka_cluster_name($kafka_cluster_name)
-    notify { "kafka cluster name is given as ${kafka_cluster_name}, function returns ${n}": }
BREAKS HERE
-#
BREAKS HERE
-        '1'                  => 'mwtest1001.eqiad.wmnet',
-        'mw1017.eqiad.wmnet' => 'mwtest1001.eqiad.wmnet',
-        'mw1099.eqiad.wmnet' => 'mwtest1002.eqiad.wmnet',
-    # - Allow X-Wikimedia-Debug to select mw1017 and mw1099 in EQIAD
-    #   and mw2017 and mw2099 in CODFW.
-    # - For back-compat, pass 'X-Wikimedia-Debug: 1' requests to mw1017.
-        backend_regexp  => '^((mwtest1001|mwtest1002)\.eqiad\.wmnet|(mw2017|mw2099)\.codfw\.wmnet)',
BREAKS HERE
-  package { [ 'rspec-puppet', 'puppetlabs_spec_helper' ]:
-    ensure   => present,
-    provider => 'puppet_gem',
BREAKS HERE
-		debian: {	$munin_node_service = "munin-node"; }
-		gentoo: {	$munin-node_service = "munin"; }
-		gentoo: {	$munin_node_service = "munin"; }
-		debian: {	$munin_node_service = "munin-node"; }
-				mode => 0755, owner => root, group => root;
-				mode => 0644, owner => root, group => root;
BREAKS HERE
-    # Mode 0751 to make sure non-root users can access
-    # /var/lib/puppet/state/agent_disabled.lock to check if puppet is enabled
-    file { '/var/lib/puppet':
-        ensure => directory,
-        owner  => 'puppet',
-        group  => 'puppet',
-        mode   => '0751',
-    }
BREAKS HERE
-  # TODO(aschultz): remove this once the packaging has been fixed
-  include ::gnocchi::client
BREAKS HERE
-      'set JAVA_ARGS \'"-Djava.awt.headless=true -Djava.net.preferIPv4Stack=true -Dhudson.model.ParametersAction.safeParameters=ghprbActualCommit,ghprbActualCommitAuthor,ghprbActualCommitAuthorEmail,ghprbAuthorRepoGitUrl,ghprbCommentBody,ghprbCredentialsId,ghprbGhRepository,ghprbPullAuthorEmail,ghprbPullAuthorLogin,ghprbPullAuthorLoginMention,ghprbPullDescription,ghprbPullId,ghprbPullLink,ghprbPullLongDescription,ghprbPullTitle,ghprbSourceBranch,ghprbTargetBranch,ghprbTriggerAuthor,ghprbTriggerAuthorEmail,ghprbTriggerAuthorLogin,ghprbTriggerAuthorLoginMention,GIT_BRANCH,sha1 -Xmx1024m"\'',
BREAKS HERE
-        ensure  => directory,
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0755',
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0755',
-        source  => 'puppet:///modules/haproxy/check_haproxy',
-        description   => 'haproxy process',
-        nrpe_command  => '/usr/lib/nagios/plugins/check_procs -c 1: -C haproxy',
-        description   => 'haproxy alive',
-        nrpe_command  => '/usr/lib/nagios/plugins/check_haproxy --check=alive',
BREAKS HERE
-    release           => $lsbdistcodename'-backports',
BREAKS HERE
-    notice("Classification for ${trusted[certname]}: ${classifier::inspect($_result)}")
BREAKS HERE
-  $owner             = $::icinga2::params::user
-  $group             = $::icinga2::params::group
-  $node_name         = $::icinga2::_constants['NodeName']
-  $conf_dir          = $::icinga2::params::conf_dir
-  $ssl_dir           = "${::icinga2::params::pki_dir}/ido-mysql"
-  $ido_mysql_package = $::icinga2::params::ido_mysql_package
-  $manage_package    = $::icinga2::manage_package
-  $_ssl_key_mode     = $::osfamily ? {
-      command => "mysql -h '${host}' -u '${user}' -p'${password}' '${database}' < '/usr/share/icinga2-ido-mysql/schema/mysql.sql'",
BREAKS HERE
-    config_hash => {
-      'root_password'  => $mysql_root_password,
-      'default_engine' => 'InnoDB',
-      'bind_address'   => '127.0.0.1',
BREAKS HERE
-  $baseurl = 'http://packages.esl.org/esl/1.0/centos',
BREAKS HERE
-    preserve_fqdn   => true,
-    server    => 'logging.cluster',
-    log_local => true,
BREAKS HERE
-# - $search_thread_pool_executors: number of executors for search actions on
-#       each node.
-    Optional[Integer] $search_thread_pool_executors          = undef,
BREAKS HERE
-  
-        source => 'puppet:///modules/ldap/reset-password',
-}
BREAKS HERE
-)
-
-  exec { "chkconfig dbora":
-    command        => "chkconfig --add dbora",
-    require        => File["/etc/init.d/dbora"],
-    user           => 'root',
-    unless         => "chkconfig | /bin/grep 'dbora'",
BREAKS HERE
-                'eqiad' => { 'misc_web' => '208.80.154.241', 'misc_web6' => '2620:0:861:ed1a::11' },
BREAKS HERE
-		'' => $fqdn, 
-		'fqdn' => $fqdn, 
-	@@file { "munin_node_${name}": path => "${NODESDIR}/$name",
-	@@file { "munin_snmp_${name}": path => "${NODESDIR}/$name",
-	err("munin port: $munin_port_real" )
-	err("munin host: $munin_host_real" )
-			require => Package["munin-node"],
-	munin::register { $munin_host_real: }
BREAKS HERE
-$commentlinks = [ { name => 'launchpad',
-                  link => 'https://code.launchpad.net/bugs/$2' } ]
BREAKS HERE
-      
BREAKS HERE
-        http_port  => '8080',
-        prefix     => '/',
-        http_port        => '8080',
-        prefix           => '/',
BREAKS HERE
-
-  $engine_life_check_timeout     = '2'
BREAKS HERE
-        changes => $::nfs::client_idmapd_setting,
-          context => "/files/${::nfs::idmapd_file}/General",
-          changes => ["set Domain ${::nfs::nfs_v4_idmap_domain}"];
-
BREAKS HERE
-        ensure => absent,
-        ensure => absent,
BREAKS HERE
-#  file { '/etc/icinga2/icinga2.conf':
BREAKS HERE
-        ensure => directory,
-        owner  => $owner,
-        group  => $group,
-        mode   => '0755',
BREAKS HERE
-    content => template('govuk/node/s_asset_base/process-uploaded-attachments.sh'),
-    content => template('govuk/node/s_asset_base/copy-attachments.sh'),
-      content => template('govuk/node/s_asset_base/s3cfg'),
BREAKS HERE
-
BREAKS HERE
-  service { ${title}:
BREAKS HERE
-        require => Class['snapshot::wikidatadumps::common'],
BREAKS HERE
-  host           => $vip,
-  port           => $es_port,
-  index_template => $kibana_index,
-  require        => Haproxy_backend_status['elasticsearch'],
BREAKS HERE
-  $zanata_wildfly_version = '',
-    zanata_wildfly_version      => $wildfly_version,
BREAKS HERE
-        $includes = ['openldap', 'pam', 'nss', 'sudo', 'utils']
BREAKS HERE
-  include nfs::server::debian::install,
-    nfs::server::debian::configure,
-    nfs::server::debian::service
-
-  Class['nfs::server::debian::install']
-    -> Class['nfs::server::debian::configure']
-    -> Class['nfs::server::debian::service']
-
-}
-
-class nfs::server::debian::install {
-  package {
-    'nfs-kernel-server':
-}
-class nfs::server::debian::configure {
-
-}
-
-class nfs::server::debian::service {
-        subscribe => [ Concat['/etc/exports'], Augeas['/etc/idmapd.conf', '/etc/default/nfs-common'] ],
-        require   => Class['nfs::server::debian::configure']
-      'nfs-kernel-server':
-        ensure    => running,
-        subscribe => Concat['/etc/exports'], 
-        require   => Class['nfs::server::debian::configure']
BREAKS HERE
-        File[$::graphite::gr_storage_dir],
BREAKS HERE
-#   /etc/icinga2/pki on Linux and C:/ProgramData/icinga2/etc/icinga2/pki on Windows.
-#   /etc/icinga2/pki/NodeName.key on Linux
-#   C:/ProgramData/icinga2/etc/icinga2/pki/NodeName.key on Windows
-#   The Value of NodeName comes from the corresponding constant.
-#   /etc/icinga2/pki/NodeName.crt on Linux
-#   C:/ProgramData/icinga2/etc/icinga2/pki/NodeName.crt on Windows
-#   The Value of NodeName comes from the corresponding constant.
-#   /etc/icinga2/pki/ca.crt on Linux
-#   C:/ProgramData/icinga2/etc/icinga2/pki/ca.crt on Windows
-  Optional[Integer[1,65535]          $port                   = undef,
-  $node_name     = $::icinga2::_constants['NodeName']
-  $ssl_dir       = "${::icinga2::params::pki_dir}/influxdb"
-  # Set defaults for certificate stuff
-  if $ssl_key_path {
-    $_ssl_key_path = $ssl_key_path }
-  else {
-    $_ssl_key_path = "${ssl_dir}/${node_name}.key" }
-  if $ssl_cert_path {
-    $_ssl_cert_path = $ssl_cert_path }
-  else {
-    $_ssl_cert_path = "${ssl_dir}/${node_name}.crt" }
-  if $ssl_cacert_path {
-    $_ssl_cacert_path = $ssl_cacert_path }
-  else {
-    $_ssl_cacert_path = "${ssl_dir}/ca.crt" }
-
-    file { $ssl_dir:
-      ensure => directory,
-    }
-
BREAKS HERE
-    owner  => 'root'
BREAKS HERE
-            ensure => directory,
-            owner  => 'mcrouter',
-            group  => 'root',
-            mode   => '0750',
BREAKS HERE
-                description    => "Check the Netbox report(s) `${repname}` for fail status.",
BREAKS HERE
-  $description = '',
-  include 'yum'
-    name        => $name,
-    descr       => $description,
-    enabled     => $enabled,
-    gpgcheck    => $gpgcheck,
-    baseurl     => $baseurl,
-    mirrorlist  => $mirrorlist,
BREAKS HERE
-        value   => $draft_environment;
BREAKS HERE
-# Sets up a scap master (currently tin). 
BREAKS HERE
-  $status_path     = "${cache_dir}/status.dat",
-  $objects_path    = "${cache_dir}/objects.cache",
BREAKS HERE
-      pacemaker::resource::remote { $remote_short_node_names:
-        remote_address     => $remotes_hash[$title],
-        reconnect_interval => $remote_reconnect_interval,
-        op_params          => "monitor interval=${remote_monitor_interval}",
-        verify_on_create   => true,
-        tries              => $remote_tries,
-        try_sleep          => $remote_try_sleep,
BREAKS HERE
- ) {
BREAKS HERE
-  $release = '1.0.22',
BREAKS HERE
-    $clone_path = $::quarry::base::clone_path
BREAKS HERE
-    notify      => Exec['upgrade npm'],
BREAKS HERE
-# [*manila_cephfsnative_enable*]
-#   (Optional) Enable the CephFS Native backend.
-#   Defaults to hiera('manila_cephfsnative_enable_backend', 'false')
-#
-# [*cephfs_handles_share_servers*]
-#   (Optional)
-#   Defaults to hiera('manila::backend::cephfsnative::driver_handles_share_servers', false)
-#
-# [*cephfs_backend_name*]
-#   (Optional)
-#   Defaults to hiera('manila::backend::cephfsnative::cephfs_backend_name')
-#
-# [*cephfs_conf_path*]
-#   (Optional)
-#   Defaults to hiera('manila::backend::cephfsnative::cephfs_conf_path')
-#
-# [*cephfs_auth_id*]
-#   (Optional)
-#   Defaults to hiera('manila::backend::cephfsnative::cephfs_auth_id')
-#
-# [*cephfs_cluster_name*]
-#   (Optional)
-#   Defaults to hiera('manila::backend::cephfsnative::cephfs_cluster_name')
-#
-# [*cephfs_enable_snapshots*]
-#   (Optional)
-#   Defaults to hiera('manila::backend::cephfsnative::cephfs_enable_snapshots')
-#
-  $manila_cephfsnative_enable       = hiera('manila::backend::cephfsnative::enable_backend', false),
-  $cephfs_handles_share_servers     = hiera('manila::backend::cephfsnative::driver_handles_share_servers'),
-  $cephfs_backend_name              = hiera('manila::backend::cephfsnative::cephfs_backend_name'),
-  $cephfs_conf_path                 = hiera('manila::backend::cephfsnative::cephfs_conf_path'),
-  $cephfs_auth_id                   = hiera('manila::backend::cephfsnative::cephfs_auth_id'),
-  $cephfs_cluster_name              = hiera('manila::backend::cephfsnative::cephfs_cluster_name'),
-  $cephfs_enable_snapshots          = hiera('manila::backend::cephfsnative::cephfs_enable_snapshots'),
-        driver_handles_share_servers => $cephfs_handles_share_servers,
-        cephfs_backend_name          => $cephfs_backend_name,
-        cephfs_conf_path             => $cephfs_conf_path,
-        cephfs_auth_id               => $cephfs_auth_id,
-        cephfs_cluster_name          => $cephfs_cluster_name,
-        cephfs_enable_snapshots      => $cephfs_enable_snapshots,
BREAKS HERE
-      if ("test -L /etc/init.d/${service}") {
-        fail "Service ${service} does not exists. Update will not be executed."
-      }  
-      
BREAKS HERE
-  asterisk::dotd::file {"${name}.conf":
BREAKS HERE
-Subproject commit 40d86396f3494b57dc12bd6a6078998bc8975a44
BREAKS HERE
-        ensure => 'present',
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0544',
-        source => 'puppet:///modules/puppetmaster/wmf-reimage'
BREAKS HERE
-    ensure => file,
-    notify => Service['nginx'],
-    before => Nginx::Hostconfig['easylist-downloads.adblockplus.org'],
-    source => 'puppet:///modules/filterserver/inc.easylist-downloads-txt'
-    ensure => file,
-    notify => Service['nginx'],
-    before => Nginx::Hostconfig['easylist-downloads.adblockplus.org'],
-    source => 'puppet:///modules/filterserver/inc.easylist-downloads-tpl'
BREAKS HERE
-class role::ci::master {
-    include ::jenkins
-    include ::contint::proxy_jenkins
BREAKS HERE
-  include adblockplus::puppet
BREAKS HERE
-# Class: pxe::menu::installentry
BREAKS HERE
-            ){
BREAKS HERE
-    require puppetmaster::naggen2
BREAKS HERE
-    [ 'paprefs', 'pavucontrol' ]:
BREAKS HERE
-        # notify  => Service['nutcracker'],
-        # notify  => Service['nutcracker'],
BREAKS HERE
-  class { 'rsyslog::client': server => 'logging.cluster', }
BREAKS HERE
-# In order to have no user accounts defined, you *must* have user_groups => ['none']
-# set via hiera or otherwise during class instantiation. This is a safety check to
-# prevent accidentally passing a blank list of users.
-    $user_groups
-  # Remove unmanaged UIDs >= 500 (users, not system accounts).
-  resources { 'user':
-    purge              => true,
-    unless_system_user => 500,
BREAKS HERE
-    db_provider           => $db_provider,
-    db_name               => $db_name,
-    db_user               => $db_user,
-    db_password           => $db_password,
-    redis_enabled         => $redis_enabled,
-    redis_port            => $redis_port,
-    redis_max_memory      => $redis_max_memory,
-    redis_bind            => $redis_bind,
-    redis_password        => $redis_password,
-    custom_theme_enabled  => false,
-    custom_theme_name     => 'os',
-    site_name             => $site_name,
-    askbot_debug          => true,
-    solr_enabled          => true,
-    site_ssl_enabled      => true,
-    site_ssl_cert_file    => '/etc/ssl/certs/ssl-cert-snakeoil.pem',
-    site_ssl_key_file     => '/etc/ssl/private/ssl-cert-snakeoil.key',
BREAKS HERE
-    $zuul_url = 'http://integration.wikimedia.org/zuul/git',
BREAKS HERE
-    ensure => '8:6.7.7.10-6ubuntu3.3',
BREAKS HERE
-    path        => ['/bin','/usr/bin'],
-    before => Exec['install_moodle'],
BREAKS HERE
-    icinga::monitor::elasticsearch::base_checks { $::hostname: }
BREAKS HERE
-        'python-st2client',
BREAKS HERE
-    # TODO(trozet) remove odl_features once ODL BZ: 9256, 9147 are fixed
-      odl_features => 'False';
BREAKS HERE
-        nrpe_command => "/usr/local/lib/nagios/plugins/check_puppetrun -w ${warninginterval} -c ${criticalinterval}",
BREAKS HERE
-        gitrepo            => $role::authdns::data::gitrepo,
-        monitoring         => false,
-        lvs_services       => hiera('lvs::configuration::lvs_services'),
-        discovery_services => hiera('discovery::services'),
BREAKS HERE
-    '/etc/default/clamav-milter':
-      source  => 'puppet:///modules/ocf_mail/spam/clamav/clamav-milter',
-      notify  => Service['clamav-milter'],
-      require => [Package['clamav-milter'], File['/var/spool/postfix/clamav']];
BREAKS HERE
-    if ( $version in ['11.2.0.1','12.1.0.1','12.1.0.2','11.2.0.3','11.2.0.4']){
-      exec { "install oracle database ${title}":
-        command   => "/bin/sh -c 'unset DISPLAY;${downloadDir}/${file}/database/runInstaller -silent -waitforcompletion -ignoreSysPrereqs -ignorePrereq -responseFile ${downloadDir}/db_install_${version}.rsp'",
-        creates   => "${oracleHome}/dbs",
-        timeout   => 0,
-        returns   => [6,0],
-        path      => $execPath,
-        user      => $user,
-        group     => $group_install,
-        cwd       => $oracleBase,
-        logoutput => true,
-        require   => [Oradb::Utils::Dborainst["database orainst ${version}"],
-      }
-
-      file { $oracleHome:
-        ensure  => directory,
-        recurse => false,
-        replace => false,
-        mode    => '0775',
-        owner   => $user,
-        group   => $group_install,
-        require => Exec["install oracle database ${title}"],
-      }
BREAKS HERE
-
-        package { 'shorewall':
-        file { "/etc/shorewall/shorewall.conf":
-                # use OS specific defaults, but use Default if no other is found
-                source => [
-                mode => 0644, owner => root, group => 0,
-        }
-        service{shorewall:
BREAKS HERE
-                Package['hadoop-yarn-nodemanager'],
BREAKS HERE
-      proxy_set_header X-Sendfile-Type X-Accel-Redirect;
-      proxy_set_header X-Accel-Mapping /var/apps/asset-manager/uploads/assets/=/raw/;
BREAKS HERE
-  $vpn_enabled        = $::is_vpn_enabled ? { 'clone_p_neutron-vpn-agent'=>true, default=>false }
BREAKS HERE
-    require ::role::ipmi::mgmt
BREAKS HERE
-  include ocf::packages::kubernetes
BREAKS HERE
-          command     => 'update-initramfs -u'
BREAKS HERE
-class profile::toolforge::grid::node::web::generic {
-        sourcedir => "${profile::toolforge::grid::base::collectors}/queues",
BREAKS HERE
-  include ::apache::ssl
-      before  => Apache::Vhost[$name],
-      before  => Apache::Vhost[$name],
-      before  => Apache::Vhost[$name],
BREAKS HERE
-        ensure  => file,
-        source  => 'puppet:///modules/phabricator/phab_epipe.py',
-        mode    => '0555',
-        owner   => mail,
-        group   => mail,
BREAKS HERE
-        rule   =>  "saddr ${labs_hosts_range} ${labs_hosts_range_v6} proto tcp dport (5672 56918) ACCEPT;",
BREAKS HERE
-        mode   => '0755',
BREAKS HERE
-    fail('Either $ossec_server_ip or $ossec_server_hostname must be defined.')
BREAKS HERE
-    vhost_protected   => false
BREAKS HERE
-    # include profile::kafka::broker
BREAKS HERE
-    include base::firewall
BREAKS HERE
-define oradb::autostartdatabase(
-                        $oracleHome      = undef,
-                        $dbName          = undef, 
-                        $user            = 'oracle',
-                      ) {
-
-   case $operatingsystem {
-     CentOS, RedHat, OracleLinux, Ubuntu, Debian, SLES: { 
-
-        $execPath        = '/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:'
-        
-        Exec { path      => $execPath,
-               logoutput => true,
-             }
-
-     }
-     default: { 
-        fail("Unrecognized operating system") 
-     }
-   }
-
-   file { "/etc/init.d/dbora" :
-      ensure  => present,
-      mode    => "0755",
-      owner   => 'root',
-      content => template("oradb/dbora.erb"),
-   }
-
-   exec { "set dbora ${dbName}:${oracleHome}":
-        command => "sed -i -e's/:N/:Y/g' /etc/oratab",
-        unless  => "/bin/grep '^${dbName}:${oracleHome}:Y' /etc/oratab",
-        require => File["/etc/init.d/dbora"],
-   }
-
-
-   exec { "chkconfig dbora":
-      command => "chkconfig --add dbora",
-      require => File["/etc/init.d/dbora"],
-      user    => 'root',
-      unless  => "chkconfig | /bin/grep 'dbora'",
-   }
-
-}  
BREAKS HERE
-  if !is_service_default($rabbit_hosts) and !is_array($rabbit_hosts) {
-    fail('Rabbit hosts should be an array')
-  }
-
-    $rabbit_hosts_orig = join($rabbit_hosts, ',')
BREAKS HERE
-    updates_file  => 'puppet:///modules/openstack_project/reprepro/puppetlabs-debs-pc1',
BREAKS HERE
-  $manage_service    = $asterisk::params::manage_service,
-  $confdir           = $asterisk::params::confdir,
-  $iax_options       = {},
-  $sip_options       = {},
-  $voicemail_options = {},
-  $package_name      = $asterisk::params::package_name,
-  $service_name      = $asterisk::params::service_name
BREAKS HERE
-      $nfsclient_service   = 'rpcbind'
-  service {'nfs-client':
BREAKS HERE
-      ensure => $ensure,
-      enable => $enable,
BREAKS HERE
-  $publicdir = '/opt/puppetlabs/server/data/packages/public/classroom',
BREAKS HERE
-    # provide custom Xsession script to populate desktop
-    # provide list of desktops
-    # provide printing and other notification script daemon
-    # provide script to tile multiple displays
-    # provide share directory with icons and wallpapers
-    # enforce list of possible xsessions
BREAKS HERE
-  $path     = "${log_dir}/icinga2.log",
BREAKS HERE
-    apt::ppa { 'ppa:ubuntu-cloud-archive/liberty-staging':
-      # it's false by default in 2.x series but true in 1.8.x
-      package_manage => false,
-    Exec['apt_update'] -> Package<||>
BREAKS HERE
-    libvirt_virt_type => $libvirt_virt_type,
-    libvirt_cpu_mode  => $libvirt_cpu_mode,
-    migration_support => true,
-    vncserver_listen  => '0.0.0.0',
BREAKS HERE
-  $group       = $rbenv::deps::group,
-) inherits rbenv::deps {
-  include rbenv::deps
BREAKS HERE
-            source  => "puppet:///private/misc/frontend-hooks.inc.vcl"
BREAKS HERE
-# 	 The "execute" script method takes care of executing the notification.
-#    The default template "plugin-notification-command" which is imported into
-#    all CheckCommand objects takes care of this setting.
-  Array                                $import                   = ['plugin-notification-command'],
BREAKS HERE
-  package { 'clamav':
-    ensure => '0.97.5',
-    'development' => "/opt/clamav/bin/clamscan",
-    default       => "/opt/clamav/bin/clamdscan",
BREAKS HERE
-      content => "# Empty site.pp required (#1708)\n",
BREAKS HERE
-  if ! defined(Package['python-launchpadlib']) {
-    package { 'python-launchpadlib':
-      ensure => present,
-    }
-  }
-  package { 'python-cheetah':
-    ensure => present,
-  }
BREAKS HERE
-  include ::stdlib
-
-      'stage'             => 'setup',
-      'stage'             => 'runtime',
BREAKS HERE
-    service {'pmacctd':
BREAKS HERE
-rate_limit46 \"<%=@name%>\" <%=@rate_limit_seconds%> <%=@rate_limit_hitcount%> -A <%=chain%>-input -p <%=proto%> -m <%=proto%> --dport <%=port%><% if @source -%> -s <%=source%><% end -%>
BREAKS HERE
-    mode    => '0700',
BREAKS HERE
-    'NOTSET' => ${title},
-    default  => ${vhost},
BREAKS HERE
-      { command => "sleep $((\$(od -A n -t d -N 3 /dev/urandom) % 86400)) && ${::ceilometer::params::expirer_command}" }
BREAKS HERE
-  $groups         = [],
-  validate_array($import)
-  if $display_name { validate_string ($display_name) }
-  if $groups { validate_array ($groups) }
-    'groups'        => $groups,
BREAKS HERE
-  include nfs::install
-
-
-}
-
-class nfs::install {
-
-  case $::operatingsystem {
-
-    'ubuntu', 'debian': {
-
-      ensure_resource( 'package', 'nfs-kernel-server', { 'ensure' => 'installed' } )
-      #ensure_resource( 'package', 'portmap',           { 'ensure' => 'installed' } )
-      ensure_resource( 'package', 'nfs-common',        { 'ensure' => 'installed' } )
-      ensure_resource( 'package', 'nfs4-acl-tools',    { 'ensure' => 'installed' } )
-    }
-    'redhat', 'centos', 'sles': {
-      ensure_resource( 'package', 'nfs-utils',        { 'ensure' => 'installed' } )
-      ensure_resource( 'package', 'rpcbind',          { 'ensure' => 'installed' } )
-      ensure_resource( 'package', 'nfs4-acl-tools',   { 'ensure' => 'installed' } )
-    }
-    default: {
-      fail("Not tested on $operatingsystem")
-    }
-
-  }
-
-}
-
-class nfs::configure::nfs_v4::enabled ( $nfs_v4_idmap_domain = $nfs::params::nfs_v4_idmap_domain ) {
-
-  case $::operatingsystem {
-
-    'ubuntu', 'debian': {
-
-      augeas {
-        '/etc/default/nfs-common':
-          context => '/files/etc/default/nfs-common',
-          changes => [ 'set NEED_IDMAPD yes', ],
-          notify  => Service['nfs-kernel-server', 'idmapd' ];
-        '/etc/idmapd.conf':
-          context => '/files/etc/idmapd.conf/General',
-          lens    => 'Puppet.lns',
-          incl    => '/etc/idmapd.conf',
-          changes => ["set Domain $nfs_v4_idmap_domain"],
-          notify  => Service['nfs-kernel-server', 'idmapd' ]
-      }
-
-      service {
-        'idmapd':
-          ensure => running,
-          notify => Service['nfs-kernel-server']
-      }
-    } 'redhat', 'centos', 'sles': {
-
-      augeas {
-        '/etc/idmapd.conf':
-          context => '/files/etc/idmapd.conf/General',
-          lens    => 'Puppet.lns',
-          incl    => '/etc/idmapd.conf',
-          changes => ["set Domain $nfs_v4_idmap_domain"],
-          notify  => Service['nfs' ]
-      }
-    }
-    default: {
-      fail("Not tested on $operatingsystem")
-    }
-  }
-
-}
-
-class nfs::configure::nfs_v4::disabled {
-
-  case $::operatingsystem {
-    'ubuntu', 'debian': {
-      service {
-        'idmapd':
-          ensure => stopped,
-      }
-    }
-  }
-}
-
-
-define nfs::mkdir() {
-
-  # Nasty ass hax to allow several levels of directories
-  exec { "mkdir_recurse_${name}":
-    path    => [ '/bin', '/usr/bin' ],
-    command => "mkdir -p ${name}",
-    unless  => "test -d ${name}",
-  }
-
-  file {
-    "${name}":
-      ensure  => directory,
-      require => Exec["mkdir_recurse_${name}"]
-  }
-
BREAKS HERE
-        content => ini($config),
BREAKS HERE
-    tidy { "/var/lock":
-      age => "2d",
-      recurse => 1,
-      matches => [ "yum-cron.lock" ],
-      rmdirs => true,
-      type => ctime,
-    }
-
-
BREAKS HERE
-  ::govuk_containers::elasticsearch { 'primary':
-    ensure             => $ensure,
-    image_version      => $version,
-    elasticsearch_port => $port,
BREAKS HERE
-  Class['puppi::is_installed'] -> Puppi::Run[$name]
BREAKS HERE
-    mon              => '09:30-17:30',
-    tue              => '09:30-17:30',
-    wed              => '09:30-17:30',
-    thu              => '09:30-17:30',
-    fri              => '09:30-17:30',
-    mon              => '00:00-09:30,17:30-24:00',
-    tue              => '00:00-09:30,17:30-24:00',
-    wed              => '00:00-09:30,17:30-24:00',
-    thu              => '00:00-09:30,17:30-24:00',
-    fri              => '00:00-09:30,17:30-24:00',
BREAKS HERE
-  $release = '1.0.5',
BREAKS HERE
-    $ensure=hiera('ntp::daemon::ensure', 'absent') {
BREAKS HERE
-class pxe {
-	include pxe::params
-	#include pxe::centos
-
-	include apache
-
-	$tftp_root = $pxe::params::tftp_root
-	$ks_root   = $pxe::params::ks_root
-		"tftp-server":	ensure => installed;
-			source	=> "puppet:///modules/pxe/tftp_xinetd";
-		"${tftp_root}": ensure => directory, owner => root, group => root, mode => 755;
-		"${tftp_root}/pxelinux.0": ensure => directory, owner => root, group => root, mode => 755,
-			source => "/usr/lib/syslinux/pxelinux.0";
-		"${tftp_root}/menu.c32": ensure => directory, owner => root, group => root, mode => 755,
-			source => "/usr/lib/syslinux/menu.c32";
-		"${tftp_root}/memdisk": ensure => directory, owner => root, group => root, mode => 755,
-			source => "/usr/lib/syslinux/memdisk";
-		"${tftp_root}/mboot.c32": ensure => directory, owner => root, group => root, mode => 755,
-			source => "/usr/lib/syslinux/mboot.c32";
-		"${tftp_root}/chain.c32": ensure => directory, owner => root, group => root, mode => 755,
-			source => "/usr/lib/syslinux/chain.c32";
-		#"${tftp_root}/pxelinux.cfg": ensure => directory, owner => root, group => root, mode => 755;
-		"${tftp_root}/images": ensure => directory, owner => root, group => root, mode => 755;
-		#"${ks_root}": ensure => directory, owner => root, group => root, mode => 755;
-	$dirs = [
-		"${tftp_root}/images/centos",
-		"${tftp_root}/images/centos/i386",
-		"${tftp_root}/images/centos/x86_64",
-		"${tftp_root}/images/ubuntu",
-		"${tftp_root}/images/ubuntu/i386",
-		"${tftp_root}/images/ubuntu/amd64",
-	]
-	
-	file { $dirs: ensure => directory, owner => root, group => root, mode => 755; }
-	
-	pxe::centos { 
-#		"centos_i386_4.8":
-#			ver => "4.8";
-#		"centos_x86_64_4.8":
-#			ver => "4.8";
-		"centos_i386_5.5":
-			arch => "i386",
-			ver => "5.5";
-		"centos_x86_64_5.5":
-			arch => "x86_64",
-			ver => "5.5";
-	}
-    
-    pxe::ubuntu {
-        "ubuntu lucid i386":
-            arch => "i386",
-            ver => "lucid";
-        "ubuntu lucid amd64":
-            arch => "amd64",
-            ver => "lucid";
-    }
BREAKS HERE
-        extra_auth_rules => template('profile/openstack/base/puppetmaster/extra_auth_rules.conf.erb'),
BREAKS HERE
-        ensure   => $ensure == 'present',
BREAKS HERE
-    haproxy::balancermember { "horizon_${ip}_${server}":
BREAKS HERE
-
BREAKS HERE
-            unless  => "git clean -df & git checkout . && git diff HEAD..${git_tag} --exit-code",
BREAKS HERE
-    baseurl        => 'http://repo.zabbix.com/zabbix/2.2/rhel/$releasever/$basearch/',
BREAKS HERE
-    # HPCloud uses dhclient; tell dhclient to use our nameserver instead.
-    exec { '/usr/bin/printf "\nsupersede domain-name-servers 127.0.0.1;\n" >> /etc/dhcp/dhclient-eth0.conf':
-        unless => '/bin/grep -q "supersede domain-name-servers" /etc/dhcp/dhclient-eth0.conf'
BREAKS HERE
-    $defaults = {
-      'enabled'  => '1',
-      'gpgcheck' => '1',
-    }
BREAKS HERE
-#  Defaults to [ 'http-request 10s', 'queue 1m', 'connect 10s', 'client 1m', 'server 1m', 'check 10s' ]
-  $haproxy_default_timeout     = [ 'http-request 10s', 'queue 1m', 'connect 10s', 'client 1m', 'server 1m', 'check 10s' ],
BREAKS HERE
-# FIXME: This class needs better documentation as per https://docs.puppetlabs.com/guides/style_guide.html#puppet-doc
-class govuk::node::s_bouncer inherits govuk::node::s_base {
BREAKS HERE
-        favicon  => '//wikitech.wikimedia.org/static/favicon/wikitech.ico',
-
-    file { '/var/www/error/errorpage.html':
-        ensure  => file,
-        content => template('dynamicproxy/errorpage.erb'),
-        owner   => 'www-data',
-        group   => 'www-data',
-        mode    => '0444',
-        require => [File['/var/www/error'],
-                    File['/var/www/error/labs-logo.png'],
-                    File['/var/www/error/labs-logo-2x.png']
-    file { '/var/www/error/banned.html':
-        ensure  => file,
-        content => template('dynamicproxy/banned.erb'),
-        owner   => 'www-data',
-        group   => 'www-data',
-        mode    => '0444',
-        require => [File['/var/www/error'],
-                    File['/var/www/error/labs-logo.png'],
-                    File['/var/www/error/labs-logo-2x.png']
BREAKS HERE
-  package { "iproute": ensure => installed }
BREAKS HERE
-  $ssl_enabled       = false
-  # Telemetry is broken on Ubuntu as usual.
-  # Aodh-API doesn't start, they're updating the package.
-  $telemetry_enabled = false
-  $ssl_enabled       = true
-  $telemetry_enabled = true
-if $telemetry_enabled {
-  include ::openstack_integration::ceilometer
-  include ::openstack_integration::aodh
-  include ::openstack_integration::gnocchi
-}
-  gnocchi    => $telemetry_enabled,
-  ceilometer => $telemetry_enabled,
-  aodh       => $telemetry_enabled,
BREAKS HERE
-    include beta::autoupdater
BREAKS HERE
-    ensure   => '2.1.0.0',
BREAKS HERE
-    if (hiera('varnish_version4', false)) {
-        # Use v4 version of varnishstatsd
-        $varnish4_python_suffix = '4'
-    } else {
-        $varnish4_python_suffix = ''
-    }
-
-            source  => "puppet:///modules/varnish/varnishstatsd${varnish4_python_suffix}",
BREAKS HERE
-          if versioncmp($majdistrelease, 6) >= 0 {
BREAKS HERE
-        require => [
-            Service['grafana-server'],
-            Package['python-sqlalchemy'],
-        ],
-        require => File['/usr/local/sbin/grafana_create_anon_user'],
BREAKS HERE
-  $port_fetch_method      = 'svn',
-  $cron_enable            = false,
-  $cron_always_mail       = false,
-  $cron_interval          = {minute => 0, hour => 22, monthday => '*', month => '*', week => '*'},
-  # NOTE: cron_enable, cron_interval and port_fetch_method
-  # are is deprecated and will eventually default to true.
-  # portstree management has moved to poudriere::portstree
-  if $cron_enable == true {
-    notice('cron_enable, cron_interval and port_fetch_method on class poudriere is deprecated, define seperately poudriere::portstree')
-  }
-
-  # Create default portstree
-  poudriere::portstree { 'default':
-    fetch_method     => $port_fetch_method,
-    cron_enable      => $cron_enable,
-    cron_always_mail => $cron_always_mail,
-    cron_interval    => $cron_interval,
-  }
-
BREAKS HERE
-    iptables_public_tcp_ports => [22, 80, 4040],
BREAKS HERE
-        port   => 23,
BREAKS HERE
-  $memcached_ips                  = hiera('memcached_node_ips')
BREAKS HERE
-    vip => 'lb-kubernetes',
-  } ->
-    options => {
-      'default_backend' => 'kubernetes-backend',
-      'redirect'        => 'scheme https code 301 if !{ ssl_fc }',
-    };
BREAKS HERE
-      replace => false, # the puppetfactory hook must be able to update this list!
BREAKS HERE
-    command => '/usr/bin/php -q /usr/share/cacti/cli/import_template.php \
-                  --filename=/var/lib/cacti/linux_host.xml \
-                  --with-template-rras',
BREAKS HERE
-        ensure => present,
-        gid    => 'kubeproxy',
-        shell  => '/bin/false',
-        home   => '/nonexistent',
-        system => true,
-    # Trusty's python-requests package is buggy
BREAKS HERE
-
-    $codedir = $::aio_agent_version ? {
-      undef   => 'C:/ProgramData/PuppetLabs/puppet/etc/modules',
-      default => 'C:/ProgramData/PuppetLabs/code',
-    }
-  # blerg
-  $puppetserver_gem_provider = $::aio_agent_version ? {
-      undef   => pe_puppetserver_gem,
-      default => puppetserver_gem,
-    }
-
-  $publicdir = $::aio_agent_version ? {
-    undef   => '/opt/puppet/packages/public/classroom',
-    default => '/opt/puppetlabs/server/data/packages/public/classroom',
-  }
-    if versioncmp(pick($::pe_server_version, $::pe_version), '3.8.0') < 0 {
-    if $::classroom_vm_release and versioncmp($::classroom_vm_release, '2.25') < 0 {
-    if $::classroom_vm_release and versioncmp($::classroom_vm_release, '2.17') < 0 {
BREAKS HERE
-  include apache
-  apache::vhost { $vhost_name:
-  a2mod { 'rewrite':
-  a2mod { 'proxy':
-  a2mod { 'proxy_http':
-  if ! defined(A2mod['cgi']) {
-    a2mod { 'cgi':
-      before  => Apache::Vhost[$vhost_name],
-      before  => Apache::Vhost[$vhost_name],
-      before  => Apache::Vhost[$vhost_name],
BREAKS HERE
-    if os_version('ubuntu >= trusty') {
BREAKS HERE
-        $service_unit_name = "varnishstatsd-default"
BREAKS HERE
-  $elasticsearch_nodes = [],
-  $elasticsearch_clients = [],
-  $sysadmins = []
-  $iptables_nodes_rule = regsubst ($elasticsearch_nodes, '^(.*)$', '-m state --state NEW -m tcp -p tcp --dport 9200:9400 -s \1 -j ACCEPT')
-  $iptables_clients_rule = regsubst ($elasticsearch_clients, '^(.*)$', '-m state --state NEW -m tcp -p tcp --dport 9200:9400 -s \1 -j ACCEPT')
-  $iptables_rule = flatten([$iptables_nodes_rule, $iptables_clients_rule])
-  class { 'openstack_project::server':
-    iptables_public_tcp_ports => [22],
-    iptables_rules6           => $iptables_rule,
-    iptables_rules4           => $iptables_rule,
-    sysadmins                 => $sysadmins,
-  }
-
BREAKS HERE
-    # panko, gnocchi and vitrage are not packaged yet in debian/ubuntu
-    # https://bugs.launchpad.net/cloud-archive/+bug/1535740
-  # NOTE(sileht):zTelemetry autoscaling tempest tests can't renew token, so we
BREAKS HERE
-  $table,
BREAKS HERE
-  # FIXME: https://www.pivotaltracker.com/story/show/44377213
-  # See `modules/router/templates/base.conf.erb` before upgrading.
BREAKS HERE
-      'dfs.webhdfs.enabled' => true,
BREAKS HERE
-# [*rabbit_host*]
-#   (Optional) The RabbitMQ broker address where a single node is used.
-#   (string value)
-#   Defaults to $::os_service_default
-#
-# [*rabbit_port*]
-#   (Optional) The RabbitMQ broker port where a single node is used.
-#   (port value)
-#   Defaults to $::os_service_default
-#
-# [*rabbit_hosts*]
-#   (Optional) RabbitMQ HA cluster host:port pairs. (array value)
-#   Defaults to $::os_service_default
-#
-# [*rabbit_userid*]
-#   (Optional) The RabbitMQ userid. (string value)
-#   Defaults to $::os_service_default
-#
-# [*rabbit_password*]
-#   (Optional) The RabbitMQ password. (string value)
-#   Defaults to $::os_service_default
-#
-# [*rabbit_virtual_host*]
-#   (Optional) The RabbitMQ virtual host. (string value)
-#   Defaults to $::os_service_default
-#
-  $rabbit_host                          = $::os_service_default,
-  $rabbit_port                          = $::os_service_default,
-  $rabbit_hosts                         = $::os_service_default,
-  $rabbit_userid                        = $::os_service_default,
-  $rabbit_password                      = $::os_service_default,
-  $rabbit_virtual_host                  = $::os_service_default,
-  if !is_service_default($rabbit_hosts) or !is_service_default($rabbit_host) {
-    warning("The oslo_messaging rabbit_host, rabbit_hosts, rabbit_port, rabbit_userid, \
-rabbit_password, rabbit_virtual_host parameters have been deprecated by the \
-[DEFAULT]\\transport_url. Please use oslo::messaging::default::transport_url instead.")
-  }
-
-  if !is_service_default($rabbit_hosts) {
-    $rabbit_hosts_orig = join(any2array($rabbit_hosts), ',')
-    if size($rabbit_hosts) > 1 and is_service_default($rabbit_ha_queues) {
-      $rabbit_ha_queues_orig = true
-    } else {
-      $rabbit_ha_queues_orig = $rabbit_ha_queues
-    }
-    # Do not set rabbit_port and rabbit_host
-    $rabbit_port_orig = $::os_service_default
-    $rabbit_host_orig = $::os_service_default
-  } else {
-    $rabbit_port_orig      = $rabbit_port
-    $rabbit_host_orig      = $rabbit_host
-    $rabbit_ha_queues_orig = $rabbit_ha_queues
-    # Do not set rabbit_hosts if host or port or both are set
-    $rabbit_hosts_orig     = $::os_service_default
-  }
-
-                      'oslo_messaging_rabbit/rabbit_password' => { value => $rabbit_password, secret => true },
-                      'oslo_messaging_rabbit/rabbit_userid' => { value => $rabbit_userid },
-                      'oslo_messaging_rabbit/rabbit_virtual_host' => { value => $rabbit_virtual_host },
-                      'oslo_messaging_rabbit/rabbit_hosts' => { value => $rabbit_hosts_orig },
-                      'oslo_messaging_rabbit/rabbit_port' => { value => $rabbit_port_orig },
-                      'oslo_messaging_rabbit/rabbit_host' => { value => $rabbit_host_orig },
-                      'oslo_messaging_rabbit/rabbit_ha_queues' => { value => $rabbit_ha_queues_orig },
BREAKS HERE
-  class { 'openstack_project::template':
-    iptables_public_tcp_ports => [],
-  }
BREAKS HERE
-            warning         => '921000000',  # 90% of the Heap used
-            critical        => '972000000',  # 95% of the Heap used
BREAKS HERE
-    $fqdnregex = "s/${::ec2_instance_id}.${::domain}/_FQDN_/g"
BREAKS HERE
-  $gw_control_ips     = '138.201.16.163',     # Control ip addr
BREAKS HERE
-            options     => ['ro', 'soft', 'timeo=300', 'retrans=3'],
BREAKS HERE
-      statsd_metric => "${::fqdn_underscore}.nginx_logs.http_%{@fields.status}";
BREAKS HERE
-                slow_query_threshold => 10 * 1000,  # milliseconds
BREAKS HERE
-        match => '(<p>|[\\s]+)(I?[0-9a-f]{7,40})(</p>|[\\s.]+)',
BREAKS HERE
-        $name, $::initsystem, $systemd, $upstart, $sysvinit, $strict)
-            'systemd'  => "/lib/systemd/system/${name}.service",
-            'upstart'  => "/etc/init/${name}.conf",
-            default    => "/etc/init.d/${name}"
BREAKS HERE
-  $version                   = params_lookup( 'version' )
-
BREAKS HERE
-Subproject commit b62d2f4589abf438fa6eadd403a9417f5cda0ef5
BREAKS HERE
-    require_package('python-bootstrap-vz')
-    require_package('debootstrap')
BREAKS HERE
-            file { $path:
-        } else {
-            file { $path:
-                ensure  => $ensure,
-                content => $content,
-                mode    => $i_mode,
-                owner   => 'root',
-                group   => 'root',
-            }
BREAKS HERE
-    api_bind_address                     => $::openstack_integration::config::host,
-    sync_db_api                          => true,
-    service_name                         => 'httpd',
-    nova_metadata_wsgi_enabled           => true,
BREAKS HERE
-        # Set a unicode capable locale to avoid "SERVER: invalid byte sequence in
-        # US-ASCII" errors when puppetmaster is started with LANG that doesn't
-        # support non-ASCII encoding.
-        # See <https://tickets.puppetlabs.com/browse/PUP-1386#comment-62325>
-        apache::env { 'use-utf-locale':
-            ensure => present,
-            vars   => {
-                'LANG' => 'en_US.UTF-8'
-            },
-        }
BREAKS HERE
-    $workdir = '/mnt/jenkins-workspace/puppet-compiler',
-    $homedir = '/mnt/home/jenkins-deploy',
BREAKS HERE
-  concat {'/etc/exports':
BREAKS HERE
-    mail_address                 => 'zd-alrt-normal@digital.cabinet-office.gov.uk',
BREAKS HERE
-
-            # even with NOTRACK enabled, conntrack will still keep track
-            # connections in TIME_WAIT, thus lower the respective timeout
-            'net.netfilter.nf_conntrack_tcp_timeout_time_wait' => 3,
BREAKS HERE
-    # for 'forking' checks (i.e. all but mdadm, which essentially just reads
-    # kernel memory from /proc/mdstat) check every $check_interval
-    # minutes instead of default of one minute. If the check is non-OK, retry
-    # every $retry_interval.
-    $check_interval = 10
-    $retry_interval = 5
-
BREAKS HERE
-  # Custom puppetmaster
-  # needed due to a PUP-4072
-  # more information in https://github.com/theforeman/puppet-foreman/commit/5fe3239da0c6fbac76172f61042a69ab3a7eb4e6
BREAKS HERE
-    ensure      => present,
-    command     => "/bin/echo -e \"\$(/bin/date): geoipupdate downloading MaxMind .dat files into ${data_directory}\" >> ${geoipupdate_log} && ${geoipupdate_command} &>> /var/log/geoipupdate.log",
-    user        => root,
-    weekday     => 0,
-    hour        => 3,
-    minute      => 30,
-    require     => [
BREAKS HERE
-      $agent_chocolatey_enabled = true
-      $agent_download_url       = 'http://www.ossec.net/files'
BREAKS HERE
-  $smb_template_config_path         = '$state_path/smb.conf',
-  $volume_name_template             = 'manila-share-%s',
-  $volume_snapshot_name_template    = 'manila-snapshot-%s',
-  $share_mount_path                 = '/shares',
-  $max_time_to_create_volume        = 180,
-  $max_time_to_attach               = 120,
-  $service_instance_smb_config_path = '$share_mount_path/smb.conf',
-  $share_volume_fstype              = 'ext4',
-  $cinder_volume_type               = undef,
-    driver_handles_share_servers     => $driver_handles_share_servers,
-    smb_template_config_path         => $smb_template_config_path,
-    volume_name_template             => $volume_name_template,
-    volume_snapshot_name_template    => $volume_snapshot_name_template,
-    share_mount_path                 => $share_mount_path,
-    max_time_to_create_volume        => $max_time_to_create_volume,
-    max_time_to_attach               => $max_time_to_attach,
-    service_instance_smb_config_path => $service_instance_smb_config_path,
-    share_helpers                    => $share_helpers,
-    share_volume_fstype              => $share_volume_fstype,
-    cinder_volume_type               => $cinder_volume_type,
BREAKS HERE
-    $yaml_template                    = "${module}/cassandra.yaml.erb",
-    $env_template                     = "${module}/cassandra-env.sh.erb",
-    $rackdc_template                  = "${module}/cassandra-rackdc.properties.erb",
-    validate_string($initial_token)
BREAKS HERE
-    $pools = hiera('profile::nutcracker::pools')
-    class { '::nutcracker::monitoring': }
BREAKS HERE
-      owner  => $carbon_user,
-      path   => $::graphite::gr_local_data_dir;
BREAKS HERE
-    debug                         => true,
BREAKS HERE
-        $command = "dbca -silent -createDatabase -templateName ${templatename} -gdbname ${dbName} -responseFile NO_VALUE -sysPassword ${sysPassword} -systemPassword ${systemPassword}"
BREAKS HERE
-#   (Optional) The OVN database virtual IP to be managed by the pacemaker.
-    if is_ipv6_address($ovn_dbs_vip) {
-      $netmask = '128'
-      $nic     = interface_for_ip($ovn_dbs_vip)
-    } else {
-      $netmask = '32'
-      $nic     = ''
-    }
-
-    pacemaker::resource::ip { "${ovndb_vip_resource_name}":
-      ip_address   => $ovn_dbs_vip,
-      cidr_netmask => $netmask,
-      nic          => $nic,
-      tries        => $pcs_tries,
-    }
-
-    pacemaker::constraint::order { "${ovndb_vip_resource_name}-then-${ovndb_servers_resource_name}":
-      first_resource    => "${ovndb_vip_resource_name}",
-      second_resource   => "${ovndb_servers_resource_name}-master",
-      first_action      => 'start',
-      second_action     => 'start',
-      constraint_params => 'kind=Mandatory',
-      tries             => $pcs_tries,
-    }
-
-    Pacemaker::Resource::Ip["${ovndb_vip_resource_name}"] ->
-      Pacemaker::Resource::Ocf["${ovndb_servers_resource_name}"] ->
-        Pacemaker::Constraint::Order["${ovndb_vip_resource_name}-then-${ovndb_servers_resource_name}"] ->
-          Pacemaker::Constraint::Colocation["${ovndb_vip_resource_name}-with-${ovndb_servers_resource_name}"]
BREAKS HERE
-    $interface = $title
-    file { '/usr/local/sbin/interface-rps':
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0555',
-        source  => 'puppet:///modules/interface/interface-rps.py',
-    }
BREAKS HERE
-      check_command       => "check_nrpe!check_file_age!\"-f ${log_dir}/cdn-govuk.log -c7200 -w3600\"",
-      check_command       => "check_nrpe!check_file_age!\"-f ${log_dir}/cdn-bouncer.log -c7200 -w3600\"",
BREAKS HERE
-      proxy_pass            => "http://puppetmaster_unicorn",
-    priority => 701,
BREAKS HERE
-#   Supported values are 'simple' and 'keystone'.
-#   Defaults to 'simple'
-  $gnocchi_auth_mode = 'simple',
BREAKS HERE
-            unless    => "/bin/grep -q '^drbd$' /etc/modules",
-            command   => '/bin/echo drbd >> /etc/modules',
-            unless    => "/bin/lsmod | /bin/grep -q '^drbd'",
-            command   => '/sbin/modprobe drbd',
-        unless    => "/bin/grep -q '^vhost_net$' /etc/modules",
-        command   => '/bin/echo vhost_net >> /etc/modules',
-        unless    => "/bin/lsmod | /bin/grep -q '^vhost_net'",
-        command   => '/sbin/modprobe vhost_net',
BREAKS HERE
-    require             => Icinga::Plugin['check_http_timeout_noncrit'],
BREAKS HERE
-  $uncat_cmd = 'elastic-recheck-uncategorized -d /opt/elastic-recheck/queries -t /usr/local/share/templates -o uncategorized-new.html && mv uncategorized-new.html uncategorized.html'
BREAKS HERE
-    $plugin_src = $ensure ? { "present" => $name, default => $ensure }
BREAKS HERE
-  if $allowed_hosts {
-    cinder::db::mysql::host_access { $allowed_hosts:
BREAKS HERE
-  if ! defined(Httpd::Mod['cgi']) {
-    httpd::mod { 'cgi':
BREAKS HERE
-    file { [ '/var/lib/librenms', '/var/lib/librenms/rrd' ]:
-        ensure  => directory,
-        owner   => 'librenms',
-        group   => 'librenms',
-        mode    => '0755',
-    }
-
-            'php5-json',
-        command => "${install_dir}/discovery.php -h all >> /dev/null 2>&1",
BREAKS HERE
-# [sql_connection]
-  if($database_connection =~ /mysql:\/\/\S+:\S+@\S+\/\S+/) {
-  } elsif($database_connection =~ /postgresql:\/\/\S+:\S+@\S+\/\S+/) {
-  } elsif($database_connection =~ /sqlite:\/\//) {
-    fail("Invalid db connection ${database_connection}")
BREAKS HERE
-      ip                        => $controller_virtual_ip,
BREAKS HERE
-  notify { "Manage Update = $manage_updates ; Method = $yum::update": }
-
BREAKS HERE
-# [*inifile*]
-# [*settings*]
-#   The hash having key => values pairs to change
BREAKS HERE
-  $sshkey_file = '/root/.ssh/id_rsa'
-
-  file { $sshkey_file :
-    ssh_id            => $sshkey_file,
-    ssh_id            => $sshkey_file,
BREAKS HERE
-          node     => $node_name,
BREAKS HERE
-        source => 'puppet:///modules/profile/mediawiki/php/nrpe_check_opcache.py',
BREAKS HERE
-    check_command       => 'check_nrpe!check_path_age!/opt/clamav/share/clamav/daily.cvd 2',
BREAKS HERE
-  $host_agent_collector            = $dynatrace::params::host_agent_collector,
BREAKS HERE
-        value  => 'ar, ast, ca, cs, da, de, en, es, et, eu, fi, fr, gl, he, hr, hu, ia, it, ja, ko, lt, nl, no, pl, pt, pt_BR, ro, ru, sk, sl, sr, sv, tr, uk, vi, zh_CN, zh_TW',
BREAKS HERE
-    file { '/srv/org/wikimedia/releases-header.html':
BREAKS HERE
-            refreshonly => true,
-            require     => File["/etc/ssl/localcerts/${title}.crt"],
BREAKS HERE
-# Sets up a collectd plugin to monitor RabbitMQ.
-#   The password to a user which can access monitoring information from RabbitMQ.
-  include collectd::plugin::python
-  @file { '/usr/lib/collectd/python/rabbitmq.py':
-    ensure => present,
-    source => 'puppet:///modules/collectd/usr/lib/collectd/python/rabbitmq.py',
-    tag    => 'collectd::plugin',
-    notify => File['/etc/collectd/conf.d/rabbitmq.conf'],
-  @file { '/usr/lib/collectd/python/rabbitmq.pyc':
-    ensure => undef,
-    tag    => 'collectd::plugin',
-    require => Class['collectd::plugin::python'],
BREAKS HERE
-  include apache
-  include apache::ssl
-  include apache::php
-  apache::vhost { $vhost_name:
-  a2mod { 'rewrite':
-  a2mod { 'proxy':
-  a2mod { 'proxy_http':
-      before  => Apache::Vhost[$vhost_name],
-      before  => Apache::Vhost[$vhost_name],
-      before  => Apache::Vhost[$vhost_name],
-      Apache::Vhost[$vhost_name],
-      Apache::Vhost[$vhost_name],
BREAKS HERE
-      storage_vnx_pool_name         => hiera('cinder::backend::emc_vnx::storage_vnx_pool_name', undef),
BREAKS HERE
-  file { "${powerdns::params::cfg_include_path}/${name}.conf":
BREAKS HERE
-# [*replicaset*]
-  $replicaset = $govuk_platform,
-    replicaset  => $replicaset,
BREAKS HERE
-}
BREAKS HERE
-    include requesttracker::plugins
BREAKS HERE
-    ssl      => $::openstack_integration::config::ssl,
-    ssl_key  => "/etc/keystone/ssl/private/${::fqdn}.pem",
-    ssl_cert => $::openstack_integration::params::cert_path,
-    workers  => 2,
BREAKS HERE
-  package { $real_package:
-    ensure  => $ensure,
-    require => Class['::php::packages'],
BREAKS HERE
-        nrpe_command => '/usr/local/lib/nagios/plugins/nrpe_check_opcache -w 50 -c g10',
BREAKS HERE
-    "${dashboard_directory}/${app_name}_dashboard.json":
BREAKS HERE
-    # lint:ignore:arrow_alignment
-        backend_regexp  => '^((mw1017|mw1099)\.eqiad\.wmnet|(mw2017|mw2099)\.codfw\.wmnet)',
-        backend_aliases => { '1' => 'mw1017.eqiad.wmnet' },
-    # lint:endignore
BREAKS HERE
-        unless    => 'chkconfig | /bin/grep \'dbora\'',
BREAKS HERE
-  include apache
-}
BREAKS HERE
-    $ceph_mirror = "${::ceph_mirror_host}/debian-jewel"
-    $ceph_mirror = "${::ceph_mirror_host}/ceph-deb-jewel"
-    ceph_mirror => $ceph_mirror,
BREAKS HERE
-    if os_version('debian >= jessie') {
-        file_line { 'enable_latency_monitor':
-            line  => 'latency-monitor-threshold 100',
-            match => '^latency-monitor-threshold',
-            path  => '/etc/redis/redis.conf',
-        }
BREAKS HERE
-        socket     => '/tmp/mysql.sock',
BREAKS HERE
-    $extra_updater_options = $poller_options + $fetch_constraints_options + $dump_options + [ '--entityNamespaces', '0,120,146' ]
BREAKS HERE
-    system::role { 'dnsrecursor':
-        ensure      => 'absent',
-        description => 'Recursive DNS server',
-    }
-
BREAKS HERE
-# Class to install logstash agent (shipper).
-# conf_template accepts path to agent config template.
BREAKS HERE
-    include ::base::firewall
BREAKS HERE
-        jump  => 'ACCEPT',
BREAKS HERE
-    $max_connections = 100,
BREAKS HERE
-  class { '::zuul::merger': }
-
-  file { '/etc/zuul/merger-logging.conf':
-    ensure => present,
-    source => 'puppet:///modules/openstack_project/zuul/merger-logging.conf',
-  }
BREAKS HERE
-	service { "munin":
BREAKS HERE
-    # The cron above attempts to get fresh data every hour, and a good fresh
-    # fetch of data has a 12H lifetime with the windows we're seeing from
-    # GlobalSign today.
-    # The crit/warn values of 18300 and 11100 correspond to "5h5m" and
-    # "3h5m", so those are basically warning if 3 updates in a row failed
-    # for a given cert, and critical if 5 updates in a row failed (at which
-    # point we have ~7h left to fix the situation before the validity window
-    $check_args = '-c 18300 -w 11100 -d /var/cache/ocsp -g "*.ocsp"'
BREAKS HERE
-  file { $::cinder::params::ceph_init_override:
-    ensure  => present,
-  }
-  file_line { 'set initscript env':
-    line    => $override_line,
-    path    => $::cinder::params::ceph_init_override,
-    notify  => Service['cinder-volume'],
-  }
BREAKS HERE
-    base::service_unit { 'nfs-exportd':
-        systemd        => systemd_template('nfs-exportd'),
-        service_params => {
-            enable => true,
-        },
-        require        => File['/usr/local/bin/nfs-exportd'],
BREAKS HERE
-   'root_bashrc_batffki':
-  # Define Firewall rules for services on bat interfaces, e.g. alfred
-  # introducing the "bat" chain
-  file {
-    '/etc/iptables.d/002-batman-chains':
-     ensure => file,
-     owner => 'root',
-     group => 'root',
-     mode => '0644',
-     content => "ip46tables -N bat-forward\nip46tables -N bat-input",
-     require => [File['/etc/iptables.d/']],
-  }
-
-
-  file {
-    '/etc/iptables.d/900-batman-DROP':
-     ensure => file,
-     owner => 'root',
-     group => 'root',
-     mode => '0644',
-     content => "ip46tables -A bat-forward -j DROP\nip46tables -A bat-input -j DROP",
-     require => [File['/etc/iptables.d/']],
-  }
-
BREAKS HERE
-        match => '(\\b[Bb]ug|[Ll][Pp]\\b)[ \\t#:]*(\\d+)',
-        match => '(\\b[Bb]lue[Pp]rint|[Bb][Pp]\\b)[ \\t#:]*([A-Za-z0-9\\-]+)',
BREAKS HERE
-  file { '/etc/apt/auth.conf.d/90ubuntu-advantage':
BREAKS HERE
-  # On CentOS, deploy Ceph using SIG repository and get rid of EPEL.
-  # https://wiki.centos.org/SpecialInterestGroup/Storage/
-  if $::operatingsystem == 'CentOS' {
-    $enable_sig  = true
-    $enable_epel = false
-  } else {
-    $enable_sig  = false
-    $enable_epel = true
-  }
-
-    ceph_mirror => pick($::ceph_mirror_host, 'http://mirror.centos.org/centos/7/storage/x86_64/ceph-jewel/'),
BREAKS HERE
-    notify => Class['::icinga2::service']
-  -> class { '::icinga2::repo': }
-    subscribe => Class['::icinga2::config']
BREAKS HERE
-# (Here are set the defaults, provide your custom variables externally)
-# (The default used is in the line with '')
-#          - This option, set as default, permits the use of the iptables::rule define
-#          - and many other funny things
-    $config = $iptables_config ? {
-        "file"  => "file",
-        default => "concat",
-    }
-    $block_policy = $iptables_block_policy ? {
-        "drop"    => "DROP",
-        "DROP"    => "DROP",
-        "reject"  => "REJECT --reject-with icmp-host-prohibited",
-        "REJECT"  => "REJECT --reject-with icmp-host-prohibited",
-        "accept"  => "ACCEPT",
-        "ACCEPT"  => "ACCEPT",
-        default   => "DROP",
-    }
-    $icmp_policy = $iptables_icmp_policy ? {
-        "drop"    => "-j DROP",
-        "DROP"    => "-j DROP",
-        "safe"    => "-m icmp --icmp-type ! echo-request -j ACCEPT",
-        "accept"  => "-j ACCEPT",
-        "ACCEPT"  => "-j ACCEPT",
-        default   => "-j ACCEPT",
-    }
-    $output_policy = $iptables_output_policy ? {
-        "drop"    => "drop",
-        "DROP"    => "drop",
-        default   => "accept",
-    }
-    $log = $iptables_log ? {
-        "all"     => "all",
-        "dropped" => "drop",
-        "none"    => "no",
-        "no"      => "no",
-        default   => "drop",
-    }
-    $log_level = $iptables_log_level ? {
-        ""      => "4",
-        default => $iptables_log_level,
-    }
-    $safe_ssh = $iptables_safe_ssh ? {
-        "no"    => "no",
-        "false" => "no",
-        false   => "no",
-        default => "yes",
-    }
-    $broadcast_policy = $iptables_broadcast_policy ? {
-        "drop"    => "drop",
-        "DROP"    => "drop",
-        default   => "accept",
-    }
-    $multicast_policy = $iptables_multicast_policy ? {
-        "drop"    => "drop",
-        "DROP"    => "drop",
-        default   => "accept",
-    }
-
-
-## EXTRA MODULE INTERNAL VARIABLES
-#(add here module specific internal variables)
-
-    $packagename = $operatingsystem ? {
-        default => "iptables",
-    }
-
-    $servicename = $operatingsystem ? {
-        debian  => "iptables-persistent",
-        ubuntu  => "iptables-persistent",
-        default => "iptables",
-    }
-
-    $hasstatus = $operatingsystem ? {
-        default => true,
-    }
-
-    $configfile = $operatingsystem ? {
-        debian  => "/etc/iptables/rules",
-        ubuntu  => "/etc/iptables/rules",
-        redhat  => "/etc/sysconfig/iptables",
-        centos  => "/etc/sysconfig/iptables",
-        default => "/etc/sysconfig/iptables",
-    }
-
-    $configfile_mode = $operatingsystem ? {
-        default => "640",
-    }
-
-    $configfile_owner = $operatingsystem ? {
-        default => "root",
-    }
-
-    $configfile_group = $operatingsystem ? {
-        default => "root",
-    }
-
-
-    ## FILE SERVING SOURCE
-    case $base_source {
-        '': {
-            $general_base_source = $puppetversion ? {
-                /(^0.25)/ => "puppet:///modules",
-                /(^0.)/   => "puppet://$servername",
-                default   => "puppet:///modules",
-            }
-        }
-        default: { $general_base_source=$base_source }
-    }
BREAKS HERE
-    $dkms_packages = [
-      'linux-headers-generic',
-    ]
-      ensure => present,
-      before => [
BREAKS HERE
-    tag          => ['classroom','master'],
-  Host <<| tag == 'classroom' |>>
BREAKS HERE
-    owner   => 'jenkins',
-    require => Package['jenkins'],
-    owner   => 'jenkins',
-    require => Package['jenkins'],
BREAKS HERE
-        require => User['zuul'],
BREAKS HERE
-    include passwords::mysql::wikimania_scholarships,
-        ::apache,
-        ::apache::mod::php5
BREAKS HERE
-    $port='80',
-    $admin_port='6083',
-    # FIXME: get rid of the $varnish_* below and update the templates
-    $varnish_port = $port
-    $varnish_admin_port = $admin_port
-    $varnish_storage = $storage
-    monitoring::service { "varnish http ${title}":
-        description   => "Varnish HTTP ${title}",
-        check_command => "check_http_varnish!varnishcheck!${port}"
BREAKS HERE
-      @@postgresql::server::pg_hba_rule { "barman ${::hostname} client access (replication)":
-        description => "barman ${::hostname} client access",
-    @@postgresql::server::pg_hba_rule { "barman ${::hostname} client access":
-      description => "barman ${::hostname} client access",
BREAKS HERE
-      true    => ['puppet-agent', 'puppet'],
-  $service_name = $deb_naio_package ? {
-    true    => 'puppet-agent',
-    default => 'puppet'
-  }
BREAKS HERE
-  java_home                           => '/usr/lib/jvm/java-7-openjdk-amd64/jre',
BREAKS HERE
-    if ( $gridType == 'CRS_SWONLY' and $stand_alone == true ) {
-      exec { 'Configuring Grid Infrastructure for a Stand-Alone Server':
-        command   => "${gridHome}/perl/bin/perl -I${gridHome}/perl/lib -I${gridHome}/crs/install ${gridHome}/crs/install/roothas.pl",
-        user      => 'root',
-        group     => 'root',
-        path      => $execPath,
-        cwd       => $gridBase,
-        logoutput => true,
-        require   => [Exec["run root.sh grid script ${title}"],
-                      File[$gridHome],],
BREAKS HERE
-
BREAKS HERE
-        creates     => "${libdir}/production/ssl/certs/${::fqdn}",
BREAKS HERE
-                owner   => 'root',
-                group   => 'root',
BREAKS HERE
-  exec { "set dbora ${db_name}:${oracle_home}":
-    require   => File["${dbora_location}/dbora"],
BREAKS HERE
-            'priority' => 2,
BREAKS HERE
-        onlyif  => "/usr/bin/test -n \"\$(/usr/bin/find ${store} -maxdepth 1 \\( -type d -or -type f -name hostkey-\\* \\) -newer /etc/ssh/ssh_known_hosts~)\"",
BREAKS HERE
-    }
-    else {
-    class { 'rsync::server': }
BREAKS HERE
-  $ensure  = present,
-  $user    = 'gerrit2',
-  $minute  = '*/30',
-  $logfile = '/var/log/jeepyb_gerritfetchremotes.log',
BREAKS HERE
-  username                    => 'jenkins',
-  password                    => 'secret',
BREAKS HERE
-    include ::planet::webserver,
-            planet::packages,
-            planet::dirs,
-            planet::user,
-            planet::index_site
BREAKS HERE
-        ensure          => $agent_package_version
BREAKS HERE
-  validate_string($path)
BREAKS HERE
-  Manila_config<||> ~> Service['manila-api']
-  Manila_api_paste_ini<||> ~> Service['manila-api']
-
-    Package['manila-api'] -> Service['manila-api']
-    require   => Package['manila'],
-
BREAKS HERE
-                '127.0.0.1:2103',
-                '127.0.0.1:2203',
-                '127.0.0.1:2303',
-                '127.0.0.1:2403',
-                '127.0.0.1:2503',
-                '127.0.0.1:2603',
-                '127.0.0.1:2703',
-                '127.0.0.1:2803',
BREAKS HERE
-			#$munin_node_service = "munin-node"
-			$munin_node_service = "munin"
BREAKS HERE
-    subscribe => Package[$::st2::params::st2_server_package],
BREAKS HERE
-        meta_params     => 'notify=true ordered=true interleave=true',
BREAKS HERE
-# [*suffixed_hosts*]
-#   Create all hosts entries with numeric suffixes. Fixes some legacy
-#   machines that were named incorrectly, e.g. `asset-master` vs
-#   `asset-master-1`.
-#   Default: false
-#
-  $suffixed_hosts         = false,
-  validate_bool($suffixed_hosts)
-  if $suffixed_hosts {
-    $ensure_with_suffix = present
-    $ensure_without_suffix = absent
-  } else {
-    $ensure_with_suffix = absent
-    $ensure_without_suffix = present
-  }
-
-  govuk::host { 'monitoring':
-    ensure          => $ensure_without_suffix,
-    ip              => '10.0.0.20',
-    vdc             => 'management',
-    legacy_aliases  => ["nagios.${app_domain}"],
-    service_aliases => ['monitoring', 'alert'],
-  }
-    ensure          => $ensure_with_suffix,
-  govuk::host { 'asset-master':
-    ensure         => $ensure_without_suffix,
-    ip             => '10.3.0.20',
-    vdc            => 'backend',
-    legacy_aliases => ["asset-master.${app_domain}"],
-  }
-    ensure         => $ensure_with_suffix,
-  govuk::host { 'asset-slave':
-    ensure         => $ensure_without_suffix,
-    ip             => '10.3.0.21',
-    vdc            => 'backend',
-    legacy_aliases => ["asset-slave.${app_domain}"],
-  }
-    ensure         => $ensure_with_suffix,
BREAKS HERE
-  # Designate packaging in Ocata is missing monasca dependencies.
-  # Until it's fixed, let's disable it.
-  $designate_enabled = false
BREAKS HERE
-        if $::operatingsystemmajrelease >= 7 {
BREAKS HERE
-        prefix     => '/service',
BREAKS HERE
-        provider => base,
-        start    => '/bin/true',
-        stop     => '/bin/true',
BREAKS HERE
-        require     => Service['apache2'],
BREAKS HERE
-  $zuul_revision                 = 'master',
-  $nodepool_revision             = 'master',
-    revision             => $zuul_revision,
-    revision             => $zuul_revision,
-    revision                  => $nodepool_revision,
BREAKS HERE
-# - $heap_memory_mb: amount of memory to allocate to logstash in megabytes.
-# - $filter_workers: number of worker threads to run to process filters
-#       heap_memory_mb => 128,
-#       filter_workers => 3,
-    $heap_memory_mb = 64,
-    $filter_workers = 1,
-    $java_package   = 'openjdk-8-jdk',
-        provider => 'trebuchet',
-        content => template('logstash/default.erb'),
-        content => template('logstash/logstash.service.erb'),
-        notify  => Service['logstash'],
BREAKS HERE
-
BREAKS HERE
-    include ::cinder::volume
BREAKS HERE
-  $db_name = 'askbotdb',
-  $db_user = undef,
-  $db_password = undef,
-  $slot_name = 'slot0',
-  $redis_enabled = true,
-  $redis_port = '6378',
-  $redis_max_memory = '512m',
-  $redis_bind = '127.0.0.1',
-  $redis_password = undef,
-  $site_ssl_enabled = true,
-  $site_ssl_cert_file_contents = undef,
-  $site_ssl_key_file_contents = undef,
-  $site_ssl_chain_file_contents = undef,
-  $site_ssl_cert_file = '/etc/ssl/certs/ask.openstack.org.pem',
-  $site_ssl_key_file = '/etc/ssl/private/ask.openstack.org.key',
-  $site_ssl_chain_file = '/etc/ssl/certs/ask.openstack.org_ca.pem',
-  $site_name = 'ask.openstack.org',
-  $solr_version = '4.7.2',
-    mirror  => 'http://apache.mesi.com.ar/lucene/solr',
-    version => $solr_version,
-    cores   => [ 'core-default', 'core-en', 'core-zh' ],
-    source  => "/tmp/solr-${solr_version}/contrib/analysis-extras/lucene-libs/lucene-analyzers-smartcn-${solr_version}.jar",
-    require => Exec['copy-solr'],
-  # Notice:
-  #  Disable all puppet-askbot related resources until refactored
-  #  askbot modules not approved.
-  #
-  # # apache http server
-  # include apache
-  #
-  # # askbot
-  # class { 'askbot':
-  #   redis_enabled        => $redis_enabled,
-  #   db_provider          => 'pgsql',
-  #   require              => Postgresql::Server::Db[$db_name],
-  # }
-  #
-  # # custom askbot theme from openstack-infra/askbot-theme repo
-  #
-  # vcsrepo { "/srv/askbot-sites/${slot_name}/themes":
-  #   ensure   => latest,
-  #   provider => git,
-  #   revision => 'master',
-  #   source   => 'https://git.openstack.org/openstack-infra/askbot-theme',
-  #   require  => [
-  #     Class['askbot'], File["/srv/askbot-sites/${slot_name}"],
-  #     Package['git']
-  #   ],
-  #   notify   => [
-  #     Exec["theme-bundle-install-${slot_name}"],
-  #     Exec["theme-bundle-compile-${slot_name}"],
-  #   ],
-  # }
-  #
-  # askbot::compass { $slot_name:
-  # }
-  #
-  # askbot::site { $site_name:
-  #   slot_name                    => $slot_name,
-  #   askbot_debug                 => false,
-  #   custom_theme_enabled         => true,
-  #   custom_theme_name            => 'os',
-  #   redis_enabled                => $redis_enabled,
-  #   redis_port                   => $redis_port,
-  #   redis_max_memory             => $redis_max_memory,
-  #   redis_bind                   => $redis_bind,
-  #   redis_password               => $redis_password,
-  #   site_ssl_enabled             => true,
-  #   site_ssl_cert_file_contents  => $site_ssl_cert_file_contents,
-  #   site_ssl_key_file_contents   => $site_ssl_key_file_contents,
-  #   site_ssl_chain_file_contents => $site_ssl_chain_file_contents,
-  #   site_ssl_cert_file           => $site_ssl_cert_file,
-  #   site_ssl_key_file            => $site_ssl_key_file,
-  #   site_ssl_chain_file          => $site_ssl_chain_file,
-  #   db_provider                  => 'pgsql',
-  #   db_name                      => $db_name,
-  #   db_user                      => $db_user,
-  #   db_password                  => $db_password,
-  #   require                      => [ Class['redis'], Class['askbot'] ],
-  # }
BREAKS HERE
-    'DEFAULT/debug'                         => { value => $debug },
BREAKS HERE
-  $discover_nodes = ['localhost'],
BREAKS HERE
-      package { 'apt-transport-https':
-        ensure => 'installed',
-      }
BREAKS HERE
-    $settings      = { host => 'localhost',
-                       port => '8125',
BREAKS HERE
-  $enable_module_loading  = true,
-  $load_modules           = [],
-  $cpu_vendor             = 'intel',
-  $desktop_enabled        = false,
-  $enable_ipv4_forwarding = false,
-  $enable_ipv6            = false,
-  $enable_ipv6_forwarding = false,
-  $arp_restricted         = true,
-  $enable_sysrq           = false,
-  $enable_core_dump       = false,
BREAKS HERE
-      recommends => false;
-      recommends => false;
-      recommends => false,
-      backports  => true;
-      recommends => false;
-      recommends => false;
BREAKS HERE
-    nginx::site {'puppet-compiler':
-        ensure  => $ensure,
-        content => template('puppet_compiler/nginx_site.erb'),
-    }
-
-        class {'puppet_compiler::differ':
BREAKS HERE
-
BREAKS HERE
-    SYSPASSWORD => $sys_password,
BREAKS HERE
-  package { ['php7.1', 'php7.1-cli', 'php7.1-mysql', 'php7.1-pgsql', 'php7.1-curl', 'php7.1-gd', 'php7.1-xmlrpc', 'php7.1-intl', 'php7.1-xml', 'php7.1-mbstring', 'php7.1-zip', 'php7.1-ldap', 'php7.1-xdebug']:
BREAKS HERE
-      case $::kernel {
-        openbsd: { $basic_require = File['/var/run/munin'] }
-        default: { $basic_require = Package['munin-node'] }
-      }
-      if $require {
-        $real_require = [ $require, $basic_require ]
-      } else {
-        $real_require = $basic_require
-      }
-        require => $real_require,
-          if $require {
-            File[$plugin_conf]{
-              require +> $require,
-            }
-          }
BREAKS HERE
-  String $host = $galera::bind_address,
-  Optional[String] $inv_catch = 'undef'
BREAKS HERE
-            ignore => '(\.ignore|snmp_*)',
BREAKS HERE
-   	} else if $::graphite::gr_enable_carbon_relay {
-   	} else if $::graphite::gr_enable_carbon_aggregator {
BREAKS HERE
-    ensure  => '3.1.1',
BREAKS HERE
-  # Rackspace uses static config files
-  file { '/etc/resolv.conf':
-    content => "nameserver 127.0.0.1\n",
-    owner   => 'root',
-    group   => 'root',
-    mode    => '0444',
-    require => Service['unbound'],
BREAKS HERE
-rabbitmq_user { ['neutron', 'nova', 'cinder', 'ceilometer', 'glance', 'trove']:
-rabbitmq_user_permissions { ['neutron@/', 'nova@/', 'cinder@/', 'ceilometer@/', 'glance@/', 'trove@/']:
-class { '::ceilometer::alarm::evaluator': }
-class { '::ceilometer::alarm::notifier': }
BREAKS HERE
-    source  => $postgres_schema,
BREAKS HERE
-    if $::nfs::server_enabled == false {
-        context => "/files/${::nfs::idmapd_file}/General",
-        lens    => 'Puppet.lns',
-        incl    => $::nfs::idmapd_file,
-        changes => ["set Domain ${::nfs::nfs_v4_idmap_domain}"];
BREAKS HERE
-  validate_array($import)
-  if $display_name { validate_string ($display_name) }
-  if $email { validate_string ($email) }
-  if $pager { validate_string ($pager) }
-  if $groups { validate_array ($groups) }
-  if $enable_notifications { validate_bool ($enable_notifications) }
-  if $period { validate_string ($period) }
-  if $types { validate_array ($types) }
-  if $states { validate_array ($states) }
-    'groups'               => $groups,
-    'types'                => $types,
-    'states'               => $states,
BREAKS HERE
-class classifier::node_data(
BREAKS HERE
-#   Type: integer
-#   Default: 4
-  $crawler_threads = 4,
-        value => '$crawler_threads';
BREAKS HERE
-# $ensure              - Either 'stopped' or 'running'. Default: 'running'
-    $ensure              = 'running',
-    $recv_queue          = undef,
-        require => Package['udplog'],
-    # init service script for this udp2log instance
-    file { "/etc/init.d/udp2log-${name}":
-        mode    => '0755',
-        owner   => 'root',
-        group   => 'root',
-        content => template('udp2log/udp2log.init.erb'),
-    }
-
-    # ensure that this udp2log instance is running
-    service { "udp2log-${name}":
-        ensure    => $ensure,  # ensure stopped or running
-        enable    => true,     # make sure this starts on boot
-        subscribe => File["/etc/udp2log/${name}"],
-        hasstatus => false,
-        require   => [Package['udplog'],
-                    File["/etc/udp2log/${name}"],
-                    File["/etc/init.d/udp2log-${name}"]
-        ],
-    }
-
BREAKS HERE
-  include sysctl::base
BREAKS HERE
-        source  => 'puppet:///modules/scap/commit-msg-hook',
BREAKS HERE
-    database_connection   => 'mysql://trove:trove@127.0.0.1/trove?charset=utf8',
BREAKS HERE
-        ensure  => file,
-        owner   => root,
-        group   => root,
-        mode    => '0555',
-        source  => 'puppet:///modules/java/jheapdump',
BREAKS HERE
-      file { "/usr/src/ossec/RPM-GPG-KEY-OSSEC-RHEL5":
-        ensure  => present,
-        source  => 'puppet:///modules/ossec/RPM-GPG-KEY-OSSEC-RHEL5',
-        owner   => root,
-        group   => root,
-        mode    => 0744,
-        require => File["/usr/src/ossec"]
-      }
-
-          require  => File["/usr/src/ossec/RPM-GPG-KEY-OSSEC"],
BREAKS HERE
-  $rules4 = [],
-  $rules6 = [],
BREAKS HERE
-  $config_file = $::operatingsystem ? {
-    /(?i:Debian|Ubuntu|Mint)/ => '/etc/iptables/rules',
-    default                   => '/etc/sysconfig/iptables',
BREAKS HERE
-    enable_unbound            => $enable_unbound,
BREAKS HERE
-    # on stretch, add a hook for building php 7.2 packages, T208433
-    # TODO: remove this addition once we move off stretch.
-    file { "${basepath}/hooks/stretch/D04php72":
-        ensure => present,
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0555',
-        source => 'puppet:///modules/package_builder/hooks/D04php72.stretch'
-    }
-
BREAKS HERE
-    smtp_port            => $smtp_host,
-    smtp_host            => $smtp_port,
BREAKS HERE
-        command => "today=$(date +%Y%m%d) && /usr/bin/mysqldump -u root -p wikistats > ${wikistats::db::backupdir}/wikistats_db_${today}.sql && gzip ${backupdir}/wikistats_db_${today}.sql",
BREAKS HERE
-    $is_default=false
BREAKS HERE
-    file { '/etc/nsca.cfg':
-        content => template('icinga/nsca.cfg.erb'),
-        owner   => 'root',
-        mode    => '0400',
-        require => Package['nsca'],
-    }
BREAKS HERE
-                'tls_configs'           => {
-                    'insecure_skip_verify' => 'True',
BREAKS HERE
-  file { '/etc/apparmor.d/disable/usr.sbin.libvirtd':
-    ensure => 'link',
-    target => '/etc/apparmor.d/usr.sbin.libvirtd',
-  } ->
-  exec {'disable_apparmor':
-    command => "apparmor_parser -R /etc/apparmor.d/usr.sbin.libvirtd",
-    returns => [0, 254],
-  } ->
-      exec { 'copy_template':
-        command => "cp /usr/local/etc/fast-path.env.tmpl ${fp_conf_file}",
-      } ->
BREAKS HERE
-  case $::lsbdistcodename {
-    precise: {}
-    default: {
-      class { 'ruby::rubygems':
-        version => '1.8.24'
-      }
-    }
BREAKS HERE
-    $ensure           = present,
-    $systemd          = undef,
-    $systemd_override = undef,
-    $upstart          = undef,
-    $sysvinit         = undef,
-    $strict           = true,
-    $refresh          = true,
-    $declare_service  = true,
-    $mask             = false,
-    $service_params   = {},
-    validate_ensure($ensure)
-
-    # Let's ensure any leftover from the preceding defs fail
-    validate_string($systemd)
-    validate_string($systemd_override)
-    validate_string($upstart)
-    validate_string($sysvinit)
-
BREAKS HERE
-  $monitoring_enabled = true,
-  if $monitoring_enabled {
-    if !has_key($service_port_map, 'bouncer') {
-      fail('Unable to monitor Bouncer CDN logs, key not present in service_port_map.')
-    }
-
-      check_command       => "check_nrpe!check_file_age!\"-f ${log_dir}/cdn-govuk.log -c3600 -w1800\"",
-      check_command       => "check_nrpe!check_file_age!\"-f ${log_dir}/cdn-bouncer.log -c3600 -w1800\"",
BREAKS HERE
-    command => "${extract_cmd} && ${trust_ca_cmd}",
-    path    => '/usr/bin',
-    creates => $ca_pem,
-    require => Package['certmonger'],
BREAKS HERE
-        notify  => Service['nutcracker'],
BREAKS HERE
-    npm_package_ensure     => 'present',
BREAKS HERE
-  $content_string
-      content_string => $vfdef_str
BREAKS HERE
-    nagios_cpu_warning      => $nagios_cpu_warning,
BREAKS HERE
-) inherits icinga2::params {
BREAKS HERE
-# [sql_connection]
-#   DEPRECATED
-# [sql_idle_timeout]
-#   DEPRECATED
-#
-    'database/connection':               value => $database_connection_real, secret => true;
-    'database/idle_timeout':             value => $database_idle_timeout_real;
-  if($database_connection_real =~ /mysql:\/\/\S+:\S+@\S+\/\S+/) {
-    if ($mysql_module >= 2.2) {
-      require 'mysql::bindings'
-      require 'mysql::bindings::python'
-    } else {
-      require 'mysql::python'
-    }
-  } elsif($database_connection_real =~ /postgresql:\/\/\S+:\S+@\S+\/\S+/) {
-
-  } elsif($database_connection_real =~ /sqlite:\/\//) {
-
-  } else {
-    fail("Invalid db connection ${database_connection_real}")
BREAKS HERE
-class apache::mod::perl            { apache::mod_conf { 'perl2':          } <- package { 'libapache2-mod-perl2':     } }
BREAKS HERE
-    if $::govuk_node_class !~ /^development$/ {
BREAKS HERE
-      heat_config { 'DEFAULT/rabbit_host': ensure => absent }
-      heat_config { 'DEFAULT/rabbit_port': ensure => absent }
-      heat_config { 'DEFAULT/rabbit_hosts':
-      heat_config { 'DEFAULT/rabbit_host': value => $rabbit_host }
-      heat_config { 'DEFAULT/rabbit_port': value => $rabbit_port }
-      heat_config { 'DEFAULT/rabbit_hosts':
-      heat_config { 'DEFAULT/rabbit_ha_queues': value => true }
-      heat_config { 'DEFAULT/rabbit_ha_queues': value => false }
-      'DEFAULT/rabbit_userid'          : value => $rabbit_userid;
-      'DEFAULT/rabbit_password'        : value => $rabbit_password, secret => true;
-      'DEFAULT/rabbit_virtual_host'    : value => $rabbit_virtual_host;
-      'DEFAULT/rabbit_use_ssl'         : value => $rabbit_use_ssl;
-        heat_config { 'DEFAULT/kombu_ssl_ca_certs': value => $kombu_ssl_ca_certs; }
-        heat_config { 'DEFAULT/kombu_ssl_ca_certs': ensure => absent; }
-          'DEFAULT/kombu_ssl_certfile': value => $kombu_ssl_certfile;
-          'DEFAULT/kombu_ssl_keyfile':  value => $kombu_ssl_keyfile;
-          'DEFAULT/kombu_ssl_certfile': ensure => absent;
-          'DEFAULT/kombu_ssl_keyfile':  ensure => absent;
-        heat_config { 'DEFAULT/kombu_ssl_version':  value => $kombu_ssl_version; }
-        heat_config { 'DEFAULT/kombu_ssl_version':  ensure => absent; }
-        'DEFAULT/kombu_ssl_version':  ensure => absent;
-        'DEFAULT/kombu_ssl_ca_certs': ensure => absent;
-        'DEFAULT/kombu_ssl_certfile': ensure => absent;
-        'DEFAULT/kombu_ssl_keyfile':  ensure => absent;
BREAKS HERE
-# Class for running WMDE releated analytics scripts.
-#
-# These scripts get metrics from a variety of places including:
-#  - Databases
-#  - Log files
-#  - Hive
-#  - Dumps
-#
-# And send the data to statsd or graphite directly
-class statistics::wmde {
-    class { '::statistics::wmde::user':
-        homedir => "${statistics_working_path}/analytics-wmde",
-    }
-    $user = $statistics::wmde::user::username
-    $dir = $statistics::wmde::user::homedir
-    $data_dir  = "${dir}/data"
-    $scripts_dir  = "${dir}/src/scripts"
-
-    $statsd_host = hiera('statsd')
-    # TODO graphite hostname should be in hiera
-    $graphite_host = 'graphite.eqiad.wmnet'
-
-    # Path in which all crons will log to.
-    $log_dir = "${dir}/log"
-
-    $wmde_secrets = hiera('wmde_secrets')
-
-
-
-    # TODO: remove after stat1002/3 is gone: T152712
-    if os_version('debian >= stretch') {
-        require_package('openjdk-8-jdk')
-        require_package(
-            'php',
-            'php-cli',
-        )
-    }
-    else {
-        require_package('openjdk-7-jdk')
-        require_package(
-            'php5',
-            'php5-cli',
-        )
-    }
-
-    include ::passwords::mysql::research
-    # This file will render at
-    # /etc/mysql/conf.d/research-wmde-client.cnf.
-    mysql::config::client { 'research-wmde':
-        user    => $::passwords::mysql::research::user,
-        pass    => $::passwords::mysql::research::pass,
-        group   => $user,
-        mode    => '0440',
-        require => User[$user],
-    }
-
-    $directories = [
-        $dir,
-        "${dir}/src",
-        "${dir}/data",
-        $log_dir,
-    ]
-
-    file { $directories:
-        ensure  => 'directory',
-        owner   => $user,
-        group   => $user,
-        mode    => '0644',
-        require => User[$user],
-    }
-    git::clone { 'wmde/scripts':
-        ensure    => 'latest',
-        branch    => 'production',
-        directory => $scripts_dir,
-        origin    => 'https://gerrit.wikimedia.org/r/analytics/wmde/scripts',
-        owner     => $user,
-        group     => $user,
-        require   => File["${dir}/src"],
-    git::clone { 'wmde/toolkit-analyzer-build':
-        ensure    => 'latest',
-        branch    => 'production',
-        directory => "${dir}/src/toolkit-analyzer-build",
-        origin    => 'https://gerrit.wikimedia.org/r/analytics/wmde/toolkit-analyzer-build',
-        owner     => $user,
-        group     => $user,
-        require   => File["${dir}/src"],
-    logrotate::conf { 'statistics-wmde':
-        ensure  => present,
-        content => template('statistics/wmde/logrotate.erb'),
-        require => File[$log_dir],
-
-    file { "${dir}/src/config":
-        ensure  => 'file',
-        owner   => 'root',
-        group   => $user,
-        mode    => '0440',
-        content => template('statistics/wmde/config.erb'),
-        require => File["${dir}/src"],
-    }
-
-    Cron {
-        user => $user,
-    }
-
-    cron { 'minutely':
-        command => "${scripts_dir}/cron/minutely.sh ${scripts_dir} >> ${log_dir}/minutely.log 2>&1",
-        hour    => '*',
-        minute  => '*',
-        require => Git::Clone['wmde/scripts'],
-    }
-
-    # Note: some of the scripts run by this cron need access to secrets!
-    # Docs can be seen at https://github.com/wikimedia/analytics-wmde-scripts/blob/master/README.md
-    cron { 'daily.03':
-        command => "time ${scripts_dir}/cron/daily.03.sh ${scripts_dir} >> ${log_dir}/daily.03.log 2>&1",
-        hour    => '3',
-        minute  => '0',
-        require => [
-            Git::Clone['wmde/scripts'],
-            File["${dir}/src/config"],
-            Mysql::Config::Client['research-wmde'],
-        ],
-    }
-
-    cron { 'daily.12':
-        command => "time ${scripts_dir}/cron/daily.12.sh ${scripts_dir} >> ${log_dir}/daily.12.log 2>&1",
-        hour    => '12',
-        minute  => '0',
-        require => [
-            Git::Clone['wmde/scripts'],
-            File["${dir}/src/config"],
-        ],
-    }
-
-    cron { 'weekly':
-        command => "time ${scripts_dir}/cron/weekly.sh ${scripts_dir} >> ${log_dir}/weekly.log 2>&1",
-        weekday => '7',
-        hour    => '01',
-        minute  => '0',
-        require => [
-            Git::Clone['wmde/scripts'],
-            File["${dir}/src/config"],
-        ],
-    }
-
-    cron { 'wmde/toolkit-analyzer-build':
-        command => "time java -Xmx2g -jar ${dir}/src/toolkit-analyzer-build/toolkit-analyzer.jar --processors Metric --store ${dir}/data --latest >> ${log_dir}/toolkit-analyzer.log 2>&1",
-        hour    => '12',
-        minute  => '0',
-    }
-
BREAKS HERE
-  class {'postgresql::server':
-  include govuk_postgresql::mirror
-  include postgresql::server::contrib
-
-
-  file { "/var/lib/postgresql/${postgresql::globals::version}":
-    ensure => directory,
-    owner  => $postgresql::params::user,
-    group  => $postgresql::params::group,
-    mode   => '0755',
-  }
-
BREAKS HERE
-    file {'/usr/local/sbin/puppetstoredconfigclean.rb':
-        ensure => 'present',
-        owner  => 'root',
-        group  => 'root',
-        mode   => '0555',
-        source => 'puppet:///modules/puppetmaster/puppetstoredconfigclean.rb'
-    }
BREAKS HERE
-    # Install
-    # Get a jdk on which to run elasticsearch
-    package { 'openjdk-7-jdk': }
-    # Most Elasticsearch maintenance is done with curl so have it handy
-    package { 'curl': }
-    package { 'elasticsearch':
-        ensure  => present,
-        require => [
-            Package['openjdk-7-jdk'],
-            File['/etc/elasticsearch/elasticsearch.yml'],
-            File['/etc/elasticsearch/logging.yml'],
-            File['/etc/default/elasticsearch'],
-        ]
-    }
-
-    # Configure
-    file { '/etc/elasticsearch':
-        ensure  => directory
-    }
-        require => File['/etc/elasticsearch'],
-        require => File['/etc/elasticsearch'],
-        require => File['/etc/elasticsearch'],
BREAKS HERE
-                    'xml2end',
BREAKS HERE
-            require => [ $inpath, $script ],
BREAKS HERE
-  $installer_cache_dir = "$dynatrace::installer_cache_dir/dynatrace"
BREAKS HERE
-    site_name            => 'groups-dev.openstack.org',
-    site_docroot         => '/srv/vhosts/groups-dev.openstack.org',
-    site_mysql_host      => $site_mysql_host,
-    site_mysql_user      => 'groups',
-    site_mysql_password  => $site_mysql_password,
-    site_mysql_database  => 'groups_dev',
-    site_vhost_root      => '/srv/vhosts',
-    site_staging_tarball => 'groups-dev.tar.gz',
-    site_admin_password  => $site_admin_password,
-    site_build_reponame  => 'groups-master',
-    site_makefile        => 'build-groups.make',
-    site_repo_url        => 'https://git.openstack.org/openstack-infra/groups',
-    site_profile         => 'groups',
-    site_base_url        => 'http://groups-dev.openstack.org',
-    require              => [ Class['openstack_project::server'],
BREAKS HERE
-    logrotate::conf { 'statistics-wmde':
BREAKS HERE
-    mode  => '0644'
BREAKS HERE
-    revision => 'master',
-    source   => 'https://git.openstack.org/openstack-infra/logstash-filters',
BREAKS HERE
-    if $provider == 'pecl' {
-      $real_package = "pecl-${title}"
-    }
-    else {
-      $real_package = "${package_prefix}${title}"
BREAKS HERE
-  $remark = $smokeping::remark
BREAKS HERE
-  file { "/etc/init/clamav-daemon.conf":
-    content => template('clamav/etc/init/clamav-daemon.conf.erb'),
-    notify  => Service['clamav-daemon'],
-  service { 'clamav-daemon':
-    ensure   => $enable_service,
-    provider => 'upstart',
BREAKS HERE
-    $lvs_services,
-    $discovery_services,
BREAKS HERE
-    file { '/etc/ImageMagick/policy.xml':
BREAKS HERE
-    onlyif  => "test '${config_stamp}' -nt '${::icinga2::pid_file}'",
BREAKS HERE
-        ensure      => 'link',
-        target      => $deploy_root,
-        require     => Package[$deploy_target],
BREAKS HERE
-    else {
-        $partners.each |String $partner| {
-            ferm::service { "icinga-rsync-${partner}":
-              proto  => 'tcp',
-              port   => 873,
-              srange => "(@resolve(${partner}) @resolve(${partner}, AAAA))",
-            }
-        }
-    }
-    # allow NSCA (Nagios Service Check Acceptor)
-    # connections on port 5667/tcp
-    ferm::service { 'icinga-nsca':
-        proto  => 'tcp',
-        port   => '5667',
-        srange => '($PRODUCTION_NETWORKS $FRACK_NETWORKS)',
-        hosts_allow => $partners
-        hosts_allow => $partners
-        hosts_allow => $partners
BREAKS HERE
